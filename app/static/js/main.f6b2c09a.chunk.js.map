{"version":3,"sources":["modules/integrations/routes.ts","modules/extensions/resolvers.ts","../../src/DataMapperAdapter.tsx","i18n/locales/index.ts","i18n/index.ts","modules/integrations/resolvers.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/shared/index.ts","modules/apiClientConnectors/resolvers.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","app/syndesis_logo_full_darkbkg.svg","../../src/Shared/AboutModal.tsx","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/HelpDropdown.tsx","../../src/Layout/AppLayoutContext.tsx","../../src/Layout/AppBreadcrumb.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/Details/IntegrationBulletinBoardAlert.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/Details/IntegrationActions.tsx","../../src/Integration/Details/IntegrationDetailBreadcrumb.tsx","../../src/Integration/Details/IntegrationDetailDescription.tsx","../../src/Integration/Details/IntegrationDetailEditableName.tsx","../../src/Integration/Details/IntegrationDetailHistoryListView.tsx","../../src/Integration/Details/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/Details/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/models.ts","../../src/Integration/Details/IntegrationDetailInfo.tsx","../../src/Integration/Activity/IntegrationDetailActivity.tsx","../../src/Integration/Activity/IntegrationDetailActivityItem.tsx","../../src/Integration/Activity/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/Metrics/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationSaveForm.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/EmptyViewsState.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewHeader.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/SqlClientContent.tsx","../../src/Data/Virtualizations/SqlClientForm.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/Details/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationEditorWizard.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/AboutModalContent.tsx","../../src/Shared/UnrecoverableError.tsx","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","modules/data/routes.ts","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/WithIntegrationActions.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailHeader.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/index.ts","modules/connections/resolvers.ts","modules/connections/routes.ts","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/dateHelpers.ts","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","modules/apiClientConnectors/routes.ts","modules/extensions/routes.ts","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithActivities.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithApiVersion.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegration.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationMetrics.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","../../packages/history/esm/history.js","app/WithConfig.tsx","modules/apiClientConnectors/pages/ApiConnectorsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/apiClientConnectors/index.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/shared/WithVirtualizationSqlClientForm.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/extensions/shared/ExtensionIntegrations.tsx","modules/extensions/pages/ExtensionDetailsPage.tsx","modules/extensions/utils.ts","modules/extensions/pages/ExtensionImportPage.tsx","modules/extensions/pages/ExtensionsPage.tsx","modules/extensions/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPageTable.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/components/WithDeploymentActions.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","modules/data/resolvers.ts","modules/settings/routes.ts"],"names":["named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","stepRoutes","selectStep","apiProvider","include","upload","review","edit","dataMapper","basicFilter","template","step","extension","connection","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","root","list","manageCicd","import","create","start","finish","configure","integration","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","makeResolver","routes","_ref","params","extensionId","id","state","update","_ref2","makeResolverNoParams","const","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","constructor","props","iframe","messageChannel","MessageChannel","onIframeLoad","this","bind","onMessages","componentDidMount","addEventListener","componentWillReceiveProps","nextProps","prevPayload","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","message","payload","onMappings","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","React","createElement","Object","assign","style","width","height","frameBorder","allowtransparency","extraProps","ref","el","en","app","appEn","it","appIt","modules","apiClientConnectors","apiClientConnectorsEn","apiClientConnectorsIt","settings","settingsEn","settingsIt","connections","connectionsEn","connectionsIt","extensions","extensionsEn","extensionsIt","dashboard","dashboardEn","dashboardIt","data","dataEn","dataIt","integrations","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","configureIndexMapper","flowId","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","flows","integrationId","configureSelectConnectionMapper","position","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_ref3","_configureSelectConne","connectionId","configureConfigureActionMapper","_ref4","actionId","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","getStep","concat","configuredProperties","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","Error","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","error","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","Consumer","config","Helmet_default","a","title","WithClosedNavigation","children","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","length","args","Array","_key","call","setState","nextContext","undefined","_this2","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","steps","map","s","idx","stepName","name","stepDescription","action","icon","alt","src","getStepIcon","process","actions","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","IntegrationDetailNavBar","background","label","to","WithConfigurationForm","descriptor","getActionDescriptor","getActionSteps","getActionStep","configurationStep","definition","getActionStepDefinition","moreConfigurationSteps","onSave","asyncToGenerator","regenerator_default","mark","_callee","values","wrap","_context","prev","next","onUpdatedIntegration","setSubmitting","stop","_x","_x2","auto_form","i18nRequiredProperty","toFormDefinition","initialValue","fields","handleSubmit","isSubmitting","isValid","submitForm","form","i18nFormTitle","description","i18nChooseAction","i18nNext","chooseActionHref","e","i18nAlert","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","defaultProps","IntegrationDetailNavBar_IntegrationDetailNavBar","WithConfigurationForm_WithConfigurationForm","apiConnector","apiConnectorId","security","save","route","dashboard_resolvers","reverse","settings_resolvers","oauthApps","module","exports","p","AboutModal","brandImg","isModalOpen","handleModalToggle","productName","trademark","PfAboutModal","isOpen","onClose","brandImageSrc","brandImageAlt","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","ok","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","body","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","file","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","GenericTable","rows","rowKey","Table","PfProvider","striped","bordered","hover","columns","HelpDropdown","onToggle","onSelect","dropdownItems","DropdownItem","component","onClick","launchAboutModal","Fragment","Dropdown","direction","DropdownDirection","down","DropdownPosition","right","toggle","DropdownToggle","classNames","iconComponent","HelpIcon","isPlain","AppLayoutContext","AppBreadcrumb","appLayoutContext","AppTopMenu","username","ButtonLink","size","Link","Breadcrumb","count","Level","gutter","LevelItem","PFBreadcrumb","Children","c","BreadcrumbItem","isActive","Loader","inline","Spinner","loading","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","path","pathname","escapedPath","Route","match","childLocation","i","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","NavExpandable","isExpanded","obj","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","placeholder","errorMsg","saving","asTextarea","onChange","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","then","result","handleConfirm","success","handleChange","isEditing","renderValue","v","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","followScroll","previousCount","renderRow","parent","CellMeasurer","cache","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","PageSection","variant","TextContent","Title","headingLevel","TitleLevel","h1","Text","ProgressWithLink","currentStep","totalSteps","logUrl","target","i18nLogUrlText","ProgressBar","now","max","PfDropdownItem","superclass","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","ConnectionDetailsForm","onSubmit","validationResults","Alert","bsStyle","isWorking","i18nValidateLabel","onStartEditing","Footer","onCancelEditing","i18nSaveLabel","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","noPadding","linkToConnectionCreate","ConnectorConfigurationForm","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","i18nOverviewSectionTitle","overviewSection","i18nSupportsSectionTitle","supportsSection","i18nUsageSectionTitle","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","i18nIntegrations","linkToIntegrations","linkToIntegrationCreation","topIntegrations","integrationBoard","i18nConnections","linkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","validationError","NoErrors","htmlFor","i18nInputLabel","defaultValue","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","AlertLevel","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","items","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationBulletinBoardAlert","level","detail","ExpandCollapse","align","expanded","textExpanded","i18nTextExpanded","textCollapsed","i18nTextCollapsed","IntegrationDetailBreadcrumb","exportHref","exportAction","exportLabel","editLabel","menuActions","homeHref","i18nHome","integrationsHref","IntegrationDetailDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","isDraft","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","states","Unpublished","IntegrationDetailHistoryListViewItem","currentState","IntegrationDetailHistoryListViewItemActions","IntegrationStatusDetail","fallbackText","i18nProgressPending","targetState","IntegrationDetailInfo","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","version","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","onRefresh","cellFormat","statusCellFormat","status","Cell","outputCellFormat","output","IntegrationDetailActivityItem","time","errorCount","i18nErrorsFound","i18nNoErrors","date","InfoItem","i18nVersion","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","IntegrationDetailMetrics","okMessagesCount","messages","errors","startAsHuman","Date","toLocaleString","marginBottom","marginTop","i18nTotalErrors","i18nLastProcessed","lastProcessed","i18nTotalMessages","i18nSince","i18nUptime","durationDifference","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationSaveForm","IntegrationStatus","labelType","Label","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","viewName","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","EmptyViewsState","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","ViewList","hasListData","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewHeader","ViewInfoList","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","defaultCellFormat","defaultHeaderFormat","SqlClientContent","viewNames","formContent","queryResultRows","queryResultCols","col","i18nEmptyResultsMsg","SqlClientForm","VirtualizationPublishStatus","VirtualizationPublishStatusDetail","stepText","i18nPublishInProgress","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","virtualizationName","onExport","onPublish","serviceVdbName","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","publishingLogUrl","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishLogUrlText","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","saveHref","isSaveLoading","isSaveDisabled","isPublishLoading","isPublishDisabled","rawObject","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onShowAboutModal","onNavToggle","breadcrumb","setHasBreadcrumb","Provider","b","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","buildId","commitId","TextList","TextListItem","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","showAboutModal","setShowAboutModal","toggleAboutModal","_useState5","_useState6","setNotifications","onRemoveNotification","filter","n","pushNotification","msg","toConsumableArray","toString","api","removeNotificationAction","react_router_dom","childrens","subRoute","subIndex","data-testid","minWidth","utils","url","react_router","reduce","flattenedRoutes","App","getPodLogUrl","monitoring","linkType","namespace","podName","baseUrl","consoleUrl","logout","UI_UI","App_App","virtualizations","virtualization","relationship","sqlClient","views","importSource","selectConnection","selectViews","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","tagIntegration","targetIntegrationId","tags","hasTags","hasData","tagError","disableUpdates","environments","hasEnvironments","environmentsError","loaderChildren","errorChildren","mappedItems","JSON","stringify","WithIntegrationActions","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","deleteIntegration","deployIntegration","exportIntegration","undeployIntegration","editAction","startAction","_handleAction","t0","errorMessage","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","Integrations","mi","WithIntegrationActions_WithIntegrationActions","board","warnings","notices","detailedState","getStartIcon","getFinishIcon","toAlertLevel","WARN","ERROR","INFO","IntegrationDetailHeader","breadcrumbMenuActions","bbMap","arr","code","substring","bulletinBoards","keys","setAttributes","abrupt","toLocaleLowerCase","integrations_shared","IntegrationDetailSteps","getSteps","connector","getIntegrationStepIcon","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","stepKind","getConnectionIcon","Integrations_Integrations","IntegrationDetailHeader_IntegrationDetailHeader","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorSidebar_IntegrationEditorSidebar","selectConnector","configureConnector","connectorId","toFormDefinitionProperty","controlHint","controlTooltip","labelHint","labelTooltip","formDefinitionProperty","fieldAttributes","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","componentDidUpdate","prevProps","waitTimeout","setTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","properties","answer","timestamp","startDate","moment","uptimeDuration","days","hours","minutes","durationString","timeSpan","timeDuration","unit","durationMoment","seconds","milliseconds","durationStrings","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","getValidationState","field","FormInputComponent","ControlLabel","displayName","FieldLevelHelp","FormSelectComponent","isMultiple","newValue","select","currentTarget","option","onBlur","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","enrichAndOrderProperties","massagedValue","sanitizeValues","prop","required","sort","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","touched","dirty","isValidating","resetForm","validateForm","this$1","ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","_Pact","onFulfilled","onRejected","callback","_settle","o","pact","observer","_catch","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","Promise","resolve","returnValue","reject","callFetch","method","includeAccept","includeContentType","includeReferrerPolicy","fetch","contentType","credentials","mode","redirect","Fetch","read","nextState","response","_this3","statusText","indexOf","text","_response$text","json","_response$json","deepmerge","Stream","reader","getReader","textDecoder","TextDecoder","pushData","cancel","SyndesisFetch","stream","FetchOrStream","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","addConnection","getDeployment","importIntegration","replaceDraft","saveIntegration","updateConnection","updateOrAddConnection","actionDescriptor","produce","draft","f","Set","_this5","deployment","fileName","blob","_body$blob","saveAs","isIntegrationDeployment","WithActivities","totalCount","deployments","activities","fetchActivities","fetchDeployments","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","WithApiConnectors","changeFilter","change","WithApiVersion","Accept","camelkruntimeversion","camelversion","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","WithEnvironments","WithEnvironmentHelpersWrapped","createEnvironment","deleteEnvironment","renameEnvironment","stringifyBody","newName","WithExtension","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","WithIntegrations","WithIntegrationTags","WithMonitoredIntegration","getMonitoredIntegration","WithMonitoredIntegrations","getMonitoredIntegrations","WithIntegrationMetrics","metricsProvider","WithIntegrationsMetrics","integrationDeploymentMetrics","getConnectionsForDisplay","metadata","getConnectionsWithFromAction","some","getConnectionsWithToAction","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","getActionsWithTo","iconFile","File","URL","NEW_INTEGRATION","getFlow","flow","getExtensionIcon","getStepKindIcon","stepIndex","getStepsLastPosition","filterStepsByPosition","atStart","atEnd","WithConnection","actionsWithFrom","actionsWithTo","WithConnectionHelpersWrapped","createConnection","deleteConnection","validateConfiguration","saveConnection","validateName","proposedName","isError","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","connectorsForDisplay","WithConnectors","WithOAuthAppHelpersWrapped","updateOAuthApp","deleteOAuthApp","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","webSocket","eventSource","startConnection","onFailure","reconnectIn","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","onError","WebSocket","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","requiresOutputDataShape","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","toLowerCase","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","idPattern","WithVirtualizationHelpersWrapped","createVirtualization","updateViewEditorStates","deleteView","deleteViewEditorState","deleteVirtualization","publishVirtualization","queryVirtualization","refreshVirtualizationViews","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","keng__id","tko__description","vdbName","editorStateId","pubVirtualization","sqlQuery","rowlimit","rowOffset","queryBody","limit","offset","query","viewEditorStateId","viewEditorStates","_this9","WithVirtualization","virtualizationId","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","propertyDefinitionSteps","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob","ConnectionCreatorBreadcrumbs","toggleActive","Connections","fill","_","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","valueToLower","includes","miA","miB","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","includeHidden","WithConnectorForm","def","objectSpread","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","addLeadingSlash","charAt","stripBasename","prefix","hasBasename","substr","stripTrailingSlash","slice","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","_extends","resolvePathname","parse","sessionStorage","getItem","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","fn","notifyListeners","canUseDOM","document","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","WithConfig","_componentDidMount","configResponse","DvConnectionStatus","DvConnectionSelection","ApiConnectorsPage","numUsedBy","optionalIntValue","alert","dist_api","filteredAndSorted","apiConnectors","thisApi","thatApi","getFilteredAndSortedApiConnectors","backgroundColor","filterUndefinedId","getUsedByMessage","ApiClientConnectorsModule","ConnectionDetailsPage","_ref8","updatedConnection","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","_x4","_x5","_ref12","_callee5","_context5","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","ConnectionsPage","ConfigurationPage","ConnectorsPage","ReviewPage","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","iterator","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","i18nNameFilterPlaceholder","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","WithVirtualizationSqlClientForm","queryResults","queryResultsEmpty","setQueryResults","results","enums","row","defineProperty","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","buildViews","getInitialView","doSubmit","sqlStatement","targetVdb","buildRows","buildColumns","linkCreateView","linkImportViews","i18nEmptyResultsTitle","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","splice","handleCreateViews","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","handleCreate","VirtualizationMetricsPage","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","WithVirtualizationSqlClientForm_WithVirtualizationSqlClientForm","VirtualizationViewsPage","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","ExtensionIntegrations_ExtensionIntegrations","lastUpdated","i18nTypeMessage","getTypeMessage","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","ExtensionsModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","ConfigureActionPage","_ref2$step","stepAsNumber","nextStepHref","postConfigureHref","SelectActionPage","selectHref","SaveIntegrationPage","shouldPublish","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","actionType","toStepKindCollection","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","integrations_components","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","fetchStepName","ActivityPageTable","activitiesBase","deploymentsBase","integrationDeployments","refresh","isFailed","failure","deployedIntegration","ver","spec","integrationStep","is","errorMessages","join","lastRefreshed","i18nBtnRefresh","at","activityIndex","toLocaleDateString","toLocaleTimeString","failed","toDurationString","ActivityPage","ActivityPageTable_ActivityPageTable","WithDeploymentActions","startDeploymentAction","stopDeploymentAction","replaceDraftAction","DetailsPage","i18nTextHistory","aVersion","updatedAt","WithDeploymentActions_WithDeploymentActions","i18nTextLastPublished","i18nTextVersion","MetricsPage","metricsData","toDurationDifferenceString","ImportPage","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","invariant","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","setItem","clear","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","createBrowserHistory","WithConfig_WithConfig","apiBase","apiEndpoint","datavirt","dvUrl","SYNDESIS-XSRF-TOKEN","functions","getElementById","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f6b2c09a.chunk.js","sourcesContent":["/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  extension: {\n    details: makeResolver<{ extension: Extension }>(\n      routes.extension.details,\n      ({ extension }) => ({\n        params: {\n          extensionId: extension.id,\n        },\n        state: {\n          extension,\n        },\n      })\n    ),\n    update: makeResolver<{ extension: Extension }>(\n      routes.extension.update,\n      ({ extension }) => ({\n        params: {\n          extensionId: extension.id,\n        },\n        state: {\n          extension,\n        },\n      })\n    ),\n  },\n  import: makeResolverNoParams(routes.import),\n  list: makeResolverNoParams(routes.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport apiClientConnectorsEn from '../../modules/apiClientConnectors/locales/api-client-connectors-translations.en.json';\nimport apiClientConnectorsIt from '../../modules/apiClientConnectors/locales/api-client-connectors-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport extensionsEn from '../../modules/extensions/locales/extensions-translations.en.json';\nimport extensionsIt from '../../modules/extensions/locales/extensions-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.apiClientConnectors = apiClientConnectorsEn;\nit.it.modules.apiClientConnectors = apiClientConnectorsIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// extensions\nen.en.modules.extensions = extensionsEn;\nit.it.modules.extensions = extensionsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      apiClientConnectors: en.en.modules.apiClientConnectors,\n      app: en.en.app,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      extensions: en.en.modules.extensions,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      apiClientConnectors: it.it.modules.apiClientConnectors,\n      app: it.it.app,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      extensions: it.it.modules.extensions,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'apiClientConnectors',\n    'dashboard',\n    'extensions',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models/src';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IDetailsRouteParams,\n  IDetailsRouteState,\n} from './pages/detail/interfaces';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.activity, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.details, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.metrics, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { PageSection, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <PageSection>\n    <Translation ns={['shared']}>\n      {t => (\n        <UnrecoverableError\n          i18nTitle={t('404.title')}\n          i18nInfo={t('404.info')}\n          i18nHelp={t('404.help')}\n          i18nRefreshLabel={t('404.refreshButton')}\n          i18nReportIssue={t('404.reportIssueButton')}\n        />\n      )}\n    </Translation>\n  </PageSection>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, [context]);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    alt={'Step'}\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  chooseActionHref: H.LocationDescriptor;\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  i18nChooseAction={'Choose Action'}\n                  i18nNext={'Next'}\n                  isValid={isValid}\n                  submitForm={submitForm}\n                  handleSubmit={handleSubmit}\n                  chooseActionHref={this.props.chooseActionHref}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","export * from './IntegrationDetailNavBar';\nexport * from './WithConfigurationForm';\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnector: makeResolver<{ apiConnector: Connector }>(\n    routes.apiConnector,\n    ({ apiConnector }) => ({\n      params: {\n        apiConnectorId: apiConnector.id,\n      },\n      state: {\n        apiConnector,\n      },\n    })\n  ),\n  create: {\n    upload: makeResolverNoParams(routes.create.upload),\n    review: makeResolverNoParams(routes.create.review),\n    security: makeResolverNoParams(routes.create.security),\n    save: makeResolverNoParams(routes.create.save),\n  },\n  list: makeResolverNoParams(routes.list),\n};\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import apiClientConnectors from './apiClientConnectors/resolvers';\nimport connections from './connections/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport extensions from './extensions/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  apiClientConnectors,\n  connections,\n  dashboard,\n  data,\n  extensions,\n  integrations,\n  settings,\n};\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { AboutModal as PfAboutModal } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModal {\n  brandImg: any;\n  handleModalToggle: any;\n  isModalOpen: boolean;\n  trademark: string;\n  productName: string;\n  children: React.ReactNode;\n}\n\nexport class AboutModal extends React.Component<IAboutModal> {\n  constructor(props: IAboutModal) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      brandImg,\n      children,\n      isModalOpen,\n      handleModalToggle,\n      productName,\n      trademark,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <PfAboutModal\n          isOpen={isModalOpen}\n          onClose={handleModalToggle}\n          trademark={trademark}\n          brandImageSrc={brandImg}\n          brandImageAlt=\"Brand Image\"\n          productName={productName}\n        >\n          {children}\n        </PfAboutModal>\n      </React.Fragment>\n    );\n  }\n}\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import {\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface IHelpDropdownProps {\n  className?: string;\n  isOpen: boolean;\n  launchAboutModal: any;\n}\n\nexport interface IHelpDropdownState {\n  isOpen: boolean;\n}\n\nexport class HelpDropdown extends React.Component<\n  IHelpDropdownProps,\n  IHelpDropdownState\n> {\n  public onToggle: any;\n  public onSelect: any;\n\n  constructor(props: IHelpDropdownProps) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.onToggle = (isOpen: boolean) => {\n      this.setState({\n        isOpen,\n      });\n    };\n    this.onSelect = (event: MouseEvent) => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    };\n  }\n\n  public render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem\n        key=\"action\"\n        component=\"span\"\n        onClick={() => {\n          this.props.launchAboutModal();\n        }}\n      >\n        About\n      </DropdownItem>,\n    ];\n    return (\n      <>\n        <Dropdown\n          direction={DropdownDirection.down}\n          position={DropdownPosition.right}\n          onSelect={this.onSelect}\n          toggle={\n            <DropdownToggle\n              className={classNames('', this.props.className)}\n              iconComponent={null}\n              onToggle={this.onToggle}\n            >\n              <HelpIcon />\n            </DropdownToggle>\n          }\n          isOpen={isOpen}\n          isPlain={true}\n          dropdownItems={dropdownItems}\n        />\n      </>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IAppLayoutContext {\n  showBreadcrumb: (breadcrumb: any) => void;\n}\n\nexport const AppLayoutContextDefaultValue = {} as IAppLayoutContext;\n\nexport const AppLayoutContext = React.createContext<IAppLayoutContext>(\n  AppLayoutContextDefaultValue\n);\n","import * as React from 'react';\nimport { AppLayoutContext } from './AppLayoutContext';\n\nexport const AppBreadcrumb: React.FunctionComponent = ({ children }) => {\n  const appLayoutContext = React.useContext(AppLayoutContext);\n\n  React.useEffect(function setupElement() {\n    appLayoutContext.showBreadcrumb(children);\n\n    return function removeElement() {\n      appLayoutContext.showBreadcrumb(null);\n    };\n  }, []);\n  return null;\n};\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport {\n  Breadcrumb as PFBreadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppBreadcrumb } from './AppBreadcrumb';\n\nexport interface IBreadcrumbProps {\n  actions?: React.ReactNode;\n}\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent<IBreadcrumbProps> = ({\n  actions,\n  children,\n}) => {\n  const count = React.Children.count(children);\n  return (\n    <AppBreadcrumb>\n      <Level gutter={'md'}>\n        <LevelItem>\n          <PFBreadcrumb>\n            {React.Children.map(children, (c, idx) => (\n              <BreadcrumbItem key={idx} isActive={idx === count - 1}>\n                {c}\n              </BreadcrumbItem>\n            ))}\n          </PFBreadcrumb>\n        </LevelItem>\n        {actions && <LevelItem>{actions}</LevelItem>}\n      </Level>\n    </AppBreadcrumb>\n  );\n};\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import { NavExpandable } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return children ? (\n      <NavExpandable title={label} isActive={isActive} isExpanded={isActive}>\n        {children}\n      </NavExpandable>\n    ) : (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { PageSection } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription?: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <PageSection\n      variant={'light'}\n      className={classnames('', className)}\n      {...rest}\n    >\n      <TextContent>\n        <Title size=\"2xl\" headingLevel={TitleLevel.h1}>\n          {i18nTitle}\n        </Title>\n        {i18nDescription && <Text>{i18nDescription}</Text>}\n      </TextContent>\n    </PageSection>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader, PageSection } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <PageSection>\n        <Card>\n          <Card.Heading>\n            <Card.Title>{this.props.i18nTitle}</Card.Title>\n          </Card.Heading>\n          <Card.Body>\n            <Container>\n              <form\n                className=\"form-horizontal required-pf\"\n                role=\"form\"\n                onSubmit={this.props.handleSubmit}\n              >\n                {this.props.validationResults.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                {this.props.children}\n                {this.props.isEditing ? (\n                  <Button\n                    bsStyle=\"default\"\n                    disabled={this.props.isWorking || !this.props.isValid}\n                    onClick={this.props.onValidate}\n                  >\n                    {this.props.isWorking ? (\n                      <Loader size={'sm'} inline={true} />\n                    ) : null}\n                    {this.props.i18nValidateLabel}\n                  </Button>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </form>\n            </Container>\n          </Card.Body>\n          <Card.Footer>\n            <Button\n              bsStyle=\"default\"\n              className=\"connection-details-form__editButton\"\n              disabled={this.props.isWorking}\n              onClick={this.props.onCancelEditing}\n            >\n              {this.props.i18nCancelLabel}\n            </Button>\n            <Button\n              bsStyle=\"primary\"\n              className=\"connection-details-form__editButton\"\n              disabled={this.props.isWorking || !this.props.isValid}\n              onClick={this.props.handleSubmit}\n            >\n              {this.props.i18nSaveLabel}\n            </Button>\n          </Card.Footer>\n        </Card>\n      </PageSection>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, PageSection } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <PageSection variant={'light'}>\n        <Grid fluid={true}>\n          <Grid.Row className={'connection-details-header__row'}>\n            {this.props.connectionIcon ? (\n              <Grid.Col xs={1}>\n                <Container className=\"blank-slate-pf-icon\">\n                  <img\n                    className=\"connection-details-header__connectionIcon\"\n                    src={this.props.connectionIcon}\n                    alt={this.props.connectionName}\n                    width={46}\n                  />\n                </Container>\n              </Grid.Col>\n            ) : null}\n            <Grid.Col xs={11}>\n              <InlineTextEdit\n                className=\"connection-details-header__connectionName\"\n                value={this.props.connectionName}\n                allowEditing={this.props.allowEditing && !this.props.isWorking}\n                placeholder={this.props.i18nNamePlaceholder}\n                isTextArea={false}\n                onChange={this.props.onChangeName}\n              />\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row className={'connection-details-header__row'}>\n            <Grid.Col\n              xs={2}\n              className=\"connection-details-header__propertyLabel\"\n            >\n              {this.props.i18nDescriptionLabel}\n            </Grid.Col>\n            <Grid.Col xs={10}>\n              <InlineTextEdit\n                value={this.props.connectionDescription || ''}\n                allowEditing={this.props.allowEditing && !this.props.isWorking}\n                i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n                isTextArea={true}\n                onChange={this.props.onChangeDescription}\n              />\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col\n              xs={2}\n              className=\"connection-details-header__propertyLabel\"\n            >\n              {this.props.i18nUsageLabel}\n            </Grid.Col>\n            <Grid.Col\n              xs={10}\n              className=\"connection-details-header__propertyValue\"\n            >\n              {this.props.i18nUsageMessage}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n      </PageSection>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import {\n  PageSection,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'}>\n          <TextContent>\n            <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n              {this.props.i18nTitle}\n            </Title>\n          </TextContent>\n        </PageSection>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <ButtonLink\n                href={this.props.linkToConnectionCreate}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getCreateConnectorTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkCreateApiConnector}\n                  as={'primary'}\n                >\n                  {this.props.i18nLinkCreateApiConnector}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  Text,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <PageSection variant={'light'}>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <TextContent>\n                <Title size=\"xl\" headingLevel={TitleLevel.h1}>\n                  {this.props.extensionName}\n                </Title>\n                <Text>{this.props.i18nIdMessage}</Text>\n              </TextContent>\n            </LevelItem>\n            <LevelItem>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'primary'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.extensionUses !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </LevelItem>\n          </Level>\n        </PageSection>\n        <PageSection>\n          <Card>\n            <CardBody>\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nOverviewSectionTitle}\n              </Title>\n              {this.props.overviewSection}\n\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nSupportsSectionTitle}\n              </Title>\n              {this.props.supportsSection}\n\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nUsageSectionTitle}\n              </Title>\n              {this.props.integrationsSection}\n            </CardBody>\n          </Card>\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkImportExtension}\n                  as={'primary'}\n                >\n                  {this.props.i18nLinkImportExtension}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nIntegrations: string;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'}>\n          <TextContent>\n            <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n              {this.props.i18nTitle}\n            </Title>\n          </TextContent>\n        </PageSection>\n        <PageSection>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <Title size={'lg'}>{this.props.i18nIntegrations}</Title>\n            </LevelItem>\n            <LevelItem>\n              <Link to={this.props.linkToIntegrations}>\n                {this.props.i18nLinkToIntegrations}\n              </Link>\n              <ButtonLink\n                href={this.props.linkToIntegrationCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateIntegration}\n              </ButtonLink>\n            </LevelItem>\n          </Level>\n          <CardGrid fluid={true} matchHeight={true}>\n            <CardGrid.Row>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.integrationsOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.connectionsOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.messagesOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.uptimeOverview}\n              </CardGrid.Col>\n            </CardGrid.Row>\n          </CardGrid>\n          <Grid fluid={true}>\n            <Grid.Row>\n              <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col sm={12} md={6}>\n                {this.props.integrationBoard}\n              </Grid.Col>\n              <Grid.Col sm={12} md={6}>\n                {this.props.integrationUpdates}\n              </Grid.Col>\n            </Grid.Row>\n          </Grid>\n        </PageSection>\n\n        <PageSection>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <Title size={'lg'}>{this.props.i18nConnections}</Title>\n            </LevelItem>\n            <LevelItem>\n              <Link to={this.props.linkToConnections}>\n                {this.props.i18nLinkToConnections}\n              </Link>\n              <ButtonLink\n                href={this.props.linkToConnectionCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </LevelItem>\n          </Level>\n          <CardGrid fluid={true} matchHeight={true}>\n            <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n          </CardGrid>\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'} noPadding={true}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              {this.props.resultsCount !== 0 && (\n                <Button\n                  className=\"btn btn-primary\"\n                  onClick={this.props.onAddNew}\n                >\n                  {this.props.i18nAddNewButtonText}\n                </Button>\n              )}\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Alert, ExpandCollapse } from 'patternfly-react';\nimport * as React from 'react';\n\nexport enum AlertLevel {\n  ERROR = 'error',\n  WARN = 'warning',\n  INFO = 'info',\n}\n\nexport interface IIntegrationBulletinBoardAlertProps {\n  level: AlertLevel;\n  message: string;\n  detail?: string;\n  i18nTextExpanded: string;\n  i18nTextCollapsed: string;\n}\n\nexport class IntegrationBulletinBoardAlert extends React.Component<\n  IIntegrationBulletinBoardAlertProps\n> {\n  public render() {\n    return (\n      <Alert type={this.props.level}>\n        <span\n          dangerouslySetInnerHTML={{\n            __html: this.props.message,\n          }}\n        />\n        {this.props.detail && (\n          <ExpandCollapse\n            align=\"left\"\n            bordered={false}\n            expanded={false}\n            textExpanded={this.props.i18nTextExpanded}\n            textCollapsed={this.props.i18nTextCollapsed}\n          >\n            <pre>{this.props.detail}</pre>\n          </ExpandCollapse>\n        )}\n      </Alert>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <PageSection>\n          <DndFileChooser\n            allowMultiple={true}\n            fileExtensions={'.zip'}\n            onUploadRejected={this.props.onUploadRejected}\n            disableDropzone={false}\n            onUploadAccepted={this.props.onUploadAccepted}\n            i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n            i18nInstructions={this.props.i18nInstructions}\n            i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n            i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n            i18nHelpMessage={this.props.i18nHelpMessage}\n          />\n        </PageSection>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../../Layout';\nimport { IMenuActions } from '../../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Breadcrumb\n        actions={\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        }\n      >\n        <span>\n          <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n        </span>\n        <span>\n          <Link to={this.props.integrationsHref!}>\n            {this.props.i18nIntegrations}\n          </Link>\n        </span>\n        <span>{this.props.i18nPageTitle}</span>\n      </Breadcrumb>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description: React.ReactNode;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Text>{this.props.description}</Text>\n      </PageSection>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: React.ReactNode;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return <>{this.props.name && <Title size=\"lg\">{this.props.name}</Title>}</>;\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Grid\n          fluid={true}\n          key={1}\n          className=\"integration-detail-history-list-view\"\n        >\n          {this.props.isDraft ? (\n            <Grid.Row className=\"show-grid\">\n              <Grid.Col\n                xs={2}\n                md={2}\n                className=\"integration-detail-history-list-view__description\"\n              >\n                {this.props.i18nTextDraft}:\n              </Grid.Col>\n              <Grid.Col xs={10} md={10}>\n                <ListViewItem\n                  key={1}\n                  heading={this.props.i18nTextDraft}\n                  actions={\n                    <>\n                      <ButtonLink\n                        to={this.props.publishHref}\n                        onClick={this.props.publishAction}\n                        children={this.props.publishLabel}\n                      />\n                      <ButtonLink\n                        href={this.props.editHref}\n                        children={this.props.editLabel}\n                      />\n                    </>\n                  }\n                  stacked={false}\n                />\n              </Grid.Col>\n            </Grid.Row>\n          ) : null}\n\n          {this.props.children && this.props.hasHistory ? (\n            <Grid.Row className=\"show-grid\">\n              <Grid.Col\n                xs={2}\n                md={2}\n                className=\"integration-detail-history-list-view__description\"\n              >\n                {<span>{this.props.i18nTextHistory}:</span>}\n              </Grid.Col>\n              <Grid.Col xs={10} md={10}>\n                {this.props.children ? (\n                  <ListView>{this.props.children}</ListView>\n                ) : null}\n              </Grid.Col>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </PageSection>\n    );\n  }\n}\n","import { ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: string;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nconst states = {\n  Error: <ListView.Icon type=\"pf\" name=\"error-circle-o\" />,\n  Pending: <ListView.Icon name=\"blank\" />,\n  Published: <ListView.Icon type=\"pf\" name=\"ok\" />,\n  Unpublished: <ListView.Icon name=\"blank\" />,\n};\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      return states[currentState] || null;\n    }\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <>\n            {this.props.i18nTextVersion}: {this.props.version}\n          </>\n        }\n        description={\n          <>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </>\n        }\n        additionalInfo={[]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import * as React from 'react';\nimport { IntegrationStatusDetail } from '../IntegrationStatusDetail';\nimport { IntegrationState } from '../models';\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: React.ReactNode;\n  version?: number;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        {this.props.name}\n        <>\n          {this.props.currentState === 'Pending' && (\n            <IntegrationStatusDetail\n              targetState={this.props.targetState}\n              value={this.props.monitoringValue}\n              currentStep={this.props.monitoringCurrentStep}\n              totalSteps={this.props.monitoringTotalSteps}\n              logUrl={this.props.monitoringLogUrl}\n              i18nProgressPending={this.props.i18nProgressPending}\n              i18nProgressStarting={this.props.i18nProgressStarting}\n              i18nProgressStopping={this.props.i18nProgressStopping}\n              i18nLogUrlText={this.props.i18nLogUrlText}\n            />\n          )}\n          {this.props.currentState === 'Published' && this.props.version && (\n            <>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <span className=\"pficon pficon-ok\" />\n              &nbsp;Published version {this.props.version}\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n  onRefresh: () => void;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            &nbsp;|&nbsp;\n            {this.props.i18nLastRefresh}\n            &nbsp;&nbsp;\n            <Button onClick={this.props.onRefresh}>\n              {this.props.i18nBtnRefresh}\n            </Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </PageSection>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationDetailActivityItem.css';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: string;\n}\n\nconst headerFormat = (value: string) => <Table.Heading>{value}</Table.Heading>;\nconst cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\nconst statusCellFormat = (status: string) => (\n  <Table.Cell>\n    {status === 'Success' ? (\n      <>\n        <Icon type=\"pf\" name=\"ok\" /> Success\n      </>\n    ) : (\n      <>\n        <Icon type=\"pf\" name=\"error-circle-o\" /> Error\n      </>\n    )}\n  </Table.Cell>\n);\nconst outputCellFormat = (output: string) => (\n  <Table.Cell>\n    <pre className=\"integration-detail-activity-item-step-output\">{output}</pre>\n  </Table.Cell>\n);\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        className=\"integration-detail-activity-item\"\n        key={this.props.time}\n        actions={\n          <div className=\"integration-detail-activity-item__status-item\">\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </div>\n        }\n        leftContent={this.props.date}\n        heading={<></>}\n        description={this.props.time}\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.i18nVersion}\n            &nbsp;\n            {this.props.version}\n          </ListView.InfoItem>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [statusCellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [outputCellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: string;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailMetricsProps {\n  i18nLastProcessed: string;\n  i18nSince: string;\n  i18nTotalErrors: string;\n  i18nTotalMessages: string;\n  i18nUptime: string;\n  errors?: number;\n  lastProcessed?: string;\n  messages?: number;\n  start?: number;\n  durationDifference?: string;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const okMessagesCount = this.props.messages! - this.props.errors!;\n    const startAsDate = new Date(this.props.start!);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <PageSection>\n        <CardGrid fluid={true} matchHeight={true}>\n          <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <Icon type=\"pf\" name=\"error-circle-o\" />\n                  {this.props.errors}\n                </CardTitle>\n                <CardBody>{this.props.i18nTotalErrors}</CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <Icon name=\"shield\" />\n                  {this.props.i18nLastProcessed}\n                </CardTitle>\n                <CardBody>\n                  <h2>{this.props.lastProcessed}</h2>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <AggregateStatusCount>\n                    {this.props.messages}&nbsp;\n                  </AggregateStatusCount>\n                  {this.props.i18nTotalMessages}\n                </CardTitle>\n                <CardBody>\n                  <AggregateStatusNotifications>\n                    <AggregateStatusNotification>\n                      <Icon type=\"pf\" name=\"ok\" />\n                      {okMessagesCount}&nbsp;\n                    </AggregateStatusNotification>\n                    <AggregateStatusNotification>\n                      <Icon type=\"pf\" name=\"error-circle-o\" />\n                      {this.props.errors}\n                    </AggregateStatusNotification>\n                  </AggregateStatusNotifications>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <Card.Title className={'text-left'}>\n                  <small className={'pull-right'}>\n                    {this.props.i18nSince}\n                    {startAsHuman}\n                  </small>\n                  <div>{this.props.i18nUptime}</div>\n                </Card.Title>\n                <Card.Body>\n                  <h4>{this.props.durationDifference}</h4>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </CardGrid>\n      </PageSection>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n */\nexport class IntegrationEditorChooseAction extends React.Component {\n  public render() {\n    return (\n      <Container>\n        <ListView>{this.props.children}</ListView>\n      </Container>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ConnectionsGrid } from '../Connection';\nimport { Container } from '../Layout';\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n */\nexport class IntegrationEditorChooseConnection extends React.Component {\n  public render() {\n    return (\n      <Container>\n        <ConnectionsGrid>{this.props.children}</ConnectionsGrid>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n\n  i18nNext: string;\n  i18nChooseAction: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  isValid: boolean;\n  chooseActionHref: H.LocationDescriptor;\n  handleSubmit: (e?: any) => void;\n  submitForm: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                <Container>{this.props.children}</Container>\n              </div>\n              <div className=\"card-pf-footer\">\n                <ButtonLink href={this.props.chooseActionHref}>\n                  <i className={'fa fa-chevron-left'} />{' '}\n                  {this.props.i18nChooseAction}\n                </ButtonLink>\n                <ButtonLink\n                  onClick={this.props.submitForm}\n                  disabled={!this.props.isValid}\n                  as={'primary'}\n                >\n                  {this.props.i18nNext}\n                </ButtonLink>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <div className=\"row row-cards-pf\">\n          <div className=\"card-pf\">\n            <div className=\"card-pf-body\">\n              <Container>\n                <Text className=\"alert alert-info\">\n                  <span className=\"pficon pficon-info\" />\n                  {this.props.i18nAlert}\n                </Text>\n              </Container>\n            </div>\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IIntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IIntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IIntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IIntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationSaveFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationSaveFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationSaveFormProps#i18nSubtitle}\n */\nexport class IntegrationSaveForm extends React.Component<\n  IIntegrationSaveFormProps\n> {\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <div className={'step-icon'}>\n            <img src={this.props.icon} />\n          </div>\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={1}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded:\n      (localStorage.getItem('iec-vertical-flow-expanded') || 'y') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import { TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'}>\n          <TextContent>\n            <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n              {this.props.i18nTitle}\n            </Title>\n          </TextContent>\n        </PageSection>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <ButtonLink href={this.props.linkToManageCiCd}>\n                {this.props.i18nManageCiCd}\n              </ButtonLink>\n              <ButtonLink href={this.props.linkToIntegrationImport}>\n                {this.props.i18nImport}\n              </ButtonLink>\n              <ButtonLink\n                href={this.props.linkToIntegrationCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  durationDifference: string;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>\n          <h4>{this.props.durationDifference}</h4>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState, OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport './EmptyViewsState.css';\n\nexport interface IEmptyViewsStateProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n}\n\nexport class EmptyViewsState extends React.Component<IEmptyViewsStateProps> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nEmptyStateTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <OverlayTrigger\n            overlay={this.getImportViewsTooltip()}\n            placement=\"top\"\n          >\n            <ButtonLink\n              href={this.props.linkImportViewsHRef}\n              as={'default'}\n              className={'empty-views-import'}\n            >\n              {this.props.i18nImportViews}\n            </ButtonLink>\n          </OverlayTrigger>\n          <OverlayTrigger overlay={this.getCreateViewTooltip()} placement=\"top\">\n            <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n              {this.props.i18nCreateView}\n            </ButtonLink>\n          </OverlayTrigger>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { ListView, OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport { EmptyViewsState } from './EmptyViewsState';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.hasListData ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyViewsState\n              i18nEmptyStateTitle={this.props.i18nEmptyStateTitle}\n              i18nEmptyStateInfo={this.props.i18nEmptyStateInfo}\n              i18nCreateView={this.props.i18nCreateView}\n              i18nCreateViewTip={this.props.i18nCreateViewTip}\n              i18nImportViews={this.props.i18nImportViews}\n              i18nImportViewsTip={this.props.i18nImportViewsTip}\n              linkCreateViewHRef={this.props.linkCreateViewHRef}\n              linkImportViewsHRef={this.props.linkImportViewsHRef}\n            />\n          )}\n        </PageSection>\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../../Layout';\n\nexport interface IViewHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n}\n\nexport class ViewHeader extends React.Component<IViewHeaderProps> {\n  public render() {\n    return (\n      <PageSection variant={'light'}>\n        <TextContent>\n          <Title size=\"2xl\" headingLevel={TitleLevel.h1}>\n            {this.props.i18nTitle}\n          </Title>\n          {this.props.i18nDescription && (\n            <Text>{this.props.i18nDescription}</Text>\n          )}\n        </TextContent>\n      </PageSection>\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, PageSection } from '../../../src/Layout';\nimport { GenericTable } from '../../Shared/GenericTable';\nimport { EmptyViewsState } from '../Virtualizations/Views/EmptyViewsState';\n\nexport interface ISqlClientContentProps {\n  /**\n   * The SQL selector form content\n   */\n  formContent: React.ReactNode;\n  /**\n   * ViewNames for selector\n   */\n  viewNames: string[];\n  /**\n   * TargetVdb to run query\n   */\n  targetVdb: string;\n  /**\n   * Array of column info for the query results.  (The column id and display label)\n   * Example:\n   * [ { id: 'fName', label: 'First Name'},\n   *   { id: 'lName', label: 'Last Name'},\n   *   { id: 'country', label: 'Country' }\n   * ]\n   */\n  queryResultCols: IColumn[];\n  /**\n   * Array of query result rows - must match up with column ids\n   * Example:\n   * [ { fName: 'Jean', lName: 'Frissilla', country: 'Italy' },\n   *   { fName: 'John', lName: 'Johnson', country: 'US' },\n   *   { fName: 'Juan', lName: 'Bautista', country: 'Brazil' },\n   *   { fName: 'Jordan', lName: 'Dristol', country: 'Ontario' }\n   * ]\n   */\n  queryResultRows: Array<{}>;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nEmptyResultsTitle: string;\n  i18nEmptyResultsMsg: string;\n}\n\ninterface IColumn {\n  id: string;\n  label: string;\n}\n\nconst defaultCellFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nconst defaultHeaderFormat = (value: any) => <Table.Cell>{value}</Table.Cell>;\n\n/**\n * The SQL client content.  This component includes:\n * - SqlClientForm - for selection of the view and query params\n * - GenericTable - for display of the query results\n * - EmptyStates - displayed when no views available or no results available.\n */\nexport class SqlClientContent extends React.Component<ISqlClientContentProps> {\n  public render() {\n    return (\n      <PageSection>\n        {this.props.viewNames.length > 0 ? (\n          <Grid.Row>\n            <Grid.Col md={6}>\n              <Container>{this.props.formContent}</Container>\n            </Grid.Col>\n            <Grid.Col md={6}>\n              <Container>\n                {this.props.queryResultRows.length > 0 ? (\n                  <GenericTable\n                    columns={this.props.queryResultCols.map(col => ({\n                      cell: {\n                        formatters: [defaultCellFormat],\n                      },\n                      header: {\n                        formatters: [defaultHeaderFormat],\n                        label: col.label,\n                      },\n                      property: col.id,\n                    }))}\n                    rows={this.props.queryResultRows}\n                    rowKey={\n                      this.props.queryResultCols.length > 0\n                        ? this.props.queryResultCols[0].id\n                        : ''\n                    }\n                    {...this.props}\n                  />\n                ) : (\n                  <EmptyState>\n                    <EmptyState.Title>\n                      {this.props.i18nEmptyResultsTitle}\n                    </EmptyState.Title>\n                    <EmptyState.Info>\n                      {this.props.i18nEmptyResultsMsg}\n                    </EmptyState.Info>\n                  </EmptyState>\n                )}\n              </Container>\n            </Grid.Col>\n          </Grid.Row>\n        ) : (\n          <EmptyViewsState\n            i18nEmptyStateTitle={this.props.i18nEmptyStateTitle}\n            i18nEmptyStateInfo={this.props.i18nEmptyStateInfo}\n            i18nCreateView={this.props.i18nCreateView}\n            i18nCreateViewTip={this.props.i18nCreateViewTip}\n            i18nImportViews={this.props.i18nImportViews}\n            i18nImportViewsTip={this.props.i18nImportViewsTip}\n            linkCreateViewHRef={this.props.linkCreateViewHRef}\n            linkImportViewsHRef={this.props.linkImportViewsHRef}\n          />\n        )}\n      </PageSection>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface ISqlClientFormProps {\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render the SqlClient entry form, to be used on the Virtualization SQL client page.\n * This does *not* build the form itself, form fields should be passed as the `children` value.\n */\nexport class SqlClientForm extends React.Component<ISqlClientFormProps> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={this.props.handleSubmit}\n          >\n            Submit\n          </button>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport { VirtualizationPublishStatus } from './VirtualizationPublishStatus';\nimport { VirtualizationPublishStatusDetail } from './VirtualizationPublishStatusDetail';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <PageSection variant={'light'} noPadding={true}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getImportVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <Button\n                  bsStyle=\"default\"\n                  to={this.props.i18nImport}\n                  onClick={this.handleImport}\n                >\n                  {this.props.i18nImport}\n                </Button>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.hasListData ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateVirtualizationTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                    {this.props.i18nLinkCreateVirtualization}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Loader, PageSection } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onPublish - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCancel - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onSave - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * using this as its `to` parameter.\n * @param isSaveLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isSaveDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onPublish?: (e: React.MouseEvent<any>) => void;\n  onSave?: (e: React.MouseEvent<any>) => void;\n  saveHref?: H.LocationDescriptor;\n  cancelHref?: H.LocationDescriptor;\n  publishHref?: H.LocationDescriptor;\n  isSaveDisabled?: boolean;\n  isSaveLoading?: boolean;\n  isPublishDisabled?: boolean;\n  isPublishLoading?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  title,\n  description,\n  sidebar,\n  content,\n  onPublish,\n  onCancel,\n  onSave,\n  saveHref,\n  cancelHref,\n  publishHref,\n  isSaveLoading,\n  isSaveDisabled,\n  isPublishLoading,\n  isPublishDisabled,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div className={'wizard-pf-body integration-editor-layout syn-scrollable'}>\n      <div className=\"wizard-pf-toolbar integration-editor-layout__header\">\n        <PageSection variant={'light'}>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <TextContent>\n                <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n                  {title}\n                </Title>\n                {description && <Text>{description}</Text>}\n              </TextContent>\n            </LevelItem>\n            <LevelItem>\n              {(cancelHref || onCancel) && (\n                <ButtonLink onClick={onCancel} href={cancelHref}>\n                  <i className=\"fa fa-angle-left\" /> Cancel\n                </ButtonLink>\n              )}\n              {(saveHref || onSave) && (\n                <ButtonLink\n                  onClick={onSave}\n                  href={saveHref}\n                  disabled={isSaveLoading || isSaveDisabled}\n                >\n                  {isSaveLoading ? <Loader size={'xs'} inline={true} /> : null}\n                  Save\n                </ButtonLink>\n              )}\n              {(publishHref || onPublish) && (\n                <ButtonLink\n                  onClick={onPublish}\n                  href={publishHref}\n                  as={'primary'}\n                  disabled={isPublishLoading || isPublishDisabled}\n                >\n                  Publish\n                </ButtonLink>\n              )}\n            </LevelItem>\n          </Level>\n        </PageSection>\n      </div>\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorWizard.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorWizardProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorWizard: React.FunctionComponent<\n  IIntegrationEditorWizardProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorWizardProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-wizard syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-wizard__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-wizard__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-wizard__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-wizard__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { HelpDropdown } from '../Shared/HelpDropdown';\nimport { AppLayoutContext } from './AppLayoutContext';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n  onShowAboutModal(): void;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  onShowAboutModal,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n\n  const [breadcrumb, setHasBreadcrumb] = React.useState(null);\n  const showBreadcrumb = (b: any) => setHasBreadcrumb(b);\n\n  return (\n    <AppLayoutContext.Provider\n      value={{\n        showBreadcrumb,\n      }}\n    >\n      <Page\n        header={\n          <PageHeader\n            logo={pictograph}\n            logoProps={{ href: logoHref }}\n            toolbar={\n              <>\n                {\n                  <HelpDropdown\n                    className=\"syn-help-dropdown\"\n                    isOpen={false}\n                    launchAboutModal={() => {\n                      onShowAboutModal();\n                    }}\n                  />\n                }\n                {appNav}\n              </>\n            }\n            showNavToggle={true}\n            isNavOpen={showNavigation}\n            onNavToggle={onNavToggle}\n          />\n        }\n        sidebar={\n          <PageSidebar\n            nav={\n              <Nav>\n                <NavList>{verticalNav}</NavList>\n              </Nav>\n            }\n            isNavOpen={showNavigation}\n          />\n        }\n        breadcrumb={breadcrumb}\n      >\n        {children}\n      </Page>\n    </AppLayoutContext.Provider>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n}) => (\n  <PageSection variant={'light'}>\n    <TextContent>\n      <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n        {i18nPageTitle}\n      </Title>\n      <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n      <Text>\n        {i18nCallbackDescription} : {callbackURI}\n      </Text>\n    </TextContent>\n  </PageSection>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <PageSection noPadding={true} variant={'light'}>\n      <ListViewToolbar {...rest} />\n    </PageSection>\n    <PageSection>{children}</PageSection>\n  </>\n);\n","import { TextContent, TextList, TextListItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModalContent {\n  version: string;\n  productName: string;\n  buildId: string;\n  commitId: string;\n}\n\nfunction AboutModalContent({\n  productName,\n  version,\n  buildId,\n  commitId,\n}: IAboutModalContent) {\n  return (\n    <TextContent>\n      <TextList component=\"dl\">\n        <TextListItem component=\"dt\">{productName}:</TextListItem>\n        <TextListItem component=\"dd\">{version}</TextListItem>\n        <TextListItem component=\"dt\">Build ID:</TextListItem>\n        <TextListItem component=\"dd\">{buildId}</TextListItem>\n        <TextListItem component=\"dt\">Commit ID:</TextListItem>\n        <TextListItem component=\"dd\">{commitId}</TextListItem>\n      </TextList>\n    </TextContent>\n  );\n}\n\nexport { AboutModalContent };\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import { WithApiVersion } from '@syndesis/api';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { AboutModal, AboutModalContent } from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute, IAppRoutes, IAppRouteWithChildrens } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoutes;\n}\n\nexport interface IAppUIState {\n  showAboutModal: boolean;\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [showAboutModal, setShowAboutModal] = useState(false);\n  const toggleAboutModal = () => {\n    setShowAboutModal(!showAboutModal);\n  };\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => {\n          const productName = 'Syndesis';\n          return (\n            <>\n              {showAboutModal && (\n                <AboutModal\n                  trademark={''}\n                  productName={productName}\n                  isModalOpen={showAboutModal}\n                  handleModalToggle={toggleAboutModal}\n                  brandImg={'https://avatars0.githubusercontent.com/u/23079786'}\n                >\n                  <WithApiVersion>\n                    {({ data }) => {\n                      const {\n                        'commit-id': commitId,\n                        'build-id': buildId,\n                        version,\n                      } = data;\n                      return (\n                        <AboutModalContent\n                          version={version}\n                          buildId={buildId}\n                          commitId={commitId}\n                          productName={productName}\n                        />\n                      );\n                    }}\n                  </WithApiVersion>\n                </AboutModal>\n              )}\n              <Notifications\n                notifications={notifications}\n                notificationTimerDelay={8000}\n                removeNotificationAction={onRemoveNotification}\n              />\n              <AppLayout\n                onShowAboutModal={toggleAboutModal}\n                appNav={\n                  <AppTopMenu username={'developer'}>\n                    <PfDropdownItem>\n                      <Link\n                        to={'/logout'}\n                        className=\"pf-c-dropdown__menu-item\"\n                        children={t('Logout')}\n                      />\n                    </PfDropdownItem>\n                  </AppTopMenu>\n                }\n                verticalNav={routes.map((route, index) =>\n                  !(route as IAppRouteWithChildrens).childrens ? (\n                    <PfVerticalNavItem\n                      exact={(route as IAppRoute).exact}\n                      label={t((route as IAppRoute).label)}\n                      to={(route as IAppRoute).to}\n                      key={index}\n                      data-testid={`navbar-link-${(route as IAppRoute).to}`}\n                    />\n                  ) : (\n                    <PfVerticalNavItem\n                      label={t(route.label)}\n                      key={index}\n                      to={'#'}\n                    >\n                      {(route as IAppRouteWithChildrens).childrens.map(\n                        (subRoute, subIndex) => (\n                          <PfVerticalNavItem\n                            exact={subRoute.exact}\n                            label={t(subRoute.label)}\n                            to={subRoute.to}\n                            key={subIndex}\n                            data-testid={`navbar-link-${subRoute.to}`}\n                          />\n                        )\n                      )}\n                    </PfVerticalNavItem>\n                  )\n                )}\n                pictograph={\n                  <img\n                    src={logo}\n                    alt=\"Syndesis\"\n                    style={{ minWidth: '164px' }}\n                  />\n                }\n                logoHref={'/'}\n                showNavigation={showNavigation}\n                onNavigationCollapse={onHideNavigation}\n                onNavigationExpand={onShowNavigation}\n              >\n                <WithRouter>\n                  {({ match }) => (\n                    <WithErrorBoundary key={match.url}>\n                      <Switch>\n                        {routes\n                          .reduce(\n                            (flattenedRoutes, route) => [\n                              ...flattenedRoutes,\n                              ...(!(route as IAppRouteWithChildrens).childrens\n                                ? [route as IAppRoute]\n                                : (route as IAppRouteWithChildrens).childrens),\n                            ],\n                            [] as IAppRoute[]\n                          )\n                          .map((route, index) => (\n                            <Route\n                              path={route.to}\n                              exact={route.exact}\n                              component={route.component}\n                              key={index}\n                            />\n                          ))}\n                        <Route component={PageNotFound} />\n                      </Switch>\n                    </WithErrorBoundary>\n                  )}\n                </WithRouter>\n              </AppLayout>\n            </>\n          );\n        }}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport type IAppRoutes = Array<IAppRoute | IAppRouteWithChildrens>;\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  label: string;\n  to: string;\n  kind: 'route';\n}\nexport interface IAppRouteWithChildrens {\n  label: string;\n  childrens: IAppRoute[];\n  kind: 'route-with-childrens';\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoutes;\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationOverview } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IWithIntegrationActionsChildrenProps {\n  ciCdAction: IIntegrationAction;\n  deleteAction: IIntegrationAction;\n  editAction: IIntegrationAction;\n  exportAction: IIntegrationAction;\n  startAction: IIntegrationAction;\n  stopAction: IIntegrationAction;\n  actions: IIntegrationAction[];\n}\n\nexport interface IWithIntegrationActionsProps {\n  integration: IntegrationOverview;\n  children: (props: IWithIntegrationActionsChildrenProps) => any;\n}\n\nexport interface IWithIntegrationActionsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\nexport interface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class WithIntegrationActions extends React.Component<\n  IWithIntegrationActionsProps,\n  IWithIntegrationActionsState\n> {\n  constructor(props: IWithIntegrationActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => {\n                  const editAction: IIntegrationAction = {\n                    href: resolvers.integration.edit.index({\n                      flowId: this.props.integration.flows![0].id!,\n                      integration: this.props.integration,\n                    }),\n                    label: 'Edit',\n                  };\n                  const startAction: IIntegrationAction = {\n                    label: 'Start',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!,\n                              false\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:PublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopAction: IIntegrationAction = {\n                    label: 'Stop',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:UnpublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const deleteAction: IIntegrationAction = {\n                    label: 'Delete',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:DeletingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deleteIntegration(this.props.integration.id!);\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:DeletingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.DANGER,\n                        promptDialogButtonText: t('shared:Delete'),\n                        promptDialogIcon: ConfirmationIconType.DANGER,\n                        promptDialogText: t(\n                          'integrations:deleteIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:deleteIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const exportAction: IIntegrationAction = {\n                    label: 'Export',\n                    onClick: () =>\n                      exportIntegration(\n                        this.props.integration.id!,\n                        `${this.props.integration.name}-export.zip`\n                      ),\n                  };\n                  const ciCdAction: IIntegrationAction = {\n                    label: 'Manage CI/CD',\n                    onClick: () => {\n                      this.promptForCiCd(this.props.integration.id!);\n                    },\n                  };\n\n                  const actions: IIntegrationAction[] = [];\n                  if (canEdit(this.props.integration)) {\n                    actions.push(editAction);\n                  }\n                  if (canActivate(this.props.integration)) {\n                    actions.push(startAction);\n                  }\n                  if (canDeactivate(this.props.integration)) {\n                    actions.push(stopAction);\n                  }\n                  actions.push(deleteAction);\n                  actions.push(exportAction);\n                  actions.push(ciCdAction);\n                  return (\n                    <>\n                      {this.state.showCiCdPromptDialog && (\n                        <TagIntegrationDialogWrapper\n                          manageCiCdHref={resolvers.manageCicd.root()}\n                          tagIntegration={tagIntegration}\n                          targetIntegrationId={this.state.targetIntegrationId!}\n                          onSave={this.closeCiCdDialog}\n                          onHide={this.closeCiCdDialog}\n                        />\n                      )}\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        actions,\n                        ciCdAction,\n                        deleteAction,\n                        editAction,\n                        exportAction,\n                        startAction,\n                        stopAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { getFinishIcon, getStartIcon } from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { WithIntegrationActions } from './WithIntegrationActions';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport class Integrations extends React.Component<IIntegrationsProps> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <IntegrationsList>\n                <WithLoader\n                  error={this.props.error}\n                  loading={this.props.loading}\n                  loaderChildren={<IntegrationsListSkeleton />}\n                  errorChildren={<ApiError />}\n                >\n                  {() =>\n                    this.props.integrations.map(\n                      (mi: IntegrationWithMonitoring) => {\n                        try {\n                          return (\n                            <WithIntegrationActions\n                              key={mi.integration.id}\n                              integration={mi.integration}\n                            >\n                              {({ actions }) => (\n                                <IntegrationsListItem\n                                  integrationName={mi.integration.name}\n                                  currentState={mi.integration!.currentState!}\n                                  targetState={mi.integration!.targetState!}\n                                  isConfigurationRequired={\n                                    !!(\n                                      mi.integration!.board!.warnings ||\n                                      mi.integration!.board!.errors ||\n                                      mi.integration!.board!.notices\n                                    )\n                                  }\n                                  monitoringValue={\n                                    mi.monitoring &&\n                                    t(\n                                      'integrations:' +\n                                        mi.monitoring.detailedState.value\n                                    )\n                                  }\n                                  monitoringCurrentStep={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.currentStep\n                                  }\n                                  monitoringTotalSteps={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.totalSteps\n                                  }\n                                  monitoringLogUrl={getPodLogUrl(mi.monitoring)}\n                                  startConnectionIcon={getStartIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  finishConnectionIcon={getFinishIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  actions={\n                                    <IntegrationActions\n                                      integrationId={mi.integration!.id!}\n                                      actions={actions}\n                                      detailsHref={resolvers.integration.details(\n                                        {\n                                          integrationId: mi.integration.id!,\n                                        }\n                                      )}\n                                    />\n                                  }\n                                  i18nConfigurationRequired={t(\n                                    'integrations:ConfigurationRequired'\n                                  )}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                  i18nProgressPending={t('shared:Pending')}\n                                  i18nProgressStarting={t(\n                                    'integrations:progressStarting'\n                                  )}\n                                  i18nProgressStopping={t(\n                                    'integrations:progressStopping'\n                                  )}\n                                  i18nLogUrlText={t('shared:viewLogs')}\n                                />\n                              )}\n                            </WithIntegrationActions>\n                          );\n                        } catch (e) {\n                          return (\n                            <IntegrationsListItemUnreadable\n                              key={mi.integration.id}\n                              integrationName={\n                                (mi && mi.integration && mi.integration.name) ||\n                                'An integration'\n                              }\n                              i18nDescription={\n                                \"Sorry, we can't display more information about this integration right now.\"\n                              }\n                              rawObject={JSON.stringify(\n                                mi.integration,\n                                null,\n                                2\n                              )}\n                            />\n                          );\n                        }\n                      }\n                    )\n                  }\n                </WithLoader>\n              </IntegrationsList>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport {\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n  LeveledMessage,\n} from '@syndesis/models';\nimport {\n  AlertLevel,\n  IMenuActions,\n  InlineTextEdit,\n  IntegrationBulletinBoardAlert,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailEditableName,\n  IntegrationDetailInfo,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../shared';\n\nexport interface IIntegrationDetailHeaderProps {\n  data: IntegrationWithMonitoring;\n  startAction: IMenuActions;\n  stopAction: IMenuActions;\n  deleteAction: IMenuActions;\n  ciCdAction: IMenuActions;\n  editAction: IMenuActions;\n  exportAction: IMenuActions;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nfunction toAlertLevel(level: 'ERROR' | 'WARN' | 'INFO') {\n  switch (level) {\n    case 'WARN':\n      return AlertLevel.WARN;\n    case 'ERROR':\n      return AlertLevel.ERROR;\n    default:\n      return AlertLevel.INFO;\n  }\n}\n\nexport const IntegrationDetailHeader: React.FunctionComponent<\n  IIntegrationDetailHeaderProps\n> = (props: IIntegrationDetailHeaderProps) => {\n  const breadcrumbMenuActions: IMenuActions[] = [];\n  if (canActivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.startAction);\n  }\n  if (canDeactivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.stopAction);\n  }\n  breadcrumbMenuActions.push(props.deleteAction);\n  breadcrumbMenuActions.push(props.ciCdAction);\n\n  return (\n    <Translation ns={['integrations', 'shared']}>\n      {t => {\n        const bbMap = (\n          (props.data.integration.board &&\n            props.data.integration.board.messages) ||\n          []\n        ).reduce((acc, current, index, arr) => {\n          try {\n            if (!current) {\n              return acc;\n            }\n            const key = current.code || current.message;\n            if (!key || key === '') {\n              return acc;\n            }\n            if (!(key in acc)) {\n              acc[key] = current;\n              return acc;\n            }\n            acc[key].detail += (\n              acc[key].detail +\n              '\\n\\n' +\n              current.detail\n            ).substring(0, 256);\n          } catch (err) {\n            // skip that one and keep going\n          }\n          return acc;\n        }, {});\n        const bulletinBoards = Object.keys(bbMap).map(\n          (key: string) => bbMap[key]\n        );\n        return (\n          <>\n            <IntegrationDetailBreadcrumb\n              editHref={props.editAction.href}\n              editLabel={props.editAction.label}\n              exportAction={props.exportAction.onClick}\n              exportHref={props.exportAction.href}\n              exportLabel={props.exportAction.label}\n              homeHref={resolvers.dashboard.root()}\n              i18nHome={t('shared:Home')}\n              i18nIntegrations={t('shared:Integrations')}\n              i18nPageTitle={t('integrations:detail:pageTitle')}\n              integrationId={props.data.integration.id}\n              integrationsHref={resolvers.integrations.list()}\n              menuActions={breadcrumbMenuActions}\n            />\n\n            <PageSection variant={'light'}>\n              <IntegrationDetailInfo\n                name={\n                  <WithIntegrationHelpers>\n                    {({ setAttributes }) => {\n                      const handleChange = async (name: string) => {\n                        try {\n                          await setAttributes(props.data.integration.id!, {\n                            name,\n                          });\n                          return true;\n                        } catch (err) {\n                          return false;\n                        }\n                      };\n                      return (\n                        <IntegrationDetailEditableName\n                          name={\n                            <InlineTextEdit\n                              value={props.data.integration.name}\n                              allowEditing={true}\n                              isTextArea={false}\n                              onChange={handleChange}\n                            />\n                          }\n                        />\n                      );\n                    }}\n                  </WithIntegrationHelpers>\n                }\n                version={props.data.integration.version}\n                currentState={props.data.integration.currentState!}\n                targetState={props.data.integration.targetState!}\n                monitoringValue={\n                  props.data.monitoring &&\n                  t('integrations:' + props.data.monitoring.detailedState.value)\n                }\n                monitoringCurrentStep={\n                  props.data.monitoring &&\n                  props.data.monitoring.detailedState.currentStep\n                }\n                monitoringTotalSteps={\n                  props.data.monitoring &&\n                  props.data.monitoring.detailedState.totalSteps\n                }\n                monitoringLogUrl={props.getPodLogUrl(props.data.monitoring)}\n                i18nProgressPending={t('shared:Pending')}\n                i18nProgressStarting={t('integrations:progressStarting')}\n                i18nProgressStopping={t('integrations:progressStopping')}\n                i18nLogUrlText={t('shared:viewLogs')}\n              />\n            </PageSection>\n            <PageSection variant={'light'}>\n              {bulletinBoards.map((message: LeveledMessage, index) => (\n                <IntegrationBulletinBoardAlert\n                  key={index}\n                  level={toAlertLevel(message.level || 'INFO')}\n                  message={\n                    message.message\n                      ? message.message\n                      : t(`shared:${message.code!.toLocaleLowerCase()}`)\n                  }\n                  detail={message.detail}\n                  i18nTextExpanded={t('shared:HideDetails')}\n                  i18nTextCollapsed={t('shared:ShowDetails')}\n                />\n              ))}\n            </PageSection>\n            <PageSection variant={'light'} noPadding={true}>\n              <IntegrationDetailNavBar integration={props.data.integration} />\n            </PageSection>\n          </>\n        );\n      }}\n    </Translation>\n  );\n};\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <PageSection variant={'light'}>\n        <IntegrationStepsHorizontalView>\n          {steps.map((s, idx) => {\n            const isFirst = idx === 0;\n            const stepName = s.connection!\n              ? s.connection!.connector!.name\n              : s.name;\n\n            return (\n              <React.Fragment key={idx}>\n                <IntegrationStepsHorizontalItem\n                  name={stepName}\n                  icon={getIntegrationStepIcon(\n                    process.env.PUBLIC_URL,\n                    this.props.integration,\n                    flowId,\n                    idx\n                  )}\n                  isFirst={isFirst}\n                />\n              </React.Fragment>\n            );\n          })}\n        </IntegrationStepsHorizontalView>\n      </PageSection>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        alt={'Step'}\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailHeader';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\nexport * from './WithIntegrationActions';\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import moment from 'moment';\n\nexport function toDurationDifferenceString(\n  timestamp: number,\n  defaultValue = 'n/a'\n): string {\n  if (!timestamp) {\n    return defaultValue;\n  }\n  const startDate = moment(timestamp);\n  const uptimeDuration = moment.duration(moment().diff(startDate));\n  const duration = {\n    days: uptimeDuration.days(),\n    hours: uptimeDuration.hours(),\n    minutes: uptimeDuration.minutes(),\n  };\n  const durationString = Object.keys(duration).reduce(\n    (timeSpan: string, key: string) => {\n      return duration[key] > 0\n        ? timeSpan + `${duration[key]} ${key} `\n        : timeSpan;\n    },\n    ''\n  );\n  return durationString && durationString.length > 0\n    ? durationString\n    : defaultValue;\n}\n\nexport function toDurationString(\n  timeDuration: number,\n  unit: 'ms' | 'ns'\n): string {\n  if (!timeDuration) {\n    return 'NaN';\n  }\n  if (unit === 'ns') {\n    timeDuration = timeDuration / 1000000;\n  }\n  const durationMoment = moment.duration(timeDuration);\n  const days = Math.floor(durationMoment.days());\n  const hours = Math.floor(durationMoment.hours());\n  const minutes = Math.floor(durationMoment.minutes());\n  const seconds = Math.floor(durationMoment.seconds());\n  const milliseconds = Math.floor(durationMoment.milliseconds());\n  const durationStrings: string[] = [];\n  if (days > 0) {\n    durationStrings.push(`${days} days`);\n  }\n  if (hours > 0) {\n    durationStrings.push(`${hours} hours`);\n  }\n  if (minutes > 0) {\n    durationStrings.push(`${minutes} minutes`);\n  }\n  if (seconds > 0) {\n    durationStrings.push(`${seconds} seconds`);\n  }\n  if (durationStrings.length === 0) {\n    if (milliseconds > 0) {\n      durationStrings.push(`${milliseconds} ms`);\n    } else if (timeDuration !== 0) {\n      durationStrings.push(`${timeDuration.toFixed(2)} ms`);\n    }\n  }\n  return durationStrings.join(', ').trim();\n}\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/api-connector', {\n  apiConnector: ':apiConnectorId',\n  create: include('create/swagger-connector', {\n    review: 'review',\n    save: 'save',\n    security: 'security',\n    upload: 'upload',\n  }),\n  list: '',\n});\n","import { include } from 'named-urls';\n\nexport default include('/extensions', {\n  extension: include(':extensionId', {\n    details: '',\n    update: 'update',\n  }),\n  import: 'import',\n  list: '',\n});\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PATCH' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept && !('Accept' in headers)) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  headers?: { [name: string]: string };\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={{\n              ...(props.headers || headers),\n            }}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Replaces the current draft to the one at the specified version\n   * @param id\n   * @param version\n   */\n  replaceDraft(id: string, version: string | number): Promise<void>;\n  /**\n   * Fetches the deployment of the given integration id at the given version\n   * @param id\n   * @param version\n   */\n  getDeployment(\n    id: string,\n    version: string | number\n  ): Promise<IntegrationDeployment>;\n\n  /**\n   * Patches an integration using the supplied attributes\n   *\n   * @param id\n   * @param options\n   */\n  setAttributes(id: string, options: any): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.getDeployment = this.getDeployment.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.replaceDraft = this.replaceDraft.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n    this.setAttributes = this.setAttributes.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async getDeployment(id: string, version: string | number) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integrations/${id}/deployments/${version}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as IntegrationDeployment;\n  }\n\n  public async setAttributes(id: string, options: any) {\n    const response = await callFetch({\n      body: options,\n      headers: this.props.headers,\n      method: 'PATCH',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async replaceDraft(id: string, version: string | number) {\n    const deployment = await this.getDeployment(id, version);\n    await this.setAttributes(id, {\n      flows: deployment.spec!.flows,\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      getDeployment: this.getDeployment,\n      importIntegration: this.importIntegration,\n      replaceDraft: this.replaceDraft,\n      saveIntegration: this.saveIntegration,\n      setAttributes: this.setAttributes,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Activity, IntegrationDeployment } from '@syndesis/models';\nimport * as React from 'react';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IIntegrationDeploymentResponse {\n  items: IntegrationDeployment[];\n  totalCount: number;\n}\n\nexport interface IActivitiesAndDeploymentsChildrenProps {\n  activities: Activity[];\n  deployments: IntegrationDeployment[];\n  fetchDeployments: () => Promise<void>;\n  fetchActivities: () => Promise<void>;\n}\n\nexport interface IWithActivitiesProps {\n  integrationId: string;\n  children(props: IActivitiesAndDeploymentsChildrenProps): any;\n}\n\nexport class WithActivities extends React.Component<IWithActivitiesProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationDeploymentResponse>\n        url={`/integrations/${this.props.integrationId}/deployments`}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read: fetchDeployments, response: deployments }) => (\n          <SyndesisFetch<Activity[]>\n            url={`/activity/integrations/${this.props.integrationId}`}\n            defaultValue={[]}\n          >\n            {({ read: fetchActivities, response: activities }) => {\n              return this.props.children({\n                activities: activities.data,\n                deployments: deployments.data.items,\n                fetchActivities,\n                fetchDeployments,\n              });\n            }}\n          </SyndesisFetch>\n        )}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IApiVersion } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithApiVersionProps {\n  children(props: IFetchState<IApiVersion>): any;\n}\n\nexport class WithApiVersion extends React.Component<IWithApiVersionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IApiVersion>\n        url={`/version`}\n        headers={{\n          Accept: 'application/json',\n        }}\n        defaultValue={{\n          'build-id': '',\n          camelkruntimeversion: '',\n          camelversion: '',\n          'commit-id': '',\n          version: '',\n        }}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public constructor(props: IWithIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  IIntegrationOverviewWithDraft,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { WithIntegration } from './WithIntegration';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithMonitoredIntegrationProps {\n  integrationId: string;\n  disableUpdates?: boolean;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IntegrationWithMonitoring>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithMonitoredIntegration extends React.Component<\n  IWithMonitoredIntegrationProps\n> {\n  public constructor(props: IWithMonitoredIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public getMonitoredIntegration(\n    integration: IIntegrationOverviewWithDraft,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      integration,\n      monitoring: response.data.find(\n        (o: IntegrationMonitoring) => o.integrationId === integration.id\n      ),\n    };\n  }\n  public render() {\n    return (\n      <WithIntegration\n        integrationId={this.props.integrationId}\n        initialValue={this.props.initialValue}\n        disableUpdates={this.props.disableUpdates}\n      >\n        {({ data: integration, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegration(\n                  integration,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegration(\n                          integration,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegration>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationMetricsProps {\n  disableUpdates?: boolean;\n  integrationId: string;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationMetrics extends React.Component<\n  IWithIntegrationMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={`/metrics/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          errors: 0, // int64\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Connection,\n  ConnectorAction,\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nTitle={t('shared:Connections')}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  location.state = location.state || JSON.parse(sessionStorage.getItem(key));\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in localStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key\n        }, null, href);\n\n        try {\n          sessionStorage.setItem(key, JSON.stringify(state));\n        } catch (e) {\n          // storage full, retry after a clean. Old history entries will be nuked, so if the user will go back pages will raise exceptions. Nothing we can do about that I guess?\n          sessionStorage.clear();\n          sessionStorage.setItem(key, JSON.stringify(state));\n        }\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  PageSection,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('apiClientConnectors:usedByOne');\n    }\n\n    return i18n.t('apiClientConnectors:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['apiClientConnectors', 'shared']}>\n                  {t => (\n                    <>\n                      <PageSection variant={'light'}>\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </PageSection>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        linkCreateApiConnector={routes.create.upload}\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n    default:\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport routes from './routes';\n\nexport class ApiClientConnectorsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.list} exact={true} component={ApiConnectorsPage} />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <>\n        <UIContext.Consumer>\n          {({ pushNotification }) => {\n            return (\n              <WithRouteData<\n                IConnectionDetailsRouteParams,\n                IConnectionDetailsRouteState\n              >>\n                {({ connectionId }, { connection }, { history, location }) => (\n                  <Translation ns={['connections', 'shared']}>\n                    {t => (\n                      <WithConnectionHelpers>\n                        {({\n                          updateConnection,\n                          saveConnection,\n                          validateName,\n                        }) => {\n                          return (\n                            <WithConnection\n                              id={connectionId}\n                              initialValue={connection}\n                              key={location.key}\n                            >\n                              {({ data, hasData, error }) => {\n                                const save = async ({\n                                  name,\n                                  description,\n                                  configuredProperties,\n                                }: {\n                                  name?: string;\n                                  description?: string;\n                                  configuredProperties?: {\n                                    [key: string]: string;\n                                  };\n                                }): Promise<boolean> => {\n                                  const updatedConnection = updateConnection(\n                                    data,\n                                    name,\n                                    description,\n                                    configuredProperties\n                                  );\n                                  try {\n                                    await saveConnection(updatedConnection);\n                                    history.push(\n                                      resolvers.connections.connection.details({\n                                        connection: updatedConnection,\n                                      })\n                                    );\n                                    return true;\n                                  } catch (error) {\n                                    pushNotification(\n                                      t('errorSavingConnection'),\n                                      'error'\n                                    );\n                                    return false;\n                                  }\n                                };\n\n                                const saveDescription = async (\n                                  description: string\n                                ): Promise<boolean> => {\n                                  this.setState({ isWorking: true });\n                                  const saved = await save({ description });\n                                  this.setState({ isWorking: false });\n                                  return saved;\n                                };\n\n                                const saveName = async (\n                                  name: string\n                                ): Promise<boolean> => {\n                                  let saved = false;\n                                  this.setState({ isWorking: true });\n                                  const validation = await doValidateName(name);\n                                  if (validation === true) {\n                                    saved = await save({ name });\n                                  } else {\n                                    pushNotification(validation, 'error');\n                                  }\n                                  this.setState({ isWorking: false });\n                                  return saved;\n                                };\n\n                                const saveConnector = async (\n                                  configuredProperties: {\n                                    [key: string]: string;\n                                  },\n                                  actions: any\n                                ): Promise<void> => {\n                                  this.setState({ isWorking: true });\n                                  await save({ configuredProperties });\n                                  actions.setSubmitting(false);\n                                  this.setState({ isWorking: false });\n                                };\n\n                                /**\n                                 * Backend validation only occurs when save has been called.\n                                 * @param proposedName the name to validate\n                                 */\n                                const doValidateName = async (\n                                  proposedName: string\n                                ): Promise<true | string> => {\n                                  // make sure name has a value\n                                  if (proposedName === '') {\n                                    return t(\n                                      'shared:requiredFieldMessage'\n                                    ) as string;\n                                  }\n\n                                  const response: IValidationResult = await validateName(\n                                    connection!,\n                                    proposedName\n                                  );\n\n                                  if (!response.isError) {\n                                    return true;\n                                  }\n\n                                  if (response.error === 'UniqueProperty') {\n                                    const msg = t('duplicateNameError');\n                                    return msg\n                                      ? msg\n                                      : 'connections:duplicateNameError';\n                                  }\n\n                                  return response.message\n                                    ? response.message\n                                    : t('errorValidatingName')\n                                    ? t('errorValidatingName')!\n                                    : 'connections:errorValidatingName'; // return missing i18n key\n                                };\n\n                                const cancelEditing = () => {\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: data,\n                                    })\n                                  );\n                                };\n\n                                const startEditing = () => {\n                                  history.push(\n                                    resolvers.connections.connection.edit({\n                                      connection: data,\n                                    })\n                                  );\n                                };\n\n                                return (\n                                  <WithLoader\n                                    error={error}\n                                    loading={!hasData}\n                                    loaderChildren={<Loader />}\n                                    errorChildren={<ApiError />}\n                                  >\n                                    {() => {\n                                      return (\n                                        <WithConnectorForm\n                                          connector={data.connector!}\n                                          initialValue={\n                                            data.configuredProperties\n                                          }\n                                          disabled={!this.props.edit}\n                                          onSave={saveConnector}\n                                        >\n                                          {({\n                                            fields,\n                                            handleSubmit,\n                                            validationResults,\n                                            dirty,\n                                            isSubmitting,\n                                            isValid,\n                                            isValidating,\n                                            validateForm,\n                                          }) => (\n                                            <>\n                                              <Breadcrumb>\n                                                <Link\n                                                  to={resolvers.dashboard.root()}\n                                                >\n                                                  {t('shared:Home')}\n                                                </Link>\n                                                <Link\n                                                  to={resolvers.connections.connections()}\n                                                >\n                                                  {t('shared:Connections')}\n                                                </Link>\n                                                <span>\n                                                  {t(\n                                                    'connectionDetailPageTitle'\n                                                  )}\n                                                </span>\n                                              </Breadcrumb>\n                                              <ConnectionDetailsHeader\n                                                allowEditing={true}\n                                                connectionDescription={\n                                                  data.description\n                                                }\n                                                connectionIcon={getConnectionIcon(\n                                                  process.env.PUBLIC_URL,\n                                                  data\n                                                )}\n                                                connectionName={data.name}\n                                                i18nDescriptionLabel={t(\n                                                  'shared:Description'\n                                                )}\n                                                i18nDescriptionPlaceholder={t(\n                                                  'descriptionPlaceholder'\n                                                )}\n                                                i18nNamePlaceholder={t(\n                                                  'namePlaceholder'\n                                                )}\n                                                i18nUsageLabel={t(\n                                                  'shared:Usage'\n                                                )}\n                                                i18nUsageMessage={this.getUsedByMessage(\n                                                  data\n                                                )}\n                                                isWorking={this.state.isWorking}\n                                                onChangeDescription={\n                                                  saveDescription\n                                                }\n                                                onChangeName={saveName}\n                                              />\n                                              <ConnectionDetailsForm\n                                                i18nCancelLabel={t(\n                                                  'shared:Cancel'\n                                                )}\n                                                i18nEditLabel={t('shared:Edit')}\n                                                i18nSaveLabel={t('shared:Save')}\n                                                i18nTitle={t(\n                                                  'detailsSectionTitle',\n                                                  {\n                                                    connectionName: data.name,\n                                                  }\n                                                )}\n                                                i18nValidateLabel={t(\n                                                  'shared:Validate'\n                                                )}\n                                                handleSubmit={handleSubmit}\n                                                isValid={!dirty || isValid}\n                                                isWorking={\n                                                  isSubmitting || isValidating\n                                                }\n                                                validationResults={\n                                                  validationResults\n                                                }\n                                                isEditing={this.props.edit}\n                                                onCancelEditing={cancelEditing}\n                                                onStartEditing={startEditing}\n                                                onValidate={validateForm}\n                                              >\n                                                {fields}\n                                              </ConnectionDetailsForm>\n                                            </>\n                                          )}\n                                        </WithConnectorForm>\n                                      );\n                                    }}\n                                  </WithLoader>\n                                );\n                              }}\n                            </WithConnection>\n                          );\n                        }}\n                      </WithConnectionHelpers>\n                    )}\n                  </Translation>\n                )}\n              </WithRouteData>\n            );\n          }}\n        </UIContext.Consumer>\n      </>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <WithConnections>\n          {({ data, hasData, error }) => (\n            <>\n              <PageTitle title={'Connections'} />\n              <ConnectionsWithToolbar\n                error={error}\n                includeConnectionMenu={true}\n                loading={!hasData}\n                connections={data.connectionsForDisplay}\n                getConnectionHref={connection =>\n                  resolvers.connection.details({ connection })\n                }\n                getConnectionEditHref={connection =>\n                  resolvers.connection.edit({ connection })\n                }\n              />\n            </>\n          )}\n        </WithConnections>\n      </>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb, PageSection } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <PageSection noPadding={true}>\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.connections()}>Connections</Link>\n            <span>Create connection</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.create.selectConnector}\n              exact={true}\n              component={create.ConnectorsPage}\n            />\n            <Route\n              path={routes.create.configureConnector}\n              exact={true}\n              component={create.ConfigurationPage}\n            />\n            <Route\n              path={routes.create.review}\n              exact={true}\n              component={create.ReviewPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      </PageSection>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import apiClientConnectors from './apiClientConnectors/routes';\nimport connections from './connections/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport extensions from './extensions/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  apiClientConnectors,\n  connections,\n  dashboard,\n  data,\n  extensions,\n  integrations,\n  settings,\n};\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { SqlClientContent, SqlClientForm } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IWithVirtualizationSqlClientFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithVirtualizationSqlClientFormProps {\n  views: ViewDefinition[];\n\n  targetVdb: string;\n\n  linkCreateView: H.LocationDescriptor;\n  linkImportViews: H.LocationDescriptor;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithVirtualizationSqlClientFormChildrenProps#form}\n   * @see [isValid]{@link IWithVirtualizationSqlClientFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithVirtualizationSqlClientFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithVirtualizationSqlClientFormChildrenProps#submitForm}\n   */\n  // tslint:disable-next-line: react-unused-props-and-state\n  children(props: IWithVirtualizationSqlClientFormChildrenProps): any;\n}\n\nexport interface IWithVirtualizationSqlClientFormState {\n  queryResults: QueryResults;\n}\n\ninterface IColumn {\n  id: string;\n  label: string;\n}\n\n/**\n * A component to generate the SqlClient page content\n */\nexport class WithVirtualizationSqlClientForm extends React.Component<\n  IWithVirtualizationSqlClientFormProps,\n  IWithVirtualizationSqlClientFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  constructor(props: IWithVirtualizationSqlClientFormProps) {\n    super(props);\n    this.state = {\n      queryResults: WithVirtualizationSqlClientForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    results && results.columns.length > 0\n      ? this.setState({\n          queryResults: results,\n        })\n      : this.setState({\n          queryResults: WithVirtualizationSqlClientForm.queryResultsEmpty,\n        });\n  }\n\n  public buildViews() {\n    const enums = [];\n    for (const view of this.props.views) {\n      enums.push({ label: view.viewName, value: view.viewName });\n    }\n    return enums;\n  }\n\n  public buildRows(queryResults: QueryResults): Array<{}> {\n    return queryResults.rows\n      .map(row => row.row)\n      .map(row =>\n        row.reduce(\n          // tslint:disable-next-line: no-shadowed-variable\n          (row, r, idx) => ({\n            ...row,\n            [this.state.queryResults.columns[idx].name]: r,\n          }),\n          {}\n        )\n      );\n  }\n\n  public buildColumns(queryResults: QueryResults): IColumn[] {\n    const columns = [];\n    for (const col of queryResults.columns) {\n      columns.push({ id: col.name, label: col.label });\n    }\n    return columns;\n  }\n\n  public getInitialView() {\n    return this.props.views.length > 0 ? this.props.views[0].viewName : '';\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      view: {\n        description: 'The View to Query',\n        displayName: 'View',\n        enum: this.buildViews(),\n        kind: 'parameter',\n        order: 1,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n      // TODO - Future add this for SQL ad-hoc queries...\n      // sqlStatement: {\n      //   componentProperty: true,\n      //   defaultValue: 'default query sql',\n      //   deprecated: false,\n      //   description: i18n.t(\n      //     'data:virtualization.viewSqlFormSqlStatementDescription'\n      //   ),\n      //   displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n      //   height: 300,\n      //   javaType: 'java.lang.String',\n      //   kind: 'property',\n      //   order: 2,\n      //   required: true,\n      //   secret: false,\n      //   type: 'textarea',\n      // },\n    } as IFormDefinition;\n\n    const initialValue = {\n      rowLimit: '15',\n      rowOffset: '0',\n      view: this.getInitialView(),\n    };\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const viewDefn = this.props.views.find(\n              view => view.viewName === value.view\n            );\n            let sqlStatement = '';\n            if (viewDefn) {\n              sqlStatement = getPreviewSql(viewDefn);\n            }\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.setQueryResults(results);\n          };\n          return (\n            <AutoForm\n              i18nRequiredProperty={'* Required field'}\n              definition={formDefinition}\n              initialValue={initialValue}\n              onSave={doSubmit}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                submitForm,\n              }) => (\n                <SqlClientContent\n                  formContent={\n                    <SqlClientForm handleSubmit={handleSubmit}>\n                      {fields}\n                    </SqlClientForm>\n                  }\n                  viewNames={this.props.views.map(\n                    (viewDefn: ViewDefinition) => viewDefn.viewName\n                  )}\n                  queryResultRows={this.buildRows(this.state.queryResults)}\n                  queryResultCols={this.buildColumns(this.state.queryResults)}\n                  targetVdb={'test'}\n                  i18nEmptyStateInfo={i18n.t(\n                    'data:virtualization.viewEmptyStateInfo'\n                  )}\n                  i18nEmptyStateTitle={i18n.t(\n                    'data:virtualization.viewEmptyStateTitle'\n                  )}\n                  i18nImportViews={i18n.t(\n                    'data:virtualization.importDataSource'\n                  )}\n                  i18nImportViewsTip={i18n.t(\n                    'data:virtualization.importDataSourceTip'\n                  )}\n                  i18nCreateView={i18n.t('data:virtualization.createView')}\n                  i18nCreateViewTip={i18n.t(\n                    'data:virtualization.createViewTip'\n                  )}\n                  linkCreateViewHRef={this.props.linkCreateView}\n                  linkImportViewsHRef={this.props.linkImportViews}\n                  i18nEmptyResultsTitle={i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                  i18nEmptyResultsMsg={i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                />\n              )}\n            </AutoForm>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, PageSection } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <PageSection variant={'light'}>\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                      </PageSection>\n                      <PageSection>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </PageSection>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <ViewHeader\n                    i18nTitle={virtualization.keng__id}\n                    i18nDescription={virtualization.tko__description}\n                  />\n                  <PageSection variant={'light'} noPadding={true}>\n                    <VirtualizationNavBar virtualization={virtualization} />\n                  </PageSection>\n                  <PageSection>\n                    <h2>Metrics are not yet implemented</h2>\n                  </PageSection>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <ViewHeader\n                    i18nTitle={virtualization.keng__id}\n                    i18nDescription={virtualization.tko__description}\n                  />\n                  <PageSection variant={'light'} noPadding={true}>\n                    <VirtualizationNavBar virtualization={virtualization} />\n                  </PageSection>\n                  <PageSection>\n                    <h2>Relationships are not yet implemented</h2>\n                  </PageSection>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  VirtualizationNavBar,\n  WithVirtualizationSqlClientForm,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualization - the virtualization being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\n/**\n * Page displays virtualization views and allows user run test queries against the views.\n */\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public handleSubmit() {\n    // TODO: finish form handling\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <ViewHeader\n                  i18nTitle={virtualization.keng__id}\n                  i18nDescription={virtualization.tko__description}\n                />\n                <PageSection variant={'light'} noPadding={true}>\n                  <VirtualizationNavBar virtualization={virtualization} />\n                </PageSection>\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <WithVirtualizationSqlClientForm\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                      linkCreateView={resolvers.data.virtualizations.create()}\n                      linkImportViews={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                    >\n                      {({ form, submitForm, isSubmitting }) => <></>}\n                    </WithVirtualizationSqlClientForm>\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <ViewHeader\n                    i18nTitle={virtualization.keng__id}\n                    i18nDescription={virtualization.tko__description}\n                  />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <PageSection\n                                        variant={'light'}\n                                        noPadding={true}\n                                      >\n                                        <VirtualizationNavBar\n                                          virtualization={virtualization}\n                                        />\n                                      </PageSection>\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <>\n        <Switch>\n          <Redirect\n            path={routes.root}\n            exact={true}\n            to={routes.virtualizations.list}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.views.importSource.root}\n            component={CreateViewsApp}\n          />\n          <Route\n            path={routes.virtualizations.create}\n            exact={true}\n            component={VirtualizationCreatePage}\n          />\n          <Route\n            path={routes.virtualizations.list}\n            exact={true}\n            component={VirtualizationsPage}\n          />\n          <Redirect\n            path={routes.virtualizations.virtualization.root}\n            exact={true}\n            to={routes.virtualizations.virtualization.views.root}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.views.root}\n            exact={true}\n            component={VirtualizationViewsPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.relationship}\n            exact={true}\n            component={VirtualizationRelationshipPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.sqlClient}\n            exact={true}\n            component={VirtualizationSqlClientPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.metrics}\n            exact={true}\n            component={VirtualizationMetricsPage}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('extensions:usedByOne');\n    }\n\n    return i18n.t('extensions:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['extensions', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['extensions', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.extensions.list()}>\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('extensions:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('extensions:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('extensions:extension.LibraryExtension');\n  }\n\n  return i18n.t('extensions:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n  PageSection,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../utils';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(resolvers.extensions.list());\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['extensions', 'shared']}>\n                        {t => (\n                          <>\n                            <Breadcrumb\n                              actions={\n                                <ButtonLink\n                                  className={'extension-import-page__action'}\n                                  href={resolvers.extensions.list()}\n                                  as={'default'}\n                                >\n                                  {t('shared:Cancel')}\n                                </ButtonLink>\n                              }\n                            >\n                              <Link to={resolvers.dashboard.root()}>\n                                {t('shared:Home')}\n                              </Link>\n                              <Link to={resolvers.extensions.list()}>\n                                {t('shared:Extensions')}\n                              </Link>\n                              <span>\n                                {t('extension.extensionImportPageTitle')}\n                              </span>\n                            </Breadcrumb>\n                            <PageSection>\n                              {this.state.loading ? <Loader /> : null}\n                              <ExtensionImportCard\n                                dndDisabled={this.state.disableDropzone}\n                                i18nAlertMessage={this.state.i18nAlertMessage}\n                                i18nDndHelpMessage={t(\n                                  'extension.importHelpMessage'\n                                )}\n                                i18nDndInstructions={t(\n                                  'extension.importDndInstructions'\n                                )}\n                                i18nDndNoFileSelectedMessage={t(\n                                  'extension.importNoFileSelectedMessage'\n                                )}\n                                i18nDndSelectedFileLabel={t(\n                                  'extension.importSelectedFileLabel'\n                                )}\n                                i18nDndUploadFailedMessage={\n                                  this.state.dndUploadFailedMessage\n                                }\n                                i18nDndUploadSuccessMessage={\n                                  this.state.dndUploadSuccessMessage\n                                }\n                                i18nImportInstructions={t(\n                                  'extension.importUpdateMessage'\n                                )}\n                                i18nTitle={t('extension.ImportExtension')}\n                                onDndUploadAccepted={onDndUploadAcceptedHandler}\n                                onDndUploadRejected={onDndUploadRejectedHandler}\n                              />\n                              {this.state.extension &&\n                              this.state.extension.id &&\n                              this.state.extension.extensionId ? (\n                                <ExtensionImportReview\n                                  actions={this.state.extension.actions.map(\n                                    (action: Action) =>\n                                      ({\n                                        description: action.description,\n                                        name: action.name,\n                                      } as IImportAction)\n                                  )}\n                                  cancelLink={resolvers.extensions.list()}\n                                  extensionDescription={\n                                    this.state.extension.description\n                                  }\n                                  extensionId={this.state.extension.extensionId}\n                                  extensionName={this.state.extension.name}\n                                  extensionUid={this.state.extension.id}\n                                  i18nActionsLabel={this.getActionsLabel()}\n                                  i18nCancel={i18n.t('shared:Cancel')}\n                                  i18nDescriptionLabel={i18n.t(\n                                    'shared:Description'\n                                  )}\n                                  i18nExtensionTypeMessage={getExtensionTypeName(\n                                    this.state.extension\n                                  )}\n                                  i18nIdLabel={i18n.t('shared:ID')}\n                                  i18nImport={i18n.t(\n                                    'customizations:extension.ImportExtension'\n                                  )}\n                                  i18nNameLabel={i18n.t('shared:Name')}\n                                  i18nTitle={i18n.t(\n                                    'customizations:extension.ImportReview'\n                                  )}\n                                  i18nTypeLabel={i18n.t('shared:Type')}\n                                  i18nActionText={this.getActionText}\n                                  onImport={handleImport}\n                                />\n                              ) : null}\n                            </PageSection>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  PageSection,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getExtensionTypeName } from '../utils';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['extensions', 'shared']}>\n                        {t => (\n                          <>\n                            <PageSection variant={'light'}>\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </PageSection>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport class ExtensionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.list} exact={true} component={ExtensionsPage} />\n        <Route\n          path={routes.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        <Route\n          path={routes.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  saveHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <>\n            <PageTitle title={'Save or add step'} />\n            <IntegrationEditorLayout\n              title={'Add to Integration'}\n              description={\n                'You can continue adding steps and connections to your integration as well.'\n              }\n              content={\n                <IntegrationEditorStepAdder\n                  steps={getSteps(integration, flowId)}\n                  addStepHref={position =>\n                    this.props.getEditAddStepHref(\n                      position,\n                      { flowId },\n                      { integration }\n                    )\n                  }\n                  configureStepHref={(position: number, step: Step) =>\n                    getStepHref(\n                      step,\n                      { flowId, position: `${position}` },\n                      { integration },\n                      this.props\n                    )\n                  }\n                />\n              }\n              cancelHref={this.props.cancelHref({ flowId }, { integration })}\n              saveHref={this.props.saveHref({ flowId }, { integration })}\n              publishHref={this.props.saveHref({ flowId }, { integration })}\n            />\n          </>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                  chooseActionHref={this.props.backHref(\n                    { actionId, flowId, step, position },\n                    {\n                      configuredProperties,\n                      connection,\n                      integration,\n                      updatedIntegration,\n                    }\n                  )}\n                >\n                  {({ form }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        title={'Configure the action'}\n                        description={\n                          'Fill in the required information for the selected action.'\n                        }\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        title={'Choose an action'}\n                        description={\n                          'Choose an action for the selected connection.'\n                        }\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction>\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorLayout, IntegrationSaveForm } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              let shouldPublish = false;\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n\n                if (shouldPublish) {\n                  alert('TODO: publish');\n                  shouldPublish = false;\n                }\n\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <>\n                      <PageTitle title={'Save the integration'} />\n                      <IntegrationEditorLayout\n                        title={'Save the integration'}\n                        description={'Update details about this integration.'}\n                        content={\n                          <IntegrationSaveForm handleSubmit={handleSubmit}>\n                            {fields}\n                          </IntegrationSaveForm>\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { flowId },\n                          { integration }\n                        )}\n                        onSave={submitForm}\n                        isSaveDisabled={dirty && !isValid}\n                        isSaveLoading={isSubmitting}\n                        onPublish={async () => {\n                          shouldPublish = true;\n                          await submitForm();\n                        }}\n                        isPublishDisabled={dirty && !isValid}\n                        isPublishLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGridCell,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../../resolvers';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                title={'Choose a connection'}\n                description={\n                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                }\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection>\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <ConnectionsGridCell key={idx}>\n                                              <ConnectionCard\n                                                name={step.name}\n                                                description={\n                                                  step.description || ''\n                                                }\n                                                icon={step.icon}\n                                                href={getStepHref(\n                                                  step,\n                                                  params,\n                                                  state,\n                                                  this.props\n                                                )}\n                                              />\n                                            </ConnectionsGridCell>\n                                          )\n                                        )}\n                                        <ConnectionsGridCell>\n                                          <ConnectionCard\n                                            name={'Create connection'}\n                                            description={''}\n                                            icon={''}\n                                            href={resolvers.connections.create.selectConnector()}\n                                          />\n                                        </ConnectionsGridCell>\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { IntegrationEditorSidebar } from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    saveHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={resolvers.create.start.selectStep}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  alt={'Step icon'}\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  alt={'Step icon'}\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Step icon'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Step icon'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <PageSection noPadding={true}>\n        <Switch>\n          {/* start step */}\n          <Route path={routes.create.start.selectStep}>\n            <EditorApp\n              selectStepPath={routes.create.start.selectStep}\n              selectStepChildren={startStepSelectConnectionPage}\n              endpointEditor={{\n                selectActionPath: routes.create.start.connection.selectAction,\n                selectActionChildren: startStepSelectActionPage,\n                configureActionPath:\n                  routes.create.start.connection.configureAction,\n                configureActionChildren: startStepConfigureActionPage,\n                describeDataPath: routes.create.start.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.start.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.start.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.start.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.start.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.start.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.start.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.start.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.start.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          {/* finish step */}\n          <Route path={routes.create.finish.selectStep}>\n            <EditorApp\n              selectStepPath={routes.create.finish.selectStep}\n              selectStepChildren={finishStepSelectConnectionPage}\n              endpointEditor={{\n                selectActionPath: routes.create.finish.connection.selectAction,\n                selectActionChildren: finishStepSelectActionPage,\n                configureActionPath:\n                  routes.create.finish.connection.configureAction,\n                configureActionChildren: finishStepConfigureActionPage,\n                describeDataPath: routes.create.finish.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.finish.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.finish.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.finish.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.finish.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.finish.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.finish.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.finish.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.finish.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          <Route\n            path={routes.create.configure.index}\n            exact={true}\n            children={addStepPage}\n          />\n\n          {/* add step */}\n          <Route path={routes.create.configure.addStep.selectStep}>\n            <EditorApp\n              selectStepPath={routes.create.configure.addStep.selectStep}\n              selectStepChildren={addStepSelectConnectionPage}\n              endpointEditor={{\n                selectActionPath:\n                  routes.create.configure.addStep.connection.selectAction,\n                selectActionChildren: addStepSelectActionPage,\n                configureActionPath:\n                  routes.create.configure.addStep.connection.configureAction,\n                configureActionChildren: addStepConfigureActionPage,\n                describeDataPath:\n                  routes.create.configure.addStep.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.configure.addStep.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.configure.addStep.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.configure.addStep.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.configure.addStep.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.configure.addStep.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.configure.addStep.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.configure.addStep.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.configure.addStep.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          {/* edit step */}\n          <Route path={routes.create.configure.editStep.selectStep}>\n            <EditorApp\n              endpointEditor={{\n                selectActionPath:\n                  routes.create.configure.editStep.connection.selectAction,\n                selectActionChildren: editStepSelectActionPage,\n                configureActionPath:\n                  routes.create.configure.editStep.connection.configureAction,\n                configureActionChildren: editStepConfigureActionPage,\n                describeDataPath:\n                  routes.create.configure.editStep.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.configure.editStep.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.configure.editStep.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.configure.editStep.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.configure.editStep.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.configure.editStep.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.configure.editStep.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.configure.editStep.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.configure.editStep.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          <Route\n            path={routes.create.configure.saveAndPublish}\n            exact={true}\n            children={saveIntegrationPage}\n          />\n        </Switch>\n      </PageSection>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { IntegrationEditorSidebar } from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    saveHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Add step'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    mode={'adding'}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Add step'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { WithActivities } from '@syndesis/api';\nimport {\n  Activity,\n  ActivityStep,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport {\n  IntegrationDetailActivity,\n  IntegrationDetailActivityItem,\n  IntegrationDetailActivityItemSteps,\n} from '@syndesis/ui';\nimport { toDurationString } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IActivityPagetableProps {\n  integrationId: string;\n  linkToOpenShiftLog: string;\n}\n\ninterface IExtendedActivity extends Activity {\n  [name: string]: any;\n}\n\ninterface IExtendedActivityStep extends ActivityStep {\n  [name: string]: any;\n}\n\ninterface IExtendedDeployment extends IntegrationDeployment {\n  [name: string]: any;\n}\n\nfunction fetchStepName(step: Step): string {\n  let stepName = 'n/a';\n\n  if (step) {\n    const { name, action } = step;\n    stepName = name || (action && action.name ? action.name : stepName);\n  }\n\n  return stepName;\n}\n\nexport class ActivityPageTable extends React.Component<\n  IActivityPagetableProps\n> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithActivities integrationId={this.props.integrationId}>\n            {({\n              activities: activitiesBase,\n              deployments: deploymentsBase,\n              fetchActivities,\n              fetchDeployments,\n            }) => {\n              const activities = activitiesBase as IExtendedActivity[];\n              const integrationDeployments = (deploymentsBase ||\n                []) as IExtendedDeployment[];\n\n              const refresh = async () => {\n                await fetchActivities();\n                await fetchDeployments();\n              };\n\n              activities.forEach((activity: IExtendedActivity) => {\n                if (activity.steps && Array.isArray(activity.steps)) {\n                  activity.steps.forEach((step: IExtendedActivityStep) => {\n                    step.name = 'n/a';\n                    step.isFailed =\n                      typeof step.failure !== 'undefined' &&\n                      step.failure.length > 0;\n\n                    const deployedIntegration = integrationDeployments.find(\n                      deployment => deployment.version === +activity.ver\n                    );\n                    if (!deployedIntegration) {\n                      return;\n                    }\n\n                    for (const integrationFlow of deployedIntegration!.spec!\n                      .flows!) {\n                      const integrationStep = integrationFlow!.steps!.find(\n                        is => is.id === step.id\n                      );\n                      if (integrationStep) {\n                        step.name = fetchStepName(integrationStep);\n                        break;\n                      }\n                    }\n\n                    const errorMessages = [\n                      null,\n                      ...step.messages!,\n                      step.failure,\n                    ].filter(messages => !!messages);\n                    step.output =\n                      errorMessages.length > 0 ? errorMessages.join('\\n') : '';\n                  });\n                }\n              });\n              const lastRefreshed = new Date().toLocaleString();\n\n              return (\n                <>\n                  <IntegrationDetailActivity\n                    i18nBtnRefresh={t('shared:Refresh')}\n                    i18nLastRefresh={t('integrations:LastRefresh', {\n                      at: lastRefreshed,\n                    })}\n                    i18nViewLogOpenShift={t(\n                      'integrations:View Log in OpenShift'\n                    )}\n                    linkToOpenShiftLog={this.props.linkToOpenShiftLog}\n                    onRefresh={refresh}\n                    children={activities.map(\n                      (activity: IExtendedActivity, activityIndex: number) => {\n                        const date = new Date(\n                          activity.at!\n                        ).toLocaleDateString();\n                        const time = new Date(\n                          activity.at!\n                        ).toLocaleTimeString();\n\n                        return (\n                          <IntegrationDetailActivityItem\n                            key={activityIndex}\n                            date={date}\n                            errorCount={activity.failed ? 1 : 0}\n                            i18nErrorsFound={t('integrations:ErrorsFound')}\n                            i18nNoErrors={t('integrations:NoErrors')}\n                            i18nNoSteps={t('integrations:NoSteps')}\n                            i18nVersion={t('shared:Version')}\n                            steps={(activity.steps || []).map(\n                              (\n                                step: IExtendedActivityStep,\n                                stepIndex: number\n                              ) => (\n                                <IntegrationDetailActivityItemSteps\n                                  key={stepIndex}\n                                  duration={toDurationString(\n                                    step.duration!,\n                                    'ns'\n                                  )}\n                                  name={step.name || ''}\n                                  output={step.output}\n                                  time={new Date(step.at!).toLocaleString()}\n                                  status={\n                                    step.isFailed\n                                      ? t('shared:Error')\n                                      : t('shared:Success')\n                                  }\n                                />\n                              )\n                            )}\n                            time={time}\n                            version={activity.ver!}\n                          />\n                        );\n                      }\n                    )}\n                  />\n                </>\n              );\n            }}\n          </WithActivities>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithMonitoredIntegration } from '@syndesis/api';\nimport { Loader } from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { ActivityPageTable } from './ActivityPageTable';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }, { history }) => {\n                    return (\n                      <>\n                        <WithMonitoredIntegration\n                          integrationId={integrationId}\n                          initialValue={integration}\n                        >\n                          {({ data, hasData, error }) => (\n                            <WithLoader\n                              error={error}\n                              loading={!hasData}\n                              loaderChildren={<Loader />}\n                              errorChildren={<ApiError />}\n                            >\n                              {() => (\n                                <WithIntegrationActions\n                                  integration={data.integration}\n                                >\n                                  {({\n                                    ciCdAction,\n                                    editAction,\n                                    deleteAction,\n                                    exportAction,\n                                    startAction,\n                                    stopAction,\n                                  }) => {\n                                    return (\n                                      <>\n                                        <PageTitle\n                                          title={t(\n                                            'integrations:detail:pageTitle'\n                                          )}\n                                        />\n                                        <IntegrationDetailHeader\n                                          data={data}\n                                          startAction={startAction}\n                                          stopAction={stopAction}\n                                          deleteAction={deleteAction}\n                                          ciCdAction={ciCdAction}\n                                          editAction={editAction}\n                                          exportAction={exportAction}\n                                          getPodLogUrl={getPodLogUrl}\n                                        />\n                                        <ActivityPageTable\n                                          integrationId={data.integration.id!}\n                                          linkToOpenShiftLog={\n                                            getPodLogUrl(data.monitoring) || ''\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithIntegrationActions>\n                              )}\n                            </WithLoader>\n                          )}\n                        </WithMonitoredIntegration>\n                      </>\n                    );\n                  }}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { IntegrationDeployment } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IMenuActions,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { IPromptActionOptions } from './WithIntegrationActions';\n\nexport interface IWithDeploymentActionsChildrenProps {\n  startDeploymentAction: IMenuActions;\n  stopDeploymentAction: IMenuActions;\n  replaceDraftAction: IMenuActions;\n}\n\nexport interface IWithDeploymentActionsProps {\n  integrationName: string;\n  integrationId: string;\n  deployment: IntegrationDeployment;\n  children: (props: IWithDeploymentActionsChildrenProps) => any;\n}\n\nexport interface IWithDeploymentActionsState {\n  showActionPromptDialog: boolean;\n  targetId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\nexport class WithDeploymentActions extends React.Component<\n  IWithDeploymentActionsProps,\n  IWithDeploymentActionsState\n> {\n  constructor(props: IWithDeploymentActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({ deployIntegration, undeployIntegration, replaceDraft }) => {\n                  const startDeploymentAction: IMenuActions = {\n                    label: t('shared:Start'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integrationId,\n                              this.props.deployment.version!,\n                              true\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:PublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishDeploymentModal',\n                          {\n                            name: this.props.integrationName,\n                            version: this.props.deployment.version!,\n                          }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishDeploymentModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopDeploymentAction: IMenuActions = {\n                    label: t('shared:Stop'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integrationId,\n                              this.props.deployment.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:UnpublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integrationName }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n\n                  const replaceDraftAction: IMenuActions = {\n                    label: t('integrations:ReplaceDraft'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:ReplacedDraftMessage'),\n                            'info'\n                          );\n                          try {\n                            await replaceDraft(\n                              this.props.integrationId,\n                              this.props.deployment.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t('integrations:ReplaceDraftFailedMessage', {\n                                error: err.errorMessage || err.message || err,\n                              }),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:ReplaceDraft'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:ReplaceDraftModalMessage',\n                          { name: this.props.integrationName }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:ReplaceDraftModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n\n                  return (\n                    <>\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        replaceDraftAction,\n                        startDeploymentAction,\n                        stopDeploymentAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  WithIntegrationHelpers,\n  WithMonitoredIntegration,\n} from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  InlineTextEdit,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  IntegrationDetailSteps,\n  WithIntegrationActions,\n} from '../../components';\nimport { WithDeploymentActions } from '../../components/WithDeploymentActions';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }) => (\n                    <WithMonitoredIntegration\n                      integrationId={integrationId}\n                      initialValue={integration}\n                    >\n                      {({ data, hasData, error }) => (\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={<Loader />}\n                          errorChildren={<ApiError />}\n                        >\n                          {() => (\n                            <WithIntegrationActions\n                              integration={data.integration}\n                            >\n                              {({\n                                ciCdAction,\n                                editAction,\n                                deleteAction,\n                                exportAction,\n                                startAction,\n                                stopAction,\n                              }) => {\n                                return (\n                                  <>\n                                    <PageTitle\n                                      title={t('integrations:detail:pageTitle')}\n                                    />\n                                    <IntegrationDetailHeader\n                                      data={data}\n                                      startAction={startAction}\n                                      stopAction={stopAction}\n                                      deleteAction={deleteAction}\n                                      ciCdAction={ciCdAction}\n                                      editAction={editAction}\n                                      exportAction={exportAction}\n                                      getPodLogUrl={getPodLogUrl}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data.integration}\n                                    />\n                                    <WithIntegrationHelpers>\n                                      {({ setAttributes }) => {\n                                        const handleChange = async (\n                                          description: string\n                                        ) => {\n                                          try {\n                                            await setAttributes(\n                                              data.integration.id!,\n                                              {\n                                                description,\n                                              }\n                                            );\n                                            return true;\n                                          } catch (err) {\n                                            return false;\n                                          }\n                                        };\n                                        return (\n                                          <IntegrationDetailDescription\n                                            description={\n                                              <InlineTextEdit\n                                                value={\n                                                  data.integration\n                                                    .description ||\n                                                  t(\n                                                    'integrations:detail:noDescription'\n                                                  )\n                                                }\n                                                allowEditing={true}\n                                                isTextArea={true}\n                                                onChange={handleChange}\n                                              />\n                                            }\n                                          />\n                                        );\n                                      }}\n                                    </WithIntegrationHelpers>\n                                    <IntegrationDetailHistoryListView\n                                      editHref={editAction.href}\n                                      editLabel={editAction.label}\n                                      hasHistory={\n                                        (data.integration.deployments || [])\n                                          .length > 0\n                                      }\n                                      isDraft={\n                                        (data.integration as IIntegrationOverviewWithDraft)\n                                          .isDraft\n                                      }\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      publishAction={startAction.onClick}\n                                      publishLabel={t('shared:Publish')}\n                                      children={(\n                                        data.integration.deployments || []\n                                      )\n                                        .sort((a, b) => {\n                                          const aVersion =\n                                            (a || {}).version || 0;\n                                          const bVersion =\n                                            (b || {}).version || 0;\n                                          return bVersion - aVersion;\n                                        })\n                                        .map((deployment, idx) => {\n                                          const updatedAt = deployment.updatedAt\n                                            ? new Date(\n                                                deployment.updatedAt!\n                                              ).toLocaleString()\n                                            : '';\n                                          return (\n                                            <WithDeploymentActions\n                                              key={deployment.id}\n                                              integrationId={\n                                                data.integration.id!\n                                              }\n                                              integrationName={\n                                                data.integration.name\n                                              }\n                                              deployment={deployment}\n                                            >\n                                              {({\n                                                startDeploymentAction,\n                                                stopDeploymentAction,\n                                                replaceDraftAction,\n                                              }) => {\n                                                const actions = [];\n                                                if (\n                                                  data.integration.version !==\n                                                  deployment.version\n                                                ) {\n                                                  actions.push(\n                                                    replaceDraftAction\n                                                  );\n                                                }\n                                                if (\n                                                  data.integration.version ===\n                                                    deployment.version &&\n                                                  data.integration\n                                                    .currentState ===\n                                                    'Published'\n                                                ) {\n                                                  actions.push(\n                                                    stopDeploymentAction\n                                                  );\n                                                } else {\n                                                  actions.push(\n                                                    startDeploymentAction\n                                                  );\n                                                }\n                                                return (\n                                                  <IntegrationDetailHistoryListViewItem\n                                                    key={deployment.id}\n                                                    actions={\n                                                      <IntegrationDetailHistoryListViewItemActions\n                                                        actions={actions}\n                                                        integrationId={\n                                                          data.integration.id!\n                                                        }\n                                                      />\n                                                    }\n                                                    currentState={\n                                                      deployment.currentState!\n                                                    }\n                                                    i18nTextLastPublished={t(\n                                                      'integrations:detail:lastPublished'\n                                                    )}\n                                                    i18nTextVersion={t(\n                                                      'shared:Version'\n                                                    )}\n                                                    updatedAt={updatedAt}\n                                                    version={deployment.version}\n                                                  />\n                                                );\n                                              }}\n                                            </WithDeploymentActions>\n                                          );\n                                        })}\n                                    />\n                                  </>\n                                );\n                              }}\n                            </WithIntegrationActions>\n                          )}\n                        </WithLoader>\n                      )}\n                    </WithMonitoredIntegration>\n                  )}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import {\n  WithIntegrationMetrics,\n  WithMonitoredIntegration,\n} from '@syndesis/api';\nimport { IntegrationDetailMetrics, Loader } from '@syndesis/ui';\nimport {\n  toDurationDifferenceString,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }) => {\n                    return (\n                      <WithMonitoredIntegration\n                        integrationId={integrationId}\n                        initialValue={integration}\n                      >\n                        {({ data, hasData, error }) => (\n                          <WithIntegrationMetrics integrationId={integrationId}>\n                            {({ data: metricsData }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={<Loader />}\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <WithIntegrationActions\n                                    integration={data.integration}\n                                  >\n                                    {({\n                                      ciCdAction,\n                                      editAction,\n                                      deleteAction,\n                                      exportAction,\n                                      startAction,\n                                      stopAction,\n                                    }) => {\n                                      return (\n                                        <>\n                                          <PageTitle\n                                            title={t(\n                                              'integrations:detail:pageTitle'\n                                            )}\n                                          />\n                                          <IntegrationDetailHeader\n                                            data={data}\n                                            startAction={startAction}\n                                            stopAction={stopAction}\n                                            deleteAction={deleteAction}\n                                            ciCdAction={ciCdAction}\n                                            editAction={editAction}\n                                            exportAction={exportAction}\n                                            getPodLogUrl={getPodLogUrl}\n                                          />\n                                          <IntegrationDetailMetrics\n                                            i18nUptime={t(\n                                              'integrations:metrics:uptime'\n                                            )}\n                                            i18nTotalMessages={t(\n                                              'integrations:metrics:totalMessages'\n                                            )}\n                                            i18nTotalErrors={t(\n                                              'integrations:metrics:totalErrors'\n                                            )}\n                                            i18nSince={t(\n                                              'integrations:metrics:since'\n                                            )}\n                                            i18nLastProcessed={t(\n                                              'integrations:metrics:lastProcessed'\n                                            )}\n                                            errors={metricsData.errors}\n                                            lastProcessed={\n                                              typeof metricsData.lastProcessed !==\n                                              'undefined'\n                                                ? new Date(\n                                                    metricsData.lastProcessed\n                                                  ).toLocaleString()\n                                                : t('shared:NA')\n                                            }\n                                            messages={metricsData.messages}\n                                            start={parseInt(\n                                              metricsData.start!,\n                                              10\n                                            )}\n                                            durationDifference={toDurationDifferenceString(\n                                              parseInt(metricsData.start!, 10)\n                                            )}\n                                          />\n                                        </>\n                                      );\n                                    }}\n                                  </WithIntegrationActions>\n                                )}\n                              </WithLoader>\n                            )}\n                          </WithIntegrationMetrics>\n                        )}\n                      </WithMonitoredIntegration>\n                    );\n                  }}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false as boolean\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nTitle={t('shared:Integrations')}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'primary'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { createBrowserHistory } from '@syndesis/history';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { Router } from 'react-router-dom';\nimport { App, IAppRoute, IAppRouteWithChildrens } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ApiClientConnectorsModule } from './modules/apiClientConnectors';\nimport { ConnectionsModule } from './modules/connections';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { ExtensionsModule } from './modules/extensions';\nimport { IntegrationsModule } from './modules/integrations';\nimport routes from './modules/routes';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router history={createBrowserHistory()}>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                label: 'Home',\n                                to: routes.dashboard.root,\n                              } as IAppRoute,\n                              {\n                                component: IntegrationsModule,\n                                label: 'Integrations',\n                                to: routes.integrations.list,\n                              } as IAppRoute,\n                              {\n                                component: ConnectionsModule,\n                                label: 'Connections',\n                                to: routes.connections.connections,\n                              } as IAppRoute,\n                              {\n                                childrens: [\n                                  {\n                                    component: ApiClientConnectorsModule,\n                                    label: 'API Client Connectors',\n                                    to: routes.apiClientConnectors.list,\n                                  } as IAppRoute,\n                                  {\n                                    component: ExtensionsModule,\n                                    label: 'Extensions',\n                                    to: routes.extensions.list,\n                                  } as IAppRoute,\n                                ],\n                                label: 'Customizations',\n                              } as IAppRouteWithChildrens,\n                              {\n                                component: DataModule,\n                                label: 'Data',\n                                to: routes.data.root,\n                              } as IAppRoute,\n                              {\n                                component: SettingsModule,\n                                label: 'Settings',\n                                to: routes.settings.root,\n                              } as IAppRoute,\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n","import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n"],"sourceRoot":""}