{"version":3,"sources":["../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithActivities.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithApiVersion.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegration.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationMetrics.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/settings/routes.ts","modules/integrations/routes.ts","modules/extensions/resolvers.ts","i18n/locales/index.ts","i18n/index.ts","../../src/DataMapperAdapter.tsx","modules/integrations/resolvers.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/shared/index.ts","modules/apiClientConnectors/resolvers.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","../../src/Shared/AboutModal.tsx","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Shared/HelpDropdown.tsx","../../src/Layout/AppLayoutContext.tsx","../../src/Layout/AppBreadcrumb.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/Details/IntegrationActions.tsx","../../src/Integration/Details/IntegrationDetailBreadcrumb.tsx","../../src/Integration/Details/IntegrationDetailDescription.tsx","../../src/Integration/Details/IntegrationDetailEditableName.tsx","../../src/Integration/Details/IntegrationDetailHistoryListView.tsx","../../src/Integration/Details/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/Details/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/models.ts","../../src/Integration/Details/IntegrationDetailInfo.tsx","../../src/Integration/Activity/IntegrationDetailActivity.tsx","../../src/Integration/Activity/IntegrationDetailActivityItem.tsx","../../src/Integration/Activity/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/Metrics/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationSaveForm.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/Details/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationEditorStepsAdderHeader.tsx","../../src/Integration/IntegrationEditorWizard.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/AboutModalContent.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/WithIntegrationActions.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailHeader.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/index.ts","modules/connections/resolvers.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","modules/apiClientConnectors/routes.ts","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/extensions/routes.ts","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","../../packages/history/esm/history.js","app/WithConfig.tsx","modules/apiClientConnectors/pages/ApiConnectorsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/apiClientConnectors/index.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/extensions/shared/ExtensionIntegrations.tsx","modules/extensions/pages/ExtensionDetailsPage.tsx","modules/extensions/utils.ts","modules/extensions/pages/ExtensionImportPage.tsx","modules/extensions/pages/ExtensionsPage.tsx","modules/extensions/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPageTable.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/components/WithDeploymentActions.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","modules/data/resolvers.ts"],"names":["ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","React","_Pact","onFulfilled","onRejected","result","state","this","s","callback","_settle","e","o","_this","value","v","pact","then","observer","_catch","body","recover","const","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","Promise","resolve","returnValue","error","reject","callFetch","ref","method","includeAccept","includeContentType","includeReferrerPolicy","fetch","url","contentType","JSON","cache","credentials","Object","assign","mode","redirect","Fetch","constructor","props","read","bind","data","initialValue","defaultValue","hasData","loading","componentDidMount","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState","equal","render","children","response","setState","_this3","baseUrl","ok","Error","statusText","indexOf","text","_response$text","json","_response$json","deepmerge","errorMessage","message","Stream","reader","getReader","textDecoder","TextDecoder","pushData","concat","onSave","cancel","componentWillUnmount","SyndesisFetch","stream","FetchOrStream","createElement","Consumer","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","addConnection","deleteIntegration","deployIntegration","exportIntegration","getDeployment","importIntegration","replaceDraft","saveIntegration","undeployIntegration","updateConnection","updateOrAddConnection","tagIntegration","getActionDescriptor","connectionId","actionId","configuredProperties","integration","connection","action","flowId","position","id","actionDescriptor","produce","draft","step","flows","map","f","Array","Set","version","_this4","deployment","file","fileName","blob","_body$blob","saveAs","isIntegrationDeployment","targetState","integrationId","environments","WithActivities","items","totalCount","deployments","activities","this$1","fetchActivities","fetchDeployments","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","event","filter","WithApiConnectors","changeFilter","change","disableUpdates","WithApiVersion","Accept","camelkruntimeversion","camelversion","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","undefined","WithEnvironments","WithEnvironmentHelpersWrapped","createEnvironment","deleteEnvironment","renameEnvironment","name","stringifyBody","newName","WithExtension","extensionId","actions","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","isDraft","WithIntegrations","WithIntegrationTags","WithMonitoredIntegration","getMonitoredIntegration","monitoring","WithMonitoredIntegrations","getMonitoredIntegrations","integrations","i","WithIntegrationMetrics","errors","lastProcessed","Date","now","messages","metricsProvider","start","WithIntegrationsMetrics","integrationDeploymentMetrics","topIntegrations","getConnectionsForDisplay","connections","c","metadata","getConnectionsWithFromAction","connector","some","getConnectionsWithToAction","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","a","getActionsWithTo","getConnectionIcon","icon","iconFile","File","URL","NEW_INTEGRATION","tags","getStep","getFlow","flow","getExtensionIcon","extension","getStepKindIcon","stepKind","getIntegrationStepIcon","stepIndex","getStepIcon","getStepsLastPosition","steps","filterStepsByPosition","atStart","atEnd","WithConnection","actionsWithFrom","actionsWithTo","WithConnectionHelpersWrapped","createConnection","deleteConnection","validateConfiguration","saveConnection","validateName","description","connectorId","values","proposedName","isError","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","connectorsForDisplay","obj","WithConnectors","WithOAuthAppHelpersWrapped","updateOAuthApp","deleteOAuthApp","app","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","nextContext","webSocket","eventSource","startConnection","onFailure","reconnectIn","setTimeout","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","addEventListener","onError","WebSocket","onmessage","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","properties","requiresOutputDataShape","type","displayName","placeholder","required","rows","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","length","toLowerCase","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","inputDataShape","outputDataShape","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","idPattern","WithVirtualizationHelpersWrapped","createVirtualization","updateViewEditorStates","deleteView","deleteViewEditorState","deleteVirtualization","publishVirtualization","queryVirtualization","refreshVirtualizationViews","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","username","keng__id","serviceVdbName","tko__description","virtualization","viewName","vdbName","editorStateId","_this2","virtualizationName","pubVirtualization","sqlQuery","rowlimit","rowOffset","queryBody","limit","offset","query","target","viewEditorStateId","viewEditorStates","_this9","WithVirtualization","virtualizationId","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","descriptor","propertyDefinitionSteps","key","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob","named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","finish","configure","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","makeResolver","routes","_ref","params","update","_ref2","makeResolverNoParams","en","appEn","it","appIt","modules","apiClientConnectors","apiClientConnectorsEn","apiClientConnectorsIt","settings","settingsEn","settingsIt","connectionsEn","connectionsIt","extensions","extensionsEn","extensionsIt","dashboard","dashboardEn","dashboardIt","dataEn","dataIt","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","iframe","messageChannel","MessageChannel","onIframeLoad","onMessages","componentWillReceiveProps","prevPayload","_","nextPayload","updateDataMapperApp","removeEventListener","messagePort","port1","contentWindow","postMessage","port2","payload","onMappings","mappings","documentId","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDescription","outputDocumentType","outputInspectionType","outputName","srcDoc","style","width","height","frameBorder","allowtransparency","extraProps","el","configureIndexMapper","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","configureSelectConnectionMapper","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_ref3","_configureSelectConne","configureConfigureActionMapper","_ref4","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","config","Helmet_default","title","WithClosedNavigation","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","args","_key","call","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","idx","stepName","stepDescription","src","process","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","IntegrationDetailNavBar","background","label","to","WithConfigurationForm","getActionSteps","getActionStep","configurationStep","definition","getActionStepDefinition","moreConfigurationSteps","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onUpdatedIntegration","setSubmitting","stop","_x","_x2","auto_form","i18nRequiredProperty","toFormDefinition","fields","handleSubmit","isSubmitting","isValid","submitForm","form","i18nSubtitle","i18nFormTitle","i18nChooseAction","i18nNext","chooseActionHref","i18nAlert","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","defaultProps","IntegrationDetailNavBar_IntegrationDetailNavBar","WithConfigurationForm_WithConfigurationForm","apiConnector","apiConnectorId","security","save","route","dashboard_resolvers","reverse","settings_resolvers","AboutModal","brandImg","isModalOpen","handleModalToggle","productName","trademark","PfAboutModal","isOpen","onClose","brandImageSrc","brandImageAlt","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","HelpDropdown","onToggle","onSelect","dropdownItems","DropdownItem","component","onClick","launchAboutModal","Fragment","Dropdown","direction","DropdownDirection","down","DropdownPosition","right","toggle","DropdownToggle","classNames","iconComponent","HelpIcon","isPlain","AppLayoutContext","AppBreadcrumb","appLayoutContext","AppTopMenu","ButtonLink","size","Link","Breadcrumb","count","Level","gutter","LevelItem","PFBreadcrumb","Children","BreadcrumbItem","isActive","Loader","inline","Spinner","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","path","pathname","escapedPath","Route","match","childLocation","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","NavExpandable","isExpanded","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","errorMsg","saving","asTextarea","onChange","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","handleConfirm","success","handleChange","isEditing","renderValue","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","followScroll","previousCount","renderRow","parent","CellMeasurer","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","PageSection","variant","TextContent","Title","headingLevel","TitleLevel","h1","Text","ProgressWithLink","currentStep","totalSteps","logUrl","i18nLogUrlText","ProgressBar","max","PfDropdownItem","superclass","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","ConnectionDetailsForm","onSubmit","validationResults","Alert","bsStyle","isWorking","i18nValidateLabel","onStartEditing","Footer","onCancelEditing","i18nSaveLabel","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","noPadding","linkToConnectionCreate","ConnectorConfigurationForm","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","i18nOverviewSectionTitle","overviewSection","i18nSupportsSectionTitle","supportsSection","i18nUsageSectionTitle","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","i18nIntegrations","linkToIntegrations","linkToIntegrationCreation","integrationBoard","i18nConnections","linkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","validationError","NoErrors","htmlFor","i18nInputLabel","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailBreadcrumb","exportHref","exportAction","exportLabel","editLabel","menuActions","homeHref","i18nHome","integrationsHref","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","states","Unpublished","IntegrationDetailHistoryListViewItem","currentState","IntegrationDetailHistoryListViewItemActions","IntegrationStatusDetail","fallbackText","i18nProgressPending","IntegrationDetailInfo","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","onRefresh","cellFormat","statusCellFormat","status","Cell","outputCellFormat","output","IntegrationDetailActivityItem","time","errorCount","i18nErrorsFound","i18nNoErrors","date","InfoItem","i18nVersion","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","IntegrationDetailMetrics","okMessagesCount","startAsHuman","toLocaleString","marginBottom","marginTop","i18nTotalErrors","i18nLastProcessed","i18nTotalMessages","i18nSince","i18nUptime","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationSaveForm","IntegrationStatus","labelType","Label","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationPublishStatus","VirtualizationPublishStatusDetail","stepText","i18nPublishInProgress","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","onExport","onPublish","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","publishingLogUrl","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishLogUrlText","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","saveHref","isSaveLoading","isSaveDisabled","isPublishLoading","isPublishDisabled","sidebar","rawObject","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onShowAboutModal","onNavToggle","breadcrumb","setHasBreadcrumb","Provider","b","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","buildId","commitId","TextList","TextListItem","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","showAboutModal","setShowAboutModal","toggleAboutModal","_useState5","_useState6","setNotifications","onRemoveNotification","n","pushNotification","msg","toConsumableArray","toString","api","removeNotificationAction","childrens","subRoute","subIndex","data-testid","minWidth","utils","reduce","flattenedRoutes","App","getPodLogUrl","linkType","namespace","podName","consoleUrl","logout","UI_UI","App_App","module","exports","p","virtualizations","relationship","sqlClient","views","importSource","selectConnection","selectViews","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","targetIntegrationId","hasTags","tagError","hasEnvironments","environmentsError","loaderChildren","errorChildren","mappedItems","stringify","WithIntegrationActions","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","editAction","startAction","_handleAction","t0","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","Integrations","mi","WithIntegrationActions_WithIntegrationActions","board","warnings","notices","detailedState","getStartIcon","getFinishIcon","IntegrationDetailHeader","breadcrumbMenuActions","integrations_shared","IntegrationDetailSteps","getSteps","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","Integrations_Integrations","IntegrationDetailHeader_IntegrationDetailHeader","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorSidebar_IntegrationEditorSidebar","selectConnector","configureConnector","getValidationState","field","FormInputComponent","ControlLabel","FieldLevelHelp","labelHint","fieldAttributes","controlHint","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","enrichAndOrderProperties","massagedValue","sanitizeValues","keys","prop","sort","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","touched","dirty","isValidating","resetForm","validateForm","toFormDefinitionProperty","controlTooltip","labelTooltip","formDefinitionProperty","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","waitTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","ConnectionCreatorBreadcrumbs","toggleActive","Connections","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","valueToLower","includes","miA","miB","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","includeHidden","WithConnectorForm","def","objectSpread","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","addLeadingSlash","charAt","stripBasename","prefix","hasBasename","substr","stripTrailingSlash","slice","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","_extends","resolvePathname","parse","sessionStorage","getItem","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","fn","notifyListeners","canUseDOM","document","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","WithConfig","_componentDidMount","configResponse","_config","DvConnectionStatus","DvConnectionSelection","ApiConnectorsPage","numUsedBy","optionalIntValue","alert","dist_api","filteredAndSorted","apiConnectors","thisApi","thatApi","getFilteredAndSortedApiConnectors","backgroundColor","filterUndefinedId","getUsedByMessage","ApiClientConnectorsModule","ConnectionDetailsPage","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","_x4","_x5","_ref12","_callee5","_context5","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","ConnectionsPage","ConfigurationPage","ConnectorsPage","ReviewPage","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","iterator","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","i18nNameFilterPlaceholder","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","sqlStatement","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","handleCreateViews","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","Redirect","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","ExtensionIntegrations_ExtensionIntegrations","lastUpdated","i18nTypeMessage","getTypeMessage","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","ExtensionsModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","ConfigureActionPage","_ref2$step","stepAsNumber","nextStepHref","postConfigureHref","SelectActionPage","selectHref","SaveIntegrationPage","shouldPublish","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","actionType","toStepKindCollection","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","integrations_components","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","fetchStepName","ActivityPageTable","activitiesBase","deploymentsBase","integrationDeployments","refresh","isFailed","failure","deployedIntegration","ver","spec","integrationStep","is","errorMessages","join","lastRefreshed","i18nBtnRefresh","at","activityIndex","toLocaleDateString","toLocaleTimeString","failed","ActivityPage","ActivityPageTable_ActivityPageTable","WithDeploymentActions","startDeploymentAction","stopDeploymentAction","replaceDraftAction","DetailsPage","i18nTextHistory","aVersion","updatedAt","WithDeploymentActions_WithDeploymentActions","i18nTextLastPublished","i18nTextVersion","MetricsPage","metricsData","ImportPage","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","Router","invariant","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","setItem","clear","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","createBrowserHistory","WithConfig_WithConfig","apiBase","apiEndpoint","datavirt","dvUrl","SYNDESIS-XSRF-TOKEN","functions","getElementById","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a5e97f54.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PATCH' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept && !('Accept' in headers)) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  headers?: { [name: string]: string };\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={{\n              ...(props.headers || headers),\n            }}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Replaces the current draft to the one at the specified version\n   * @param id\n   * @param version\n   */\n  replaceDraft(id: string, version: string | number): Promise<void>;\n  /**\n   * Fetches the deployment of the given integration id at the given version\n   * @param id\n   * @param version\n   */\n  getDeployment(\n    id: string,\n    version: string | number\n  ): Promise<IntegrationDeployment>;\n\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.getDeployment = this.getDeployment.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.replaceDraft = this.replaceDraft.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async getDeployment(id: string, version: string | number) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integrations/${id}/deployments/${version}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as IntegrationDeployment;\n  }\n\n  public async replaceDraft(id: string, version: string | number) {\n    const deployment = await this.getDeployment(id, version);\n    const response = await callFetch({\n      body: {\n        flows: deployment.spec!.flows,\n      },\n      headers: this.props.headers,\n      method: 'PATCH',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      getDeployment: this.getDeployment,\n      importIntegration: this.importIntegration,\n      replaceDraft: this.replaceDraft,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Activity, IntegrationDeployment } from '@syndesis/models';\nimport * as React from 'react';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IIntegrationDeploymentResponse {\n  items: IntegrationDeployment[];\n  totalCount: number;\n}\n\nexport interface IActivitiesAndDeploymentsChildrenProps {\n  activities: Activity[];\n  deployments: IntegrationDeployment[];\n  fetchDeployments: () => Promise<void>;\n  fetchActivities: () => Promise<void>;\n}\n\nexport interface IWithActivitiesProps {\n  integrationId: string;\n  children(props: IActivitiesAndDeploymentsChildrenProps): any;\n}\n\nexport class WithActivities extends React.Component<IWithActivitiesProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationDeploymentResponse>\n        url={`/integrations/${this.props.integrationId}/deployments`}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read: fetchDeployments, response: deployments }) => (\n          <SyndesisFetch<Activity[]>\n            url={`/activity/integrations/${this.props.integrationId}`}\n            defaultValue={[]}\n          >\n            {({ read: fetchActivities, response: activities }) => {\n              return this.props.children({\n                activities: activities.data,\n                deployments: deployments.data.items,\n                fetchActivities,\n                fetchDeployments,\n              });\n            }}\n          </SyndesisFetch>\n        )}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IApiVersion } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithApiVersionProps {\n  children(props: IFetchState<IApiVersion>): any;\n}\n\nexport class WithApiVersion extends React.Component<IWithApiVersionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IApiVersion>\n        url={`/version`}\n        headers={{\n          Accept: 'application/json',\n        }}\n        defaultValue={{\n          'build-id': '',\n          camelkruntimeversion: '',\n          camelversion: '',\n          'commit-id': '',\n          version: '',\n        }}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public constructor(props: IWithIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  IIntegrationOverviewWithDraft,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { WithIntegration } from './WithIntegration';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithMonitoredIntegrationProps {\n  integrationId: string;\n  disableUpdates?: boolean;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IntegrationWithMonitoring>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithMonitoredIntegration extends React.Component<\n  IWithMonitoredIntegrationProps\n> {\n  public constructor(props: IWithMonitoredIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public getMonitoredIntegration(\n    integration: IIntegrationOverviewWithDraft,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      integration,\n      monitoring: response.data.find(\n        (o: IntegrationMonitoring) => o.integrationId === integration.id\n      ),\n    };\n  }\n  public render() {\n    return (\n      <WithIntegration\n        integrationId={this.props.integrationId}\n        initialValue={this.props.initialValue}\n        disableUpdates={this.props.disableUpdates}\n      >\n        {({ data: integration, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegration(\n                  integration,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegration(\n                          integration,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegration>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationMetricsProps {\n  disableUpdates?: boolean;\n  integrationId: string;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationMetrics extends React.Component<\n  IWithIntegrationMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={`/metrics/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          errors: 0, // int64\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  extension: {\n    details: makeResolver<{ extension: Extension }>(\n      routes.extension.details,\n      ({ extension }) => ({\n        params: {\n          extensionId: extension.id,\n        },\n        state: {\n          extension,\n        },\n      })\n    ),\n    update: makeResolver<{ extension: Extension }>(\n      routes.extension.update,\n      ({ extension }) => ({\n        params: {\n          extensionId: extension.id,\n        },\n        state: {\n          extension,\n        },\n      })\n    ),\n  },\n  import: makeResolverNoParams(routes.import),\n  list: makeResolverNoParams(routes.list),\n};\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport apiClientConnectorsEn from '../../modules/apiClientConnectors/locales/api-client-connectors-translations.en.json';\nimport apiClientConnectorsIt from '../../modules/apiClientConnectors/locales/api-client-connectors-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport extensionsEn from '../../modules/extensions/locales/extensions-translations.en.json';\nimport extensionsIt from '../../modules/extensions/locales/extensions-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.apiClientConnectors = apiClientConnectorsEn;\nit.it.modules.apiClientConnectors = apiClientConnectorsIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// extensions\nen.en.modules.extensions = extensionsEn;\nit.it.modules.extensions = extensionsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      apiClientConnectors: en.en.modules.apiClientConnectors,\n      app: en.en.app,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      extensions: en.en.modules.extensions,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      apiClientConnectors: it.it.modules.apiClientConnectors,\n      app: it.it.app,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      extensions: it.it.modules.extensions,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'apiClientConnectors',\n    'dashboard',\n    'extensions',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models/src';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IDetailsRouteParams,\n  IDetailsRouteState,\n} from './pages/detail/interfaces';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.activity, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.details, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.metrics, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { PageSection, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <PageSection>\n    <Translation ns={['shared']}>\n      {t => (\n        <UnrecoverableError\n          i18nTitle={t('404.title')}\n          i18nInfo={t('404.info')}\n          i18nHelp={t('404.help')}\n          i18nRefreshLabel={t('404.refreshButton')}\n          i18nReportIssue={t('404.reportIssueButton')}\n        />\n      )}\n    </Translation>\n  </PageSection>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  chooseActionHref: H.LocationDescriptor;\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  i18nChooseAction={'Choose Action'}\n                  i18nNext={'Next'}\n                  isValid={isValid}\n                  submitForm={submitForm}\n                  handleSubmit={handleSubmit}\n                  chooseActionHref={this.props.chooseActionHref}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","export * from './IntegrationDetailNavBar';\nexport * from './WithConfigurationForm';\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnector: makeResolver<{ apiConnector: Connector }>(\n    routes.apiConnector,\n    ({ apiConnector }) => ({\n      params: {\n        apiConnectorId: apiConnector.id,\n      },\n      state: {\n        apiConnector,\n      },\n    })\n  ),\n  create: {\n    upload: makeResolverNoParams(routes.create.upload),\n    review: makeResolverNoParams(routes.create.review),\n    security: makeResolverNoParams(routes.create.security),\n    save: makeResolverNoParams(routes.create.save),\n  },\n  list: makeResolverNoParams(routes.list),\n};\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import apiClientConnectors from './apiClientConnectors/resolvers';\nimport connections from './connections/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport extensions from './extensions/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  apiClientConnectors,\n  connections,\n  dashboard,\n  data,\n  extensions,\n  integrations,\n  settings,\n};\n","import { AboutModal as PfAboutModal } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModal {\n  brandImg: any;\n  handleModalToggle: any;\n  isModalOpen: boolean;\n  trademark: string;\n  productName: string;\n  children: React.ReactNode;\n}\n\nexport class AboutModal extends React.Component<IAboutModal> {\n  constructor(props: IAboutModal) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      brandImg,\n      children,\n      isModalOpen,\n      handleModalToggle,\n      productName,\n      trademark,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <PfAboutModal\n          isOpen={isModalOpen}\n          onClose={handleModalToggle}\n          trademark={trademark}\n          brandImageSrc={brandImg}\n          brandImageAlt=\"Brand Image\"\n          productName={productName}\n        >\n          {children}\n        </PfAboutModal>\n      </React.Fragment>\n    );\n  }\n}\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import {\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface IHelpDropdownProps {\n  className?: string;\n  isOpen: boolean;\n  launchAboutModal: any;\n}\n\nexport interface IHelpDropdownState {\n  isOpen: boolean;\n}\n\nexport class HelpDropdown extends React.Component<\n  IHelpDropdownProps,\n  IHelpDropdownState\n> {\n  public onToggle: any;\n  public onSelect: any;\n\n  constructor(props: IHelpDropdownProps) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.onToggle = (isOpen: boolean) => {\n      this.setState({\n        isOpen,\n      });\n    };\n    this.onSelect = (event: MouseEvent) => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    };\n  }\n\n  public render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem\n        key=\"action\"\n        component=\"span\"\n        onClick={() => {\n          this.props.launchAboutModal();\n        }}\n      >\n        About\n      </DropdownItem>,\n    ];\n    return (\n      <>\n        <Dropdown\n          direction={DropdownDirection.down}\n          position={DropdownPosition.right}\n          onSelect={this.onSelect}\n          toggle={\n            <DropdownToggle\n              className={classNames('', this.props.className)}\n              iconComponent={null}\n              onToggle={this.onToggle}\n            >\n              <HelpIcon />\n            </DropdownToggle>\n          }\n          isOpen={isOpen}\n          isPlain={true}\n          dropdownItems={dropdownItems}\n        />\n      </>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IAppLayoutContext {\n  showBreadcrumb: (breadcrumb: any) => void;\n}\n\nexport const AppLayoutContextDefaultValue = {} as IAppLayoutContext;\n\nexport const AppLayoutContext = React.createContext<IAppLayoutContext>(\n  AppLayoutContextDefaultValue\n);\n","import * as React from 'react';\nimport { AppLayoutContext } from './AppLayoutContext';\n\nexport const AppBreadcrumb: React.FunctionComponent = ({ children }) => {\n  const appLayoutContext = React.useContext(AppLayoutContext);\n\n  React.useEffect(function setupElement() {\n    appLayoutContext.showBreadcrumb(children);\n\n    return function removeElement() {\n      appLayoutContext.showBreadcrumb(null);\n    };\n  }, []);\n  return null;\n};\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport {\n  Breadcrumb as PFBreadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppBreadcrumb } from './AppBreadcrumb';\n\nexport interface IBreadcrumbProps {\n  actions?: React.ReactNode;\n}\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent<IBreadcrumbProps> = ({\n  actions,\n  children,\n}) => {\n  const count = React.Children.count(children);\n  return (\n    <AppBreadcrumb>\n      <Level gutter={'md'}>\n        <LevelItem>\n          <PFBreadcrumb>\n            {React.Children.map(children, (c, idx) => (\n              <BreadcrumbItem key={idx} isActive={idx === count - 1}>\n                {c}\n              </BreadcrumbItem>\n            ))}\n          </PFBreadcrumb>\n        </LevelItem>\n        {actions && <LevelItem>{actions}</LevelItem>}\n      </Level>\n    </AppBreadcrumb>\n  );\n};\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import { NavExpandable } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return children ? (\n      <NavExpandable title={label} isActive={isActive} isExpanded={isActive}>\n        {children}\n      </NavExpandable>\n    ) : (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { PageSection } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription?: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <PageSection\n      variant={'light'}\n      className={classnames('', className)}\n      {...rest}\n    >\n      <TextContent>\n        <Title size=\"2xl\" headingLevel={TitleLevel.h1}>\n          {i18nTitle}\n        </Title>\n        {i18nDescription && <Text>{i18nDescription}</Text>}\n      </TextContent>\n    </PageSection>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader, PageSection } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <PageSection>\n        <Card>\n          <Card.Heading>\n            <Card.Title>{this.props.i18nTitle}</Card.Title>\n          </Card.Heading>\n          <Card.Body>\n            <Container>\n              <form\n                className=\"form-horizontal required-pf\"\n                role=\"form\"\n                onSubmit={this.props.handleSubmit}\n              >\n                {this.props.validationResults.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                {this.props.children}\n                {this.props.isEditing ? (\n                  <Button\n                    bsStyle=\"default\"\n                    disabled={this.props.isWorking || !this.props.isValid}\n                    onClick={this.props.onValidate}\n                  >\n                    {this.props.isWorking ? (\n                      <Loader size={'sm'} inline={true} />\n                    ) : null}\n                    {this.props.i18nValidateLabel}\n                  </Button>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </form>\n            </Container>\n          </Card.Body>\n          <Card.Footer>\n            <Button\n              bsStyle=\"default\"\n              className=\"connection-details-form__editButton\"\n              disabled={this.props.isWorking}\n              onClick={this.props.onCancelEditing}\n            >\n              {this.props.i18nCancelLabel}\n            </Button>\n            <Button\n              bsStyle=\"primary\"\n              className=\"connection-details-form__editButton\"\n              disabled={this.props.isWorking || !this.props.isValid}\n              onClick={this.props.handleSubmit}\n            >\n              {this.props.i18nSaveLabel}\n            </Button>\n          </Card.Footer>\n        </Card>\n      </PageSection>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, PageSection } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <PageSection variant={'light'}>\n        <Grid fluid={true}>\n          <Grid.Row className={'connection-details-header__row'}>\n            {this.props.connectionIcon ? (\n              <Grid.Col xs={1}>\n                <Container className=\"blank-slate-pf-icon\">\n                  <img\n                    className=\"connection-details-header__connectionIcon\"\n                    src={this.props.connectionIcon}\n                    alt={this.props.connectionName}\n                    width={46}\n                  />\n                </Container>\n              </Grid.Col>\n            ) : null}\n            <Grid.Col xs={11}>\n              <InlineTextEdit\n                className=\"connection-details-header__connectionName\"\n                value={this.props.connectionName}\n                allowEditing={this.props.allowEditing && !this.props.isWorking}\n                placeholder={this.props.i18nNamePlaceholder}\n                isTextArea={false}\n                onChange={this.props.onChangeName}\n              />\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row className={'connection-details-header__row'}>\n            <Grid.Col\n              xs={2}\n              className=\"connection-details-header__propertyLabel\"\n            >\n              {this.props.i18nDescriptionLabel}\n            </Grid.Col>\n            <Grid.Col xs={10}>\n              <InlineTextEdit\n                value={this.props.connectionDescription || ''}\n                allowEditing={this.props.allowEditing && !this.props.isWorking}\n                i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n                isTextArea={true}\n                onChange={this.props.onChangeDescription}\n              />\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col\n              xs={2}\n              className=\"connection-details-header__propertyLabel\"\n            >\n              {this.props.i18nUsageLabel}\n            </Grid.Col>\n            <Grid.Col\n              xs={10}\n              className=\"connection-details-header__propertyValue\"\n            >\n              {this.props.i18nUsageMessage}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n      </PageSection>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import {\n  PageSection,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'}>\n          <TextContent>\n            <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n              {this.props.i18nTitle}\n            </Title>\n          </TextContent>\n        </PageSection>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <ButtonLink\n                href={this.props.linkToConnectionCreate}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getCreateConnectorTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkCreateApiConnector}\n                  as={'primary'}\n                >\n                  {this.props.i18nLinkCreateApiConnector}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  Text,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <PageSection variant={'light'}>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <TextContent>\n                <Title size=\"xl\" headingLevel={TitleLevel.h1}>\n                  {this.props.extensionName}\n                </Title>\n                <Text>{this.props.i18nIdMessage}</Text>\n              </TextContent>\n            </LevelItem>\n            <LevelItem>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'primary'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.extensionUses !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </LevelItem>\n          </Level>\n        </PageSection>\n        <PageSection>\n          <Card>\n            <CardBody>\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nOverviewSectionTitle}\n              </Title>\n              {this.props.overviewSection}\n\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nSupportsSectionTitle}\n              </Title>\n              {this.props.supportsSection}\n\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nUsageSectionTitle}\n              </Title>\n              {this.props.integrationsSection}\n            </CardBody>\n          </Card>\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkImportExtension}\n                  as={'primary'}\n                >\n                  {this.props.i18nLinkImportExtension}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nIntegrations: string;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'}>\n          <TextContent>\n            <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n              {this.props.i18nTitle}\n            </Title>\n          </TextContent>\n        </PageSection>\n        <PageSection>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <Title size={'lg'}>{this.props.i18nIntegrations}</Title>\n            </LevelItem>\n            <LevelItem>\n              <Link to={this.props.linkToIntegrations}>\n                {this.props.i18nLinkToIntegrations}\n              </Link>\n              <ButtonLink\n                href={this.props.linkToIntegrationCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateIntegration}\n              </ButtonLink>\n            </LevelItem>\n          </Level>\n          <CardGrid fluid={true} matchHeight={true}>\n            <CardGrid.Row>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.integrationsOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.connectionsOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.messagesOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.uptimeOverview}\n              </CardGrid.Col>\n            </CardGrid.Row>\n          </CardGrid>\n          <Grid fluid={true}>\n            <Grid.Row>\n              <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col sm={12} md={6}>\n                {this.props.integrationBoard}\n              </Grid.Col>\n              <Grid.Col sm={12} md={6}>\n                {this.props.integrationUpdates}\n              </Grid.Col>\n            </Grid.Row>\n          </Grid>\n        </PageSection>\n\n        <PageSection>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <Title size={'lg'}>{this.props.i18nConnections}</Title>\n            </LevelItem>\n            <LevelItem>\n              <Link to={this.props.linkToConnections}>\n                {this.props.i18nLinkToConnections}\n              </Link>\n              <ButtonLink\n                href={this.props.linkToConnectionCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </LevelItem>\n          </Level>\n          <CardGrid fluid={true} matchHeight={true}>\n            <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n          </CardGrid>\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'} noPadding={true}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              {this.props.resultsCount !== 0 && (\n                <Button\n                  className=\"btn btn-primary\"\n                  onClick={this.props.onAddNew}\n                >\n                  {this.props.i18nAddNewButtonText}\n                </Button>\n              )}\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <PageSection>\n          <DndFileChooser\n            allowMultiple={true}\n            fileExtensions={'.zip'}\n            onUploadRejected={this.props.onUploadRejected}\n            disableDropzone={false}\n            onUploadAccepted={this.props.onUploadAccepted}\n            i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n            i18nInstructions={this.props.i18nInstructions}\n            i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n            i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n            i18nHelpMessage={this.props.i18nHelpMessage}\n          />\n        </PageSection>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../../Layout';\nimport { IMenuActions } from '../../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Breadcrumb\n        actions={\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        }\n      >\n        <span>\n          <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n        </span>\n        <span>\n          <Link to={this.props.integrationsHref!}>\n            {this.props.i18nIntegrations}\n          </Link>\n        </span>\n        <span>{this.props.i18nPageTitle}</span>\n      </Breadcrumb>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </PageSection>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Grid\n          fluid={true}\n          key={1}\n          className=\"integration-detail-history-list-view\"\n        >\n          {this.props.isDraft ? (\n            <Grid.Row className=\"show-grid\">\n              <Grid.Col\n                xs={2}\n                md={2}\n                className=\"integration-detail-history-list-view__description\"\n              >\n                {this.props.i18nTextDraft}:\n              </Grid.Col>\n              <Grid.Col xs={10} md={10}>\n                <ListViewItem\n                  key={1}\n                  heading={this.props.i18nTextDraft}\n                  actions={\n                    <>\n                      <ButtonLink\n                        to={this.props.publishHref}\n                        onClick={this.props.publishAction}\n                        children={this.props.publishLabel}\n                      />\n                      <ButtonLink\n                        href={this.props.editHref}\n                        children={this.props.editLabel}\n                      />\n                    </>\n                  }\n                  stacked={false}\n                />\n              </Grid.Col>\n            </Grid.Row>\n          ) : null}\n\n          {this.props.children && this.props.hasHistory ? (\n            <Grid.Row className=\"show-grid\">\n              <Grid.Col\n                xs={2}\n                md={2}\n                className=\"integration-detail-history-list-view__description\"\n              >\n                {<span>{this.props.i18nTextHistory}:</span>}\n              </Grid.Col>\n              <Grid.Col xs={10} md={10}>\n                {this.props.children ? (\n                  <ListView>{this.props.children}</ListView>\n                ) : null}\n              </Grid.Col>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </PageSection>\n    );\n  }\n}\n","import { ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: string;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nconst states = {\n  Error: <ListView.Icon type=\"pf\" name=\"error-circle-o\" />,\n  Pending: <ListView.Icon name=\"blank\" />,\n  Published: <ListView.Icon type=\"pf\" name=\"ok\" />,\n  Unpublished: <ListView.Icon name=\"blank\" />,\n};\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      return states[currentState] || null;\n    }\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <>\n            {this.props.i18nTextVersion}: {this.props.version}\n          </>\n        }\n        description={\n          <>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </>\n        }\n        additionalInfo={[]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import * as React from 'react';\nimport { IntegrationStatusDetail } from '../IntegrationStatusDetail';\nimport { IntegrationState } from '../models';\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        <>\n          {this.props.currentState === 'Pending' && (\n            <IntegrationStatusDetail\n              targetState={this.props.targetState}\n              value={this.props.monitoringValue}\n              currentStep={this.props.monitoringCurrentStep}\n              totalSteps={this.props.monitoringTotalSteps}\n              logUrl={this.props.monitoringLogUrl}\n              i18nProgressPending={this.props.i18nProgressPending}\n              i18nProgressStarting={this.props.i18nProgressStarting}\n              i18nProgressStopping={this.props.i18nProgressStopping}\n              i18nLogUrlText={this.props.i18nLogUrlText}\n            />\n          )}\n          {this.props.currentState === 'Published' && this.props.version && (\n            <>\n              <span className=\"pficon pficon-ok\" />\n              &nbsp;Published version {this.props.version}\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n  onRefresh: () => void;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            &nbsp;|&nbsp;\n            {this.props.i18nLastRefresh}\n            &nbsp;&nbsp;\n            <Button onClick={this.props.onRefresh}>\n              {this.props.i18nBtnRefresh}\n            </Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </PageSection>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationDetailActivityItem.css';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: string;\n}\n\nconst headerFormat = (value: string) => <Table.Heading>{value}</Table.Heading>;\nconst cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\nconst statusCellFormat = (status: string) => (\n  <Table.Cell>\n    {status === 'Success' ? (\n      <>\n        <Icon type=\"pf\" name=\"ok\" /> Success\n      </>\n    ) : (\n      <>\n        <Icon type=\"pf\" name=\"error-circle-o\" /> Error\n      </>\n    )}\n  </Table.Cell>\n);\nconst outputCellFormat = (output: string) => (\n  <Table.Cell>\n    <pre>{output}</pre>\n  </Table.Cell>\n);\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        className=\"integration-detail-activity-item\"\n        key={this.props.time}\n        actions={\n          <div className=\"integration-detail-activity-item__status-item\">\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </div>\n        }\n        leftContent={this.props.date}\n        heading={<></>}\n        description={this.props.time}\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.i18nVersion}\n            &nbsp;\n            {this.props.version}\n          </ListView.InfoItem>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [statusCellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [outputCellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: string;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailMetricsProps {\n  i18nLastProcessed: string;\n  i18nSince: string;\n  i18nTotalErrors: string;\n  i18nTotalMessages: string;\n  i18nUptime: string;\n  errors?: number;\n  lastProcessed?: string;\n  messages?: number;\n  start?: string;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const okMessagesCount = this.props.messages! - this.props.errors!;\n    const startAsDate = new Date(this.props.start!);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <PageSection>\n        <CardGrid fluid={true}>\n          <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <Icon type=\"pf\" name=\"error-circle-o\" />\n                  {this.props.errors}\n                </CardTitle>\n                <CardBody>{this.props.i18nTotalErrors}</CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <Icon name=\"shield\" />\n                  {this.props.i18nLastProcessed}\n                </CardTitle>\n                <CardBody>\n                  <h2>{this.props.lastProcessed}</h2>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <AggregateStatusCount>\n                    {this.props.messages}&nbsp;\n                  </AggregateStatusCount>\n                  {this.props.i18nTotalMessages}\n                </CardTitle>\n                <CardBody>\n                  <AggregateStatusNotifications>\n                    <AggregateStatusNotification>\n                      <Icon type=\"pf\" name=\"ok\" />\n                      {okMessagesCount}&nbsp;\n                    </AggregateStatusNotification>\n                    <AggregateStatusNotification>\n                      <Icon type=\"pf\" name=\"error-circle-o\" />\n                      {this.props.errors}\n                    </AggregateStatusNotification>\n                  </AggregateStatusNotifications>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <Card.Title className={'text-left'}>\n                  <small className={'pull-right'}>\n                    {this.props.i18nSince}\n                    {startAsHuman}\n                  </small>\n                  <div>{this.props.i18nUptime}</div>\n                </Card.Title>\n                <Card.Body>\n                  <></>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </CardGrid>\n      </PageSection>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { ConnectionsGrid } from '../Connection';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ConnectionsGrid>{this.props.children}</ConnectionsGrid>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n\n  i18nNext: string;\n  i18nChooseAction: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  isValid: boolean;\n  chooseActionHref: H.LocationDescriptor;\n  handleSubmit: (e?: any) => void;\n  submitForm: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n                <div className=\"card-pf-footer\">\n                  <ButtonLink href={this.props.chooseActionHref}>\n                    <i className={'fa fa-chevron-left'} />{' '}\n                    {this.props.i18nChooseAction}\n                  </ButtonLink>\n                  <ButtonLink\n                    onClick={this.props.submitForm}\n                    disabled={!this.props.isValid}\n                    as={'primary'}\n                  >\n                    {this.props.i18nNext}\n                  </ButtonLink>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationSaveFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationSaveFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationSaveFormProps#i18nSubtitle}\n */\nexport class IntegrationSaveForm extends React.Component<\n  IIntegrationSaveFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <div className={'step-icon'}>\n            <img src={this.props.icon} />\n          </div>\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={1}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded:\n      (localStorage.getItem('iec-vertical-flow-expanded') || 'y') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import { TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection variant={'light'}>\n          <TextContent>\n            <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n              {this.props.i18nTitle}\n            </Title>\n          </TextContent>\n        </PageSection>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <ButtonLink href={this.props.linkToManageCiCd}>\n                {this.props.i18nManageCiCd}\n              </ButtonLink>\n              <ButtonLink href={this.props.linkToIntegrationImport}>\n                {this.props.i18nImport}\n              </ButtonLink>\n              <ButtonLink\n                href={this.props.linkToIntegrationCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport { VirtualizationPublishStatus } from './VirtualizationPublishStatus';\nimport { VirtualizationPublishStatusDetail } from './VirtualizationPublishStatusDetail';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <PageSection variant={'light'} noPadding={true}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getImportVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <Button\n                  bsStyle=\"default\"\n                  to={this.props.i18nImport}\n                  onClick={this.handleImport}\n                >\n                  {this.props.i18nImport}\n                </Button>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.hasListData ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateVirtualizationTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                    {this.props.i18nLinkCreateVirtualization}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onPublish - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCancel - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onSave - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * using this as its `to` parameter.\n * @param isSaveLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isSaveDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onPublish?: (e: React.MouseEvent<any>) => void;\n  onSave?: (e: React.MouseEvent<any>) => void;\n  saveHref?: H.LocationDescriptor;\n  cancelHref?: H.LocationDescriptor;\n  publishHref?: H.LocationDescriptor;\n  isSaveDisabled?: boolean;\n  isSaveLoading?: boolean;\n  isPublishDisabled?: boolean;\n  isPublishLoading?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  sidebar,\n  content,\n  onPublish,\n  onCancel,\n  onSave,\n  saveHref,\n  cancelHref,\n  publishHref,\n  isSaveLoading,\n  isSaveDisabled,\n  isPublishLoading,\n  isPublishDisabled,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div className={'wizard-pf-body integration-editor-layout syn-scrollable'}>\n      <div className=\"wizard-pf-toolbar integration-editor-layout__header\">\n        <div className=\"container-fluid\">\n          <div className=\"row toolbar-pf\">\n            <div className=\"toolbar-pf-actions\">\n              <div className=\"form-group toolbar-pf-filter\">\n                <strong>\n                  <span>Integration</span>\n                </strong>\n              </div>\n              <div className=\"toolbar-pf-action-right\">\n                {(cancelHref || onCancel) && (\n                  <ButtonLink onClick={onCancel} href={cancelHref}>\n                    <i className=\"fa fa-angle-left\" /> Cancel\n                  </ButtonLink>\n                )}\n                {(saveHref || onSave) && (\n                  <ButtonLink\n                    onClick={onSave}\n                    href={saveHref}\n                    disabled={isSaveLoading || isSaveDisabled}\n                  >\n                    {isSaveLoading ? (\n                      <Loader size={'xs'} inline={true} />\n                    ) : null}\n                    Save\n                  </ButtonLink>\n                )}\n                {(publishHref || onPublish) && (\n                  <ButtonLink\n                    onClick={onPublish}\n                    href={publishHref}\n                    as={'primary'}\n                    disabled={isPublishLoading || isPublishDisabled}\n                  >\n                    Publish\n                  </ButtonLink>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport const IntegrationEditorStepsAdderHeader: React.FunctionComponent = () => (\n  <TextContent>\n    <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n      Add to Integration\n    </Title>\n    <Text>\n      You can continue adding steps and connections to your integration as well.\n    </Text>\n  </TextContent>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorWizard.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorWizardProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorWizard: React.FunctionComponent<\n  IIntegrationEditorWizardProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorWizardProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-wizard syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-wizard__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-wizard__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-wizard__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-wizard__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { HelpDropdown } from '../Shared/HelpDropdown';\nimport { AppLayoutContext } from './AppLayoutContext';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n  onShowAboutModal(): void;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  onShowAboutModal,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n\n  const [breadcrumb, setHasBreadcrumb] = React.useState(null);\n  const showBreadcrumb = (b: any) => setHasBreadcrumb(b);\n\n  return (\n    <AppLayoutContext.Provider\n      value={{\n        showBreadcrumb,\n      }}\n    >\n      <Page\n        header={\n          <PageHeader\n            logo={pictograph}\n            logoProps={{ href: logoHref }}\n            toolbar={\n              <>\n                {\n                  <HelpDropdown\n                    className=\"syn-help-dropdown\"\n                    isOpen={false}\n                    launchAboutModal={() => {\n                      onShowAboutModal();\n                    }}\n                  />\n                }\n                {appNav}\n              </>\n            }\n            showNavToggle={true}\n            isNavOpen={showNavigation}\n            onNavToggle={onNavToggle}\n          />\n        }\n        sidebar={\n          <PageSidebar\n            nav={\n              <Nav>\n                <NavList>{verticalNav}</NavList>\n              </Nav>\n            }\n            isNavOpen={showNavigation}\n          />\n        }\n        breadcrumb={breadcrumb}\n      >\n        {children}\n      </Page>\n    </AppLayoutContext.Provider>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n}) => (\n  <PageSection variant={'light'}>\n    <TextContent>\n      <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n        {i18nPageTitle}\n      </Title>\n      <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n      <Text>\n        {i18nCallbackDescription} : {callbackURI}\n      </Text>\n    </TextContent>\n  </PageSection>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <PageSection noPadding={true} variant={'light'}>\n      <ListViewToolbar {...rest} />\n    </PageSection>\n    <PageSection>{children}</PageSection>\n  </>\n);\n","import { TextContent, TextList, TextListItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModalContent {\n  version: string;\n  productName: string;\n  buildId: string;\n  commitId: string;\n}\n\nfunction AboutModalContent({\n  productName,\n  version,\n  buildId,\n  commitId,\n}: IAboutModalContent) {\n  return (\n    <TextContent>\n      <TextList component=\"dl\">\n        <TextListItem component=\"dt\">{productName}:</TextListItem>\n        <TextListItem component=\"dd\">{version}</TextListItem>\n        <TextListItem component=\"dt\">Build ID:</TextListItem>\n        <TextListItem component=\"dd\">{buildId}</TextListItem>\n        <TextListItem component=\"dt\">Commit ID:</TextListItem>\n        <TextListItem component=\"dd\">{commitId}</TextListItem>\n      </TextList>\n    </TextContent>\n  );\n}\n\nexport { AboutModalContent };\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import { WithApiVersion } from '@syndesis/api';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { AboutModal, AboutModalContent } from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute, IAppRoutes, IAppRouteWithChildrens } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoutes;\n}\n\nexport interface IAppUIState {\n  showAboutModal: boolean;\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [showAboutModal, setShowAboutModal] = useState(false);\n  const toggleAboutModal = () => {\n    setShowAboutModal(!showAboutModal);\n  };\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => {\n          const productName = 'Syndesis';\n          return (\n            <>\n              {showAboutModal && (\n                <AboutModal\n                  trademark={''}\n                  productName={productName}\n                  isModalOpen={showAboutModal}\n                  handleModalToggle={toggleAboutModal}\n                  brandImg={'https://avatars0.githubusercontent.com/u/23079786'}\n                >\n                  <WithApiVersion>\n                    {({ data }) => {\n                      const {\n                        'commit-id': commitId,\n                        'build-id': buildId,\n                        version,\n                      } = data;\n                      return (\n                        <AboutModalContent\n                          version={version}\n                          buildId={buildId}\n                          commitId={commitId}\n                          productName={productName}\n                        />\n                      );\n                    }}\n                  </WithApiVersion>\n                </AboutModal>\n              )}\n              <Notifications\n                notifications={notifications}\n                notificationTimerDelay={8000}\n                removeNotificationAction={onRemoveNotification}\n              />\n              <AppLayout\n                onShowAboutModal={toggleAboutModal}\n                appNav={\n                  <AppTopMenu username={'developer'}>\n                    <PfDropdownItem>\n                      <Link\n                        to={'/logout'}\n                        className=\"pf-c-dropdown__menu-item\"\n                        children={t('Logout')}\n                      />\n                    </PfDropdownItem>\n                  </AppTopMenu>\n                }\n                verticalNav={routes.map((route, index) =>\n                  !(route as IAppRouteWithChildrens).childrens ? (\n                    <PfVerticalNavItem\n                      exact={(route as IAppRoute).exact}\n                      label={t((route as IAppRoute).label)}\n                      to={(route as IAppRoute).to}\n                      key={index}\n                      data-testid={`navbar-link-${(route as IAppRoute).to}`}\n                    />\n                  ) : (\n                    <PfVerticalNavItem\n                      label={t(route.label)}\n                      key={index}\n                      to={'#'}\n                    >\n                      {(route as IAppRouteWithChildrens).childrens.map(\n                        (subRoute, subIndex) => (\n                          <PfVerticalNavItem\n                            exact={subRoute.exact}\n                            label={t(subRoute.label)}\n                            to={subRoute.to}\n                            key={subIndex}\n                            data-testid={`navbar-link-${subRoute.to}`}\n                          />\n                        )\n                      )}\n                    </PfVerticalNavItem>\n                  )\n                )}\n                pictograph={\n                  <img\n                    src={logo}\n                    alt=\"Syndesis\"\n                    style={{ minWidth: '164px' }}\n                  />\n                }\n                logoHref={'/'}\n                showNavigation={showNavigation}\n                onNavigationCollapse={onHideNavigation}\n                onNavigationExpand={onShowNavigation}\n              >\n                <WithRouter>\n                  {({ match }) => (\n                    <WithErrorBoundary key={match.url}>\n                      <Switch>\n                        {routes\n                          .reduce(\n                            (flattenedRoutes, route) => [\n                              ...flattenedRoutes,\n                              ...(!(route as IAppRouteWithChildrens).childrens\n                                ? [route as IAppRoute]\n                                : (route as IAppRouteWithChildrens).childrens),\n                            ],\n                            [] as IAppRoute[]\n                          )\n                          .map((route, index) => (\n                            <Route\n                              path={route.to}\n                              exact={route.exact}\n                              component={route.component}\n                              key={index}\n                            />\n                          ))}\n                        <Route component={PageNotFound} />\n                      </Switch>\n                    </WithErrorBoundary>\n                  )}\n                </WithRouter>\n              </AppLayout>\n            </>\n          );\n        }}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport type IAppRoutes = Array<IAppRoute | IAppRouteWithChildrens>;\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  label: string;\n  to: string;\n  kind: 'route';\n}\nexport interface IAppRouteWithChildrens {\n  label: string;\n  childrens: IAppRoute[];\n  kind: 'route-with-childrens';\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoutes;\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationOverview } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IWithIntegrationActionsChildrenProps {\n  ciCdAction: IIntegrationAction;\n  deleteAction: IIntegrationAction;\n  editAction: IIntegrationAction;\n  exportAction: IIntegrationAction;\n  startAction: IIntegrationAction;\n  stopAction: IIntegrationAction;\n  actions: IIntegrationAction[];\n}\n\nexport interface IWithIntegrationActionsProps {\n  integration: IntegrationOverview;\n  children: (props: IWithIntegrationActionsChildrenProps) => any;\n}\n\nexport interface IWithIntegrationActionsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\nexport interface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class WithIntegrationActions extends React.Component<\n  IWithIntegrationActionsProps,\n  IWithIntegrationActionsState\n> {\n  constructor(props: IWithIntegrationActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => {\n                  const editAction: IIntegrationAction = {\n                    href: resolvers.integration.edit.index({\n                      flowId: this.props.integration.flows![0].id!,\n                      integration: this.props.integration,\n                    }),\n                    label: 'Edit',\n                  };\n                  const startAction: IIntegrationAction = {\n                    label: 'Start',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!,\n                              false\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:PublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopAction: IIntegrationAction = {\n                    label: 'Stop',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:UnpublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const deleteAction: IIntegrationAction = {\n                    label: 'Delete',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:DeletingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deleteIntegration(this.props.integration.id!);\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:DeletingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.DANGER,\n                        promptDialogButtonText: t('shared:Delete'),\n                        promptDialogIcon: ConfirmationIconType.DANGER,\n                        promptDialogText: t(\n                          'integrations:deleteIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:deleteIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const exportAction: IIntegrationAction = {\n                    label: 'Export',\n                    onClick: () =>\n                      exportIntegration(\n                        this.props.integration.id!,\n                        `${this.props.integration.name}-export.zip`\n                      ),\n                  };\n                  const ciCdAction: IIntegrationAction = {\n                    label: 'Manage CI/CD',\n                    onClick: () => {\n                      this.promptForCiCd(this.props.integration.id!);\n                    },\n                  };\n\n                  const actions: IIntegrationAction[] = [];\n                  if (canEdit(this.props.integration)) {\n                    actions.push(editAction);\n                  }\n                  if (canActivate(this.props.integration)) {\n                    actions.push(startAction);\n                  }\n                  if (canDeactivate(this.props.integration)) {\n                    actions.push(stopAction);\n                  }\n                  actions.push(deleteAction);\n                  actions.push(exportAction);\n                  actions.push(ciCdAction);\n                  return (\n                    <>\n                      {this.state.showCiCdPromptDialog && (\n                        <TagIntegrationDialogWrapper\n                          manageCiCdHref={resolvers.manageCicd.root()}\n                          tagIntegration={tagIntegration}\n                          targetIntegrationId={this.state.targetIntegrationId!}\n                          onSave={this.closeCiCdDialog}\n                          onHide={this.closeCiCdDialog}\n                        />\n                      )}\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        actions,\n                        ciCdAction,\n                        deleteAction,\n                        editAction,\n                        exportAction,\n                        startAction,\n                        stopAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { getFinishIcon, getStartIcon } from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { WithIntegrationActions } from './WithIntegrationActions';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport class Integrations extends React.Component<IIntegrationsProps> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <IntegrationsList>\n                <WithLoader\n                  error={this.props.error}\n                  loading={this.props.loading}\n                  loaderChildren={<IntegrationsListSkeleton />}\n                  errorChildren={<ApiError />}\n                >\n                  {() =>\n                    this.props.integrations.map(\n                      (mi: IntegrationWithMonitoring) => {\n                        try {\n                          return (\n                            <WithIntegrationActions\n                              key={mi.integration.id}\n                              integration={mi.integration}\n                            >\n                              {({ actions }) => (\n                                <IntegrationsListItem\n                                  integrationName={mi.integration.name}\n                                  currentState={mi.integration!.currentState!}\n                                  targetState={mi.integration!.targetState!}\n                                  isConfigurationRequired={\n                                    !!(\n                                      mi.integration!.board!.warnings ||\n                                      mi.integration!.board!.errors ||\n                                      mi.integration!.board!.notices\n                                    )\n                                  }\n                                  monitoringValue={\n                                    mi.monitoring &&\n                                    t(\n                                      'integrations:' +\n                                        mi.monitoring.detailedState.value\n                                    )\n                                  }\n                                  monitoringCurrentStep={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.currentStep\n                                  }\n                                  monitoringTotalSteps={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.totalSteps\n                                  }\n                                  monitoringLogUrl={getPodLogUrl(mi.monitoring)}\n                                  startConnectionIcon={getStartIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  finishConnectionIcon={getFinishIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  actions={\n                                    <IntegrationActions\n                                      integrationId={mi.integration!.id!}\n                                      actions={actions}\n                                      detailsHref={resolvers.integration.details(\n                                        {\n                                          integrationId: mi.integration.id!,\n                                        }\n                                      )}\n                                    />\n                                  }\n                                  i18nConfigurationRequired={t(\n                                    'integrations:ConfigurationRequired'\n                                  )}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                  i18nProgressPending={t('shared:Pending')}\n                                  i18nProgressStarting={t(\n                                    'integrations:progressStarting'\n                                  )}\n                                  i18nProgressStopping={t(\n                                    'integrations:progressStopping'\n                                  )}\n                                  i18nLogUrlText={t('shared:viewLogs')}\n                                />\n                              )}\n                            </WithIntegrationActions>\n                          );\n                        } catch (e) {\n                          return (\n                            <IntegrationsListItemUnreadable\n                              key={mi.integration.id}\n                              integrationName={\n                                (mi && mi.integration && mi.integration.name) ||\n                                'An integration'\n                              }\n                              i18nDescription={\n                                \"Sorry, we can't display more information about this integration right now.\"\n                              }\n                              rawObject={JSON.stringify(\n                                mi.integration,\n                                null,\n                                2\n                              )}\n                            />\n                          );\n                        }\n                      }\n                    )\n                  }\n                </WithLoader>\n              </IntegrationsList>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { canActivate, canDeactivate } from '@syndesis/api';\nimport {\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport {\n  IMenuActions,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailInfo,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../shared';\n\nexport interface IIntegrationDetailHeaderProps {\n  data: IntegrationWithMonitoring;\n  startAction: IMenuActions;\n  stopAction: IMenuActions;\n  deleteAction: IMenuActions;\n  ciCdAction: IMenuActions;\n  editAction: IMenuActions;\n  exportAction: IMenuActions;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const IntegrationDetailHeader: React.FunctionComponent<\n  IIntegrationDetailHeaderProps\n> = (props: IIntegrationDetailHeaderProps) => {\n  const breadcrumbMenuActions: IMenuActions[] = [];\n  if (canActivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.startAction);\n  }\n  if (canDeactivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.stopAction);\n  }\n  breadcrumbMenuActions.push(props.deleteAction);\n  breadcrumbMenuActions.push(props.ciCdAction);\n\n  return (\n    <Translation ns={['integrations', 'shared']}>\n      {t => (\n        <>\n          <IntegrationDetailBreadcrumb\n            editHref={props.editAction.href}\n            editLabel={props.editAction.label}\n            exportAction={props.exportAction.onClick}\n            exportHref={props.exportAction.href}\n            exportLabel={props.exportAction.label}\n            homeHref={resolvers.dashboard.root()}\n            i18nHome={t('shared:Home')}\n            i18nIntegrations={t('shared:Integrations')}\n            i18nPageTitle={t('integrations:detail:pageTitle')}\n            integrationId={props.data.integration.id}\n            integrationsHref={resolvers.integrations.list()}\n            menuActions={breadcrumbMenuActions}\n          />\n\n          <PageSection variant={'light'}>\n            <IntegrationDetailInfo\n              name={props.data.integration.name}\n              version={props.data.integration.version}\n              currentState={props.data.integration.currentState!}\n              targetState={props.data.integration.targetState!}\n              monitoringValue={\n                props.data.monitoring &&\n                t('integrations:' + props.data.monitoring.detailedState.value)\n              }\n              monitoringCurrentStep={\n                props.data.monitoring &&\n                props.data.monitoring.detailedState.currentStep\n              }\n              monitoringTotalSteps={\n                props.data.monitoring &&\n                props.data.monitoring.detailedState.totalSteps\n              }\n              monitoringLogUrl={props.getPodLogUrl(props.data.monitoring)}\n              i18nProgressPending={t('shared:Pending')}\n              i18nProgressStarting={t('integrations:progressStarting')}\n              i18nProgressStopping={t('integrations:progressStopping')}\n              i18nLogUrlText={t('shared:viewLogs')}\n            />\n          </PageSection>\n          <PageSection variant={'light'} noPadding={true}>\n            <IntegrationDetailNavBar integration={props.data.integration} />\n          </PageSection>\n        </>\n      )}\n    </Translation>\n  );\n};\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <PageSection variant={'light'}>\n        <IntegrationStepsHorizontalView>\n          {steps.map((s, idx) => {\n            const isFirst = idx === 0;\n            const stepName = s.connection!\n              ? s.connection!.connector!.name\n              : s.name;\n\n            return (\n              <React.Fragment key={idx}>\n                <IntegrationStepsHorizontalItem\n                  name={stepName}\n                  icon={getIntegrationStepIcon(\n                    process.env.PUBLIC_URL,\n                    this.props.integration,\n                    flowId,\n                    idx\n                  )}\n                  isFirst={isFirst}\n                />\n              </React.Fragment>\n            );\n          })}\n        </IntegrationStepsHorizontalView>\n      </PageSection>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailHeader';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\nexport * from './WithIntegrationActions';\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/api-connector', {\n  apiConnector: ':apiConnectorId',\n  create: include('create/swagger-connector', {\n    review: 'review',\n    save: 'save',\n    security: 'security',\n    upload: 'upload',\n  }),\n  list: '',\n});\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import { include } from 'named-urls';\n\nexport default include('/extensions', {\n  extension: include(':extensionId', {\n    details: '',\n    update: 'update',\n  }),\n  import: 'import',\n  list: '',\n});\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nTitle={t('shared:Connections')}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  location.state = location.state || JSON.parse(sessionStorage.getItem(key));\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in localStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key\n        }, null, href);\n\n        try {\n          sessionStorage.setItem(key, JSON.stringify(state));\n        } catch (e) {\n          // storage full, retry after a clean. Old history entries will be nuked, so if the user will go back pages will raise exceptions. Nothing we can do about that I guess?\n          sessionStorage.clear();\n          sessionStorage.setItem(key, JSON.stringify(state));\n        }\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  PageSection,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('apiClientConnectors:usedByOne');\n    }\n\n    return i18n.t('apiClientConnectors:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['apiClientConnectors', 'shared']}>\n                  {t => (\n                    <>\n                      <PageSection variant={'light'}>\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </PageSection>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        linkCreateApiConnector={routes.create.upload}\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport routes from './routes';\n\nexport class ApiClientConnectorsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.list} exact={true} component={ApiConnectorsPage} />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <>\n        <UIContext.Consumer>\n          {({ pushNotification }) => {\n            return (\n              <WithRouteData<\n                IConnectionDetailsRouteParams,\n                IConnectionDetailsRouteState\n              >>\n                {({ connectionId }, { connection }, { history, location }) => (\n                  <Translation ns={['connections', 'shared']}>\n                    {t => (\n                      <WithConnectionHelpers>\n                        {({\n                          updateConnection,\n                          saveConnection,\n                          validateName,\n                        }) => {\n                          return (\n                            <WithConnection\n                              id={connectionId}\n                              initialValue={connection}\n                              key={location.key}\n                            >\n                              {({ data, hasData, error }) => {\n                                const save = async ({\n                                  name,\n                                  description,\n                                  configuredProperties,\n                                }: {\n                                  name?: string;\n                                  description?: string;\n                                  configuredProperties?: {\n                                    [key: string]: string;\n                                  };\n                                }): Promise<boolean> => {\n                                  const updatedConnection = updateConnection(\n                                    data,\n                                    name,\n                                    description,\n                                    configuredProperties\n                                  );\n                                  try {\n                                    await saveConnection(updatedConnection);\n                                    history.push(\n                                      resolvers.connections.connection.details({\n                                        connection: updatedConnection,\n                                      })\n                                    );\n                                    return true;\n                                  } catch (error) {\n                                    pushNotification(\n                                      t('errorSavingConnection'),\n                                      'error'\n                                    );\n                                    return false;\n                                  }\n                                };\n\n                                const saveDescription = async (\n                                  description: string\n                                ): Promise<boolean> => {\n                                  this.setState({ isWorking: true });\n                                  const saved = await save({ description });\n                                  this.setState({ isWorking: false });\n                                  return saved;\n                                };\n\n                                const saveName = async (\n                                  name: string\n                                ): Promise<boolean> => {\n                                  let saved = false;\n                                  this.setState({ isWorking: true });\n                                  const validation = await doValidateName(name);\n                                  if (validation === true) {\n                                    saved = await save({ name });\n                                  } else {\n                                    pushNotification(validation, 'error');\n                                  }\n                                  this.setState({ isWorking: false });\n                                  return saved;\n                                };\n\n                                const saveConnector = async (\n                                  configuredProperties: {\n                                    [key: string]: string;\n                                  },\n                                  actions: any\n                                ): Promise<void> => {\n                                  this.setState({ isWorking: true });\n                                  await save({ configuredProperties });\n                                  actions.setSubmitting(false);\n                                  this.setState({ isWorking: false });\n                                };\n\n                                /**\n                                 * Backend validation only occurs when save has been called.\n                                 * @param proposedName the name to validate\n                                 */\n                                const doValidateName = async (\n                                  proposedName: string\n                                ): Promise<true | string> => {\n                                  // make sure name has a value\n                                  if (proposedName === '') {\n                                    return t(\n                                      'shared:requiredFieldMessage'\n                                    ) as string;\n                                  }\n\n                                  const response: IValidationResult = await validateName(\n                                    connection!,\n                                    proposedName\n                                  );\n\n                                  if (!response.isError) {\n                                    return true;\n                                  }\n\n                                  if (response.error === 'UniqueProperty') {\n                                    const msg = t('duplicateNameError');\n                                    return msg\n                                      ? msg\n                                      : 'connections:duplicateNameError';\n                                  }\n\n                                  return response.message\n                                    ? response.message\n                                    : t('errorValidatingName')\n                                    ? t('errorValidatingName')!\n                                    : 'connections:errorValidatingName'; // return missing i18n key\n                                };\n\n                                const cancelEditing = () => {\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: data,\n                                    })\n                                  );\n                                };\n\n                                const startEditing = () => {\n                                  history.push(\n                                    resolvers.connections.connection.edit({\n                                      connection: data,\n                                    })\n                                  );\n                                };\n\n                                return (\n                                  <WithLoader\n                                    error={error}\n                                    loading={!hasData}\n                                    loaderChildren={<Loader />}\n                                    errorChildren={<ApiError />}\n                                  >\n                                    {() => {\n                                      return (\n                                        <WithConnectorForm\n                                          connector={data.connector!}\n                                          initialValue={\n                                            data.configuredProperties\n                                          }\n                                          disabled={!this.props.edit}\n                                          onSave={saveConnector}\n                                        >\n                                          {({\n                                            fields,\n                                            handleSubmit,\n                                            validationResults,\n                                            dirty,\n                                            isSubmitting,\n                                            isValid,\n                                            isValidating,\n                                            validateForm,\n                                          }) => (\n                                            <>\n                                              <Breadcrumb>\n                                                <Link\n                                                  to={resolvers.dashboard.root()}\n                                                >\n                                                  {t('shared:Home')}\n                                                </Link>\n                                                <Link\n                                                  to={resolvers.connections.connections()}\n                                                >\n                                                  {t('shared:Connections')}\n                                                </Link>\n                                                <span>\n                                                  {t(\n                                                    'connectionDetailPageTitle'\n                                                  )}\n                                                </span>\n                                              </Breadcrumb>\n                                              <ConnectionDetailsHeader\n                                                allowEditing={true}\n                                                connectionDescription={\n                                                  data.description\n                                                }\n                                                connectionIcon={getConnectionIcon(\n                                                  process.env.PUBLIC_URL,\n                                                  data\n                                                )}\n                                                connectionName={data.name}\n                                                i18nDescriptionLabel={t(\n                                                  'shared:Description'\n                                                )}\n                                                i18nDescriptionPlaceholder={t(\n                                                  'descriptionPlaceholder'\n                                                )}\n                                                i18nNamePlaceholder={t(\n                                                  'namePlaceholder'\n                                                )}\n                                                i18nUsageLabel={t(\n                                                  'shared:Usage'\n                                                )}\n                                                i18nUsageMessage={this.getUsedByMessage(\n                                                  data\n                                                )}\n                                                isWorking={this.state.isWorking}\n                                                onChangeDescription={\n                                                  saveDescription\n                                                }\n                                                onChangeName={saveName}\n                                              />\n                                              <ConnectionDetailsForm\n                                                i18nCancelLabel={t(\n                                                  'shared:Cancel'\n                                                )}\n                                                i18nEditLabel={t('shared:Edit')}\n                                                i18nSaveLabel={t('shared:Save')}\n                                                i18nTitle={t(\n                                                  'detailsSectionTitle',\n                                                  {\n                                                    connectionName: data.name,\n                                                  }\n                                                )}\n                                                i18nValidateLabel={t(\n                                                  'shared:Validate'\n                                                )}\n                                                handleSubmit={handleSubmit}\n                                                isValid={!dirty || isValid}\n                                                isWorking={\n                                                  isSubmitting || isValidating\n                                                }\n                                                validationResults={\n                                                  validationResults\n                                                }\n                                                isEditing={this.props.edit}\n                                                onCancelEditing={cancelEditing}\n                                                onStartEditing={startEditing}\n                                                onValidate={validateForm}\n                                              >\n                                                {fields}\n                                              </ConnectionDetailsForm>\n                                            </>\n                                          )}\n                                        </WithConnectorForm>\n                                      );\n                                    }}\n                                  </WithLoader>\n                                );\n                              }}\n                            </WithConnection>\n                          );\n                        }}\n                      </WithConnectionHelpers>\n                    )}\n                  </Translation>\n                )}\n              </WithRouteData>\n            );\n          }}\n        </UIContext.Consumer>\n      </>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <WithConnections>\n          {({ data, hasData, error }) => (\n            <>\n              <PageTitle title={'Connections'} />\n              <ConnectionsWithToolbar\n                error={error}\n                includeConnectionMenu={true}\n                loading={!hasData}\n                connections={data.connectionsForDisplay}\n                getConnectionHref={connection =>\n                  resolvers.connection.details({ connection })\n                }\n                getConnectionEditHref={connection =>\n                  resolvers.connection.edit({ connection })\n                }\n              />\n            </>\n          )}\n        </WithConnections>\n      </>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb, PageSection } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <PageSection noPadding={true}>\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.connections()}>Connections</Link>\n            <span>Create connection</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.create.selectConnector}\n              exact={true}\n              component={create.ConnectorsPage}\n            />\n            <Route\n              path={routes.create.configureConnector}\n              exact={true}\n              component={create.ConfigurationPage}\n            />\n            <Route\n              path={routes.create.review}\n              exact={true}\n              component={create.ReviewPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      </PageSection>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import apiClientConnectors from './apiClientConnectors/routes';\nimport connections from './connections/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport extensions from './extensions/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  apiClientConnectors,\n  connections,\n  dashboard,\n  data,\n  extensions,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <>\n        <Switch>\n          <Redirect\n            path={routes.root}\n            exact={true}\n            to={routes.virtualizations.list}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.views.importSource.root}\n            component={CreateViewsApp}\n          />\n          <Route\n            path={routes.virtualizations.create}\n            exact={true}\n            component={VirtualizationCreatePage}\n          />\n          <Route\n            path={routes.virtualizations.list}\n            exact={true}\n            component={VirtualizationsPage}\n          />\n          <Redirect\n            path={routes.virtualizations.virtualization.root}\n            exact={true}\n            to={routes.virtualizations.virtualization.views.root}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.views.root}\n            exact={true}\n            component={VirtualizationViewsPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.relationship}\n            exact={true}\n            component={VirtualizationRelationshipPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.sqlClient}\n            exact={true}\n            component={VirtualizationSqlClientPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.metrics}\n            exact={true}\n            component={VirtualizationMetricsPage}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('extensions:usedByOne');\n    }\n\n    return i18n.t('extensions:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['extensions', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['extensions', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.extensions.list()}>\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('extensions:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('extensions:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('extensions:extension.LibraryExtension');\n  }\n\n  return i18n.t('extensions:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n  PageSection,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../utils';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(resolvers.extensions.list());\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['extensions', 'shared']}>\n                        {t => (\n                          <>\n                            <Breadcrumb\n                              actions={\n                                <ButtonLink\n                                  className={'extension-import-page__action'}\n                                  href={resolvers.extensions.list()}\n                                  as={'default'}\n                                >\n                                  {t('shared:Cancel')}\n                                </ButtonLink>\n                              }\n                            >\n                              <Link to={resolvers.dashboard.root()}>\n                                {t('shared:Home')}\n                              </Link>\n                              <Link to={resolvers.extensions.list()}>\n                                {t('shared:Extensions')}\n                              </Link>\n                              <span>\n                                {t('extension.extensionImportPageTitle')}\n                              </span>\n                            </Breadcrumb>\n                            <PageSection>\n                              {this.state.loading ? <Loader /> : null}\n                              <ExtensionImportCard\n                                dndDisabled={this.state.disableDropzone}\n                                i18nAlertMessage={this.state.i18nAlertMessage}\n                                i18nDndHelpMessage={t(\n                                  'extension.importHelpMessage'\n                                )}\n                                i18nDndInstructions={t(\n                                  'extension.importDndInstructions'\n                                )}\n                                i18nDndNoFileSelectedMessage={t(\n                                  'extension.importNoFileSelectedMessage'\n                                )}\n                                i18nDndSelectedFileLabel={t(\n                                  'extension.importSelectedFileLabel'\n                                )}\n                                i18nDndUploadFailedMessage={\n                                  this.state.dndUploadFailedMessage\n                                }\n                                i18nDndUploadSuccessMessage={\n                                  this.state.dndUploadSuccessMessage\n                                }\n                                i18nImportInstructions={t(\n                                  'extension.importUpdateMessage'\n                                )}\n                                i18nTitle={t('extension.ImportExtension')}\n                                onDndUploadAccepted={onDndUploadAcceptedHandler}\n                                onDndUploadRejected={onDndUploadRejectedHandler}\n                              />\n                              {this.state.extension &&\n                              this.state.extension.id &&\n                              this.state.extension.extensionId ? (\n                                <ExtensionImportReview\n                                  actions={this.state.extension.actions.map(\n                                    (action: Action) =>\n                                      ({\n                                        description: action.description,\n                                        name: action.name,\n                                      } as IImportAction)\n                                  )}\n                                  cancelLink={resolvers.extensions.list()}\n                                  extensionDescription={\n                                    this.state.extension.description\n                                  }\n                                  extensionId={this.state.extension.extensionId}\n                                  extensionName={this.state.extension.name}\n                                  extensionUid={this.state.extension.id}\n                                  i18nActionsLabel={this.getActionsLabel()}\n                                  i18nCancel={i18n.t('shared:Cancel')}\n                                  i18nDescriptionLabel={i18n.t(\n                                    'shared:Description'\n                                  )}\n                                  i18nExtensionTypeMessage={getExtensionTypeName(\n                                    this.state.extension\n                                  )}\n                                  i18nIdLabel={i18n.t('shared:ID')}\n                                  i18nImport={i18n.t(\n                                    'customizations:extension.ImportExtension'\n                                  )}\n                                  i18nNameLabel={i18n.t('shared:Name')}\n                                  i18nTitle={i18n.t(\n                                    'customizations:extension.ImportReview'\n                                  )}\n                                  i18nTypeLabel={i18n.t('shared:Type')}\n                                  i18nActionText={this.getActionText}\n                                  onImport={handleImport}\n                                />\n                              ) : null}\n                            </PageSection>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  PageSection,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getExtensionTypeName } from '../utils';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['extensions', 'shared']}>\n                        {t => (\n                          <>\n                            <PageSection variant={'light'}>\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </PageSection>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport class ExtensionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.list} exact={true} component={ExtensionsPage} />\n        <Route\n          path={routes.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        <Route\n          path={routes.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationEditorLayout,\n  IntegrationEditorStepsAdderHeader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  saveHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <IntegrationEditorStepsAdderHeader />\n                <IntegrationEditorStepAdder\n                  steps={getSteps(integration, flowId)}\n                  addStepHref={position =>\n                    this.props.getEditAddStepHref(\n                      position,\n                      { flowId },\n                      { integration }\n                    )\n                  }\n                  configureStepHref={(position: number, step: Step) =>\n                    getStepHref(\n                      step,\n                      { flowId, position: `${position}` },\n                      { integration },\n                      this.props\n                    )\n                  }\n                />\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            saveHref={this.props.saveHref({ flowId }, { integration })}\n            publishHref={this.props.saveHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                  chooseActionHref={this.props.backHref(\n                    { actionId, flowId, step, position },\n                    {\n                      configuredProperties,\n                      connection,\n                      integration,\n                      updatedIntegration,\n                    }\n                  )}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorLayout, IntegrationSaveForm } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              let shouldPublish = false;\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n\n                if (shouldPublish) {\n                  alert('TODO: publish');\n                  shouldPublish = false;\n                }\n\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationSaveForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationSaveForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onSave={submitForm}\n                      isSaveDisabled={dirty && !isValid}\n                      isSaveLoading={isSubmitting}\n                      onPublish={async () => {\n                        shouldPublish = true;\n                        await submitForm();\n                      }}\n                      isPublishDisabled={dirty && !isValid}\n                      isPublishLoading={isSubmitting}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGridCell,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../../resolvers';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <ConnectionsGridCell key={idx}>\n                                              <ConnectionCard\n                                                name={step.name}\n                                                description={\n                                                  step.description || ''\n                                                }\n                                                icon={step.icon}\n                                                href={getStepHref(\n                                                  step,\n                                                  params,\n                                                  state,\n                                                  this.props\n                                                )}\n                                              />\n                                            </ConnectionsGridCell>\n                                          )\n                                        )}\n                                        <ConnectionsGridCell>\n                                          <ConnectionCard\n                                            name={'Create connection'}\n                                            description={''}\n                                            icon={''}\n                                            href={resolvers.connections.create.selectConnector()}\n                                          />\n                                        </ConnectionsGridCell>\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { IntegrationEditorSidebar } from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    saveHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={resolvers.create.start.selectStep}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <PageSection noPadding={true}>\n        <Switch>\n          {/* start step */}\n          <Route path={routes.create.start.selectStep}>\n            <EditorApp\n              selectStepPath={routes.create.start.selectStep}\n              selectStepChildren={startStepSelectConnectionPage}\n              endpointEditor={{\n                selectActionPath: routes.create.start.connection.selectAction,\n                selectActionChildren: startStepSelectActionPage,\n                configureActionPath:\n                  routes.create.start.connection.configureAction,\n                configureActionChildren: startStepConfigureActionPage,\n                describeDataPath: routes.create.start.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.start.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.start.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.start.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.start.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.start.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.start.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.start.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.start.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          {/* finish step */}\n          <Route path={routes.create.finish.selectStep}>\n            <EditorApp\n              selectStepPath={routes.create.finish.selectStep}\n              selectStepChildren={finishStepSelectConnectionPage}\n              endpointEditor={{\n                selectActionPath: routes.create.finish.connection.selectAction,\n                selectActionChildren: finishStepSelectActionPage,\n                configureActionPath:\n                  routes.create.finish.connection.configureAction,\n                configureActionChildren: finishStepConfigureActionPage,\n                describeDataPath: routes.create.finish.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.finish.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.finish.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.finish.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.finish.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.finish.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.finish.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.finish.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.finish.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          <Route\n            path={routes.create.configure.index}\n            exact={true}\n            children={addStepPage}\n          />\n\n          {/* add step */}\n          <Route path={routes.create.configure.addStep.selectStep}>\n            <EditorApp\n              selectStepPath={routes.create.configure.addStep.selectStep}\n              selectStepChildren={addStepSelectConnectionPage}\n              endpointEditor={{\n                selectActionPath:\n                  routes.create.configure.addStep.connection.selectAction,\n                selectActionChildren: addStepSelectActionPage,\n                configureActionPath:\n                  routes.create.configure.addStep.connection.configureAction,\n                configureActionChildren: addStepConfigureActionPage,\n                describeDataPath:\n                  routes.create.configure.addStep.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.configure.addStep.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.configure.addStep.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.configure.addStep.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.configure.addStep.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.configure.addStep.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.configure.addStep.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.configure.addStep.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.configure.addStep.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          {/* edit step */}\n          <Route path={routes.create.configure.editStep.selectStep}>\n            <EditorApp\n              endpointEditor={{\n                selectActionPath:\n                  routes.create.configure.editStep.connection.selectAction,\n                selectActionChildren: editStepSelectActionPage,\n                configureActionPath:\n                  routes.create.configure.editStep.connection.configureAction,\n                configureActionChildren: editStepConfigureActionPage,\n                describeDataPath:\n                  routes.create.configure.editStep.connection.describeData,\n                describeDataChildren: TODO,\n              }}\n              apiProvider={{\n                uploadPath: routes.create.configure.editStep.apiProvider.upload,\n                uploadChildren: <UploadPage />,\n                reviewPath: routes.create.configure.editStep.apiProvider.review,\n                reviewChildren: <ReviewPage />,\n                editPath: routes.create.configure.editStep.apiProvider.edit,\n                editChildren: <EditPage />,\n              }}\n              template={{\n                templatePath: routes.create.configure.editStep.template,\n                templateChildren: TODO,\n              }}\n              dataMapper={{\n                mapperPath: routes.create.configure.editStep.dataMapper,\n                mapperChildren: TODO,\n              }}\n              basicFilter={{\n                filterPath: routes.create.configure.editStep.basicFilter,\n                filterChildren: TODO,\n              }}\n              step={{\n                configurePath: routes.create.configure.editStep.step,\n                configureChildren: TODO,\n              }}\n              extension={{\n                configurePath: routes.create.configure.editStep.extension,\n                configureChildren: TODO,\n              }}\n            />\n          </Route>\n\n          <Route\n            path={routes.create.configure.saveAndPublish}\n            exact={true}\n            children={saveIntegrationPage}\n          />\n        </Switch>\n      </PageSection>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { IntegrationEditorSidebar } from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    saveHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    mode={'adding'}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { WithActivities } from '@syndesis/api';\nimport {\n  Activity,\n  ActivityStep,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport {\n  IntegrationDetailActivity,\n  IntegrationDetailActivityItem,\n  IntegrationDetailActivityItemSteps,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IActivityPagetableProps {\n  integrationId: string;\n  linkToOpenShiftLog: string;\n}\n\ninterface IExtendedActivity extends Activity {\n  [name: string]: any;\n}\n\ninterface IExtendedActivityStep extends ActivityStep {\n  [name: string]: any;\n}\n\ninterface IExtendedDeployment extends IntegrationDeployment {\n  [name: string]: any;\n}\n\nfunction fetchStepName(step: Step): string {\n  let stepName = 'n/a';\n\n  if (step) {\n    const { name, action } = step;\n    stepName = name || (action && action.name ? action.name : stepName);\n  }\n\n  return stepName;\n}\n\nexport class ActivityPageTable extends React.Component<\n  IActivityPagetableProps\n> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithActivities integrationId={this.props.integrationId}>\n            {({\n              activities: activitiesBase,\n              deployments: deploymentsBase,\n              fetchActivities,\n              fetchDeployments,\n            }) => {\n              const activities = activitiesBase as IExtendedActivity[];\n              const integrationDeployments = (deploymentsBase ||\n                []) as IExtendedDeployment[];\n\n              const refresh = async () => {\n                await fetchActivities();\n                await fetchDeployments();\n              };\n\n              activities.forEach((activity: IExtendedActivity) => {\n                if (activity.steps && Array.isArray(activity.steps)) {\n                  activity.steps.forEach((step: IExtendedActivityStep) => {\n                    step.name = 'n/a';\n                    step.isFailed =\n                      typeof step.failure !== 'undefined' &&\n                      step.failure.length > 0;\n\n                    const deployedIntegration = integrationDeployments.find(\n                      deployment => deployment.version === +activity.ver\n                    );\n                    if (!deployedIntegration) {\n                      return;\n                    }\n\n                    for (const integrationFlow of deployedIntegration!.spec!\n                      .flows!) {\n                      const integrationStep = integrationFlow!.steps!.find(\n                        is => is.id === step.id\n                      );\n                      if (integrationStep) {\n                        step.name = fetchStepName(integrationStep);\n                        break;\n                      }\n                    }\n\n                    const errorMessages = [\n                      null,\n                      ...step.messages!,\n                      step.failure,\n                    ].filter(messages => !!messages);\n                    step.output =\n                      errorMessages.length > 0 ? errorMessages.join('\\n') : '';\n                  });\n                }\n              });\n              const lastRefreshed = new Date().toLocaleString();\n\n              return (\n                <>\n                  <IntegrationDetailActivity\n                    i18nBtnRefresh={t('shared:Refresh')}\n                    i18nLastRefresh={t('integrations:LastRefresh', {\n                      at: lastRefreshed,\n                    })}\n                    i18nViewLogOpenShift={t(\n                      'integrations:View Log in OpenShift'\n                    )}\n                    linkToOpenShiftLog={this.props.linkToOpenShiftLog}\n                    onRefresh={refresh}\n                    children={activities.map(\n                      (activity: IExtendedActivity, activityIndex: number) => {\n                        const date = new Date(\n                          activity.at!\n                        ).toLocaleDateString();\n                        const time = new Date(\n                          activity.at!\n                        ).toLocaleTimeString();\n\n                        return (\n                          <IntegrationDetailActivityItem\n                            key={activityIndex}\n                            date={date}\n                            errorCount={activity.failed ? 1 : 0}\n                            i18nErrorsFound={t('integrations:ErrorsFound')}\n                            i18nNoErrors={t('integrations:NoErrors')}\n                            i18nNoSteps={t('integrations:NoSteps')}\n                            i18nVersion={t('shared:Version')}\n                            steps={(activity.steps || []).map(\n                              (\n                                step: IExtendedActivityStep,\n                                stepIndex: number\n                              ) => (\n                                <IntegrationDetailActivityItemSteps\n                                  key={stepIndex}\n                                  duration={t('shared:DurationMillis', {\n                                    duration: (step.duration || 0) / 1000000,\n                                  })}\n                                  name={step.name || ''}\n                                  output={step.output}\n                                  time={new Date(step.at!).toLocaleString()}\n                                  status={\n                                    step.isFailed\n                                      ? t('shared:Error')\n                                      : t('shared:Success')\n                                  }\n                                />\n                              )\n                            )}\n                            time={time}\n                            version={activity.ver!}\n                          />\n                        );\n                      }\n                    )}\n                  />\n                </>\n              );\n            }}\n          </WithActivities>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithMonitoredIntegration } from '@syndesis/api';\nimport { Loader } from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { ActivityPageTable } from './ActivityPageTable';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }, { history }) => {\n                    return (\n                      <>\n                        <WithMonitoredIntegration\n                          integrationId={integrationId}\n                          initialValue={integration}\n                        >\n                          {({ data, hasData, error }) => (\n                            <WithLoader\n                              error={error}\n                              loading={!hasData}\n                              loaderChildren={<Loader />}\n                              errorChildren={<ApiError />}\n                            >\n                              {() => (\n                                <WithIntegrationActions\n                                  integration={data.integration}\n                                >\n                                  {({\n                                    ciCdAction,\n                                    editAction,\n                                    deleteAction,\n                                    exportAction,\n                                    startAction,\n                                    stopAction,\n                                  }) => {\n                                    return (\n                                      <>\n                                        <PageTitle\n                                          title={t(\n                                            'integrations:detail:pageTitle'\n                                          )}\n                                        />\n                                        <IntegrationDetailHeader\n                                          data={data}\n                                          startAction={startAction}\n                                          stopAction={stopAction}\n                                          deleteAction={deleteAction}\n                                          ciCdAction={ciCdAction}\n                                          editAction={editAction}\n                                          exportAction={exportAction}\n                                          getPodLogUrl={getPodLogUrl}\n                                        />\n                                        <ActivityPageTable\n                                          integrationId={data.integration.id!}\n                                          linkToOpenShiftLog={\n                                            getPodLogUrl(data.monitoring) || ''\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithIntegrationActions>\n                              )}\n                            </WithLoader>\n                          )}\n                        </WithMonitoredIntegration>\n                      </>\n                    );\n                  }}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { IntegrationDeployment } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IMenuActions,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { IPromptActionOptions } from './WithIntegrationActions';\n\nexport interface IWithDeploymentActionsChildrenProps {\n  startDeploymentAction: IMenuActions;\n  stopDeploymentAction: IMenuActions;\n  replaceDraftAction: IMenuActions;\n}\n\nexport interface IWithDeploymentActionsProps {\n  integrationName: string;\n  integrationId: string;\n  deployment: IntegrationDeployment;\n  children: (props: IWithDeploymentActionsChildrenProps) => any;\n}\n\nexport interface IWithDeploymentActionsState {\n  showActionPromptDialog: boolean;\n  targetId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\nexport class WithDeploymentActions extends React.Component<\n  IWithDeploymentActionsProps,\n  IWithDeploymentActionsState\n> {\n  constructor(props: IWithDeploymentActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({ deployIntegration, undeployIntegration, replaceDraft }) => {\n                  const startDeploymentAction: IMenuActions = {\n                    label: t('shared:Start'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integrationId,\n                              this.props.deployment.version!,\n                              true\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:PublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishDeploymentModal',\n                          {\n                            name: this.props.integrationName,\n                            version: this.props.deployment.version!,\n                          }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishDeploymentModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopDeploymentAction: IMenuActions = {\n                    label: t('shared:Stop'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integrationId,\n                              this.props.deployment.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:UnpublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integrationName }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n\n                  const replaceDraftAction: IMenuActions = {\n                    label: t('integrations:ReplaceDraft'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:ReplacedDraftMessage'),\n                            'info'\n                          );\n                          try {\n                            await replaceDraft(\n                              this.props.integrationId,\n                              this.props.deployment.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t('integrations:ReplaceDraftFailedMessage', {\n                                error: err.errorMessage || err.message || err,\n                              }),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:ReplaceDraft'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:ReplaceDraftModalMessage',\n                          { name: this.props.integrationName }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:ReplaceDraftModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n\n                  return (\n                    <>\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        replaceDraftAction,\n                        startDeploymentAction,\n                        stopDeploymentAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithMonitoredIntegration } from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  IntegrationDetailSteps,\n  WithIntegrationActions,\n} from '../../components';\nimport { WithDeploymentActions } from '../../components/WithDeploymentActions';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }) => (\n                    <WithMonitoredIntegration\n                      integrationId={integrationId}\n                      initialValue={integration}\n                    >\n                      {({ data, hasData, error }) => (\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={<Loader />}\n                          errorChildren={<ApiError />}\n                        >\n                          {() => (\n                            <WithIntegrationActions\n                              integration={data.integration}\n                            >\n                              {({\n                                ciCdAction,\n                                editAction,\n                                deleteAction,\n                                exportAction,\n                                startAction,\n                                stopAction,\n                              }) => {\n                                return (\n                                  <>\n                                    <PageTitle\n                                      title={t('integrations:detail:pageTitle')}\n                                    />\n                                    <IntegrationDetailHeader\n                                      data={data}\n                                      startAction={startAction}\n                                      stopAction={stopAction}\n                                      deleteAction={deleteAction}\n                                      ciCdAction={ciCdAction}\n                                      editAction={editAction}\n                                      exportAction={exportAction}\n                                      getPodLogUrl={getPodLogUrl}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data.integration}\n                                    />\n                                    <IntegrationDetailDescription\n                                      description={data.integration.description}\n                                      i18nNoDescription={t(\n                                        'integrations:detail:noDescription'\n                                      )}\n                                    />\n                                    <IntegrationDetailHistoryListView\n                                      editHref={editAction.href}\n                                      editLabel={editAction.label}\n                                      hasHistory={\n                                        (data.integration.deployments || [])\n                                          .length > 0\n                                      }\n                                      isDraft={\n                                        (data.integration as IIntegrationOverviewWithDraft)\n                                          .isDraft\n                                      }\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      publishAction={startAction.onClick}\n                                      publishLabel={t('shared:Publish')}\n                                      children={(\n                                        data.integration.deployments || []\n                                      )\n                                        .sort((a, b) => {\n                                          const aVersion =\n                                            (a || {}).version || 0;\n                                          const bVersion =\n                                            (b || {}).version || 0;\n                                          return bVersion - aVersion;\n                                        })\n                                        .map((deployment, idx) => {\n                                          const updatedAt = deployment.updatedAt\n                                            ? new Date(\n                                                deployment.updatedAt!\n                                              ).toLocaleString()\n                                            : '';\n                                          return (\n                                            <WithDeploymentActions\n                                              key={deployment.id}\n                                              integrationId={\n                                                data.integration.id!\n                                              }\n                                              integrationName={\n                                                data.integration.name\n                                              }\n                                              deployment={deployment}\n                                            >\n                                              {({\n                                                startDeploymentAction,\n                                                stopDeploymentAction,\n                                                replaceDraftAction,\n                                              }) => {\n                                                const actions = [];\n                                                if (\n                                                  data.integration.version !==\n                                                  deployment.version\n                                                ) {\n                                                  actions.push(\n                                                    replaceDraftAction\n                                                  );\n                                                }\n                                                if (\n                                                  data.integration.version ===\n                                                    deployment.version &&\n                                                  data.integration\n                                                    .currentState ===\n                                                    'Published'\n                                                ) {\n                                                  actions.push(\n                                                    stopDeploymentAction\n                                                  );\n                                                } else {\n                                                  actions.push(\n                                                    startDeploymentAction\n                                                  );\n                                                }\n                                                return (\n                                                  <IntegrationDetailHistoryListViewItem\n                                                    key={deployment.id}\n                                                    actions={\n                                                      <IntegrationDetailHistoryListViewItemActions\n                                                        actions={actions}\n                                                        integrationId={\n                                                          data.integration.id!\n                                                        }\n                                                      />\n                                                    }\n                                                    currentState={\n                                                      deployment.currentState!\n                                                    }\n                                                    i18nTextLastPublished={t(\n                                                      'integrations:detail:lastPublished'\n                                                    )}\n                                                    i18nTextVersion={t(\n                                                      'shared:Version'\n                                                    )}\n                                                    updatedAt={updatedAt}\n                                                    version={deployment.version}\n                                                  />\n                                                );\n                                              }}\n                                            </WithDeploymentActions>\n                                          );\n                                        })}\n                                    />\n                                  </>\n                                );\n                              }}\n                            </WithIntegrationActions>\n                          )}\n                        </WithLoader>\n                      )}\n                    </WithMonitoredIntegration>\n                  )}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import {\n  WithIntegrationMetrics,\n  WithMonitoredIntegration,\n} from '@syndesis/api';\nimport { IntegrationDetailMetrics, Loader } from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }) => {\n                    return (\n                      <WithMonitoredIntegration\n                        integrationId={integrationId}\n                        initialValue={integration}\n                      >\n                        {({ data, hasData, error }) => (\n                          <WithIntegrationMetrics integrationId={integrationId}>\n                            {({ data: metricsData }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={<Loader />}\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <WithIntegrationActions\n                                    integration={data.integration}\n                                  >\n                                    {({\n                                      ciCdAction,\n                                      editAction,\n                                      deleteAction,\n                                      exportAction,\n                                      startAction,\n                                      stopAction,\n                                    }) => {\n                                      return (\n                                        <>\n                                          <PageTitle\n                                            title={t(\n                                              'integrations:detail:pageTitle'\n                                            )}\n                                          />\n                                          <IntegrationDetailHeader\n                                            data={data}\n                                            startAction={startAction}\n                                            stopAction={stopAction}\n                                            deleteAction={deleteAction}\n                                            ciCdAction={ciCdAction}\n                                            editAction={editAction}\n                                            exportAction={exportAction}\n                                            getPodLogUrl={getPodLogUrl}\n                                          />\n                                          <IntegrationDetailMetrics\n                                            i18nUptime={t(\n                                              'integrations:metrics:uptime'\n                                            )}\n                                            i18nTotalMessages={t(\n                                              'integrations:metrics:totalMessages'\n                                            )}\n                                            i18nTotalErrors={t(\n                                              'integrations:metrics:totalErrors'\n                                            )}\n                                            i18nSince={t(\n                                              'integrations:metrics:since'\n                                            )}\n                                            i18nLastProcessed={t(\n                                              'integrations:metrics:lastProcessed'\n                                            )}\n                                            errors={metricsData.errors}\n                                            lastProcessed={\n                                              metricsData.lastProcessed\n                                            }\n                                            messages={metricsData.messages}\n                                            start={metricsData.start}\n                                          />\n                                        </>\n                                      );\n                                    }}\n                                  </WithIntegrationActions>\n                                )}\n                              </WithLoader>\n                            )}\n                          </WithIntegrationMetrics>\n                        )}\n                      </WithMonitoredIntegration>\n                    );\n                  }}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nTitle={t('shared:Integrations')}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'primary'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { createBrowserHistory } from '@syndesis/history';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { Router } from 'react-router-dom';\nimport { App, IAppRoute, IAppRouteWithChildrens } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ApiClientConnectorsModule } from './modules/apiClientConnectors';\nimport { ConnectionsModule } from './modules/connections';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { ExtensionsModule } from './modules/extensions';\nimport { IntegrationsModule } from './modules/integrations';\nimport routes from './modules/routes';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router history={createBrowserHistory()}>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                label: 'Home',\n                                to: routes.dashboard.root,\n                              } as IAppRoute,\n                              {\n                                component: IntegrationsModule,\n                                label: 'Integrations',\n                                to: routes.integrations.list,\n                              } as IAppRoute,\n                              {\n                                component: ConnectionsModule,\n                                label: 'Connections',\n                                to: routes.connections.connections,\n                              } as IAppRoute,\n                              {\n                                childrens: [\n                                  {\n                                    component: ApiClientConnectorsModule,\n                                    label: 'API Client Connectors',\n                                    to: routes.apiClientConnectors.list,\n                                  } as IAppRoute,\n                                  {\n                                    component: ExtensionsModule,\n                                    label: 'Extensions',\n                                    to: routes.extensions.list,\n                                  } as IAppRoute,\n                                ],\n                                label: 'Customizations',\n                              } as IAppRouteWithChildrens,\n                              {\n                                component: DataModule,\n                                label: 'Data',\n                                to: routes.data.root,\n                              } as IAppRoute,\n                              {\n                                component: SettingsModule,\n                                label: 'Settings',\n                                to: routes.settings.root,\n                              } as IAppRoute,\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}