{"version":3,"sources":["../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithApiVersion.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/settings/routes.ts","modules/integrations/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","modules/integrations/resolvers.ts","i18n/locales/index.ts","i18n/index.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","../../src/Shared/AboutModal.tsx","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Shared/HelpDropdown.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailBreadcrumb.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/AboutModalContent.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/WithIntegrationActions.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/connections/resolvers.ts","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","../../packages/history/esm/history.js","app/WithConfig.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","modules/data/resolvers.ts"],"names":["ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","React","_Pact","onFulfilled","onRejected","result","state","this","s","callback","_settle","e","o","_this","value","v","pact","then","observer","_catch","body","recover","const","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","Promise","resolve","returnValue","error","reject","callFetch","ref","method","includeAccept","includeContentType","includeReferrerPolicy","fetch","url","contentType","JSON","cache","credentials","Object","assign","mode","redirect","Fetch","constructor","props","read","bind","data","initialValue","defaultValue","hasData","loading","componentDidMount","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState","equal","render","children","response","setState","_this3","baseUrl","ok","Error","statusText","indexOf","text","_response$text","json","_response$json","deepmerge","errorMessage","message","Stream","reader","getReader","textDecoder","TextDecoder","pushData","concat","onSave","cancel","componentWillUnmount","SyndesisFetch","stream","FetchOrStream","createElement","Consumer","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","addConnection","deleteIntegration","deployIntegration","exportIntegration","importIntegration","saveIntegration","undeployIntegration","updateConnection","updateOrAddConnection","tagIntegration","getActionDescriptor","connectionId","actionId","configuredProperties","integration","connection","action","flowId","position","id","actionDescriptor","produce","draft","step","flows","map","f","Array","Set","file","fileName","blob","_body$blob","saveAs","version","isIntegrationDeployment","targetState","integrationId","environments","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","event","filter","WithApiConnectors","changeFilter","change","items","totalCount","disableUpdates","WithApiVersion","Accept","camelkruntimeversion","camelversion","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","undefined","WithEnvironments","this$1","WithEnvironmentHelpersWrapped","createEnvironment","deleteEnvironment","renameEnvironment","name","stringifyBody","newName","WithExtension","extensionId","actions","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","isDraft","WithIntegrations","WithIntegrationTags","WithMonitoredIntegrations","getMonitoredIntegrations","integrations","i","monitoring","WithIntegrationsMetrics","errors","integrationDeploymentMetrics","lastProcessed","Date","now","messages","metricsProvider","start","topIntegrations","getConnectionsForDisplay","connections","c","metadata","getConnectionsWithFromAction","connector","some","getConnectionsWithToAction","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","a","getActionsWithTo","getConnectionIcon","icon","iconFile","File","URL","NEW_INTEGRATION","tags","getStep","getFlow","flow","getExtensionIcon","extension","getStepKindIcon","stepKind","getIntegrationStepIcon","stepIndex","getStepIcon","getStepsLastPosition","steps","filterStepsByPosition","atStart","atEnd","WithConnection","actionsWithFrom","actionsWithTo","WithConnectionHelpersWrapped","createConnection","deleteConnection","validateConfiguration","saveConnection","validateName","description","connectorId","values","proposedName","isError","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","connectorsForDisplay","obj","WithConnectors","WithOAuthAppHelpersWrapped","updateOAuthApp","deleteOAuthApp","app","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","nextContext","webSocket","eventSource","startConnection","onFailure","reconnectIn","setTimeout","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","addEventListener","onError","WebSocket","onmessage","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","properties","requiresOutputDataShape","type","displayName","placeholder","required","rows","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","length","toLowerCase","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","inputDataShape","outputDataShape","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","idPattern","WithVirtualizationHelpersWrapped","createVirtualization","updateViewEditorStates","deleteView","deleteViewEditorState","deleteVirtualization","publishVirtualization","queryVirtualization","refreshVirtualizationViews","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","username","keng__id","serviceVdbName","tko__description","virtualization","viewName","vdbName","editorStateId","_this2","virtualizationName","pubVirtualization","sqlQuery","rowlimit","rowOffset","queryBody","limit","offset","query","target","viewEditorStateId","viewEditorStates","_this9","WithVirtualization","virtualizationId","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","descriptor","propertyDefinitionSteps","key","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob","named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","finish","configure","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","makeResolverNoParams","security","save","extensions","_ref2","update","_ref3","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","iframe","messageChannel","MessageChannel","onIframeLoad","onMessages","componentWillReceiveProps","prevPayload","_","nextPayload","updateDataMapperApp","removeEventListener","messagePort","port1","contentWindow","postMessage","port2","payload","onMappings","mappings","documentId","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDescription","outputDocumentType","outputInspectionType","outputName","srcDoc","style","width","height","frameBorder","allowtransparency","extraProps","el","configureIndexMapper","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","configureSelectConnectionMapper","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","configureConfigureActionMapper","_ref4","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","en","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","dataEn","dataIt","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","config","Helmet_default","title","WithClosedNavigation","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","args","_key","call","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","idx","stepName","stepDescription","src","process","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","route","dashboard_resolvers","reverse","settings_resolvers","AboutModal","brandImg","isModalOpen","handleModalToggle","productName","trademark","PfAboutModal","isOpen","onClose","brandImageSrc","brandImageAlt","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","HelpDropdown","onToggle","onSelect","dropdownItems","DropdownItem","component","onClick","launchAboutModal","Fragment","Dropdown","direction","DropdownDirection","down","DropdownPosition","right","toggle","DropdownToggle","classNames","iconComponent","HelpIcon","isPlain","AppTopMenu","ButtonLink","size","Link","to","Breadcrumb","PfBreadcrumb","background","margin","paddingLeft","Loader","inline","Spinner","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","path","pathname","escapedPath","Route","match","isActive","childLocation","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","errorMsg","saving","asTextarea","onChange","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","handleConfirm","success","handleChange","isEditing","renderValue","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","currentStep","totalSteps","logUrl","i18nLogUrlText","ProgressBar","max","PfDropdownItem","superclass","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nIntegrations","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","validationError","NoErrors","htmlFor","i18nInputLabel","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailBreadcrumb","Level","gutter","LevelItem","homeHref","i18nHome","integrationsHref","exportHref","exportAction","exportLabel","editLabel","menuActions","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","currentState","Unpublished","states","IntegrationDetailHistoryListViewItemActions","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationStatus","labelType","Label","IntegrationStatusDetail","fallbackText","i18nProgressPending","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","InfoItem","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","onExport","onPublish","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","rawObject","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onShowAboutModal","onNavToggle","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","PageSection","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","buildId","commitId","TextContent","TextList","TextListItem","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","targetIntegrationId","api","hasTags","tagError","hasEnvironments","environmentsError","utils","loaderChildren","errorChildren","mappedItems","stringify","WithIntegrationActions","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","pushNotification","editAction","startAction","_handleAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","stop","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","Integrations","getPodLogUrl","mi","WithIntegrationActions_WithIntegrationActions","board","warnings","notices","detailedState","getStartIcon","getFinishIcon","IntegrationCreatorBreadcrumbs","toggleActive","activeSubstep","subStep","IntegrationDetailSteps","getSteps","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","module","exports","p","virtualizations","relationship","sqlClient","views","importSource","selectConnection","selectViews","selectConnector","configureConnector","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","showAboutModal","setShowAboutModal","toggleAboutModal","_useState5","_useState6","setNotifications","onRemoveNotification","n","Provider","msg","toConsumableArray","toString","data-testid","minWidth","removeNotificationAction","App","linkType","namespace","podName","consoleUrl","logout","UI_UI","App_App","getValidationState","field","form","FormInputComponent","ControlLabel","FieldLevelHelp","labelHint","fieldAttributes","controlHint","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","touched","dirty","isValidating","resetForm","validateForm","submitForm","toFormDefinitionProperty","controlTooltip","labelTooltip","formDefinitionProperty","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","waitTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","ConnectionCreatorBreadcrumbs","Connections","_x","_x2","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","valueToLower","includes","miA","miB","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","objectSpread","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","addLeadingSlash","charAt","stripBasename","prefix","hasBasename","substr","stripTrailingSlash","slice","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","_extends","resolvePathname","parse","sessionStorage","getItem","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","fn","notifyListeners","canUseDOM","document","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","WithConfig","_componentDidMount","configResponse","_config","ConnectionDetailsPage","numUsedBy","dist_api","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","_context5","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","ConfigurationPage","ConnectorsPage","ReviewPage","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","i18nOverviewSectionTitle","i18nSupportsSectionTitle","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","iterator","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","sqlStatement","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","handleCreateViews","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","IntegrationDetailNavBar","WithConfigurationForm","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","i18nSubtitle","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","ConfigureActionPage","_ref2$step","stepAsNumber","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","selectHref","SaveIntegrationPage","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","actionType","toStepKindCollection","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","ActivityPage","IntegrationDetailNavBar_IntegrationDetailNavBar","DetailsPage","breadcrumbMenuActions","deployments","i18nTextHistory","deployment","i18nTextVersion","MetricsPage","ImportPage","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","failed","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","Router","invariant","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","setItem","clear","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","createBrowserHistory","WithConfig_WithConfig","apiBase","apiEndpoint","datavirt","dvUrl","SYNDESIS-XSRF-TOKEN","functions","getElementById","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.519f6303.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept && !('Accept' in headers)) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  headers?: { [name: string]: string };\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={{\n              ...(props.headers || headers),\n            }}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IApiVersion } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithApiVersionProps {\n  children(props: IFetchState<IApiVersion>): any;\n}\n\nexport class WithApiVersion extends React.Component<IWithApiVersionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IApiVersion>\n        url={`/version`}\n        headers={{\n          Accept: 'application/json',\n        }}\n        defaultValue={{\n          'build-id': '',\n          camelkruntimeversion: '',\n          camelversion: '',\n          'commit-id': '',\n          version: '',\n        }}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public constructor(props: IWithIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { AboutModal as PfAboutModal } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModal {\n  brandImg: any;\n  handleModalToggle: any;\n  isModalOpen: boolean;\n  trademark: string;\n  productName: string;\n  children: React.ReactNode;\n}\n\nexport class AboutModal extends React.Component<IAboutModal> {\n  constructor(props: IAboutModal) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      brandImg,\n      children,\n      isModalOpen,\n      handleModalToggle,\n      productName,\n      trademark,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <PfAboutModal\n          isOpen={isModalOpen}\n          onClose={handleModalToggle}\n          trademark={trademark}\n          brandImageSrc={brandImg}\n          brandImageAlt=\"Brand Image\"\n          productName={productName}\n        >\n          {children}\n        </PfAboutModal>\n      </React.Fragment>\n    );\n  }\n}\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import {\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface IHelpDropdownProps {\n  className?: string;\n  isOpen: boolean;\n  launchAboutModal: any;\n}\n\nexport interface IHelpDropdownState {\n  isOpen: boolean;\n}\n\nexport class HelpDropdown extends React.Component<\n  IHelpDropdownProps,\n  IHelpDropdownState\n> {\n  public onToggle: any;\n  public onSelect: any;\n\n  constructor(props: IHelpDropdownProps) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.onToggle = (isOpen: boolean) => {\n      this.setState({\n        isOpen,\n      });\n    };\n    this.onSelect = (event: MouseEvent) => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    };\n  }\n\n  public render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem\n        key=\"action\"\n        component=\"span\"\n        onClick={() => {\n          this.props.launchAboutModal();\n        }}\n      >\n        About\n      </DropdownItem>,\n    ];\n    return (\n      <>\n        <Dropdown\n          direction={DropdownDirection.down}\n          position={DropdownPosition.right}\n          onSelect={this.onSelect}\n          toggle={\n            <DropdownToggle\n              className={classNames('', this.props.className)}\n              iconComponent={null}\n              onToggle={this.onToggle}\n            >\n              <HelpIcon />\n            </DropdownToggle>\n          }\n          isOpen={isOpen}\n          isPlain={true}\n          dropdownItems={dropdownItems}\n        />\n      </>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Level, LevelItem } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../Layout';\nimport { IMenuActions } from '../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Level gutter={'md'} className={'integration-detail__breadcrumb'}>\n        <LevelItem>\n          <Breadcrumb>\n            <span>\n              <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n            </span>\n            <span>\n              <Link to={this.props.integrationsHref!}>\n                {this.props.i18nIntegrations}\n              </Link>\n            </span>\n            <span>{this.props.i18nPageTitle}</span>\n          </Breadcrumb>\n        </LevelItem>\n        <LevelItem>\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        </LevelItem>\n      </Level>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  <>\n                    <ButtonLink\n                      to={this.props.publishHref}\n                      onClick={this.props.publishAction}\n                      children={this.props.publishLabel}\n                    />\n                    <ButtonLink\n                      href={this.props.editHref}\n                      children={this.props.editLabel}\n                    />\n                  </>\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        {this.props.version ? (\n          <>\n            <span className=\"pficon pficon-ok\" />\n            &nbsp;Published version {this.props.version}\n          </>\n        ) : (\n          'Stopped'\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { HelpDropdown } from '../Shared/HelpDropdown';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n  onShowAboutModal(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  onShowAboutModal,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n  return (\n    <Page\n      header={\n        <PageHeader\n          logo={pictograph}\n          logoProps={{ href: logoHref }}\n          toolbar={\n            <>\n              {\n                <HelpDropdown\n                  className=\"syn-help-dropdown\"\n                  isOpen={false}\n                  launchAboutModal={() => {\n                    onShowAboutModal();\n                  }}\n                />\n              }\n              {appNav}\n            </>\n          }\n          showNavToggle={true}\n          isNavOpen={showNavigation}\n          onNavToggle={onNavToggle}\n        />\n      }\n      sidebar={\n        <PageSidebar\n          nav={\n            <Nav>\n              <NavList>{verticalNav}</NavList>\n            </Nav>\n          }\n          isNavOpen={showNavigation}\n        />\n      }\n    >\n      <PageSection>{children}</PageSection>\n    </Page>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { TextContent, TextList, TextListItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModalContent {\n  version: string;\n  productName: string;\n  buildId: string;\n  commitId: string;\n}\n\nfunction AboutModalContent({\n  productName,\n  version,\n  buildId,\n  commitId,\n}: IAboutModalContent) {\n  return (\n    <TextContent>\n      <TextList component=\"dl\">\n        <TextListItem component=\"dt\">{productName}:</TextListItem>\n        <TextListItem component=\"dd\">{version}</TextListItem>\n        <TextListItem component=\"dt\">Build ID:</TextListItem>\n        <TextListItem component=\"dd\">{buildId}</TextListItem>\n        <TextListItem component=\"dt\">Commit ID:</TextListItem>\n        <TextListItem component=\"dd\">{commitId}</TextListItem>\n      </TextList>\n    </TextContent>\n  );\n}\n\nexport { AboutModalContent };\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationOverview } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IWithIntegrationActionsChildrenProps {\n  ciCdAction: IIntegrationAction;\n  deleteAction: IIntegrationAction;\n  editAction: IIntegrationAction;\n  exportAction: IIntegrationAction;\n  startAction: IIntegrationAction;\n  stopAction: IIntegrationAction;\n  actions: IIntegrationAction[];\n}\n\nexport interface IWithIntegrationActionsProps {\n  integration: IntegrationOverview;\n  children: (props: IWithIntegrationActionsChildrenProps) => any;\n}\n\nexport interface IWithIntegrationActionsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class WithIntegrationActions extends React.Component<\n  IWithIntegrationActionsProps,\n  IWithIntegrationActionsState\n> {\n  constructor(props: IWithIntegrationActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => {\n                  const editAction: IIntegrationAction = {\n                    href: resolvers.integration.edit.index({\n                      flowId: this.props.integration.flows![0].id!,\n                      integration: this.props.integration,\n                    }),\n                    label: 'Edit',\n                  };\n                  const startAction: IIntegrationAction = {\n                    label: 'Start',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!,\n                              false\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.PublishingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopAction: IIntegrationAction = {\n                    label: 'Stop',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.UnpublishingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const deleteAction: IIntegrationAction = {\n                    label: 'Delete',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:DeletingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deleteIntegration(this.props.integration.id!);\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.DeletingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.DANGER,\n                        promptDialogButtonText: t('shared:Delete'),\n                        promptDialogIcon: ConfirmationIconType.DANGER,\n                        promptDialogText: t(\n                          'integrations:deleteIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:deleteIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const exportAction: IIntegrationAction = {\n                    label: 'Export',\n                    onClick: () =>\n                      exportIntegration(\n                        this.props.integration.id!,\n                        `${this.props.integration.name}-export.zip`\n                      ),\n                  };\n                  const ciCdAction: IIntegrationAction = {\n                    label: 'Manage CI/CD',\n                    onClick: () => {\n                      this.promptForCiCd(this.props.integration.id!);\n                    },\n                  };\n\n                  const actions: IIntegrationAction[] = [];\n                  if (canEdit(this.props.integration)) {\n                    actions.push(editAction);\n                  }\n                  if (canActivate(this.props.integration)) {\n                    actions.push(startAction);\n                  }\n                  if (canDeactivate(this.props.integration)) {\n                    actions.push(stopAction);\n                  }\n                  actions.push(deleteAction);\n                  actions.push(exportAction);\n                  actions.push(ciCdAction);\n                  return (\n                    <>\n                      {this.state.showCiCdPromptDialog && (\n                        <TagIntegrationDialogWrapper\n                          manageCiCdHref={resolvers.manageCicd.root()}\n                          tagIntegration={tagIntegration}\n                          targetIntegrationId={this.state.targetIntegrationId!}\n                          onSave={this.closeCiCdDialog}\n                          onHide={this.closeCiCdDialog}\n                        />\n                      )}\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        actions,\n                        ciCdAction,\n                        deleteAction,\n                        editAction,\n                        exportAction,\n                        startAction,\n                        stopAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { getFinishIcon, getStartIcon } from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { WithIntegrationActions } from './WithIntegrationActions';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport class Integrations extends React.Component<IIntegrationsProps> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <IntegrationsList>\n                <WithLoader\n                  error={this.props.error}\n                  loading={this.props.loading}\n                  loaderChildren={<IntegrationsListSkeleton />}\n                  errorChildren={<ApiError />}\n                >\n                  {() =>\n                    this.props.integrations.map(\n                      (mi: IntegrationWithMonitoring) => {\n                        try {\n                          return (\n                            <WithIntegrationActions\n                              integration={mi.integration}\n                            >\n                              {({ actions }) => (\n                                <IntegrationsListItem\n                                  key={mi.integration.id}\n                                  integrationName={mi.integration.name}\n                                  currentState={mi.integration!.currentState!}\n                                  targetState={mi.integration!.targetState!}\n                                  isConfigurationRequired={\n                                    !!(\n                                      mi.integration!.board!.warnings ||\n                                      mi.integration!.board!.errors ||\n                                      mi.integration!.board!.notices\n                                    )\n                                  }\n                                  monitoringValue={\n                                    mi.monitoring &&\n                                    t(\n                                      'integrations:' +\n                                        mi.monitoring.detailedState.value\n                                    )\n                                  }\n                                  monitoringCurrentStep={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.currentStep\n                                  }\n                                  monitoringTotalSteps={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.totalSteps\n                                  }\n                                  monitoringLogUrl={getPodLogUrl(mi.monitoring)}\n                                  startConnectionIcon={getStartIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  finishConnectionIcon={getFinishIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  actions={\n                                    <IntegrationActions\n                                      integrationId={mi.integration!.id!}\n                                      actions={actions}\n                                      detailsHref={resolvers.integration.details(\n                                        {\n                                          integrationId: mi.integration.id!,\n                                        }\n                                      )}\n                                    />\n                                  }\n                                  i18nConfigurationRequired={t(\n                                    'integrations:ConfigurationRequired'\n                                  )}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                  i18nProgressPending={t('shared:Pending')}\n                                  i18nProgressStarting={t(\n                                    'integrations:progressStarting'\n                                  )}\n                                  i18nProgressStopping={t(\n                                    'integrations:progressStopping'\n                                  )}\n                                  i18nLogUrlText={t('shared:viewLogs')}\n                                />\n                              )}\n                            </WithIntegrationActions>\n                          );\n                        } catch (e) {\n                          return (\n                            <IntegrationsListItemUnreadable\n                              key={mi.integration.id}\n                              integrationName={\n                                (mi && mi.integration && mi.integration.name) ||\n                                'An integration'\n                              }\n                              i18nDescription={\n                                \"Sorry, we can't display more information about this integration right now.\"\n                              }\n                              rawObject={JSON.stringify(\n                                mi.integration,\n                                null,\n                                2\n                              )}\n                            />\n                          );\n                        }\n                      }\n                    )\n                  }\n                </WithLoader>\n              </IntegrationsList>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getIntegrationStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\nexport * from './WithIntegrationActions';\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import { WithApiVersion } from '@syndesis/api';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { AboutModal, AboutModalContent } from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoute[];\n}\n\nexport interface IAppUIState {\n  showAboutModal: boolean;\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [showAboutModal, setShowAboutModal] = useState(false);\n  const toggleAboutModal = () => {\n    setShowAboutModal(!showAboutModal);\n  };\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => {\n          const productName = 'Syndesis';\n          return (\n            <>\n              {showAboutModal && (\n                <AboutModal\n                  trademark={''}\n                  productName={productName}\n                  isModalOpen={showAboutModal}\n                  handleModalToggle={toggleAboutModal}\n                  brandImg={'https://avatars0.githubusercontent.com/u/23079786'}\n                >\n                  <WithApiVersion>\n                    {({ data }) => {\n                      const {\n                        'commit-id': commitId,\n                        'build-id': buildId,\n                        version,\n                      } = data;\n                      return (\n                        <AboutModalContent\n                          version={version}\n                          buildId={buildId}\n                          commitId={commitId}\n                          productName={productName}\n                        />\n                      );\n                    }}\n                  </WithApiVersion>\n                </AboutModal>\n              )}\n              <AppLayout\n                onShowAboutModal={toggleAboutModal}\n                appNav={\n                  <AppTopMenu username={'developer'}>\n                    <PfDropdownItem>\n                      <Link\n                        to={'/logout'}\n                        className=\"pf-c-dropdown__menu-item\"\n                        children={t('Logout')}\n                      />\n                    </PfDropdownItem>\n                  </AppTopMenu>\n                }\n                verticalNav={routes.map(({ exact, icon, label, to }, index) => (\n                  <PfVerticalNavItem\n                    exact={exact}\n                    icon={icon}\n                    label={t(label)}\n                    to={to}\n                    key={index}\n                    data-testid={`navbar-link-${to}`}\n                  />\n                ))}\n                pictograph={\n                  <img\n                    src={logo}\n                    alt=\"Syndesis\"\n                    style={{ minWidth: '164px' }}\n                  />\n                }\n                logoHref={'/'}\n                showNavigation={showNavigation}\n                onNavigationCollapse={onHideNavigation}\n                onNavigationExpand={onShowNavigation}\n              >\n                <Notifications\n                  notifications={notifications}\n                  notificationTimerDelay={8000}\n                  removeNotificationAction={onRemoveNotification}\n                />\n                <WithRouter>\n                  {({ match }) => (\n                    <WithErrorBoundary key={match.url}>\n                      <Switch>\n                        {routes.map(({ to, exact, component }, index) => (\n                          <Route\n                            path={to}\n                            exact={exact}\n                            component={component}\n                            key={index}\n                          />\n                        ))}\n                        <Route component={PageNotFound} />\n                      </Switch>\n                    </WithErrorBoundary>\n                  )}\n                </WithRouter>\n              </AppLayout>\n            </>\n          );\n        }}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoute[];\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  location.state = location.state || JSON.parse(sessionStorage.getItem(key));\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in localStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key\n        }, null, href);\n\n        try {\n          sessionStorage.setItem(key, JSON.stringify(state));\n        } catch (e) {\n          // storage full, retry after a clean. Old history entries will be nuked, so if the user will go back pages will raise exceptions. Nothing we can do about that I guess?\n          sessionStorage.clear();\n          sessionStorage.setItem(key, JSON.stringify(state));\n        }\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(position: number, step: Step) =>\n                      getStepHref(\n                        step,\n                        { flowId, position: `${position}` },\n                        { integration },\n                        this.props\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <IntegrationEditorConnectionsListItem\n                                              key={idx}\n                                              integrationName={step.name}\n                                              integrationDescription={\n                                                step.description ||\n                                                'No description available.'\n                                              }\n                                              icon={\n                                                <img\n                                                  src={step.icon}\n                                                  width={24}\n                                                  height={24}\n                                                />\n                                              }\n                                              actions={\n                                                <ButtonLink\n                                                  href={getStepHref(\n                                                    step,\n                                                    params,\n                                                    state,\n                                                    this.props\n                                                  )}\n                                                >\n                                                  Select\n                                                </ButtonLink>\n                                              }\n                                            />\n                                          )\n                                        )}\n                                        <IntegrationEditorConnectionsListItem\n                                          integrationName={''}\n                                          integrationDescription={''}\n                                          icon={''}\n                                          actions={\n                                            <ButtonLink href={'#'}>\n                                              Create connection\n                                            </ButtonLink>\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IActivityPageParams, IActivityPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Activity page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { canActivate, canDeactivate, WithIntegration } from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  IMenuActions,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  IntegrationDetailInfo,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../../resolvers';\nimport {\n  IntegrationDetailSteps,\n  WithIntegrationActions,\n} from '../../components';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<IIntegrationDetailsPageProps> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithRouteData<IIntegrationDetailsRouteParams, null>>\n            {({ integrationId }) => (\n              <WithIntegration integrationId={integrationId}>\n                {({ data, hasData, error }) => (\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={<Loader />}\n                    errorChildren={<ApiError />}\n                  >\n                    {() => (\n                      <WithIntegrationActions integration={data}>\n                        {({\n                          ciCdAction,\n                          editAction,\n                          deleteAction,\n                          exportAction,\n                          startAction,\n                          stopAction,\n                        }) => {\n                          const breadcrumbMenuActions: IMenuActions[] = [];\n                          if (canActivate(data)) {\n                            breadcrumbMenuActions.push(startAction);\n                          }\n                          if (canDeactivate(data)) {\n                            breadcrumbMenuActions.push(stopAction);\n                          }\n                          breadcrumbMenuActions.push(deleteAction);\n                          breadcrumbMenuActions.push(ciCdAction);\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('integrations:detail:pageTitle')}\n                              />\n                              <IntegrationDetailBreadcrumb\n                                editHref={editAction.href}\n                                editLabel={editAction.label}\n                                exportAction={exportAction.onClick}\n                                exportHref={exportAction.href}\n                                exportLabel={exportAction.label}\n                                homeHref={resolvers.dashboard.root()}\n                                i18nHome={t('shared:Home')}\n                                i18nIntegrations={t('shared:Integrations')}\n                                i18nPageTitle={t(\n                                  'integrations:detail:pageTitle'\n                                )}\n                                integrationId={data.id}\n                                integrationsHref={resolvers.integrations.list()}\n                                menuActions={breadcrumbMenuActions}\n                              />\n\n                              <IntegrationDetailInfo\n                                name={data.name}\n                                version={data.version}\n                              />\n                              <IntegrationDetailNavBar integration={data} />\n                              <IntegrationDetailSteps integration={data} />\n                              <IntegrationDetailDescription\n                                description={data.description}\n                                i18nNoDescription={t(\n                                  'integrations:detail:noDescription'\n                                )}\n                              />\n                              <IntegrationDetailHistoryListView\n                                editHref={editAction.href}\n                                editLabel={editAction.label}\n                                hasHistory={(data.deployments || []).length > 0}\n                                isDraft={data.isDraft}\n                                i18nTextDraft={t('shared:Draft')}\n                                i18nTextHistory={t(\n                                  'integrations:detail:History'\n                                )}\n                                publishAction={\n                                  canActivate(data)\n                                    ? startAction.onClick\n                                    : undefined\n                                }\n                                publishHref={\n                                  canActivate(data)\n                                    ? startAction.href\n                                    : undefined\n                                }\n                                publishLabel={\n                                  canActivate(data)\n                                    ? t('shared:Publish')\n                                    : undefined\n                                }\n                                children={(data.deployments || []).map(\n                                  (deployment, idx) => {\n                                    return (\n                                      <IntegrationDetailHistoryListViewItem\n                                        key={idx}\n                                        actions={\n                                          <IntegrationDetailHistoryListViewItemActions\n                                            actions={[]}\n                                            integrationId={data.id!}\n                                          />\n                                        }\n                                        currentState={deployment.currentState!}\n                                        i18nTextLastPublished={t(\n                                          'integrations:detail:lastPublished'\n                                        )}\n                                        i18nTextVersion={t('shared:Version')}\n                                        updatedAt={deployment.updatedAt}\n                                        version={deployment.version}\n                                      />\n                                    );\n                                  }\n                                )}\n                              />\n                            </>\n                          );\n                        }}\n                      </WithIntegrationActions>\n                    )}\n                  </WithLoader>\n                )}\n              </WithIntegration>\n            )}\n          </WithRouteData>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Metrics page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { createBrowserHistory } from '@syndesis/history';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { Router } from 'react-router-dom';\nimport { App } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router history={createBrowserHistory()}>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                icon: 'fa fa-tachometer-alt',\n                                label: 'Home',\n                                to: '/',\n                              },\n                              {\n                                component: IntegrationsModule,\n                                icon: 'pficon pficon-integration',\n                                label: 'Integrations',\n                                to: '/integrations',\n                              },\n                              {\n                                component: ConnectionsModule,\n                                icon: 'pficon pficon-plugged',\n                                label: 'Connections',\n                                to: '/connections',\n                              },\n                              {\n                                component: CustomizationsModule,\n                                icon: 'fa fa-cube',\n                                label: 'Customizations',\n                                to: '/customizations',\n                              },\n                              {\n                                component: DataModule,\n                                icon: 'fa fa-database',\n                                label: 'Data',\n                                to: '/data',\n                              },\n                              {\n                                component: SettingsModule,\n                                icon: 'pficon pficon-settings',\n                                label: 'Settings',\n                                to: '/settings',\n                              },\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}