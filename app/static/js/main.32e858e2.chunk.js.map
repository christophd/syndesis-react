{"version":3,"sources":["modules/settings/routes.ts","modules/integrations/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","modules/integrations/resolvers.ts","i18n/locales/index.ts","i18n/index.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","modules/dashboard/routes.ts","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailBreadcrumb.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/WithIntegrationActions.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/connections/resolvers.ts","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","../../packages/history/esm/history.js","app/WithConfig.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/data/resolvers.ts"],"names":["named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","step","extension","connection","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","start","finish","configure","integration","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","id","state","makeResolverNoParams","security","save","extensions","_ref2","extensionId","update","_ref3","const","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","constructor","props","iframe","messageChannel","MessageChannel","onIframeLoad","this","bind","onMessages","componentDidMount","addEventListener","componentWillReceiveProps","nextProps","prevPayload","_","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","message","payload","onMappings","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","React","createElement","Object","assign","style","width","height","frameBorder","allowtransparency","extraProps","ref","el","configureIndexMapper","flowId","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","flows","integrationId","configureSelectConnectionMapper","position","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","connectionId","configureConfigureActionMapper","_ref4","actionId","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","getStep","concat","configuredProperties","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","Error","en","app","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connections","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","data","dataEn","dataIt","integrations","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","error","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","Consumer","config","Helmet_default","a","title","WithClosedNavigation","children","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","length","args","Array","_key","call","setState","nextContext","undefined","_this2","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","steps","map","s","idx","stepName","name","stepDescription","action","icon","src","getStepIcon","process","actions","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","route","dashboard_resolvers","reverse","settings_resolvers","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","ok","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","body","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","file","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","AppTopMenu","isOpen","onToggle","onSelect","username","Dropdown","isPlain","toggle","DropdownToggle","dropdownItems","ButtonLink","size","Link","to","onClick","Breadcrumb","PfBreadcrumb","background","margin","paddingLeft","c","Loader","inline","Spinner","loading","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","path","pathname","escapedPath","Route","match","isActive","childLocation","i","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","classNames","obj","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","placeholder","errorMsg","saving","asTextarea","onChange","Fragment","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","then","result","e","handleConfirm","success","handleChange","isEditing","renderValue","v","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cache","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","currentStep","totalSteps","logUrl","target","i18nLogUrlText","ProgressBar","now","max","PfDropdownItem","superclass","DropdownItem","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","description","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rows","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","topIntegrations","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nIntegrations","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","onSave","validationError","NoErrors","htmlFor","i18nInputLabel","defaultValue","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","items","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","version","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailBreadcrumb","Level","gutter","LevelItem","homeHref","i18nHome","integrationsHref","exportHref","exportAction","exportLabel","editLabel","menuActions","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","isDraft","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","currentState","Unpublished","states","IntegrationDetailHistoryListViewItemActions","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","Date","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationStatus","labelType","Label","IntegrationStatusDetail","fallbackText","i18nProgressPending","targetState","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","InfoItem","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","viewName","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","virtualizationName","onExport","onPublish","serviceVdbName","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","rawObject","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onNavToggle","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","PageSection","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","filter","tagIntegration","targetIntegrationId","api","tags","hasTags","hasData","tagError","disableUpdates","environments","hasEnvironments","environmentsError","utils","loaderChildren","errorChildren","mappedItems","JSON","stringify","WithIntegrationActions","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","pushNotification","deleteIntegration","deployIntegration","exportIntegration","undeployIntegration","editAction","startAction","_handleAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","stop","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","Integrations","getPodLogUrl","mi","WithIntegrationActions_WithIntegrationActions","board","warnings","errors","notices","monitoring","detailedState","getStartIcon","getFinishIcon","IntegrationCreatorBreadcrumbs","toggleActive","activeSubstep","subStep","IntegrationDetailSteps","getSteps","connector","getIntegrationStepIcon","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","stepKind","getConnectionIcon","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","module","exports","p","virtualizations","virtualization","relationship","sqlClient","views","importSource","selectConnection","selectViews","selectConnector","configureConnector","connectorId","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","setNotifications","onRemoveNotification","n","Provider","msg","toConsumableArray","toString","data-testid","minWidth","removeNotificationAction","url","component","App","linkType","namespace","podName","baseUrl","consoleUrl","logout","UI_UI","App_App","toFormDefinitionProperty","controlHint","controlTooltip","labelHint","labelTooltip","formDefinitionProperty","fieldAttributes","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","componentDidUpdate","prevProps","waitTimeout","setTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","properties","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","getValidationState","field","form","FormInputComponent","ControlLabel","displayName","FieldLevelHelp","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","initialValue","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","required","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","values","touched","dirty","isValidating","resetForm","validateForm","submitForm","this$1","ConnectionCreatorBreadcrumbs","Connections","deleteConnection","_x","_x2","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","forEach","valueToLower","toLowerCase","includes","miA","miB","right","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","objectSpread","validateConfiguration","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","addLeadingSlash","charAt","stripBasename","prefix","indexOf","hasBasename","substr","stripTrailingSlash","slice","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","_extends","resolvePathname","parse","sessionStorage","getItem","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","callback","appendListener","fn","listener","notifyListeners","canUseDOM","document","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","WithConfig","_componentDidMount","configResponse","_config","fetch","json","ConnectionDetailsPage","numUsedBy","dist_api","updateConnection","saveConnection","validateName","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","proposedName","response","_context5","isError","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","connectionsForDisplay","ConfigurationPage","ConnectorsPage","connectorsForDisplay","ReviewPage","createConnection","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","deleteExtension","i18nOverviewSectionTitle","i18nSupportsSectionTitle","extensionType","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","text","fileName","importExtension","uploadExtension","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","virtualizationId","keng__id","tko__description","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Symbol","iterator","done","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","rowOffset","sqlStatement","queryVirtualization","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","refreshVirtualizationViews","handleCreateViews","viewEditorStates","idPattern","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","virtName","createVirtualization","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","read","deleteVirtualization","publishVirtualization","unpublishServiceVdb","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","publishedState","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","deleteView","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","IntegrationDetailNavBar","WithConfigurationForm","descriptor","getActionDescriptor","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","i18nSubtitle","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","ConfigureActionPage","addConnection","_ref2$step","stepAsNumber","mode","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","actionsWithTo","actionsWithFrom","selectHref","SaveIntegrationPage","saveIntegration","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","propertyDefinitionSteps","actionType","getExtensionIcon","getStepKindIcon","toStepKindCollection","connectionsWithFromAction","connectionsWithToAction","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","ActivityPage","IntegrationDetailNavBar_IntegrationDetailNavBar","DetailsPage","breadcrumbMenuActions","deployments","i18nTextHistory","deployment","i18nTextVersion","MetricsPage","ImportPage","importIntegration","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","failed","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","flow","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","createEnvironment","deleteEnvironment","renameEnvironment","newName","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","deleteOAuthApp","apiUri","updateOAuthApp","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","Router","invariant","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","nextState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","setItem","clear","prevIndex","nextKeys","replace","replaceState","goBack","goForward","block","unblock","listen","unlisten","createBrowserHistory","WithConfig_WithConfig","apiBase","apiEndpoint","dvApiUri","datavirt","dvUrl","headers","SYNDESIS-XSRF-TOKEN","functions","getElementById","URL","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ApiContextDefaultValue","ApiContext","_Pact","onFulfilled","onRejected","_settle","o","pact","observer","_catch","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","_wrapYieldedValue","Promise","resolve","returnValue","reject","callFetch","method","includeAccept","includeContentType","includeReferrerPolicy","contentType","credentials","redirect","Fetch","_this3","statusText","_response$text","_response$json","deepmerge","errorMessage","Stream","reader","getReader","textDecoder","TextDecoder","pushData","cancel","SyndesisFetch","stream","FetchOrStream","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","updateOrAddConnection","actionDescriptor","produce","draft","f","Set","blob","_body$blob","saveAs","isIntegrationDeployment","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","WithApiConnectors","changeFilter","change","totalCount","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","WithEnvironments","WithEnvironmentHelpersWrapped","stringifyBody","WithExtension","schemaVersion","WithExtensionHelpersWrapped","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","WithIntegrations","WithIntegrationTags","WithMonitoredIntegrations","getMonitoredIntegrations","WithIntegrationsMetrics","integrationDeploymentMetrics","lastProcessed","messages","metricsProvider","getConnectionsForDisplay","metadata","getConnectionsWithFromAction","some","getConnectionsWithToAction","transformResponse","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","getActionsWithTo","iconFile","File","NEW_INTEGRATION","getFlow","stepIndex","getStepsLastPosition","filterStepsByPosition","atStart","atEnd","WithConnection","WithConnectionHelpersWrapped","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","WithConnectors","WithOAuthAppHelpersWrapped","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","l","close","webSocket","eventSource","startConnection","onFailure","reconnectIn","connectUsingWebSockets","reservation","wsApiEndpoint","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","postChangeEvent","changeEvent","EventSource","onError","WebSocket","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","requiresOutputDataShape","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","WithVirtualizationHelpersWrapped","updateViewEditorStates","deleteViewEditorState","virtDesc","newVirtualization","keng__dataPath","vdbName","editorStateId","pubVirtualization","sqlQuery","rowlimit","queryBody","limit","offset","query","viewEditorStateId","_this9","WithVirtualization","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob"],"mappings":"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","file":"static/js/main.32e858e2.chunk.js","sourcesContent":["import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Level, LevelItem } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../Layout';\nimport { IMenuActions } from '../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Level gutter={'md'} className={'integration-detail__breadcrumb'}>\n        <LevelItem>\n          <Breadcrumb>\n            <span>\n              <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n            </span>\n            <span>\n              <Link to={this.props.integrationsHref!}>\n                {this.props.i18nIntegrations}\n              </Link>\n            </span>\n            <span>{this.props.i18nPageTitle}</span>\n          </Breadcrumb>\n        </LevelItem>\n        <LevelItem>\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        </LevelItem>\n      </Level>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  <>\n                    <ButtonLink\n                      to={this.props.publishHref}\n                      onClick={this.props.publishAction}\n                      children={this.props.publishLabel}\n                    />\n                    <ButtonLink\n                      href={this.props.editHref}\n                      children={this.props.editLabel}\n                    />\n                  </>\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        {this.props.version ? (\n          <>\n            <span className=\"pficon pficon-ok\" />\n            &nbsp;Published version {this.props.version}\n          </>\n        ) : (\n          'Stopped'\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n  return (\n    <Page\n      header={\n        <PageHeader\n          logo={pictograph}\n          logoProps={{ href: logoHref }}\n          toolbar={appNav}\n          showNavToggle={true}\n          isNavOpen={showNavigation}\n          onNavToggle={onNavToggle}\n        />\n      }\n      sidebar={\n        <PageSidebar\n          nav={\n            <Nav>\n              <NavList>{verticalNav}</NavList>\n            </Nav>\n          }\n          isNavOpen={showNavigation}\n        />\n      }\n    >\n      <PageSection>{children}</PageSection>\n    </Page>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationOverview } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IWithIntegrationActionsChildrenProps {\n  ciCdAction: IIntegrationAction;\n  deleteAction: IIntegrationAction;\n  editAction: IIntegrationAction;\n  exportAction: IIntegrationAction;\n  startAction: IIntegrationAction;\n  stopAction: IIntegrationAction;\n  actions: IIntegrationAction[];\n}\n\nexport interface IWithIntegrationActionsProps {\n  integration: IntegrationOverview;\n  children: (props: IWithIntegrationActionsChildrenProps) => any;\n}\n\nexport interface IWithIntegrationActionsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class WithIntegrationActions extends React.Component<\n  IWithIntegrationActionsProps,\n  IWithIntegrationActionsState\n> {\n  constructor(props: IWithIntegrationActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => {\n                  const editAction: IIntegrationAction = {\n                    href: resolvers.integration.edit.index({\n                      flowId: this.props.integration.flows![0].id!,\n                      integration: this.props.integration,\n                    }),\n                    label: 'Edit',\n                  };\n                  const startAction: IIntegrationAction = {\n                    label: 'Start',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!,\n                              false\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.PublishingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopAction: IIntegrationAction = {\n                    label: 'Stop',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.UnpublishingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const deleteAction: IIntegrationAction = {\n                    label: 'Delete',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:DeletingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deleteIntegration(this.props.integration.id!);\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.DeletingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.DANGER,\n                        promptDialogButtonText: t('shared:Delete'),\n                        promptDialogIcon: ConfirmationIconType.DANGER,\n                        promptDialogText: t(\n                          'integrations:deleteIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:deleteIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const exportAction: IIntegrationAction = {\n                    label: 'Export',\n                    onClick: () =>\n                      exportIntegration(\n                        this.props.integration.id!,\n                        `${this.props.integration.name}-export.zip`\n                      ),\n                  };\n                  const ciCdAction: IIntegrationAction = {\n                    label: 'Manage CI/CD',\n                    onClick: () => {\n                      this.promptForCiCd(this.props.integration.id!);\n                    },\n                  };\n\n                  const actions: IIntegrationAction[] = [];\n                  if (canEdit(this.props.integration)) {\n                    actions.push(editAction);\n                  }\n                  if (canActivate(this.props.integration)) {\n                    actions.push(startAction);\n                  }\n                  if (canDeactivate(this.props.integration)) {\n                    actions.push(stopAction);\n                  }\n                  actions.push(deleteAction);\n                  actions.push(exportAction);\n                  actions.push(ciCdAction);\n                  return (\n                    <>\n                      {this.state.showCiCdPromptDialog && (\n                        <TagIntegrationDialogWrapper\n                          manageCiCdHref={resolvers.manageCicd.root()}\n                          tagIntegration={tagIntegration}\n                          targetIntegrationId={this.state.targetIntegrationId!}\n                          onSave={this.closeCiCdDialog}\n                          onHide={this.closeCiCdDialog}\n                        />\n                      )}\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        actions,\n                        ciCdAction,\n                        deleteAction,\n                        editAction,\n                        exportAction,\n                        startAction,\n                        stopAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { getFinishIcon, getStartIcon } from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { WithIntegrationActions } from './WithIntegrationActions';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport class Integrations extends React.Component<IIntegrationsProps> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <IntegrationsList>\n                <WithLoader\n                  error={this.props.error}\n                  loading={this.props.loading}\n                  loaderChildren={<IntegrationsListSkeleton />}\n                  errorChildren={<ApiError />}\n                >\n                  {() =>\n                    this.props.integrations.map(\n                      (mi: IntegrationWithMonitoring) => {\n                        try {\n                          return (\n                            <WithIntegrationActions\n                              integration={mi.integration}\n                            >\n                              {({ actions }) => (\n                                <IntegrationsListItem\n                                  key={mi.integration.id}\n                                  integrationName={mi.integration.name}\n                                  currentState={mi.integration!.currentState!}\n                                  targetState={mi.integration!.targetState!}\n                                  isConfigurationRequired={\n                                    !!(\n                                      mi.integration!.board!.warnings ||\n                                      mi.integration!.board!.errors ||\n                                      mi.integration!.board!.notices\n                                    )\n                                  }\n                                  monitoringValue={\n                                    mi.monitoring &&\n                                    t(\n                                      'integrations:' +\n                                        mi.monitoring.detailedState.value\n                                    )\n                                  }\n                                  monitoringCurrentStep={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.currentStep\n                                  }\n                                  monitoringTotalSteps={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.totalSteps\n                                  }\n                                  monitoringLogUrl={getPodLogUrl(mi.monitoring)}\n                                  startConnectionIcon={getStartIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  finishConnectionIcon={getFinishIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  actions={\n                                    <IntegrationActions\n                                      integrationId={mi.integration!.id!}\n                                      actions={actions}\n                                      detailsHref={resolvers.integration.details(\n                                        {\n                                          integrationId: mi.integration.id!,\n                                        }\n                                      )}\n                                    />\n                                  }\n                                  i18nConfigurationRequired={t(\n                                    'integrations:ConfigurationRequired'\n                                  )}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                  i18nProgressPending={t('shared:Pending')}\n                                  i18nProgressStarting={t(\n                                    'integrations:progressStarting'\n                                  )}\n                                  i18nProgressStopping={t(\n                                    'integrations:progressStopping'\n                                  )}\n                                  i18nLogUrlText={t('shared:viewLogs')}\n                                />\n                              )}\n                            </WithIntegrationActions>\n                          );\n                        } catch (e) {\n                          return (\n                            <IntegrationsListItemUnreadable\n                              key={mi.integration.id}\n                              integrationName={\n                                (mi && mi.integration && mi.integration.name) ||\n                                'An integration'\n                              }\n                              i18nDescription={\n                                \"Sorry, we can't display more information about this integration right now.\"\n                              }\n                              rawObject={JSON.stringify(\n                                mi.integration,\n                                null,\n                                2\n                              )}\n                            />\n                          );\n                        }\n                      }\n                    )\n                  }\n                </WithLoader>\n              </IntegrationsList>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getIntegrationStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\nexport * from './WithIntegrationActions';\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoute[];\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => (\n          <AppLayout\n            appNav={\n              <AppTopMenu username={'developer'}>\n                <PfDropdownItem>\n                  <Link\n                    to={'/logout'}\n                    className=\"pf-c-dropdown__menu-item\"\n                    children={t('Logout')}\n                  />\n                </PfDropdownItem>\n              </AppTopMenu>\n            }\n            verticalNav={routes.map(({ exact, icon, label, to }, index) => (\n              <PfVerticalNavItem\n                exact={exact}\n                icon={icon}\n                label={t(label)}\n                to={to}\n                key={index}\n                data-testid={`navbar-link-${to}`}\n              />\n            ))}\n            pictograph={\n              <img src={logo} alt=\"Syndesis\" style={{ minWidth: '164px' }} />\n            }\n            logoHref={'/'}\n            showNavigation={showNavigation}\n            onNavigationCollapse={onHideNavigation}\n            onNavigationExpand={onShowNavigation}\n          >\n            <Notifications\n              notifications={notifications}\n              notificationTimerDelay={8000}\n              removeNotificationAction={onRemoveNotification}\n            />\n            <WithRouter>\n              {({ match }) => (\n                <WithErrorBoundary key={match.url}>\n                  <Switch>\n                    {routes.map(({ to, exact, component }, index) => (\n                      <Route\n                        path={to}\n                        exact={exact}\n                        component={component}\n                        key={index}\n                      />\n                    ))}\n                    <Route component={PageNotFound} />\n                  </Switch>\n                </WithErrorBoundary>\n              )}\n            </WithRouter>\n          </AppLayout>\n        )}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoute[];\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  location.state = location.state || JSON.parse(sessionStorage.getItem(key));\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in localStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key\n        }, null, href);\n\n        try {\n          sessionStorage.setItem(key, JSON.stringify(state));\n        } catch (e) {\n          // storage full, retry after a clean. Old history entries will be nuked, so if the user will go back pages will raise exceptions. Nothing we can do about that I guess?\n          sessionStorage.clear();\n          sessionStorage.setItem(key, JSON.stringify(state));\n        }\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(position: number, step: Step) =>\n                      getStepHref(\n                        step,\n                        { flowId, position: `${position}` },\n                        { integration },\n                        this.props\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <IntegrationEditorConnectionsListItem\n                                              key={idx}\n                                              integrationName={step.name}\n                                              integrationDescription={\n                                                step.description ||\n                                                'No description available.'\n                                              }\n                                              icon={\n                                                <img\n                                                  src={step.icon}\n                                                  width={24}\n                                                  height={24}\n                                                />\n                                              }\n                                              actions={\n                                                <ButtonLink\n                                                  href={getStepHref(\n                                                    step,\n                                                    params,\n                                                    state,\n                                                    this.props\n                                                  )}\n                                                >\n                                                  Select\n                                                </ButtonLink>\n                                              }\n                                            />\n                                          )\n                                        )}\n                                        <IntegrationEditorConnectionsListItem\n                                          integrationName={''}\n                                          integrationDescription={''}\n                                          icon={''}\n                                          actions={\n                                            <ButtonLink href={'#'}>\n                                              Create connection\n                                            </ButtonLink>\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IActivityPageParams, IActivityPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Activity page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { canActivate, canDeactivate, WithIntegration } from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  IMenuActions,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  IntegrationDetailInfo,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../../resolvers';\nimport {\n  IntegrationDetailSteps,\n  WithIntegrationActions,\n} from '../../components';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<IIntegrationDetailsPageProps> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithRouteData<IIntegrationDetailsRouteParams, null>>\n            {({ integrationId }) => (\n              <WithIntegration integrationId={integrationId}>\n                {({ data, hasData, error }) => (\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={<Loader />}\n                    errorChildren={<ApiError />}\n                  >\n                    {() => (\n                      <WithIntegrationActions integration={data}>\n                        {({\n                          ciCdAction,\n                          editAction,\n                          deleteAction,\n                          exportAction,\n                          startAction,\n                          stopAction,\n                        }) => {\n                          const breadcrumbMenuActions: IMenuActions[] = [];\n                          if (canActivate(data)) {\n                            breadcrumbMenuActions.push(startAction);\n                          }\n                          if (canDeactivate(data)) {\n                            breadcrumbMenuActions.push(stopAction);\n                          }\n                          breadcrumbMenuActions.push(deleteAction);\n                          breadcrumbMenuActions.push(ciCdAction);\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('integrations:detail:pageTitle')}\n                              />\n                              <IntegrationDetailBreadcrumb\n                                editHref={editAction.href}\n                                editLabel={editAction.label}\n                                exportAction={exportAction.onClick}\n                                exportHref={exportAction.href}\n                                exportLabel={exportAction.label}\n                                homeHref={resolvers.dashboard.root()}\n                                i18nHome={t('shared:Home')}\n                                i18nIntegrations={t('shared:Integrations')}\n                                i18nPageTitle={t(\n                                  'integrations:detail:pageTitle'\n                                )}\n                                integrationId={data.id}\n                                integrationsHref={resolvers.integrations.list()}\n                                menuActions={breadcrumbMenuActions}\n                              />\n\n                              <IntegrationDetailInfo\n                                name={data.name}\n                                version={data.version}\n                              />\n                              <IntegrationDetailNavBar integration={data} />\n                              <IntegrationDetailSteps integration={data} />\n                              <IntegrationDetailDescription\n                                description={data.description}\n                                i18nNoDescription={t(\n                                  'integrations:detail:noDescription'\n                                )}\n                              />\n                              <IntegrationDetailHistoryListView\n                                editHref={editAction.href}\n                                editLabel={editAction.label}\n                                hasHistory={(data.deployments || []).length > 0}\n                                isDraft={data.isDraft}\n                                i18nTextDraft={t('shared:Draft')}\n                                i18nTextHistory={t(\n                                  'integrations:detail:History'\n                                )}\n                                publishAction={\n                                  canActivate(data)\n                                    ? startAction.onClick\n                                    : undefined\n                                }\n                                publishHref={\n                                  canActivate(data)\n                                    ? startAction.href\n                                    : undefined\n                                }\n                                publishLabel={\n                                  canActivate(data)\n                                    ? t('shared:Publish')\n                                    : undefined\n                                }\n                                children={(data.deployments || []).map(\n                                  (deployment, idx) => {\n                                    return (\n                                      <IntegrationDetailHistoryListViewItem\n                                        key={idx}\n                                        actions={\n                                          <IntegrationDetailHistoryListViewItemActions\n                                            actions={[]}\n                                            integrationId={data.id!}\n                                          />\n                                        }\n                                        currentState={deployment.currentState!}\n                                        i18nTextLastPublished={t(\n                                          'integrations:detail:lastPublished'\n                                        )}\n                                        i18nTextVersion={t('shared:Version')}\n                                        updatedAt={deployment.updatedAt}\n                                        version={deployment.version}\n                                      />\n                                    );\n                                  }\n                                )}\n                              />\n                            </>\n                          );\n                        }}\n                      </WithIntegrationActions>\n                    )}\n                  </WithLoader>\n                )}\n              </WithIntegration>\n            )}\n          </WithRouteData>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Metrics page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { createBrowserHistory } from '@syndesis/history';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { Router } from 'react-router-dom';\nimport { App } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router history={createBrowserHistory()}>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                icon: 'fa fa-tachometer-alt',\n                                label: 'Home',\n                                to: '/',\n                              },\n                              {\n                                component: IntegrationsModule,\n                                icon: 'pficon pficon-integration',\n                                label: 'Integrations',\n                                to: '/integrations',\n                              },\n                              {\n                                component: ConnectionsModule,\n                                icon: 'pficon pficon-plugged',\n                                label: 'Connections',\n                                to: '/connections',\n                              },\n                              {\n                                component: CustomizationsModule,\n                                icon: 'fa fa-cube',\n                                label: 'Customizations',\n                                to: '/customizations',\n                              },\n                              {\n                                component: DataModule,\n                                icon: 'fa fa-database',\n                                label: 'Data',\n                                to: '/data',\n                              },\n                              {\n                                component: SettingsModule,\n                                icon: 'pficon pficon-settings',\n                                label: 'Settings',\n                                to: '/settings',\n                              },\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={headers}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public constructor(props: IWithIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}