{"version":3,"sources":["modules/settings/routes.ts","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/integrations/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","i18n/locales/index.ts","i18n/index.ts","modules/integrations/resolvers.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailHistory.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/connections/resolvers.ts","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","app/AppContext.tsx","app/WithConfig.tsx","app/App.tsx","app/index.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","modules/data/resolvers.ts"],"names":["named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","React","_Pact","onFulfilled","onRejected","result","state","this","s","callback","_settle","e","o","_this","value","v","pact","then","observer","_catch","body","recover","const","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","Promise","resolve","returnValue","error","reject","callFetch","ref","method","includeAccept","includeContentType","includeReferrerPolicy","fetch","url","contentType","JSON","cache","credentials","Object","assign","mode","redirect","Fetch","constructor","props","read","bind","data","initialValue","defaultValue","hasData","loading","componentDidMount","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState","equal","render","children","response","setState","_this3","baseUrl","ok","Error","statusText","indexOf","text","_response$text","json","_response$json","deepmerge","errorMessage","message","Stream","reader","getReader","textDecoder","TextDecoder","pushData","concat","onSave","cancel","componentWillUnmount","SyndesisFetch","stream","FetchOrStream","createElement","Consumer","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","addConnection","deleteIntegration","deployIntegration","exportIntegration","importIntegration","saveIntegration","undeployIntegration","updateConnection","updateOrAddConnection","tagIntegration","getActionDescriptor","connectionId","actionId","configuredProperties","integration","connection","action","flowId","position","id","actionDescriptor","produce","draft","step","flows","map","f","Array","Set","file","fileName","blob","_body$blob","saveAs","version","isIntegrationDeployment","targetState","integrationId","environments","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","event","filter","WithApiConnectors","changeFilter","change","items","totalCount","disableUpdates","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","undefined","WithEnvironments","this$1","WithEnvironmentHelpersWrapped","createEnvironment","deleteEnvironment","renameEnvironment","name","stringifyBody","newName","WithExtension","extensionId","actions","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","isDraft","WithIntegrations","WithIntegrationTags","WithMonitoredIntegrations","getMonitoredIntegrations","integrations","i","monitoring","WithIntegrationsMetrics","errors","integrationDeploymentMetrics","lastProcessed","Date","now","messages","metricsProvider","start","topIntegrations","getConnectionsForDisplay","connections","c","metadata","getConnectionsWithFromAction","connector","some","getConnectionsWithToAction","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","a","getActionsWithTo","getConnectionIcon","icon","iconFile","File","URL","NEW_INTEGRATION","tags","getStep","getFlow","flow","getExtensionIcon","extension","getStepKindIcon","stepKind","getStepIcon","stepIndex","getStepsLastPosition","steps","filterStepsByPosition","atStart","atEnd","WithConnection","actionsWithFrom","actionsWithTo","WithConnectionHelpersWrapped","createConnection","deleteConnection","validateConfiguration","saveConnection","validateName","description","connectorId","values","proposedName","isError","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","connectorsForDisplay","obj","WithConnectors","WithOAuthAppHelpersWrapped","updateOAuthApp","deleteOAuthApp","app","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","webSocket","eventSource","startConnection","onFailure","reconnectIn","setTimeout","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","addEventListener","onError","WebSocket","onmessage","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","properties","requiresOutputDataShape","type","displayName","placeholder","required","rows","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","length","toLowerCase","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","inputDataShape","outputDataShape","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","idPattern","WithVirtualizationHelpersWrapped","createVirtualization","updateViewEditorStates","deleteView","deleteViewEditorState","deleteVirtualization","publishVirtualization","queryVirtualization","refreshVirtualizationViews","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","username","keng__id","serviceVdbName","tko__description","virtualization","viewName","vdbName","editorStateId","_this2","virtualizationName","pubVirtualization","sqlQuery","rowlimit","rowOffset","queryBody","limit","offset","query","target","viewEditorStateId","viewEditorStates","_this9","WithVirtualization","virtualizationId","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","descriptor","propertyDefinitionSteps","key","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","finish","configure","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","makeResolverNoParams","security","save","extensions","_ref2","update","_ref3","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","iframe","messageChannel","MessageChannel","onIframeLoad","onMessages","componentWillReceiveProps","prevPayload","_","nextPayload","updateDataMapperApp","removeEventListener","messagePort","port1","contentWindow","postMessage","port2","payload","onMappings","mappings","documentId","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDescription","outputDocumentType","outputInspectionType","outputName","srcDoc","style","width","height","frameBorder","allowtransparency","extraProps","el","en","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","dataEn","dataIt","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","configureIndexMapper","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","configureSelectConnectionMapper","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","configureConfigureActionMapper","_ref4","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","config","Helmet_default","title","WithClosedNavigation","context","AppContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","args","_key","call","nextContext","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_6__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_5__","idx","stepName","stepDescription","src","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","route","dashboard_resolvers","reverse","settings_resolvers","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","AppLayout","isNavOpen","onNavToggle","Header","PageHeader","logo","pictograph","logoProps","toolbar","appNav","showNavToggle","Sidebar","PageSidebar","nav","Nav","NavList","Page","header","sidebar","PageSection","AppTopMenu","isOpen","onToggle","onSelect","Dropdown","isPlain","toggle","DropdownToggle","dropdownItems","ButtonLink","size","Link","to","onClick","Loader","inline","Spinner","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","path","pathname","escapedPath","Route","match","isActive","childLocation","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","classNames","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","errorMsg","saving","asTextarea","onChange","Fragment","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","handleConfirm","success","handleChange","isEditing","renderValue","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","currentStep","totalSteps","logUrl","i18nLogUrlText","ProgressBar","max","PfDropdownItem","superclass","DropdownItem","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nIntegrations","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","validationError","NoErrors","htmlFor","i18nInputLabel","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","background","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","i18nTextDraft","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","currentState","Unpublished","states","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationStatus","labelType","Label","IntegrationStatusDetail","fallbackText","i18nProgressPending","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","InfoItem","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","onExport","onPublish","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","rawObject","window","PfBreadcrumb","Breadcrumb","margin","paddingLeft","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","targetIntegrationId","api","hasTags","tagError","hasEnvironments","environmentsError","utils","loaderChildren","errorChildren","mappedItems","stringify","Integrations","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","getPodLogUrl","pushNotification","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","mi","editAction","startAction","_handleAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","stop","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","exportAction","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","board","warnings","notices","detailedState","getStartIcon","apiEndpoint","getFinishIcon","IntegrationCreatorBreadcrumbs","toggleActive","activeSubstep","subStep","IntegrationDetailHistory","deployments","deployment","i18nTextVersion","IntegrationDetailSteps","getSteps","process","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailHistory_IntegrationDetailHistory","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","module","exports","p","virtualizations","relationship","sqlClient","views","importSource","selectConnection","selectViews","selectConnector","configureConnector","toFormDefinitionProperty","controlHint","controlTooltip","labelHint","labelTooltip","formDefinitionProperty","fieldAttributes","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","waitTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","WithConfig","_componentDidMount","configResponse","_config","sent","App","logout","removeNotificationAction","notifToRemove","n","msg","toConsumableArray","toString","linkType","namespace","podName","consoleUrl","data-testid","WithConfig_WithConfig","Provider","apiBase","datavirt","dvUrl","SYNDESIS-XSRF-TOKEN","functions","appTitle","renderAppNav","verticalNav","renderVerticalNav","minWidth","logoHref","onNavigationCollapse","onNavigationExpand","component","App_App","getValidationState","field","form","FormInputComponent","ControlLabel","FieldLevelHelp","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","touched","dirty","isValidating","resetForm","validateForm","submitForm","ConnectionCreatorBreadcrumbs","Connections","_x","_x2","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","valueToLower","includes","miA","miB","right","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","objectSpread","shouldValidateAgainstBackend","validateFormAgainstBackend","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","ConnectionDetailsPage","numUsedBy","history","dist_api","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","_context5","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","ConfigurationPage","ConnectorsPage","ReviewPage","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","i18nOverviewSectionTitle","i18nSupportsSectionTitle","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","iterator","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","sqlStatement","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","handleCreateViews","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","AddStepPage","getEditAddStepHref","stepIdx","getEditConfigureStepHrefCallback","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","IntegrationDetailNavBar","WithConfigurationForm","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","i18nSubtitle","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","ConfigureActionPage","_ref2$step","stepAsNumber","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","selectHref","SaveIntegrationPage","setIntegrationName","postSaveHref","_state$integration","getStepHref","uiStepKind","apiProviderHref","connectionHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","extentionsByAction","isArray","actionType","toStepKindCollection","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","ActivityPage","IntegrationDetailNavBar_IntegrationDetailNavBar","DetailsPage","showPromptDialog","draftActions","i18nTextHistory","MetricsPage","ImportPage","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","failed","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","BrowserRouter","document","getElementById","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c56dff05.chunk.js","sourcesContent":["import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={headers}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getStepIcon(apiUri, integration, flow.id!, flow.steps!.length - 1);\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  // The step is a connection\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithEventsState): any;\n}\n\nexport interface IWithEventsState {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<\n  IWithEventsProps,\n  IWithEventsState\n> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties,\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { AppContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(AppContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as H from 'history';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.connection!.connector!.name}\n                stepDescription={s.action!.name}\n                icon={<img src={s.connection!.icon} width={24} height={24} />}\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface ILayoutBase {\n  appTitle: string;\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport class AppLayout extends React.Component<ILayoutBase, ILayoutState> {\n  public onNavToggle: () => void;\n  constructor(props: ILayoutBase) {\n    super(props);\n    this.state = {\n      isNavOpen: true,\n    };\n    this.onNavToggle = () => {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen,\n      });\n    };\n  }\n\n  public componentDidMount() {\n    this.setState({\n      isNavOpen: this.props.showNavigation,\n    });\n  }\n\n  public render() {\n    const { isNavOpen } = this.state;\n\n    const Header = (\n      <PageHeader\n        logo={this.props.pictograph}\n        logoProps={{ href: '/' }}\n        toolbar={this.props.appNav}\n        showNavToggle={true}\n        isNavOpen={isNavOpen}\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = (\n      <PageSidebar\n        nav={\n          <Nav>\n            <NavList>{this.props.verticalNav}</NavList>\n          </Nav>\n        }\n        isNavOpen={isNavOpen}\n      />\n    );\n\n    return (\n      <Page header={Header} sidebar={Sidebar}>\n        <PageSection>{this.props.children}</PageSection>\n      </Page>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from 'history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport { IIntegrationAction } from './IntegrationActions';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  actions?: IIntegrationAction[];\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  this.props.actions\n                    ? this.props.actions.map((a, idx) => (\n                        <ButtonLink key={idx} to={a.href} onClick={a.onClick}>\n                          {a.label}\n                        </ButtonLink>\n                      ))\n                    : null\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        {this.props.version ? (\n          <>\n            <span className=\"pficon pficon-ok\" />\n            &nbsp;Published version {this.props.version}\n          </>\n        ) : (\n          'Stopped'\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from 'history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  getFinishIcon,\n  getStartIcon,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport interface IIntegrationsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class Integrations extends React.Component<\n  IIntegrationsProps,\n  IIntegrationsState\n> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ config, getPodLogUrl, pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => (\n                  <>\n                    {this.state.showCiCdPromptDialog && (\n                      <TagIntegrationDialogWrapper\n                        manageCiCdHref={resolvers.manageCicd.root()}\n                        tagIntegration={tagIntegration}\n                        targetIntegrationId={this.state.targetIntegrationId!}\n                        onSave={this.closeCiCdDialog}\n                        onHide={this.closeCiCdDialog}\n                      />\n                    )}\n                    {this.state.showActionPromptDialog && (\n                      <ConfirmationDialog\n                        buttonStyle={ConfirmationButtonStyle.NORMAL}\n                        i18nCancelButtonText={t('shared:Cancel')}\n                        i18nConfirmButtonText={\n                          this.state.promptDialogButtonText!\n                        }\n                        i18nConfirmationMessage={this.state.promptDialogText!}\n                        i18nTitle={this.state.promptDialogTitle!}\n                        icon={this.state.promptDialogIcon!}\n                        showDialog={this.state.showActionPromptDialog}\n                        onCancel={this.handleActionCancel}\n                        onConfirm={this.handleAction}\n                      />\n                    )}\n                    <IntegrationsList>\n                      <WithLoader\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        loaderChildren={<IntegrationsListSkeleton />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          this.props.integrations.map(\n                            (mi: IntegrationWithMonitoring) => {\n                              try {\n                                const editAction: IIntegrationAction = {\n                                  href: resolvers.integration.edit.index({\n                                    flowId: mi.integration.flows![0].id!,\n                                    integration: mi.integration,\n                                  }),\n                                  label: 'Edit',\n                                };\n                                const startAction: IIntegrationAction = {\n                                  label: 'Start',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: async () => {\n                                        pushNotification(\n                                          i18n.t(\n                                            'integrations:PublishingIntegrationMessage'\n                                          ),\n                                          'info'\n                                        );\n                                        try {\n                                          await deployIntegration(\n                                            mi.integration.id!,\n                                            mi.integration.version!,\n                                            false\n                                          );\n                                        } catch (err) {\n                                          pushNotification(\n                                            i18n.t(\n                                              'integrations.PublishingIntegrationFailedMessage',\n                                              { error: err }\n                                            ),\n                                            'warning'\n                                          );\n                                        }\n                                      },\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Start'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:publishIntegrationModal',\n                                        { name: mi.integration.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:publishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const stopAction: IIntegrationAction = {\n                                  label: 'Stop',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: async () => {\n                                        pushNotification(\n                                          i18n.t(\n                                            'integrations:UnpublishingIntegrationMessage'\n                                          ),\n                                          'info'\n                                        );\n                                        try {\n                                          undeployIntegration(\n                                            mi.integration.id!,\n                                            mi.integration.version!\n                                          );\n                                        } catch (err) {\n                                          pushNotification(\n                                            i18n.t(\n                                              'integrations.UnpublishingIntegrationFailedMessage',\n                                              { error: err }\n                                            ),\n                                            'warning'\n                                          );\n                                        }\n                                      },\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Stop'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:unpublishIntegrationModal',\n                                        { name: mi.integration.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:unpublishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const deleteAction: IIntegrationAction = {\n                                  label: 'Delete',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: async () => {\n                                        pushNotification(\n                                          i18n.t(\n                                            'integrations:DeletingIntegrationMessage'\n                                          ),\n                                          'info'\n                                        );\n                                        try {\n                                          await deleteIntegration(\n                                            mi.integration.id!\n                                          );\n                                        } catch (err) {\n                                          pushNotification(\n                                            i18n.t(\n                                              'integrations.DeletingIntegrationFailedMessage',\n                                              { error: err }\n                                            ),\n                                            'warning'\n                                          );\n                                        }\n                                      },\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.DANGER,\n                                      promptDialogButtonText: t(\n                                        'shared:Delete'\n                                      ),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.DANGER,\n                                      promptDialogText: t(\n                                        'integrations:deleteIntegrationModal',\n                                        { name: mi.integration.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:deleteIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const exportAction: IIntegrationAction = {\n                                  label: 'Export',\n                                  onClick: () =>\n                                    exportIntegration(\n                                      mi.integration.id!,\n                                      `${mi.integration.name}-export.zip`\n                                    ),\n                                };\n                                const ciCdAction: IIntegrationAction = {\n                                  label: 'Manage CI/CD',\n                                  onClick: () => {\n                                    this.promptForCiCd(mi.integration.id!);\n                                  },\n                                };\n                                const actions: IIntegrationAction[] = [];\n                                if (canEdit(mi.integration)) {\n                                  actions.push(editAction);\n                                }\n                                if (canActivate(mi.integration)) {\n                                  actions.push(startAction);\n                                }\n                                if (canDeactivate(mi.integration)) {\n                                  actions.push(stopAction);\n                                }\n                                actions.push(deleteAction);\n                                actions.push(exportAction);\n                                actions.push(ciCdAction);\n                                return (\n                                  <IntegrationsListItem\n                                    key={mi.integration.id}\n                                    integrationName={mi.integration.name}\n                                    currentState={mi.integration!.currentState!}\n                                    targetState={mi.integration!.targetState!}\n                                    isConfigurationRequired={\n                                      !!(\n                                        mi.integration!.board!.warnings ||\n                                        mi.integration!.board!.errors ||\n                                        mi.integration!.board!.notices\n                                      )\n                                    }\n                                    monitoringValue={\n                                      mi.monitoring &&\n                                      t(\n                                        'integrations:' +\n                                          mi.monitoring.detailedState.value\n                                      )\n                                    }\n                                    monitoringCurrentStep={\n                                      mi.monitoring &&\n                                      mi.monitoring.detailedState.currentStep\n                                    }\n                                    monitoringTotalSteps={\n                                      mi.monitoring &&\n                                      mi.monitoring.detailedState.totalSteps\n                                    }\n                                    monitoringLogUrl={getPodLogUrl(\n                                      config,\n                                      mi.monitoring\n                                    )}\n                                    startConnectionIcon={getStartIcon(\n                                      config.apiEndpoint,\n                                      mi.integration\n                                    )}\n                                    finishConnectionIcon={getFinishIcon(\n                                      config.apiEndpoint,\n                                      mi.integration\n                                    )}\n                                    actions={\n                                      <IntegrationActions\n                                        integrationId={mi.integration!.id!}\n                                        actions={actions}\n                                        detailsHref={resolvers.integration.details(\n                                          { integrationId: mi.integration.id! }\n                                        )}\n                                      />\n                                    }\n                                    i18nConfigurationRequired={t(\n                                      'integrations:ConfigurationRequired'\n                                    )}\n                                    i18nError={t('shared:Error')}\n                                    i18nPublished={t('shared:Published')}\n                                    i18nUnpublished={t('shared:Unpublished')}\n                                    i18nProgressPending={t('shared:Pending')}\n                                    i18nProgressStarting={t(\n                                      'integrations:progressStarting'\n                                    )}\n                                    i18nProgressStopping={t(\n                                      'integrations:progressStopping'\n                                    )}\n                                    i18nLogUrlText={t('shared:viewLogs')}\n                                  />\n                                );\n                              } catch (e) {\n                                return (\n                                  <IntegrationsListItemUnreadable\n                                    key={mi.integration.id}\n                                    integrationName={\n                                      (mi &&\n                                        mi.integration &&\n                                        mi.integration.name) ||\n                                      'An integration'\n                                    }\n                                    i18nDescription={\n                                      \"Sorry, we can't display more information about this integration right now.\"\n                                    }\n                                    rawObject={JSON.stringify(\n                                      mi.integration,\n                                      null,\n                                      2\n                                    )}\n                                  />\n                                );\n                              }\n                            }\n                          )\n                        }\n                      </WithLoader>\n                    </IntegrationsList>\n                  </>\n                )}\n              </WithIntegrationHelpers>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { IntegrationDeploymentOverview } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationDetailHistoryListViewItem,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IIntegrationDetailDeploymentsProps {\n  actions: any;\n  deployments: IntegrationDeploymentOverview[];\n  integrationId: string;\n  updatedAt: number;\n  version: number;\n}\n\nexport class IntegrationDetailHistory extends React.Component<\n  IIntegrationDetailDeploymentsProps\n> {\n  public render() {\n    const deployments = this.props.deployments ? this.props.deployments : [];\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t =>\n          deployments.map((deployment, idx) => {\n            return (\n              <IntegrationDetailHistoryListViewItem\n                key={idx}\n                actions={\n                  <IntegrationActions\n                    integrationId={this.props.integrationId}\n                    actions={this.props.actions}\n                  />\n                }\n                currentState={deployment.currentState!}\n                i18nTextLastPublished={t('integrations:detail:lastPublished')}\n                i18nTextVersion={t('shared:Version')}\n                updatedAt={deployment.updatedAt}\n                version={deployment.version}\n              />\n            );\n          })\n        }\n      </Translation>\n    );\n  }\n}\n","import { getStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailHistory';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.Component<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    config: IConfigFile,\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n  logout(): void;\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { IntegrationMonitoring } from '@syndesis/models';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Loader,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n  UnrecoverableError,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouter } from '@syndesis/utils';\nimport i18next from 'i18next';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { IConfigFile, WithConfig } from './WithConfig';\n\nimport logo from './syndesis_logo_full_darkbkg.svg';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  routes: IAppRoute[];\n}\n\nexport interface IAppBaseState {\n  showNavigation: boolean;\n  notifications: INotification[];\n}\n\nexport class App extends React.Component<IAppBaseProps, IAppBaseState> {\n  public state = {\n    notifications: [],\n    showNavigation: true,\n  };\n\n  constructor(props: IAppBaseProps) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.getPodLogUrl = this.getPodLogUrl.bind(this);\n    this.hideNavigation = this.hideNavigation.bind(this);\n    this.showNavigation = this.showNavigation.bind(this);\n    this.pushNotification = this.pushNotification.bind(this);\n    this.removeNotificationAction = this.removeNotificationAction.bind(this);\n  }\n\n  public removeNotificationAction(notifToRemove: INotification) {\n    const notifications = this.state.notifications.filter(\n      (n: INotification) => n.key !== notifToRemove.key\n    );\n\n    this.setState({\n      notifications,\n    });\n  }\n\n  public pushNotification(msg: string, type: INotificationType) {\n    this.setState({\n      notifications: [\n        ...this.state.notifications,\n        {\n          key: Date.now().toString(),\n          message: msg,\n          type,\n        },\n      ],\n    });\n  }\n\n  public logout() {\n    // do nothing\n  }\n\n  public getPodLogUrl(\n    config: IConfigFile,\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  }\n\n  public hideNavigation(): void {\n    this.setState({\n      showNavigation: false,\n    });\n  }\n\n  public showNavigation(): void {\n    this.setState({\n      showNavigation: true,\n    });\n  }\n\n  public renderAppNav(t: i18next.TFunction) {\n    return (\n      <AppTopMenu username={'developer'}>\n        <PfDropdownItem>\n          <Link\n            to={'/logout'}\n            className=\"pf-c-dropdown__menu-item\"\n            children={t('Logout')}\n          />\n        </PfDropdownItem>\n      </AppTopMenu>\n    );\n  }\n\n  public renderVerticalNav() {\n    return this.props.routes.map(({ exact, icon, label, to }, index) => (\n      <PfVerticalNavItem\n        exact={exact}\n        icon={icon}\n        label={label}\n        to={to}\n        key={index}\n        data-testid={`navbar-link-${to}`}\n      />\n    ));\n  }\n\n  public render() {\n    return (\n      <Translation ns={['app', 'shared']}>\n        {t => (\n          <WithConfig>\n            {({ config, loading, error }) => (\n              <WithLoader\n                loading={loading}\n                error={error}\n                loaderChildren={<Loader />}\n                errorChildren={\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                }\n                minWait={1000}\n              >\n                {() => (\n                  <AppContext.Provider\n                    value={{\n                      config: config!,\n                      getPodLogUrl: this.getPodLogUrl,\n                      hideNavigation: this.hideNavigation,\n                      logout: this.logout,\n                      pushNotification: this.pushNotification,\n                      showNavigation: this.showNavigation,\n                    }}\n                  >\n                    <ApiContext.Provider\n                      value={{\n                        apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                        dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                        headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                      }}\n                    >\n                      <ApiContext.Consumer>\n                        {({ apiUri, headers }) => (\n                          <WithServerEvents apiUri={apiUri} headers={headers}>\n                            {functions => (\n                              <ServerEventsContext.Provider value={functions}>\n                                <AppLayout\n                                  appTitle={'Syndesis'}\n                                  appNav={this.renderAppNav(t)}\n                                  verticalNav={this.renderVerticalNav()}\n                                  pictograph={\n                                    <img\n                                      src={logo}\n                                      alt=\"Syndesis\"\n                                      style={{ minWidth: '164px' }}\n                                    />\n                                  }\n                                  logoHref={'/'}\n                                  showNavigation={this.state.showNavigation}\n                                  onNavigationCollapse={this.hideNavigation}\n                                  onNavigationExpand={this.showNavigation}\n                                >\n                                  <Notifications\n                                    notifications={this.state.notifications}\n                                    notificationTimerDelay={8000}\n                                    removeNotificationAction={\n                                      this.removeNotificationAction\n                                    }\n                                  />\n                                  <WithRouter>\n                                    {({ match }) => (\n                                      <WithErrorBoundary key={match.url}>\n                                        <Switch>\n                                          {this.props.routes.map(\n                                            (\n                                              { to, exact, component },\n                                              index\n                                            ) => (\n                                              <Route\n                                                path={to}\n                                                exact={exact}\n                                                component={component}\n                                                key={index}\n                                              />\n                                            )\n                                          )}\n                                          <Route component={PageNotFound} />\n                                        </Switch>\n                                      </WithErrorBoundary>\n                                    )}\n                                  </WithRouter>\n                                </AppLayout>\n                              </ServerEventsContext.Provider>\n                            )}\n                          </WithServerEvents>\n                        )}\n                      </ApiContext.Consumer>\n                    </ApiContext.Provider>\n                  </AppContext.Provider>\n                )}\n              </WithLoader>\n            )}\n          </WithConfig>\n        )}\n      </Translation>\n    );\n  }\n}\n","export * from './App';\nexport * from './AppContext';\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c,\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { AppContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { getSteps } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\n\nexport interface IAddStepPageProps {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  getEditConfigureStepHrefCallback: (\n    stepIdx: number,\n    step: Step,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(stepIdx: number, step: Step) =>\n                      this.props.getEditConfigureStepHrefCallback(\n                        stepIdx,\n                        step,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getEmptyIntegration,\n  getExtensionIcon,\n  getStepKindIcon,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './interfaces';\n\nexport interface IUIStep extends StepKind {\n  icon: string;\n  uiStepKind: 'api-provider' | StepKind['stepKind'];\n}\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n\ntype StepKindHrefCallback = (\n  connection: ConnectionOverview,\n  p: ISelectConnectionRouteParams,\n  s: ISelectConnectionRouteState\n) => H.LocationDescriptorObject;\n\nexport interface ISelectConnectionPageProps {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const getStepHref = (step: IUIStep) => {\n            switch (step.uiStepKind) {\n              case 'api-provider':\n                return this.props.apiProviderHref(step, params, state);\n              case 'endpoint':\n              case 'connector':\n                return this.props.connectionHref(\n                  step as ConnectionOverview,\n                  params,\n                  state\n                );\n              case 'expressionFilter':\n              case 'ruleFilter':\n                return this.props.filterHref(step, params, state);\n              case 'extension':\n                return this.props.extensionHref(step, params, state);\n              case 'mapper':\n                return this.props.mapperHref(step, params, state);\n              case 'headers':\n                throw new Error(`Can't handle stepKind ${step.stepKind}`);\n              case 'template':\n                return this.props.templateHref(step, params, state);\n              case 'choice':\n              case 'split':\n              case 'aggregate':\n              case 'log':\n              default:\n                return this.props.stepHref(step, params, state);\n            }\n          };\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <IntegrationEditorConnectionsListItem\n                                              key={idx}\n                                              integrationName={step.name}\n                                              integrationDescription={\n                                                step.description ||\n                                                'No description available.'\n                                              }\n                                              icon={\n                                                <img\n                                                  src={step.icon}\n                                                  width={24}\n                                                  height={24}\n                                                />\n                                              }\n                                              actions={\n                                                <ButtonLink\n                                                  href={getStepHref(step)}\n                                                >\n                                                  Select\n                                                </ButtonLink>\n                                              }\n                                            />\n                                          )\n                                        )}\n                                        <IntegrationEditorConnectionsListItem\n                                          integrationName={''}\n                                          integrationDescription={''}\n                                          icon={''}\n                                          actions={\n                                            <ButtonLink href={'#'}>\n                                              Create connection\n                                            </ButtonLink>\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    getEditConfigureStepHrefCallback={(stepIdx, step, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        position: `${stepIdx}`,\n        ...p,\n        ...s,\n      })\n    }\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    getEditConfigureStepHrefCallback={(stepIdx, step, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        position: `${stepIdx}`,\n        ...p,\n        ...s,\n      })\n    }\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IActivityPageParams, IActivityPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Activity page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegration,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailInfo,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport {\n  IntegrationDetailHistory,\n  IntegrationDetailSteps,\n} from '../../components';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\nexport interface IIntegrationDetailsPageState {\n  handleAction?: () => void;\n  integration?: IIntegrationOverviewWithDraft;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  showPromptDialog?: boolean;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonStyle: ConfirmationButtonStyle;\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<\n  IIntegrationDetailsPageProps,\n  IIntegrationDetailsPageState\n> {\n  public constructor(props: IIntegrationDetailsPageProps) {\n    super(props);\n    this.state = {\n      showPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      ...options,\n      showPromptDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IIntegrationDetailsRouteParams, null>>\n        {({ integrationId }) => {\n          return (\n            <WithIntegrationHelpers>\n              {({\n                deleteIntegration,\n                deployIntegration,\n                exportIntegration,\n                undeployIntegration,\n              }) => {\n                return (\n                  <WithIntegration integrationId={integrationId}>\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<div>TODO</div>}\n                      >\n                        {() => (\n                          <div>\n                            <Translation ns={['integrations', 'shared']}>\n                              {t => {\n                                const deployments = data.deployments\n                                  ? data.deployments\n                                  : [];\n                                const editAction: IIntegrationAction = {\n                                  href: resolvers.integration.edit.index({\n                                    flowId: '0',\n                                    integration: data,\n                                  }),\n                                  label: 'Edit',\n                                };\n                                const startAction: IIntegrationAction = {\n                                  label: 'Start',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deployIntegration(\n                                          data.id!,\n                                          data.version!,\n                                          false\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Start'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:publishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:publishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const stopAction: IIntegrationAction = {\n                                  label: 'Stop',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        undeployIntegration(\n                                          data.id!,\n                                          data.version!\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Stop'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:unpublishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:unpublishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const deleteAction: IIntegrationAction = {\n                                  label: 'Delete',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deleteIntegration(data.id!),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.DANGER,\n                                      promptDialogButtonText: t(\n                                        'shared:Delete'\n                                      ),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.DANGER,\n                                      promptDialogText: t(\n                                        'integrations:deleteIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:deleteIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const exportAction: IIntegrationAction = {\n                                  label: 'Export',\n                                  onClick: () =>\n                                    exportIntegration(\n                                      data.id!,\n                                      `${data.name}-export.zip`\n                                    ),\n                                };\n\n                                const actions: IIntegrationAction[] = [];\n                                const draftActions: IIntegrationAction[] = [];\n                                if (canActivate(data)) {\n                                  data.isDraft\n                                    ? draftActions.push(startAction)\n                                    : actions.push(startAction);\n                                }\n                                if (canEdit(data)) {\n                                  data.isDraft\n                                    ? draftActions.push(editAction)\n                                    : actions.push(editAction);\n                                }\n                                if (canDeactivate(data)) {\n                                  actions.push(stopAction);\n                                }\n                                actions.push(deleteAction);\n                                actions.push(exportAction);\n\n                                return (\n                                  <>\n                                    <ConfirmationDialog\n                                      buttonStyle={\n                                        ConfirmationButtonStyle.NORMAL\n                                      }\n                                      i18nCancelButtonText={t('shared:Cancel')}\n                                      i18nConfirmButtonText={\n                                        this.state.promptDialogButtonText!\n                                      }\n                                      i18nConfirmationMessage={\n                                        this.state.promptDialogText!\n                                      }\n                                      i18nTitle={this.state.promptDialogTitle!}\n                                      icon={this.state.promptDialogIcon!}\n                                      showDialog={this.state.showPromptDialog!}\n                                      onCancel={this.handleActionCancel}\n                                      onConfirm={this.handleAction}\n                                    />\n                                    <IntegrationDetailInfo\n                                      name={data.name}\n                                      version={data.version}\n                                    />\n                                    <IntegrationDetailNavBar\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailDescription\n                                      description={data.description}\n                                      i18nNoDescription={t(\n                                        'integrations:detail:noDescription'\n                                      )}\n                                    />\n                                    <IntegrationDetailHistoryListView\n                                      actions={draftActions}\n                                      hasHistory={deployments.length > 0}\n                                      isDraft={data.isDraft}\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      children={\n                                        <IntegrationDetailHistory\n                                          actions={actions}\n                                          deployments={deployments}\n                                          integrationId={data.id!}\n                                          updatedAt={data.updatedAt!}\n                                          version={data.version!}\n                                        />\n                                      }\n                                    />\n                                  </>\n                                );\n                              }}\n                            </Translation>\n                          </div>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithIntegration>\n                );\n              }}\n            </WithIntegrationHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Metrics page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './app';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router>\n    <I18nextProvider i18n={i18n}>\n      <Translation ns={['shared']}>\n        {t => (\n          <App\n            routes={[\n              {\n                component: DashboardModule,\n                exact: true,\n                icon: 'fa fa-tachometer-alt',\n                label: t('Home'),\n                to: '/',\n              },\n              {\n                component: IntegrationsModule,\n                icon: 'pficon pficon-integration',\n                label: t('Integrations'),\n                to: '/integrations',\n              },\n              {\n                component: ConnectionsModule,\n                icon: 'pficon pficon-plugged',\n                label: t('Connections'),\n                to: '/connections',\n              },\n              {\n                component: CustomizationsModule,\n                icon: 'fa fa-cube',\n                label: t('Customizations'),\n                to: '/customizations',\n              },\n              {\n                component: DataModule,\n                icon: 'fa fa-database',\n                label: t('Data'),\n                to: '/data',\n              },\n              {\n                component: SettingsModule,\n                icon: 'pficon pficon-settings',\n                label: t('Settings'),\n                to: '/settings',\n              },\n            ]}\n          />\n        )}\n      </Translation>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}