{"version":3,"sources":["modules/settings/routes.ts","modules/integrations/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","modules/integrations/resolvers.ts","i18n/locales/index.ts","i18n/index.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","modules/dashboard/routes.ts","modules/integrations/components/TagIntegrationDialogWrapper.tsx","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailBreadcrumb.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/connections/resolvers.ts","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","app/WithConfig.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/data/resolvers.ts"],"names":["named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","step","extension","connection","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","start","finish","configure","integration","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","id","state","makeResolverNoParams","security","save","extensions","_ref2","extensionId","update","_ref3","const","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","constructor","props","iframe","messageChannel","MessageChannel","onIframeLoad","this","bind","onMessages","componentDidMount","addEventListener","componentWillReceiveProps","nextProps","prevPayload","_","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","message","payload","onMappings","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","React","createElement","Object","assign","style","width","height","frameBorder","allowtransparency","extraProps","ref","el","configureIndexMapper","flowId","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","flows","integrationId","configureSelectConnectionMapper","position","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","connectionId","configureConfigureActionMapper","_ref4","actionId","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","getStep","concat","configuredProperties","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","Error","en","app","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connections","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","data","dataEn","dataIt","integrations","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","error","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","Consumer","config","Helmet_default","a","title","WithClosedNavigation","children","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","length","args","Array","_key","call","setState","nextContext","undefined","_this2","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","steps","map","s","idx","stepName","name","stepDescription","action","icon","src","getStepIcon","process","actions","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","route","dashboard_resolvers","reverse","settings_resolvers","TagIntegrationDialogWrapper","handleSave","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","items","onSave","newEnvironments","filter","item","selected","tagIntegration","targetIntegrationId","react__WEBPACK_IMPORTED_MODULE_9__","react_i18next__WEBPACK_IMPORTED_MODULE_10__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_7__","i18nCancelButtonText","i18nSaveButtonText","onHide","handleChange","_syndesis_api__WEBPACK_IMPORTED_MODULE_6__","tags","hasTags","hasData","tagError","disableUpdates","environments","hasEnvironments","environmentsError","_syndesis_utils__WEBPACK_IMPORTED_MODULE_8__","loading","loaderChildren","errorChildren","_shared__WEBPACK_IMPORTED_MODULE_11__","mappedItems","JSON","stringify","initialItems","onChange","manageCiCdHref","i18nEmptyStateTitle","i18nEmptyStateInfo","i18nEmptyStateButtonText","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","ok","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","body","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","file","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","AppTopMenu","isOpen","onToggle","onSelect","username","Dropdown","isPlain","toggle","DropdownToggle","dropdownItems","ButtonLink","size","Link","to","onClick","Breadcrumb","PfBreadcrumb","background","margin","paddingLeft","c","Loader","inline","Spinner","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","path","pathname","escapedPath","Route","match","isActive","childLocation","i","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","classNames","obj","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","placeholder","errorMsg","saving","asTextarea","Fragment","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","then","result","e","handleConfirm","success","isEditing","renderValue","v","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cache","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","currentStep","totalSteps","logUrl","target","i18nLogUrlText","ProgressBar","now","max","PfDropdownItem","superclass","DropdownItem","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","description","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rows","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","topIntegrations","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nIntegrations","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","validationError","NoErrors","htmlFor","i18nInputLabel","defaultValue","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","version","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailBreadcrumb","Level","gutter","LevelItem","homeHref","i18nHome","integrationsHref","exportHref","exportAction","exportLabel","editLabel","menuActions","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","isDraft","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","currentState","Unpublished","states","IntegrationDetailHistoryListViewItemActions","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","Date","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationStatus","labelType","Label","IntegrationStatusDetail","fallbackText","i18nProgressPending","targetState","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","InfoItem","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","viewName","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","virtualizationName","onExport","onPublish","serviceVdbName","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","rawObject","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onNavToggle","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","PageSection","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","Integrations","showActionPromptDialog","showCiCdPromptDialog","handleAction","assertThisInitialized","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","getPodLogUrl","pushNotification","api","deleteIntegration","deployIntegration","exportIntegration","undeployIntegration","utils","mi","editAction","startAction","_handleAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","stop","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","board","warnings","errors","notices","monitoring","detailedState","getStartIcon","getFinishIcon","IntegrationCreatorBreadcrumbs","toggleActive","activeSubstep","subStep","IntegrationDetailSteps","getSteps","connector","getIntegrationStepIcon","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","stepKind","getConnectionIcon","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","module","exports","p","virtualizations","virtualization","relationship","sqlClient","views","importSource","selectConnection","selectViews","selectConnector","configureConnector","connectorId","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","setNotifications","onRemoveNotification","n","Provider","msg","toConsumableArray","toString","data-testid","minWidth","removeNotificationAction","url","component","App","linkType","namespace","podName","baseUrl","consoleUrl","logout","UI_UI","App_App","toFormDefinitionProperty","controlHint","controlTooltip","labelHint","labelTooltip","formDefinitionProperty","fieldAttributes","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","componentDidUpdate","prevProps","waitTimeout","setTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","properties","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","getValidationState","field","form","FormInputComponent","ControlLabel","displayName","FieldLevelHelp","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","initialValue","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","required","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","values","touched","dirty","isValidating","resetForm","validateForm","submitForm","this$1","ConnectionCreatorBreadcrumbs","Connections","deleteConnection","_x","_x2","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","forEach","valueToLower","toLowerCase","includes","miA","miB","right","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","objectSpread","validateConfiguration","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","WithConfig","_componentDidMount","configResponse","_config","fetch","json","ConnectionDetailsPage","numUsedBy","history","dist_api","updateConnection","saveConnection","validateName","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","proposedName","response","_context5","isError","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","connectionsForDisplay","ConfigurationPage","ConnectorsPage","connectorsForDisplay","ReviewPage","createConnection","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","deleteExtension","i18nOverviewSectionTitle","i18nSupportsSectionTitle","extensionType","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","text","fileName","importExtension","uploadExtension","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","virtualizationId","keng__id","tko__description","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Symbol","iterator","done","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","rowOffset","sqlStatement","queryVirtualization","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","refreshVirtualizationViews","handleCreateViews","viewEditorStates","idPattern","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","virtName","createVirtualization","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","read","deleteVirtualization","publishVirtualization","unpublishServiceVdb","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","publishedState","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","deleteView","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","IntegrationDetailNavBar","WithConfigurationForm","descriptor","getActionDescriptor","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","i18nSubtitle","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","ConfigureActionPage","addConnection","_ref2$step","stepAsNumber","mode","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","actionsWithTo","actionsWithFrom","selectHref","SaveIntegrationPage","saveIntegration","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","propertyDefinitionSteps","actionType","getExtensionIcon","getStepKindIcon","toStepKindCollection","connectionsWithFromAction","connectionsWithToAction","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","ActivityPage","IntegrationDetailNavBar_IntegrationDetailNavBar","DetailsPage","deployments","breadcrumbMenuActions","i18nTextHistory","deployment","i18nTextVersion","MetricsPage","ImportPage","importIntegration","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","failed","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","flow","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","indexOf","createEnvironment","deleteEnvironment","renameEnvironment","newName","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","deleteOAuthApp","apiUri","updateOAuthApp","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","BrowserRouter","WithConfig_WithConfig","apiBase","apiEndpoint","dvApiUri","datavirt","dvUrl","headers","SYNDESIS-XSRF-TOKEN","functions","document","getElementById","URL","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ApiContextDefaultValue","ApiContext","_Pact","onFulfilled","onRejected","callback","_settle","o","pact","observer","_catch","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","_wrapYieldedValue","Promise","resolve","returnValue","reject","callFetch","method","includeAccept","includeContentType","includeReferrerPolicy","contentType","credentials","redirect","Fetch","nextState","_this3","statusText","_response$text","_response$json","deepmerge","errorMessage","Stream","reader","getReader","textDecoder","TextDecoder","pushData","cancel","SyndesisFetch","stream","FetchOrStream","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","updateOrAddConnection","actionDescriptor","produce","draft","f","Set","blob","_body$blob","saveAs","isIntegrationDeployment","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","WithApiConnectors","changeFilter","change","totalCount","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","WithEnvironments","WithEnvironmentHelpersWrapped","stringifyBody","WithExtension","schemaVersion","WithExtensionHelpersWrapped","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","WithIntegrations","WithIntegrationTags","WithMonitoredIntegrations","getMonitoredIntegrations","WithIntegrationsMetrics","integrationDeploymentMetrics","lastProcessed","messages","metricsProvider","getConnectionsForDisplay","metadata","getConnectionsWithFromAction","some","getConnectionsWithToAction","transformResponse","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","getActionsWithTo","iconFile","File","NEW_INTEGRATION","getFlow","stepIndex","getStepsLastPosition","filterStepsByPosition","atStart","atEnd","WithConnection","WithConnectionHelpersWrapped","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","WithConnectors","WithOAuthAppHelpersWrapped","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","webSocket","eventSource","startConnection","onFailure","reconnectIn","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","postChangeEvent","changeEvent","EventSource","onError","WebSocket","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","requiresOutputDataShape","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","WithVirtualizationHelpersWrapped","updateViewEditorStates","deleteViewEditorState","virtDesc","newVirtualization","keng__dataPath","vdbName","editorStateId","pubVirtualization","sqlQuery","rowlimit","queryBody","limit","offset","query","viewEditorStateId","_this9","WithVirtualization","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob"],"mappings":"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","file":"static/js/main.7a1763a4.chunk.js","sourcesContent":["import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as H from 'history';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from 'history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Level, LevelItem } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../Layout';\nimport { IMenuActions } from '../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Level gutter={'md'} className={'integration-detail__breadcrumb'}>\n        <LevelItem>\n          <Breadcrumb>\n            <span>\n              <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n            </span>\n            <span>\n              <Link to={this.props.integrationsHref!}>\n                {this.props.i18nIntegrations}\n              </Link>\n            </span>\n            <span>{this.props.i18nPageTitle}</span>\n          </Breadcrumb>\n        </LevelItem>\n        <LevelItem>\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        </LevelItem>\n      </Level>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  <>\n                    <ButtonLink\n                      to={this.props.publishHref}\n                      onClick={this.props.publishAction}\n                      children={this.props.publishLabel}\n                    />\n                    <ButtonLink\n                      href={this.props.editHref}\n                      children={this.props.editLabel}\n                    />\n                  </>\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        {this.props.version ? (\n          <>\n            <span className=\"pficon pficon-ok\" />\n            &nbsp;Published version {this.props.version}\n          </>\n        ) : (\n          'Stopped'\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from 'history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n  return (\n    <Page\n      header={\n        <PageHeader\n          logo={pictograph}\n          logoProps={{ href: logoHref }}\n          toolbar={appNav}\n          showNavToggle={true}\n          isNavOpen={showNavigation}\n          onNavToggle={onNavToggle}\n        />\n      }\n      sidebar={\n        <PageSidebar\n          nav={\n            <Nav>\n              <NavList>{verticalNav}</NavList>\n            </Nav>\n          }\n          isNavOpen={showNavigation}\n        />\n      }\n    >\n      <PageSection>{children}</PageSection>\n    </Page>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  getFinishIcon,\n  getStartIcon,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext, UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport interface IIntegrationsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class Integrations extends React.Component<\n  IIntegrationsProps,\n  IIntegrationsState\n> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <UIContext.Consumer>\n                {({ pushNotification }) => (\n                  <WithIntegrationHelpers>\n                    {({\n                      deleteIntegration,\n                      deployIntegration,\n                      exportIntegration,\n                      undeployIntegration,\n                      tagIntegration,\n                    }) => (\n                      <>\n                        {this.state.showCiCdPromptDialog && (\n                          <TagIntegrationDialogWrapper\n                            manageCiCdHref={resolvers.manageCicd.root()}\n                            tagIntegration={tagIntegration}\n                            targetIntegrationId={\n                              this.state.targetIntegrationId!\n                            }\n                            onSave={this.closeCiCdDialog}\n                            onHide={this.closeCiCdDialog}\n                          />\n                        )}\n                        {this.state.showActionPromptDialog && (\n                          <ConfirmationDialog\n                            buttonStyle={ConfirmationButtonStyle.NORMAL}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nConfirmButtonText={\n                              this.state.promptDialogButtonText!\n                            }\n                            i18nConfirmationMessage={\n                              this.state.promptDialogText!\n                            }\n                            i18nTitle={this.state.promptDialogTitle!}\n                            icon={this.state.promptDialogIcon!}\n                            showDialog={this.state.showActionPromptDialog}\n                            onCancel={this.handleActionCancel}\n                            onConfirm={this.handleAction}\n                          />\n                        )}\n                        <IntegrationsList>\n                          <WithLoader\n                            error={this.props.error}\n                            loading={this.props.loading}\n                            loaderChildren={<IntegrationsListSkeleton />}\n                            errorChildren={<ApiError />}\n                          >\n                            {() =>\n                              this.props.integrations.map(\n                                (mi: IntegrationWithMonitoring) => {\n                                  try {\n                                    const editAction: IIntegrationAction = {\n                                      href: resolvers.integration.edit.index({\n                                        flowId: mi.integration.flows![0].id!,\n                                        integration: mi.integration,\n                                      }),\n                                      label: 'Edit',\n                                    };\n                                    const startAction: IIntegrationAction = {\n                                      label: 'Start',\n                                      onClick: () =>\n                                        this.promptForAction({\n                                          handleAction: async () => {\n                                            pushNotification(\n                                              i18n.t(\n                                                'integrations:PublishingIntegrationMessage'\n                                              ),\n                                              'info'\n                                            );\n                                            try {\n                                              await deployIntegration(\n                                                mi.integration.id!,\n                                                mi.integration.version!,\n                                                false\n                                              );\n                                            } catch (err) {\n                                              pushNotification(\n                                                i18n.t(\n                                                  'integrations.PublishingIntegrationFailedMessage',\n                                                  { error: err }\n                                                ),\n                                                'warning'\n                                              );\n                                            }\n                                          },\n                                          promptDialogButtonStyle:\n                                            ConfirmationButtonStyle.NORMAL,\n                                          promptDialogButtonText: t(\n                                            'shared:Start'\n                                          ),\n                                          promptDialogIcon:\n                                            ConfirmationIconType.NONE,\n                                          promptDialogText: t(\n                                            'integrations:publishIntegrationModal',\n                                            { name: mi.integration.name }\n                                          ),\n                                          promptDialogTitle: t(\n                                            'integrations:publishIntegrationModalTitle'\n                                          ),\n                                        } as IPromptActionOptions),\n                                    };\n                                    const stopAction: IIntegrationAction = {\n                                      label: 'Stop',\n                                      onClick: () =>\n                                        this.promptForAction({\n                                          handleAction: async () => {\n                                            pushNotification(\n                                              i18n.t(\n                                                'integrations:UnpublishingIntegrationMessage'\n                                              ),\n                                              'info'\n                                            );\n                                            try {\n                                              undeployIntegration(\n                                                mi.integration.id!,\n                                                mi.integration.version!\n                                              );\n                                            } catch (err) {\n                                              pushNotification(\n                                                i18n.t(\n                                                  'integrations.UnpublishingIntegrationFailedMessage',\n                                                  { error: err }\n                                                ),\n                                                'warning'\n                                              );\n                                            }\n                                          },\n                                          promptDialogButtonStyle:\n                                            ConfirmationButtonStyle.NORMAL,\n                                          promptDialogButtonText: t(\n                                            'shared:Stop'\n                                          ),\n                                          promptDialogIcon:\n                                            ConfirmationIconType.NONE,\n                                          promptDialogText: t(\n                                            'integrations:unpublishIntegrationModal',\n                                            { name: mi.integration.name }\n                                          ),\n                                          promptDialogTitle: t(\n                                            'integrations:unpublishIntegrationModalTitle'\n                                          ),\n                                        } as IPromptActionOptions),\n                                    };\n                                    const deleteAction: IIntegrationAction = {\n                                      label: 'Delete',\n                                      onClick: () =>\n                                        this.promptForAction({\n                                          handleAction: async () => {\n                                            pushNotification(\n                                              i18n.t(\n                                                'integrations:DeletingIntegrationMessage'\n                                              ),\n                                              'info'\n                                            );\n                                            try {\n                                              await deleteIntegration(\n                                                mi.integration.id!\n                                              );\n                                            } catch (err) {\n                                              pushNotification(\n                                                i18n.t(\n                                                  'integrations.DeletingIntegrationFailedMessage',\n                                                  { error: err }\n                                                ),\n                                                'warning'\n                                              );\n                                            }\n                                          },\n                                          promptDialogButtonStyle:\n                                            ConfirmationButtonStyle.DANGER,\n                                          promptDialogButtonText: t(\n                                            'shared:Delete'\n                                          ),\n                                          promptDialogIcon:\n                                            ConfirmationIconType.DANGER,\n                                          promptDialogText: t(\n                                            'integrations:deleteIntegrationModal',\n                                            { name: mi.integration.name }\n                                          ),\n                                          promptDialogTitle: t(\n                                            'integrations:deleteIntegrationModalTitle'\n                                          ),\n                                        } as IPromptActionOptions),\n                                    };\n                                    const exportAction: IIntegrationAction = {\n                                      label: 'Export',\n                                      onClick: () =>\n                                        exportIntegration(\n                                          mi.integration.id!,\n                                          `${mi.integration.name}-export.zip`\n                                        ),\n                                    };\n                                    const ciCdAction: IIntegrationAction = {\n                                      label: 'Manage CI/CD',\n                                      onClick: () => {\n                                        this.promptForCiCd(mi.integration.id!);\n                                      },\n                                    };\n                                    const actions: IIntegrationAction[] = [];\n                                    if (canEdit(mi.integration)) {\n                                      actions.push(editAction);\n                                    }\n                                    if (canActivate(mi.integration)) {\n                                      actions.push(startAction);\n                                    }\n                                    if (canDeactivate(mi.integration)) {\n                                      actions.push(stopAction);\n                                    }\n                                    actions.push(deleteAction);\n                                    actions.push(exportAction);\n                                    actions.push(ciCdAction);\n                                    return (\n                                      <IntegrationsListItem\n                                        key={mi.integration.id}\n                                        integrationName={mi.integration.name}\n                                        currentState={\n                                          mi.integration!.currentState!\n                                        }\n                                        targetState={\n                                          mi.integration!.targetState!\n                                        }\n                                        isConfigurationRequired={\n                                          !!(\n                                            mi.integration!.board!.warnings ||\n                                            mi.integration!.board!.errors ||\n                                            mi.integration!.board!.notices\n                                          )\n                                        }\n                                        monitoringValue={\n                                          mi.monitoring &&\n                                          t(\n                                            'integrations:' +\n                                              mi.monitoring.detailedState.value\n                                          )\n                                        }\n                                        monitoringCurrentStep={\n                                          mi.monitoring &&\n                                          mi.monitoring.detailedState\n                                            .currentStep\n                                        }\n                                        monitoringTotalSteps={\n                                          mi.monitoring &&\n                                          mi.monitoring.detailedState.totalSteps\n                                        }\n                                        monitoringLogUrl={getPodLogUrl(\n                                          mi.monitoring\n                                        )}\n                                        startConnectionIcon={getStartIcon(\n                                          process.env.PUBLIC_URL,\n                                          mi.integration\n                                        )}\n                                        finishConnectionIcon={getFinishIcon(\n                                          process.env.PUBLIC_URL,\n                                          mi.integration\n                                        )}\n                                        actions={\n                                          <IntegrationActions\n                                            integrationId={mi.integration!.id!}\n                                            actions={actions}\n                                            detailsHref={resolvers.integration.details(\n                                              {\n                                                integrationId: mi.integration\n                                                  .id!,\n                                              }\n                                            )}\n                                          />\n                                        }\n                                        i18nConfigurationRequired={t(\n                                          'integrations:ConfigurationRequired'\n                                        )}\n                                        i18nError={t('shared:Error')}\n                                        i18nPublished={t('shared:Published')}\n                                        i18nUnpublished={t(\n                                          'shared:Unpublished'\n                                        )}\n                                        i18nProgressPending={t(\n                                          'shared:Pending'\n                                        )}\n                                        i18nProgressStarting={t(\n                                          'integrations:progressStarting'\n                                        )}\n                                        i18nProgressStopping={t(\n                                          'integrations:progressStopping'\n                                        )}\n                                        i18nLogUrlText={t('shared:viewLogs')}\n                                      />\n                                    );\n                                  } catch (e) {\n                                    return (\n                                      <IntegrationsListItemUnreadable\n                                        key={mi.integration.id}\n                                        integrationName={\n                                          (mi &&\n                                            mi.integration &&\n                                            mi.integration.name) ||\n                                          'An integration'\n                                        }\n                                        i18nDescription={\n                                          \"Sorry, we can't display more information about this integration right now.\"\n                                        }\n                                        rawObject={JSON.stringify(\n                                          mi.integration,\n                                          null,\n                                          2\n                                        )}\n                                      />\n                                    );\n                                  }\n                                }\n                              )\n                            }\n                          </WithLoader>\n                        </IntegrationsList>\n                      </>\n                    )}\n                  </WithIntegrationHelpers>\n                )}\n              </UIContext.Consumer>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getIntegrationStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoute[];\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => (\n          <AppLayout\n            appNav={\n              <AppTopMenu username={'developer'}>\n                <PfDropdownItem>\n                  <Link\n                    to={'/logout'}\n                    className=\"pf-c-dropdown__menu-item\"\n                    children={t('Logout')}\n                  />\n                </PfDropdownItem>\n              </AppTopMenu>\n            }\n            verticalNav={routes.map(({ exact, icon, label, to }, index) => (\n              <PfVerticalNavItem\n                exact={exact}\n                icon={icon}\n                label={t(label)}\n                to={to}\n                key={index}\n                data-testid={`navbar-link-${to}`}\n              />\n            ))}\n            pictograph={\n              <img src={logo} alt=\"Syndesis\" style={{ minWidth: '164px' }} />\n            }\n            logoHref={'/'}\n            showNavigation={showNavigation}\n            onNavigationCollapse={onHideNavigation}\n            onNavigationExpand={onShowNavigation}\n          >\n            <Notifications\n              notifications={notifications}\n              notificationTimerDelay={8000}\n              removeNotificationAction={onRemoveNotification}\n            />\n            <WithRouter>\n              {({ match }) => (\n                <WithErrorBoundary key={match.url}>\n                  <Switch>\n                    {routes.map(({ to, exact, component }, index) => (\n                      <Route\n                        path={to}\n                        exact={exact}\n                        component={component}\n                        key={index}\n                      />\n                    ))}\n                    <Route component={PageNotFound} />\n                  </Switch>\n                </WithErrorBoundary>\n              )}\n            </WithRouter>\n          </AppLayout>\n        )}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoute[];\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport * as H from 'history';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(position: number, step: Step) =>\n                      getStepHref(\n                        step,\n                        { flowId, position: `${position}` },\n                        { integration },\n                        this.props\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <IntegrationEditorConnectionsListItem\n                                              key={idx}\n                                              integrationName={step.name}\n                                              integrationDescription={\n                                                step.description ||\n                                                'No description available.'\n                                              }\n                                              icon={\n                                                <img\n                                                  src={step.icon}\n                                                  width={24}\n                                                  height={24}\n                                                />\n                                              }\n                                              actions={\n                                                <ButtonLink\n                                                  href={getStepHref(\n                                                    step,\n                                                    params,\n                                                    state,\n                                                    this.props\n                                                  )}\n                                                >\n                                                  Select\n                                                </ButtonLink>\n                                              }\n                                            />\n                                          )\n                                        )}\n                                        <IntegrationEditorConnectionsListItem\n                                          integrationName={''}\n                                          integrationDescription={''}\n                                          icon={''}\n                                          actions={\n                                            <ButtonLink href={'#'}>\n                                              Create connection\n                                            </ButtonLink>\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IActivityPageParams, IActivityPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Activity page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  WithIntegration,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IMenuActions,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  IntegrationDetailInfo,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\n\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../../resolvers';\nimport { IntegrationDetailSteps } from '../../components';\nimport { TagIntegrationDialogWrapper } from '../../components/TagIntegrationDialogWrapper';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\nexport interface IIntegrationDetailsPageState {\n  handleAction?: () => void;\n  integration?: IIntegrationOverviewWithDraft;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonStyle: ConfirmationButtonStyle;\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<\n  IIntegrationDetailsPageProps,\n  IIntegrationDetailsPageState\n> {\n  public constructor(props: IIntegrationDetailsPageProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IIntegrationDetailsRouteParams, null>>\n        {({ integrationId }) => {\n          return (\n            <WithIntegrationHelpers>\n              {({\n                deleteIntegration,\n                deployIntegration,\n                exportIntegration,\n                undeployIntegration,\n                tagIntegration,\n              }) => {\n                return (\n                  <WithIntegration integrationId={integrationId}>\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<div>TODO</div>}\n                      >\n                        {() => (\n                          <div>\n                            <Translation ns={['integrations', 'shared']}>\n                              {t => {\n                                const deployments = data.deployments\n                                  ? data.deployments\n                                  : [];\n                                const editAction: IMenuActions = {\n                                  href: resolvers.integrations.integration.edit.index(\n                                    {\n                                      flowId: '0',\n                                      integration: data,\n                                    }\n                                  ),\n                                  label: 'Edit',\n                                };\n                                const startAction: IMenuActions = {\n                                  label: 'Start',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deployIntegration(\n                                          data.id!,\n                                          data.version!,\n                                          false\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Start'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:publishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:publishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const stopAction: IMenuActions = {\n                                  label: 'Stop',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        undeployIntegration(\n                                          data.id!,\n                                          data.version!\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Stop'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:unpublishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:unpublishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const deleteAction: IMenuActions = {\n                                  label: 'Delete',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deleteIntegration(data.id!),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.DANGER,\n                                      promptDialogButtonText: t(\n                                        'shared:Delete'\n                                      ),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.DANGER,\n                                      promptDialogText: t(\n                                        'integrations:deleteIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:deleteIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const exportAction: IMenuActions = {\n                                  label: 'Export',\n                                  onClick: () =>\n                                    exportIntegration(\n                                      data.id!,\n                                      `${data.name}-export.zip`\n                                    ),\n                                };\n                                const ciCdAction: IMenuActions = {\n                                  label: 'Manage CI/CD',\n                                  onClick: () => {\n                                    this.promptForCiCd(data.id!);\n                                  },\n                                };\n\n                                const actions: IMenuActions[] = [];\n\n                                /**\n                                 * Array of actions for the breadcrumb.\n                                 * One for the buttons, another for the dropdown menu.\n                                 */\n                                const breadcrumbMenuActions: IMenuActions[] = [];\n\n                                /**\n                                 * Array of actions for Draft integrations.\n                                 * This is specifically for the inline buttons on the Details tab.\n                                 */\n\n                                if (canActivate(data)) {\n                                  actions.push(startAction);\n                                  breadcrumbMenuActions.push(startAction);\n                                }\n\n                                actions.push(editAction);\n\n                                if (canDeactivate(data)) {\n                                  actions.push(stopAction);\n                                  breadcrumbMenuActions.push(stopAction);\n                                }\n\n                                actions.push(deleteAction);\n                                breadcrumbMenuActions.push(deleteAction);\n\n                                actions.push(exportAction);\n\n                                actions.push(ciCdAction);\n                                breadcrumbMenuActions.push(ciCdAction);\n\n                                return (\n                                  <>\n                                    {this.state.showCiCdPromptDialog && (\n                                      <TagIntegrationDialogWrapper\n                                        manageCiCdHref={resolvers.integrations.manageCicd.root()}\n                                        tagIntegration={tagIntegration}\n                                        targetIntegrationId={\n                                          this.state.targetIntegrationId!\n                                        }\n                                        onSave={this.closeCiCdDialog}\n                                        onHide={this.closeCiCdDialog}\n                                      />\n                                    )}\n                                    {this.state.showActionPromptDialog && (\n                                      <ConfirmationDialog\n                                        buttonStyle={\n                                          ConfirmationButtonStyle.NORMAL\n                                        }\n                                        i18nCancelButtonText={t(\n                                          'shared:Cancel'\n                                        )}\n                                        i18nConfirmButtonText={\n                                          this.state.promptDialogButtonText!\n                                        }\n                                        i18nConfirmationMessage={\n                                          this.state.promptDialogText!\n                                        }\n                                        i18nTitle={\n                                          this.state.promptDialogTitle!\n                                        }\n                                        icon={this.state.promptDialogIcon!}\n                                        showDialog={\n                                          this.state.showActionPromptDialog!\n                                        }\n                                        onCancel={this.handleActionCancel}\n                                        onConfirm={this.handleAction}\n                                      />\n                                    )}\n\n                                    <PageTitle\n                                      title={t('integrations:detail:pageTitle')}\n                                    />\n\n                                    <IntegrationDetailBreadcrumb\n                                      editHref={editAction.href}\n                                      editLabel={editAction.label}\n                                      exportAction={exportAction.onClick}\n                                      exportHref={exportAction.href}\n                                      exportLabel={exportAction.label}\n                                      homeHref={resolvers.dashboard.root()}\n                                      i18nHome={t('shared:Home')}\n                                      i18nIntegrations={t(\n                                        'shared:Integrations'\n                                      )}\n                                      i18nPageTitle={t(\n                                        'integrations:detail:pageTitle'\n                                      )}\n                                      integrationId={data.id}\n                                      integrationsHref={resolvers.integrations.list()}\n                                      menuActions={breadcrumbMenuActions}\n                                    />\n\n                                    <IntegrationDetailInfo\n                                      name={data.name}\n                                      version={data.version}\n                                    />\n                                    <IntegrationDetailNavBar\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailDescription\n                                      description={data.description}\n                                      i18nNoDescription={t(\n                                        'integrations:detail:noDescription'\n                                      )}\n                                    />\n                                    <IntegrationDetailHistoryListView\n                                      editHref={editAction.href}\n                                      editLabel={editAction.label}\n                                      hasHistory={deployments.length > 0}\n                                      isDraft={data.isDraft}\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      publishAction={\n                                        canActivate(data)\n                                          ? startAction.onClick\n                                          : undefined\n                                      }\n                                      publishHref={\n                                        canActivate(data)\n                                          ? startAction.href\n                                          : undefined\n                                      }\n                                      publishLabel={\n                                        canActivate(data)\n                                          ? t('shared:Publish')\n                                          : undefined\n                                      }\n                                      children={deployments.map(\n                                        (deployment, idx) => {\n                                          return (\n                                            <IntegrationDetailHistoryListViewItem\n                                              key={idx}\n                                              actions={\n                                                <IntegrationDetailHistoryListViewItemActions\n                                                  actions={actions}\n                                                  integrationId={data.id!}\n                                                />\n                                              }\n                                              currentState={\n                                                deployment.currentState!\n                                              }\n                                              i18nTextLastPublished={t(\n                                                'integrations:detail:lastPublished'\n                                              )}\n                                              i18nTextVersion={t(\n                                                'shared:Version'\n                                              )}\n                                              updatedAt={deployment.updatedAt}\n                                              version={deployment.version}\n                                            />\n                                          );\n                                        }\n                                      )}\n                                    />\n                                  </>\n                                );\n                              }}\n                            </Translation>\n                          </div>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithIntegration>\n                );\n              }}\n            </WithIntegrationHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Metrics page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                icon: 'fa fa-tachometer-alt',\n                                label: 'Home',\n                                to: '/',\n                              },\n                              {\n                                component: IntegrationsModule,\n                                icon: 'pficon pficon-integration',\n                                label: 'Integrations',\n                                to: '/integrations',\n                              },\n                              {\n                                component: ConnectionsModule,\n                                icon: 'pficon pficon-plugged',\n                                label: 'Connections',\n                                to: '/connections',\n                              },\n                              {\n                                component: CustomizationsModule,\n                                icon: 'fa fa-cube',\n                                label: 'Customizations',\n                                to: '/customizations',\n                              },\n                              {\n                                component: DataModule,\n                                icon: 'fa fa-database',\n                                label: 'Data',\n                                to: '/data',\n                              },\n                              {\n                                component: SettingsModule,\n                                icon: 'pficon pficon-settings',\n                                label: 'Settings',\n                                to: '/settings',\n                              },\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={headers}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}