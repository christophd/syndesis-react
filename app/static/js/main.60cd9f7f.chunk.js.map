{"version":3,"sources":["modules/settings/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","i18n/locales/index.ts","i18n/index.ts","modules/integrations/resolvers.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/routes.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailHistory.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/connections/resolvers.ts","app/AppContext.tsx","app/WithConfig.tsx","app/App.tsx","app/index.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/data/resolvers.ts"],"names":["named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","id","state","create","upload","makeResolverNoParams","review","security","save","list","extensions","extension","details","_ref2","extensionId","update","_ref3","import","const","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","constructor","props","iframe","messageChannel","MessageChannel","onIframeLoad","this","bind","onMessages","componentDidMount","addEventListener","componentWillReceiveProps","nextProps","prevPayload","_","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","message","payload","onMappings","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","React","createElement","Object","assign","style","width","height","frameBorder","allowtransparency","extraProps","ref","el","en","app","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connections","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","data","dataEn","dataIt","integrations","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","configureIndexMapper","flowId","integration","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","flows","integrationId","configureSelectConnectionMapper","position","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","connection","_configureSelectConne","connectionId","configureConfigureActionMapper","_ref4","actionId","step","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","getStep","concat","configuredProperties","listResolver","manageCicdResolver","manageCicd","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","start","selectStep","getEmptyIntegration","createStartSelectActionResolver","selectAction","createStartConfigureActionResolver","configureAction","createFinishSelectStepResolver","finish","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","configure","index","createConfigureAddStepSelectStepResolver","addStep","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","editStep","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","saveAndPublish","_ref5","integrationActivityResolver","activity","_ref6","integrationDetailsResolver","_ref7","integrationEditIndexResolver","edit","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","metrics","_ref8","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","error","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","Consumer","config","Helmet_default","a","title","WithClosedNavigation","children","context","AppContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","length","args","Array","_key","call","setState","nextContext","undefined","_this2","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","stepRoutes","apiProvider","specification","dataMapper","basicFilter","template","describeData","editorRoutes","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_6__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_5__","steps","map","s","idx","stepName","connector","name","stepDescription","action","icon","src","actions","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","route","dashboard_resolvers","reverse","settings_resolvers","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","ok","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","body","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","file","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","AppLayout","isNavOpen","onNavToggle","Header","PageHeader","logo","pictograph","logoProps","toolbar","appNav","showNavToggle","Sidebar","PageSidebar","nav","Nav","NavList","Page","header","sidebar","PageSection","AppTopMenu","isOpen","onToggle","onSelect","username","Dropdown","isPlain","toggle","DropdownToggle","dropdownItems","ButtonLink","size","Link","to","onClick","Loader","inline","Spinner","loading","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","path","pathname","escapedPath","Route","match","isActive","childLocation","i","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","classNames","obj","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","placeholder","errorMsg","saving","asTextarea","onChange","Fragment","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","then","result","e","handleConfirm","success","handleChange","isEditing","renderValue","v","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","i18nResultsCount","activeFilters","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cache","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","currentStep","totalSteps","logUrl","target","i18nLogUrlText","ProgressBar","now","max","PfDropdownItem","superclass","DropdownItem","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","description","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rows","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","topIntegrations","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nIntegrations","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","onSave","validationError","NoErrors","htmlFor","i18nInputLabel","defaultValue","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","items","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","background","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","version","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","isDraft","i18nTextDraft","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","currentState","Error","Unpublished","states","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","Date","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationStatus","labelType","Label","IntegrationStatusDetail","fallbackText","i18nProgressPending","targetState","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","InfoItem","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","viewName","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","virtualizationName","onExport","onPublish","serviceVdbName","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","rawObject","window","PfBreadcrumb","Breadcrumb","margin","paddingLeft","c","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","filter","tagIntegration","targetIntegrationId","api","tags","hasTags","hasData","tagError","disableUpdates","environments","hasEnvironments","environmentsError","utils","loaderChildren","errorChildren","mappedItems","JSON","stringify","Integrations","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","getPodLogUrl","pushNotification","deleteIntegration","deployIntegration","exportIntegration","undeployIntegration","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","resolvers","mi","editAction","startAction","_handleAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","stop","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","exportAction","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","board","warnings","errors","notices","monitoring","detailedState","getStartIcon","apiEndpoint","getFinishIcon","IntegrationCreatorBreadcrumbs","toggleActive","activeSubstep","subStep","IntegrationDetailHistory","deployments","deployment","i18nTextVersion","IntegrationDetailSteps","getSteps","getStepIcon","process","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","stepKind","getConnectionIcon","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailHistory_IntegrationDetailHistory","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","module","exports","p","virtualizations","virtualization","relationship","sqlClient","views","importSource","selectConnection","selectViews","selectConnector","configureConnector","connectorId","WithConfig","_componentDidMount","configResponse","_config","fetch","sent","json","App","logout","removeNotificationAction","notifToRemove","n","msg","toConsumableArray","toString","linkType","namespace","podName","baseUrl","consoleUrl","data-testid","WithConfig_WithConfig","minWait","Provider","apiUri","apiBase","dvApiUri","datavirt","dvUrl","headers","SYNDESIS-XSRF-TOKEN","functions","appTitle","renderAppNav","verticalNav","renderVerticalNav","minWidth","logoHref","onNavigationCollapse","onNavigationExpand","url","component","App_App","getValidationState","field","form","FormInputComponent","ControlLabel","displayName","FieldLevelHelp","labelHint","fieldAttributes","controlHint","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","initialValue","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","required","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","values","touched","dirty","isValidating","resetForm","validateForm","submitForm","this$1","toFormDefinitionProperty","controlTooltip","labelTooltip","formDefinitionProperty","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","componentDidUpdate","prevProps","waitTimeout","setTimeout","clearTimeout","WithRouteData","WithRouterBase","WithRouter","withRouter","properties","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","ConnectionCreatorBreadcrumbs","Connections","deleteConnection","_x","_x2","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","forEach","valueToLower","toLowerCase","includes","miA","miB","right","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","objectSpread","validateConfiguration","shouldValidateAgainstBackend","validateFormAgainstBackend","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","ConnectionDetailsPage","numUsedBy","history","dist_api","updateConnection","saveConnection","validateName","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","proposedName","response","_context5","isError","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","connectionsForDisplay","ConfigurationPage","ConnectorsPage","connectorsForDisplay","ReviewPage","createConnection","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","deleteExtension","i18nOverviewSectionTitle","i18nSupportsSectionTitle","extensionType","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","text","fileName","importExtension","uploadExtension","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","virtualizationId","keng__id","tko__description","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Symbol","iterator","done","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","rowOffset","sqlStatement","queryVirtualization","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","refreshVirtualizationViews","handleCreateViews","viewEditorStates","idPattern","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","virtName","createVirtualization","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","read","deleteVirtualization","publishVirtualization","unpublishServiceVdb","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","publishedState","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","deleteView","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","AddStepPage","getEditAddStepHref","stepIdx","getEditConfigureStepHrefCallback","IntegrationDetailNavBar","WithConfigurationForm","descriptor","getActionDescriptor","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","i18nSubtitle","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","ConfigureActionPage","addConnection","_ref2$step","stepAsNumber","mode","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","actionsWithTo","actionsWithFrom","selectHref","SaveIntegrationPage","saveIntegration","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","visibleStepsByPosition","extentionsByAction","isArray","propertyDefinitionSteps","actionType","getExtensionIcon","getStepKindIcon","toStepKindCollection","connectionsWithFromAction","connectionsWithToAction","connectionOrStep","stepOrConnection","apiProviderHref","connectionHref","onStepClick","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","IntegrationCreatorApp","selectConnectionPage","IntegrationEditorApp","ActivityPage","IntegrationDetailNavBar_IntegrationDetailNavBar","DetailsPage","showPromptDialog","draftActions","i18nTextHistory","MetricsPage","ImportPage","importIntegration","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","failed","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","flow","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","indexOf","createEnvironment","deleteEnvironment","renameEnvironment","newName","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","deleteOAuthApp","updateOAuthApp","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","BrowserRouter","document","getElementById","URL","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ApiContextDefaultValue","ApiContext","_Pact","onFulfilled","onRejected","callback","_settle","o","pact","observer","_catch","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","_wrapYieldedValue","Promise","resolve","returnValue","reject","callFetch","method","includeAccept","includeContentType","includeReferrerPolicy","contentType","credentials","redirect","Fetch","nextState","_this3","statusText","_response$text","_response$json","deepmerge","errorMessage","Stream","reader","getReader","textDecoder","TextDecoder","pushData","cancel","SyndesisFetch","stream","FetchOrStream","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","updateOrAddConnection","actionDescriptor","produce","draft","f","Set","blob","_body$blob","saveAs","isIntegrationDeployment","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","WithApiConnectors","changeFilter","change","totalCount","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","WithEnvironments","WithEnvironmentHelpersWrapped","stringifyBody","WithExtension","schemaVersion","WithExtensionHelpersWrapped","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","WithIntegrations","WithIntegrationTags","WithMonitoredIntegrations","getMonitoredIntegrations","WithIntegrationsMetrics","integrationDeploymentMetrics","lastProcessed","messages","metricsProvider","getConnectionsForDisplay","metadata","getConnectionsWithFromAction","some","getConnectionsWithToAction","transformResponse","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","getActionsWithTo","iconFile","File","NEW_INTEGRATION","getFlow","stepIndex","getLastPosition","filterStepsByPosition","atStart","atEnd","getPreviousSteps","getSubsequentSteps","WithConnection","WithConnectionHelpersWrapped","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","WithConnectors","WithOAuthAppHelpersWrapped","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","webSocket","eventSource","startConnection","onFailure","reconnectIn","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","postChangeEvent","changeEvent","EventSource","onError","WebSocket","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","requiresOutputDataShape","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","WithVirtualizationHelpersWrapped","updateViewEditorStates","deleteViewEditorState","virtDesc","newVirtualization","keng__dataPath","vdbName","editorStateId","pubVirtualization","sqlQuery","rowlimit","queryBody","limit","offset","query","viewEditorStateId","_this9","WithVirtualization","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob"],"mappings":"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","file":"static/js/main.60cd9f7f.chunk.js","sourcesContent":["import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties,\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  { integration: Integration },\n  null,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, ({ integration }) => ({\n  params: null,\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport default {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n      },\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n      },\n    },\n    configure: {\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n        },\n      },\n      editStep: {\n        index: 'todo',\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n        },\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n        },\n      },\n      editStep: {\n        index: 'todo',\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n        },\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { AppContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(AppContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    specification: 'specification',\n    review: 'review',\n    edit: 'edit',\n    save: 'save',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: 'action',\n    configureAction: 'action/:actionId/step/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include('flow/:flowId', {\n  index: 'add-step',\n  addStep: include('position/:position/connection', stepRoutes),\n  editStep: include('position/:position/edit-connection', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: include('import', { root: '' }),\n  create: include('create', {\n    start: include('start/flow/:flowId/position/:position', stepRoutes),\n    finish: include('finish/flow/:flowId/position/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","import { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as H from 'history';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.connection!.connector!.name}\n                stepDescription={s.action!.name}\n                icon={<img src={s.connection!.icon} width={24} height={24} />}\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface ILayoutBase {\n  appTitle: string;\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport class AppLayout extends React.Component<ILayoutBase, ILayoutState> {\n  public onNavToggle: () => void;\n  constructor(props: ILayoutBase) {\n    super(props);\n    this.state = {\n      isNavOpen: true,\n    };\n    this.onNavToggle = () => {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen,\n      });\n    };\n  }\n\n  public componentDidMount() {\n    this.setState({\n      isNavOpen: this.props.showNavigation,\n    });\n  }\n\n  public render() {\n    const { isNavOpen } = this.state;\n\n    const Header = (\n      <PageHeader\n        logo={this.props.pictograph}\n        logoProps={{ href: '/' }}\n        toolbar={this.props.appNav}\n        showNavToggle={true}\n        isNavOpen={isNavOpen}\n        onNavToggle={this.onNavToggle}\n      />\n    );\n    const Sidebar = (\n      <PageSidebar\n        nav={\n          <Nav>\n            <NavList>{this.props.verticalNav}</NavList>\n          </Nav>\n        }\n        isNavOpen={isNavOpen}\n      />\n    );\n\n    return (\n      <Page header={Header} sidebar={Sidebar}>\n        <PageSection>{this.props.children}</PageSection>\n      </Page>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          <h5>{this.props.i18nResultsCount}</h5>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from 'history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport { IIntegrationAction } from './IntegrationActions';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  actions?: IIntegrationAction[];\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  this.props.actions\n                    ? this.props.actions.map((a, idx) => (\n                        <ButtonLink key={idx} to={a.href} onClick={a.onClick}>\n                          {a.label}\n                        </ButtonLink>\n                      ))\n                    : null\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        {this.props.version ? (\n          <>\n            <span className=\"pficon pficon-ok\" />\n            &nbsp;Published version {this.props.version}\n          </>\n        ) : (\n          'Stopped'\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from 'history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  getFinishIcon,\n  getStartIcon,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport interface IIntegrationsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class Integrations extends React.Component<\n  IIntegrationsProps,\n  IIntegrationsState\n> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ config, getPodLogUrl, pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => (\n                  <>\n                    {this.state.showCiCdPromptDialog && (\n                      <TagIntegrationDialogWrapper\n                        manageCiCdHref={resolvers.manageCicd.root()}\n                        tagIntegration={tagIntegration}\n                        targetIntegrationId={this.state.targetIntegrationId!}\n                        onSave={this.closeCiCdDialog}\n                        onHide={this.closeCiCdDialog}\n                      />\n                    )}\n                    {this.state.showActionPromptDialog && (\n                      <ConfirmationDialog\n                        buttonStyle={ConfirmationButtonStyle.NORMAL}\n                        i18nCancelButtonText={t('shared:Cancel')}\n                        i18nConfirmButtonText={\n                          this.state.promptDialogButtonText!\n                        }\n                        i18nConfirmationMessage={this.state.promptDialogText!}\n                        i18nTitle={this.state.promptDialogTitle!}\n                        icon={this.state.promptDialogIcon!}\n                        showDialog={this.state.showActionPromptDialog}\n                        onCancel={this.handleActionCancel}\n                        onConfirm={this.handleAction}\n                      />\n                    )}\n                    <IntegrationsList>\n                      <WithLoader\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        loaderChildren={<IntegrationsListSkeleton />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          this.props.integrations.map(\n                            (mi: IntegrationWithMonitoring) => {\n                              try {\n                                const editAction: IIntegrationAction = {\n                                  href: resolvers.integration.edit.index({\n                                    flowId: mi.integration.flows![0].id!,\n                                    integration: mi.integration,\n                                  }),\n                                  label: 'Edit',\n                                };\n                                const startAction: IIntegrationAction = {\n                                  label: 'Start',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: async () => {\n                                        pushNotification(\n                                          i18n.t(\n                                            'integrations:PublishingIntegrationMessage'\n                                          ),\n                                          'info'\n                                        );\n                                        try {\n                                          await deployIntegration(\n                                            mi.integration.id!,\n                                            mi.integration.version!,\n                                            false\n                                          );\n                                        } catch (err) {\n                                          pushNotification(\n                                            i18n.t(\n                                              'integrations.PublishingIntegrationFailedMessage',\n                                              { error: err }\n                                            ),\n                                            'warning'\n                                          );\n                                        }\n                                      },\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Start'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:publishIntegrationModal',\n                                        { name: mi.integration.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:publishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const stopAction: IIntegrationAction = {\n                                  label: 'Stop',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: async () => {\n                                        pushNotification(\n                                          i18n.t(\n                                            'integrations:UnpublishingIntegrationMessage'\n                                          ),\n                                          'info'\n                                        );\n                                        try {\n                                          undeployIntegration(\n                                            mi.integration.id!,\n                                            mi.integration.version!\n                                          );\n                                        } catch (err) {\n                                          pushNotification(\n                                            i18n.t(\n                                              'integrations.UnpublishingIntegrationFailedMessage',\n                                              { error: err }\n                                            ),\n                                            'warning'\n                                          );\n                                        }\n                                      },\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Stop'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:unpublishIntegrationModal',\n                                        { name: mi.integration.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:unpublishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const deleteAction: IIntegrationAction = {\n                                  label: 'Delete',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: async () => {\n                                        pushNotification(\n                                          i18n.t(\n                                            'integrations:DeletingIntegrationMessage'\n                                          ),\n                                          'info'\n                                        );\n                                        try {\n                                          await deleteIntegration(\n                                            mi.integration.id!\n                                          );\n                                        } catch (err) {\n                                          pushNotification(\n                                            i18n.t(\n                                              'integrations.DeletingIntegrationFailedMessage',\n                                              { error: err }\n                                            ),\n                                            'warning'\n                                          );\n                                        }\n                                      },\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.DANGER,\n                                      promptDialogButtonText: t(\n                                        'shared:Delete'\n                                      ),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.DANGER,\n                                      promptDialogText: t(\n                                        'integrations:deleteIntegrationModal',\n                                        { name: mi.integration.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:deleteIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const exportAction: IIntegrationAction = {\n                                  label: 'Export',\n                                  onClick: () =>\n                                    exportIntegration(\n                                      mi.integration.id!,\n                                      `${mi.integration.name}-export.zip`\n                                    ),\n                                };\n                                const ciCdAction: IIntegrationAction = {\n                                  label: 'Manage CI/CD',\n                                  onClick: () => {\n                                    this.promptForCiCd(mi.integration.id!);\n                                  },\n                                };\n                                const actions: IIntegrationAction[] = [];\n                                if (canEdit(mi.integration)) {\n                                  actions.push(editAction);\n                                }\n                                if (canActivate(mi.integration)) {\n                                  actions.push(startAction);\n                                }\n                                if (canDeactivate(mi.integration)) {\n                                  actions.push(stopAction);\n                                }\n                                actions.push(deleteAction);\n                                actions.push(exportAction);\n                                actions.push(ciCdAction);\n                                return (\n                                  <IntegrationsListItem\n                                    key={mi.integration.id}\n                                    integrationName={mi.integration.name}\n                                    currentState={mi.integration!.currentState!}\n                                    targetState={mi.integration!.targetState!}\n                                    isConfigurationRequired={\n                                      !!(\n                                        mi.integration!.board!.warnings ||\n                                        mi.integration!.board!.errors ||\n                                        mi.integration!.board!.notices\n                                      )\n                                    }\n                                    monitoringValue={\n                                      mi.monitoring &&\n                                      t(\n                                        'integrations:' +\n                                          mi.monitoring.detailedState.value\n                                      )\n                                    }\n                                    monitoringCurrentStep={\n                                      mi.monitoring &&\n                                      mi.monitoring.detailedState.currentStep\n                                    }\n                                    monitoringTotalSteps={\n                                      mi.monitoring &&\n                                      mi.monitoring.detailedState.totalSteps\n                                    }\n                                    monitoringLogUrl={getPodLogUrl(\n                                      config,\n                                      mi.monitoring\n                                    )}\n                                    startConnectionIcon={getStartIcon(\n                                      config.apiEndpoint,\n                                      mi.integration\n                                    )}\n                                    finishConnectionIcon={getFinishIcon(\n                                      config.apiEndpoint,\n                                      mi.integration\n                                    )}\n                                    actions={\n                                      <IntegrationActions\n                                        integrationId={mi.integration!.id!}\n                                        actions={actions}\n                                        detailsHref={resolvers.integration.details(\n                                          { integrationId: mi.integration.id! }\n                                        )}\n                                      />\n                                    }\n                                    i18nConfigurationRequired={t(\n                                      'integrations:ConfigurationRequired'\n                                    )}\n                                    i18nError={t('shared:Error')}\n                                    i18nPublished={t('shared:Published')}\n                                    i18nUnpublished={t('shared:Unpublished')}\n                                    i18nProgressPending={t('shared:Pending')}\n                                    i18nProgressStarting={t(\n                                      'integrations:progressStarting'\n                                    )}\n                                    i18nProgressStopping={t(\n                                      'integrations:progressStopping'\n                                    )}\n                                    i18nLogUrlText={t('shared:viewLogs')}\n                                  />\n                                );\n                              } catch (e) {\n                                return (\n                                  <IntegrationsListItemUnreadable\n                                    key={mi.integration.id}\n                                    integrationName={\n                                      (mi &&\n                                        mi.integration &&\n                                        mi.integration.name) ||\n                                      'An integration'\n                                    }\n                                    i18nDescription={\n                                      \"Sorry, we can't display more information about this integration right now.\"\n                                    }\n                                    rawObject={JSON.stringify(\n                                      mi.integration,\n                                      null,\n                                      2\n                                    )}\n                                  />\n                                );\n                              }\n                            }\n                          )\n                        }\n                      </WithLoader>\n                    </IntegrationsList>\n                  </>\n                )}\n              </WithIntegrationHelpers>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { IntegrationDeploymentOverview } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationDetailHistoryListViewItem,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IIntegrationDetailDeploymentsProps {\n  actions: any;\n  deployments: IntegrationDeploymentOverview[];\n  integrationId: string;\n  updatedAt: number;\n  version: number;\n}\n\nexport class IntegrationDetailHistory extends React.Component<\n  IIntegrationDetailDeploymentsProps\n> {\n  public render() {\n    const deployments = this.props.deployments ? this.props.deployments : [];\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t =>\n          deployments.map((deployment, idx) => {\n            return (\n              <IntegrationDetailHistoryListViewItem\n                key={idx}\n                actions={\n                  <IntegrationActions\n                    integrationId={this.props.integrationId}\n                    actions={this.props.actions}\n                  />\n                }\n                currentState={deployment.currentState!}\n                i18nTextLastPublished={t('integrations:detail:lastPublished')}\n                i18nTextVersion={t('shared:Version')}\n                updatedAt={deployment.updatedAt}\n                version={deployment.version}\n              />\n            );\n          })\n        }\n      </Translation>\n    );\n  }\n}\n","import { getStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailHistory';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    config: IConfigFile,\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n  logout(): void;\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { IntegrationMonitoring } from '@syndesis/models';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Loader,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n  UnrecoverableError,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouter } from '@syndesis/utils';\nimport i18next from 'i18next';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, RouteComponentProps, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { IConfigFile, WithConfig } from './WithConfig';\n\nimport logo from './syndesis_logo_full_darkbkg.svg';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  routes: IAppRoute[];\n}\n\nexport interface IAppBaseState {\n  showNavigation: boolean;\n  notifications: INotification[];\n}\n\nexport class App extends React.Component<IAppBaseProps, IAppBaseState> {\n  public state = {\n    notifications: [],\n    showNavigation: true,\n  };\n\n  constructor(props: IAppBaseProps) {\n    super(props);\n    this.logout = this.logout.bind(this);\n    this.getPodLogUrl = this.getPodLogUrl.bind(this);\n    this.hideNavigation = this.hideNavigation.bind(this);\n    this.showNavigation = this.showNavigation.bind(this);\n    this.pushNotification = this.pushNotification.bind(this);\n    this.removeNotificationAction = this.removeNotificationAction.bind(this);\n  }\n\n  public removeNotificationAction(notifToRemove: INotification) {\n    const notifications = this.state.notifications.filter(\n      (n: INotification) => n.key !== notifToRemove.key\n    );\n\n    this.setState({\n      notifications,\n    });\n  }\n\n  public pushNotification(msg: string, type: INotificationType) {\n    this.setState({\n      notifications: [\n        ...this.state.notifications,\n        {\n          key: Date.now().toString(),\n          message: msg,\n          type,\n        },\n      ],\n    });\n  }\n\n  public logout() {\n    // do nothing\n  }\n\n  public getPodLogUrl(\n    config: IConfigFile,\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  }\n\n  public hideNavigation(): void {\n    this.setState({\n      showNavigation: false,\n    });\n  }\n\n  public showNavigation(): void {\n    this.setState({\n      showNavigation: true,\n    });\n  }\n\n  public renderAppNav(t: i18next.TFunction) {\n    return (\n      <AppTopMenu username={'developer'}>\n        <PfDropdownItem>\n          <Link\n            to={'/logout'}\n            className=\"pf-c-dropdown__menu-item\"\n            children={t('Logout')}\n          />\n        </PfDropdownItem>\n      </AppTopMenu>\n    );\n  }\n\n  public renderVerticalNav() {\n    return this.props.routes.map(({ exact, icon, label, to }, index) => (\n      <PfVerticalNavItem\n        exact={exact}\n        icon={icon}\n        label={label}\n        to={to}\n        key={index}\n        data-testid={`navbar-link-${to}`}\n      />\n    ));\n  }\n\n  public render() {\n    return (\n      <Translation ns={['app', 'shared']}>\n        {t => (\n          <WithConfig>\n            {({ config, loading, error }) => (\n              <WithLoader\n                loading={loading}\n                error={error}\n                loaderChildren={<Loader />}\n                errorChildren={\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                }\n                minWait={1000}\n              >\n                {() => (\n                  <AppContext.Provider\n                    value={{\n                      config: config!,\n                      getPodLogUrl: this.getPodLogUrl,\n                      hideNavigation: this.hideNavigation,\n                      logout: this.logout,\n                      pushNotification: this.pushNotification,\n                      showNavigation: this.showNavigation,\n                    }}\n                  >\n                    <ApiContext.Provider\n                      value={{\n                        apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                        dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                        headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                      }}\n                    >\n                      <ApiContext.Consumer>\n                        {({ apiUri, headers }) => (\n                          <WithServerEvents apiUri={apiUri} headers={headers}>\n                            {functions => (\n                              <ServerEventsContext.Provider value={functions}>\n                                <AppLayout\n                                  appTitle={'Syndesis'}\n                                  appNav={this.renderAppNav(t)}\n                                  verticalNav={this.renderVerticalNav()}\n                                  pictograph={\n                                    <img\n                                      src={logo}\n                                      alt=\"Syndesis\"\n                                      style={{ minWidth: '164px' }}\n                                    />\n                                  }\n                                  logoHref={'/'}\n                                  showNavigation={this.state.showNavigation}\n                                  onNavigationCollapse={this.hideNavigation}\n                                  onNavigationExpand={this.showNavigation}\n                                >\n                                  <Notifications\n                                    notifications={this.state.notifications}\n                                    notificationTimerDelay={8000}\n                                    removeNotificationAction={\n                                      this.removeNotificationAction\n                                    }\n                                  />\n                                  <WithRouter>\n                                    {({ match }) => (\n                                      <WithErrorBoundary key={match.url}>\n                                        <Switch>\n                                          {this.props.routes.map(\n                                            (\n                                              { to, exact, component },\n                                              index\n                                            ) => (\n                                              <Route\n                                                path={to}\n                                                exact={exact}\n                                                component={component}\n                                                key={index}\n                                              />\n                                            )\n                                          )}\n                                          <Route component={PageNotFound} />\n                                        </Switch>\n                                      </WithErrorBoundary>\n                                    )}\n                                  </WithRouter>\n                                </AppLayout>\n                              </ServerEventsContext.Provider>\n                            )}\n                          </WithServerEvents>\n                        )}\n                      </ApiContext.Consumer>\n                    </ApiContext.Provider>\n                  </AppContext.Provider>\n                )}\n              </WithLoader>\n            )}\n          </WithConfig>\n        )}\n      </Translation>\n    );\n  }\n}\n","export * from './App';\nexport * from './AppContext';\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.Component<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c,\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { AppContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { getSteps } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\n\nexport interface IAddStepPageProps {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  getEditConfigureStepHrefCallback: (\n    stepIdx: number,\n    step: Step,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(stepIdx: number, step: Step) =>\n                      this.props.getEditConfigureStepHrefCallback(\n                        stepIdx,\n                        step,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getEmptyIntegration,\n  getExtensionIcon,\n  getStepKindIcon,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './interfaces';\n\nexport interface IUIStep extends StepKind {\n  icon: string;\n}\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(c => ({\n      ...c,\n      description: c.description || '',\n      icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n      properties: undefined,\n    })),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n    })),\n  ].sort((a, b) => a.name.localeCompare(b.name));\n}\n\nexport const getStepKind = (stepOrConnection: ConnectionOverview | Step) => {\n  if ((stepOrConnection as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  if ((stepOrConnection as Step).stepKind) {\n    // not a connection\n  }\n  return 'endpoint';\n};\n\nexport interface ISelectConnectionPageProps {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  apiProviderHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptorObject;\n  connectionHref: (\n    connection: ConnectionOverview,\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state, { history }) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const onStepClick = (connectionOrStep: ConnectionOverview | Step) => {\n            const stepKind = getStepKind(connectionOrStep);\n            switch (stepKind) {\n              case 'api-provider':\n                history.push(this.props.apiProviderHref(params, state));\n                break;\n              case 'endpoint':\n                history.push(\n                  this.props.connectionHref(\n                    connectionOrStep as ConnectionOverview,\n                    {\n                      ...params,\n                    },\n                    state\n                  )\n                );\n                break;\n            }\n          };\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData && !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <>\n                                      {(visibleStepsByPosition(\n                                        integration,\n                                        flowId,\n                                        toStepKindCollection(\n                                          positionAsNumber === 0\n                                            ? connectionsData.connectionsWithFromAction\n                                            : connectionsData.connectionsWithToAction,\n                                          extensionsData.items,\n                                          steps\n                                        ),\n                                        positionAsNumber\n                                      ) as IUIStep[]).map(\n                                        (step, idx: number) => (\n                                          <IntegrationEditorConnectionsListItem\n                                            key={idx}\n                                            integrationName={step.name}\n                                            integrationDescription={\n                                              step.description ||\n                                              'No description available.'\n                                            }\n                                            icon={\n                                              <img\n                                                src={step.icon}\n                                                width={24}\n                                                height={24}\n                                              />\n                                            }\n                                            actions={\n                                              <ButtonLink\n                                                onClick={() =>\n                                                  onStepClick(step)\n                                                }\n                                              >\n                                                Select\n                                              </ButtonLink>\n                                            }\n                                          />\n                                        )\n                                      )}\n                                      <IntegrationEditorConnectionsListItem\n                                        integrationName={''}\n                                        integrationDescription={''}\n                                        icon={''}\n                                        actions={\n                                          <ButtonLink href={'#'}>\n                                            Create connection\n                                          </ButtonLink>\n                                        }\n                                      />\n                                    </>\n                                  )}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    getEditConfigureStepHrefCallback={(stepIdx, step, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        position: `${stepIdx}`,\n        ...p,\n        ...s,\n      })\n    }\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* step 1.1 */}\n        <Route\n          path={routes.create.start.selectStep}\n          exact={true}\n          children={startStepSelectConnectionPage}\n        />\n        {/* step 1.2 */}\n        <Route\n          path={routes.create.start.connection.selectAction}\n          exact={true}\n          children={startStepSelectActionPage}\n        />\n        {/* step 1.3 */}\n        <Route\n          path={routes.create.start.connection.configureAction}\n          exact={true}\n          children={startStepConfigureActionPage}\n        />\n        {/* step 2.1 */}\n        <Route\n          path={routes.create.finish.selectStep}\n          exact={true}\n          children={finishStepSelectConnectionPage}\n        />\n        {/* step 2.2 */}\n        <Route\n          path={routes.create.finish.connection.selectAction}\n          exact={true}\n          children={finishStepSelectActionPage}\n        />\n        {/* step 2.3 */}\n        <Route\n          path={routes.create.finish.connection.configureAction}\n          exact={true}\n          children={finishStepConfigureActionPage}\n        />\n        {/* step 3: index */}\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n        {/* step 3: add connection.1 */}\n        <Route\n          path={routes.create.configure.addStep.selectStep}\n          exact={true}\n          children={addStepSelectConnectionPage}\n        />\n        {/* step 3: add connection.2 */}\n        <Route\n          path={routes.create.configure.addStep.connection.selectAction}\n          exact={true}\n          children={addStepSelectActionPage}\n        />\n        {/* step 3: add connection.3 */}\n        <Route\n          path={routes.create.configure.addStep.connection.configureAction}\n          exact={true}\n          children={addStepConfigureActionPage}\n        />\n        {/* step 3: edit connection.2 (this is optional and can be reached only from the configuration page), must be declared before the configure route */}\n        <Route\n          path={routes.create.configure.editStep.connection.selectAction}\n          exact={true}\n          children={editStepSelectActionPage}\n        />\n        {/* step 3: edit connection.1 (when editing we link directly to the configuration step) */}\n        <Route\n          path={routes.create.configure.editStep.connection.configureAction}\n          exact={true}\n          children={editStepConfigureActionPage}\n        />\n        {/* step 4 */}\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    getEditConfigureStepHrefCallback={(stepIdx, step, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        position: `${stepIdx}`,\n        ...p,\n        ...s,\n      })\n    }\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n            <Route\n              path={routes.integration.edit.addStep.selectStep}\n              exact={true}\n              children={selectConnectionPage}\n            />\n            <Route\n              path={routes.integration.edit.addStep.connection.selectAction}\n              exact={true}\n              children={addStepSelectActionPage}\n            />\n            <Route\n              path={routes.integration.edit.addStep.connection.configureAction}\n              exact={true}\n              children={addStepConfigureActionPage}\n            />\n            <Route\n              path={routes.integration.edit.editStep.connection.selectAction}\n              exact={true}\n              children={editStepSelectActionPage}\n            />\n            <Route\n              path={routes.integration.edit.editStep.connection.configureAction}\n              exact={true}\n              children={editStepConfigureActionPage}\n            />\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IActivityPageParams, IActivityPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Activity page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegration,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailInfo,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport {\n  IntegrationDetailHistory,\n  IntegrationDetailSteps,\n} from '../../components';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\nexport interface IIntegrationDetailsPageState {\n  handleAction?: () => void;\n  integration?: IIntegrationOverviewWithDraft;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  showPromptDialog?: boolean;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonStyle: ConfirmationButtonStyle;\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<\n  IIntegrationDetailsPageProps,\n  IIntegrationDetailsPageState\n> {\n  public constructor(props: IIntegrationDetailsPageProps) {\n    super(props);\n    this.state = {\n      showPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      ...options,\n      showPromptDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IIntegrationDetailsRouteParams, null>>\n        {({ integrationId }) => {\n          return (\n            <WithIntegrationHelpers>\n              {({\n                deleteIntegration,\n                deployIntegration,\n                exportIntegration,\n                undeployIntegration,\n              }) => {\n                return (\n                  <WithIntegration integrationId={integrationId}>\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<div>TODO</div>}\n                      >\n                        {() => (\n                          <div>\n                            <Translation ns={['integrations', 'shared']}>\n                              {t => {\n                                const deployments = data.deployments\n                                  ? data.deployments\n                                  : [];\n                                const editAction: IIntegrationAction = {\n                                  href: resolvers.integration.edit.index({\n                                    flowId: '0',\n                                    integration: data,\n                                  }),\n                                  label: 'Edit',\n                                };\n                                const startAction: IIntegrationAction = {\n                                  label: 'Start',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deployIntegration(\n                                          data.id!,\n                                          data.version!,\n                                          false\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Start'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:publishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:publishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const stopAction: IIntegrationAction = {\n                                  label: 'Stop',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        undeployIntegration(\n                                          data.id!,\n                                          data.version!\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Stop'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:unpublishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:unpublishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const deleteAction: IIntegrationAction = {\n                                  label: 'Delete',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deleteIntegration(data.id!),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.DANGER,\n                                      promptDialogButtonText: t(\n                                        'shared:Delete'\n                                      ),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.DANGER,\n                                      promptDialogText: t(\n                                        'integrations:deleteIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:deleteIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const exportAction: IIntegrationAction = {\n                                  label: 'Export',\n                                  onClick: () =>\n                                    exportIntegration(\n                                      data.id!,\n                                      `${data.name}-export.zip`\n                                    ),\n                                };\n\n                                const actions: IIntegrationAction[] = [];\n                                const draftActions: IIntegrationAction[] = [];\n                                if (canActivate(data)) {\n                                  data.isDraft\n                                    ? draftActions.push(startAction)\n                                    : actions.push(startAction);\n                                }\n                                if (canEdit(data)) {\n                                  data.isDraft\n                                    ? draftActions.push(editAction)\n                                    : actions.push(editAction);\n                                }\n                                if (canDeactivate(data)) {\n                                  actions.push(stopAction);\n                                }\n                                actions.push(deleteAction);\n                                actions.push(exportAction);\n\n                                return (\n                                  <>\n                                    <ConfirmationDialog\n                                      buttonStyle={\n                                        ConfirmationButtonStyle.NORMAL\n                                      }\n                                      i18nCancelButtonText={t('shared:Cancel')}\n                                      i18nConfirmButtonText={\n                                        this.state.promptDialogButtonText!\n                                      }\n                                      i18nConfirmationMessage={\n                                        this.state.promptDialogText!\n                                      }\n                                      i18nTitle={this.state.promptDialogTitle!}\n                                      icon={this.state.promptDialogIcon!}\n                                      showDialog={this.state.showPromptDialog!}\n                                      onCancel={this.handleActionCancel}\n                                      onConfirm={this.handleAction}\n                                    />\n                                    <IntegrationDetailInfo\n                                      name={data.name}\n                                      version={data.version}\n                                    />\n                                    <IntegrationDetailNavBar\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailDescription\n                                      description={data.description}\n                                      i18nNoDescription={t(\n                                        'integrations:detail:noDescription'\n                                      )}\n                                    />\n                                    <IntegrationDetailHistoryListView\n                                      actions={draftActions}\n                                      hasHistory={deployments.length > 0}\n                                      isDraft={data.isDraft}\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      children={\n                                        <IntegrationDetailHistory\n                                          actions={actions}\n                                          deployments={deployments}\n                                          integrationId={data.id!}\n                                          updatedAt={data.updatedAt!}\n                                          version={data.version!}\n                                        />\n                                      }\n                                    />\n                                  </>\n                                );\n                              }}\n                            </Translation>\n                          </div>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithIntegration>\n                );\n              }}\n            </WithIntegrationHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Metrics page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={'/integrations/import'}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import.root} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './app';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router>\n    <I18nextProvider i18n={i18n}>\n      <Translation ns={['shared']}>\n        {t => (\n          <App\n            routes={[\n              {\n                component: DashboardModule,\n                exact: true,\n                icon: 'fa fa-tachometer-alt',\n                label: t('Home'),\n                to: '/',\n              },\n              {\n                component: IntegrationsModule,\n                icon: 'pficon pficon-integration',\n                label: t('Integrations'),\n                to: '/integrations',\n              },\n              {\n                component: ConnectionsModule,\n                icon: 'pficon pficon-plugged',\n                label: t('Connections'),\n                to: '/connections',\n              },\n              {\n                component: CustomizationsModule,\n                icon: 'fa fa-cube',\n                label: t('Customizations'),\n                to: '/customizations',\n              },\n              {\n                component: DataModule,\n                icon: 'fa fa-database',\n                label: t('Data'),\n                to: '/data',\n              },\n              {\n                component: SettingsModule,\n                icon: 'pficon pficon-settings',\n                label: t('Settings'),\n                to: '/settings',\n              },\n            ]}\n          />\n        )}\n      </Translation>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={headers}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getStepIcon(apiUri, integration, flow.id!, flow.steps!.length - 1);\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  // The step is a connection\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  if (flow.steps.length <= 1) {\n    return 1;\n  }\n  return flow.steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(\n  integration: Integration,\n  flowId: string,\n  steps: StepKind[],\n  position: number\n) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getLastPosition(integration, flowId) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(\n  integration: Integration,\n  flowId: string,\n  steps: StepKind[],\n  position: number\n) {\n  const previousSteps = getPreviousSteps(integration, flowId, position);\n  const subsequentSteps = getSubsequentSteps(integration, flowId, position);\n  return filterStepsByPosition(integration, flowId, steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithEventsState): any;\n}\n\nexport interface IWithEventsState {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<\n  IWithEventsProps,\n  IWithEventsState\n> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}