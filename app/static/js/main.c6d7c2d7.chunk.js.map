{"version":3,"sources":["../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithActivities.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithApiVersion.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegration.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/settings/routes.ts","modules/integrations/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","modules/integrations/resolvers.ts","i18n/locales/index.ts","i18n/index.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/shared/index.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/WithIntegrationActions.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailHeader.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","../../src/Shared/AboutModal.tsx","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Shared/HelpDropdown.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailBreadcrumb.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/AboutModalContent.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","modules/connections/resolvers.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","../../packages/history/esm/history.js","app/WithConfig.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPageTable.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","modules/data/resolvers.ts"],"names":["ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","React","_Pact","onFulfilled","onRejected","result","state","this","s","callback","_settle","e","o","_this","value","v","pact","then","observer","_catch","body","recover","const","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","Promise","resolve","returnValue","error","reject","callFetch","ref","method","includeAccept","includeContentType","includeReferrerPolicy","fetch","url","contentType","JSON","cache","credentials","Object","assign","mode","redirect","Fetch","constructor","props","read","bind","data","initialValue","defaultValue","hasData","loading","componentDidMount","componentDidUpdate","prevProps","shouldComponentUpdate","nextProps","nextState","equal","render","children","response","setState","_this3","baseUrl","ok","Error","statusText","indexOf","text","_response$text","json","_response$json","deepmerge","errorMessage","message","Stream","reader","getReader","textDecoder","TextDecoder","pushData","concat","onSave","cancel","componentWillUnmount","SyndesisFetch","stream","FetchOrStream","createElement","Consumer","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","addConnection","deleteIntegration","deployIntegration","exportIntegration","importIntegration","saveIntegration","undeployIntegration","updateConnection","updateOrAddConnection","tagIntegration","getActionDescriptor","connectionId","actionId","configuredProperties","integration","connection","action","flowId","position","id","actionDescriptor","produce","draft","step","flows","map","f","Array","Set","file","fileName","blob","_body$blob","saveAs","version","isIntegrationDeployment","targetState","integrationId","environments","WithActivities","items","totalCount","deployments","activities","this$1","fetchActivities","fetchDeployments","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","event","filter","WithApiConnectors","changeFilter","change","disableUpdates","WithApiVersion","Accept","camelkruntimeversion","camelversion","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","undefined","WithEnvironments","WithEnvironmentHelpersWrapped","createEnvironment","deleteEnvironment","renameEnvironment","name","stringifyBody","newName","WithExtension","extensionId","actions","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","isDraft","WithIntegrations","WithIntegrationTags","WithMonitoredIntegration","getMonitoredIntegration","monitoring","WithMonitoredIntegrations","getMonitoredIntegrations","integrations","i","WithIntegrationsMetrics","errors","integrationDeploymentMetrics","lastProcessed","Date","now","messages","metricsProvider","start","topIntegrations","getConnectionsForDisplay","connections","c","metadata","getConnectionsWithFromAction","connector","some","getConnectionsWithToAction","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","a","getActionsWithTo","getConnectionIcon","icon","iconFile","File","URL","NEW_INTEGRATION","tags","getStep","getFlow","flow","getExtensionIcon","extension","getStepKindIcon","stepKind","getIntegrationStepIcon","stepIndex","getStepIcon","getStepsLastPosition","steps","filterStepsByPosition","atStart","atEnd","WithConnection","actionsWithFrom","actionsWithTo","WithConnectionHelpersWrapped","createConnection","deleteConnection","validateConfiguration","saveConnection","validateName","description","connectorId","values","proposedName","isError","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","connectorsForDisplay","obj","WithConnectors","WithOAuthAppHelpersWrapped","updateOAuthApp","deleteOAuthApp","app","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","nextContext","webSocket","eventSource","startConnection","onFailure","reconnectIn","setTimeout","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","addEventListener","onError","WebSocket","onmessage","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","properties","requiresOutputDataShape","type","displayName","placeholder","required","rows","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","length","toLowerCase","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","inputDataShape","outputDataShape","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","idPattern","WithVirtualizationHelpersWrapped","createVirtualization","updateViewEditorStates","deleteView","deleteViewEditorState","deleteVirtualization","publishVirtualization","queryVirtualization","refreshVirtualizationViews","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","username","keng__id","serviceVdbName","tko__description","virtualization","viewName","vdbName","editorStateId","_this2","virtualizationName","pubVirtualization","sqlQuery","rowlimit","rowOffset","queryBody","limit","offset","query","target","viewEditorStateId","viewEditorStates","_this9","WithVirtualization","virtualizationId","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","descriptor","propertyDefinitionSteps","key","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob","named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","finish","configure","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","makeResolverNoParams","security","save","extensions","_ref2","update","_ref3","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","iframe","messageChannel","MessageChannel","onIframeLoad","onMessages","componentWillReceiveProps","prevPayload","_","nextPayload","updateDataMapperApp","removeEventListener","messagePort","port1","contentWindow","postMessage","port2","payload","onMappings","mappings","documentId","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDescription","outputDocumentType","outputInspectionType","outputName","srcDoc","style","width","height","frameBorder","allowtransparency","extraProps","el","configureIndexMapper","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","configureSelectConnectionMapper","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","configureConfigureActionMapper","_ref4","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","en","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","dataEn","dataIt","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","config","Helmet_default","title","WithClosedNavigation","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","args","_key","call","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","idx","stepName","stepDescription","src","process","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","IntegrationDetailNavBar","background","label","to","WithConfigurationForm","getActionSteps","getActionStep","configurationStep","definition","getActionStepDefinition","moreConfigurationSteps","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onUpdatedIntegration","setSubmitting","stop","_x","_x2","auto_form","i18nRequiredProperty","toFormDefinition","fields","handleSubmit","isSubmitting","isValid","submitForm","form","i18nSubtitle","i18nFormTitle","i18nAlert","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","defaultProps","IntegrationDetailNavBar_IntegrationDetailNavBar","WithConfigurationForm_WithConfigurationForm","route","dashboard_resolvers","reverse","settings_resolvers","TagIntegrationDialogWrapper","handleSave","assertThisInitialized","newEnvironments","item","selected","targetIntegrationId","i18nCancelButtonText","i18nSaveButtonText","onHide","handleChange","api","hasTags","tagError","hasEnvironments","environmentsError","utils","loaderChildren","errorChildren","mappedItems","stringify","initialItems","onChange","manageCiCdHref","i18nEmptyStateTitle","i18nEmptyStateInfo","i18nEmptyStateButtonText","WithIntegrationActions","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","pushNotification","editAction","startAction","onClick","_handleAction","t0","promptDialogButtonStyle","ConfirmationButtonStyle","NORMAL","ConfirmationIconType","NONE","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","DANGER","exportAction","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","buttonStyle","i18nConfirmButtonText","i18nConfirmationMessage","showDialog","onCancel","onConfirm","Integrations","getPodLogUrl","mi","WithIntegrationActions_WithIntegrationActions","integrationName","currentState","isConfigurationRequired","board","warnings","notices","monitoringValue","detailedState","monitoringCurrentStep","currentStep","monitoringTotalSteps","totalSteps","monitoringLogUrl","startConnectionIcon","getStartIcon","finishConnectionIcon","getFinishIcon","detailsHref","i18nConfigurationRequired","i18nError","i18nPublished","i18nUnpublished","i18nProgressPending","i18nProgressStarting","i18nProgressStopping","i18nLogUrlText","i18nDescription","rawObject","IntegrationCreatorBreadcrumbs","toggleActive","mainSteps","isActive","isDisabled","subSteps","activeSubstep","subStep","altSteps","isAlt","IntegrationDetailHeader","breadcrumbMenuActions","editHref","editLabel","exportHref","exportLabel","homeHref","i18nHome","i18nIntegrations","i18nPageTitle","integrationsHref","menuActions","integrations_shared","IntegrationDetailSteps","getSteps","isFirst","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","expanded","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","i18nTooltip","addI18nTooltip","addI18nDescription","dataType","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailHeader_IntegrationDetailHeader","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","AboutModal","brandImg","isModalOpen","handleModalToggle","productName","trademark","PfAboutModal","isOpen","onClose","brandImageSrc","brandImageAlt","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","primaryAction","primaryActionButtonContent","primaryActionButtonBsStyle","primaryContent","secondaryAction","secondaryActionButtonContent","secondaryContent","i18nDetailsMessage","show","Dialog","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","HelpDropdown","onToggle","onSelect","dropdownItems","DropdownItem","component","launchAboutModal","Fragment","Dropdown","direction","DropdownDirection","down","DropdownPosition","right","toggle","DropdownToggle","classNames","iconComponent","HelpIcon","isPlain","AppTopMenu","ButtonLink","size","Link","Breadcrumb","PfBreadcrumb","margin","paddingLeft","Loader","inline","Spinner","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","path","pathname","escapedPath","Route","match","childLocation","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","WizardSteps","ReadWidget","allowEditing","onEdit","EditWidget","errorMsg","saving","asTextarea","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","handleConfirm","success","isEditing","renderValue","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","logUrl","ProgressBar","max","PfDropdownItem","superclass","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","i18nEditLabel","isDeleteEnabled","alt","ConnectionDetailsForm","onSubmit","validationResults","Alert","bsStyle","isWorking","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","validationError","NoErrors","htmlFor","i18nInputLabel","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","ImportPageUI","IntegrationActions","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailBreadcrumb","Level","gutter","LevelItem","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","Unpublished","states","IntegrationDetailHistoryListViewItemActions","IntegrationStatusDetail","fallbackText","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","IntegrationStatus","labelType","Label","IntegrationStepsHorizontalItem","IntegrationStepsHorizontalView","IntegrationVerticalFlow","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","InfoItem","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","onExport","onPublish","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onShowAboutModal","onNavToggle","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","PageSection","bsClass","i18nCallbackDescription","callbackURI","buildId","commitId","TextContent","TextList","TextListItem","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","module","exports","p","virtualizations","relationship","sqlClient","views","importSource","selectConnection","selectViews","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","showAboutModal","setShowAboutModal","toggleAboutModal","_useState5","_useState6","setNotifications","onRemoveNotification","n","Provider","msg","toConsumableArray","toString","data-testid","minWidth","removeNotificationAction","App","linkType","namespace","podName","consoleUrl","logout","UI_UI","App_App","selectConnector","configureConnector","getValidationState","field","FormInputComponent","ControlLabel","FieldLevelHelp","labelHint","fieldAttributes","controlHint","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","enrichAndOrderProperties","massagedValue","sanitizeValues","keys","reduce","prop","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","touched","dirty","isValidating","resetForm","validateForm","toFormDefinitionProperty","controlTooltip","labelTooltip","formDefinitionProperty","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","waitTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","ConnectionCreatorBreadcrumbs","Connections","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","valueToLower","includes","miA","miB","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","includeHidden","WithConnectorForm","def","objectSpread","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","addLeadingSlash","charAt","stripBasename","prefix","hasBasename","substr","stripTrailingSlash","slice","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","_extends","resolvePathname","parse","sessionStorage","getItem","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","fn","notifyListeners","canUseDOM","document","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","WithConfig","_componentDidMount","configResponse","_config","ConnectionDetailsPage","numUsedBy","dist_api","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","_x4","_x5","_ref12","_callee5","_context5","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","ConfigurationPage","ConnectorsPage","ReviewPage","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","i18nOverviewSectionTitle","i18nSupportsSectionTitle","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","iterator","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","sqlStatement","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","handleCreateViews","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","ConfigureActionPage","_ref2$step","stepAsNumber","nextStepHref","postConfigureHref","SelectActionPage","selectHref","SaveIntegrationPage","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","actionType","toStepKindCollection","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","fetchStepName","ActivityPageTable","integrationDeployments","isFailed","failure","deployedIntegration","deployment","ver","spec","integrationStep","is","errorMessages","join","activityIndex","at","getDate","failed","i18nNoErrors","ActivityPage","i18nBtnRefresh","ActivityPageTable_ActivityPageTable","DetailsPage","i18nTextHistory","i18nTextVersion","MetricsPage","ImportPage","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","Router","invariant","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","setItem","clear","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","createBrowserHistory","WithConfig_WithConfig","apiBase","apiEndpoint","datavirt","dvUrl","SYNDESIS-XSRF-TOKEN","functions","getElementById","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c6d7c2d7.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept && !('Accept' in headers)) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  headers?: { [name: string]: string };\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={{\n              ...(props.headers || headers),\n            }}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Activity, IntegrationDeployment } from '@syndesis/models';\nimport * as React from 'react';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IIntegrationDeploymentResponse {\n  items: IntegrationDeployment[];\n  totalCount: number;\n}\n\nexport interface IActivitiesAndDeploymentsChildrenProps {\n  activities: Activity[];\n  deployments: IntegrationDeployment[];\n  fetchDeployments: () => Promise<void>;\n  fetchActivities: () => Promise<void>;\n}\n\nexport interface IWithActivitiesProps {\n  integrationId: string;\n  children(props: IActivitiesAndDeploymentsChildrenProps): any;\n}\n\nexport class WithActivities extends React.Component<IWithActivitiesProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationDeploymentResponse>\n        url={`/integrations/${this.props.integrationId}/deployments`}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read: fetchDeployments, response: deployments }) => (\n          <SyndesisFetch<Activity[]>\n            url={`/activity/integrations/${this.props.integrationId}`}\n            defaultValue={[]}\n          >\n            {({ read: fetchActivities, response: activities }) => {\n              return this.props.children({\n                activities: activities.data,\n                deployments: deployments.data.items,\n                fetchActivities,\n                fetchDeployments,\n              });\n            }}\n          </SyndesisFetch>\n        )}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IApiVersion } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithApiVersionProps {\n  children(props: IFetchState<IApiVersion>): any;\n}\n\nexport class WithApiVersion extends React.Component<IWithApiVersionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IApiVersion>\n        url={`/version`}\n        headers={{\n          Accept: 'application/json',\n        }}\n        defaultValue={{\n          'build-id': '',\n          camelkruntimeversion: '',\n          camelversion: '',\n          'commit-id': '',\n          version: '',\n        }}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public constructor(props: IWithIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  IIntegrationOverviewWithDraft,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { WithIntegration } from './WithIntegration';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithMonitoredIntegrationProps {\n  integrationId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationWithMonitoring>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithMonitoredIntegration extends React.Component<\n  IWithMonitoredIntegrationProps\n> {\n  public constructor(props: IWithMonitoredIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public getMonitoredIntegration(\n    integration: IIntegrationOverviewWithDraft,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      integration,\n      monitoring: response.data.find(\n        (o: IntegrationMonitoring) => o.integrationId === integration.id\n      ),\n    };\n  }\n  public render() {\n    return (\n      <WithIntegration\n        integrationId={this.props.integrationId}\n        disableUpdates={this.props.disableUpdates}\n      >\n        {({ data: integration, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegration(\n                  integration,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegration(\n                          integration,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegration>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","export * from './IntegrationDetailNavBar';\nexport * from './WithConfigurationForm';\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationOverview } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IWithIntegrationActionsChildrenProps {\n  ciCdAction: IIntegrationAction;\n  deleteAction: IIntegrationAction;\n  editAction: IIntegrationAction;\n  exportAction: IIntegrationAction;\n  startAction: IIntegrationAction;\n  stopAction: IIntegrationAction;\n  actions: IIntegrationAction[];\n}\n\nexport interface IWithIntegrationActionsProps {\n  integration: IntegrationOverview;\n  children: (props: IWithIntegrationActionsChildrenProps) => any;\n}\n\nexport interface IWithIntegrationActionsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class WithIntegrationActions extends React.Component<\n  IWithIntegrationActionsProps,\n  IWithIntegrationActionsState\n> {\n  constructor(props: IWithIntegrationActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => {\n                  const editAction: IIntegrationAction = {\n                    href: resolvers.integration.edit.index({\n                      flowId: this.props.integration.flows![0].id!,\n                      integration: this.props.integration,\n                    }),\n                    label: 'Edit',\n                  };\n                  const startAction: IIntegrationAction = {\n                    label: 'Start',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!,\n                              false\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.PublishingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopAction: IIntegrationAction = {\n                    label: 'Stop',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.UnpublishingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const deleteAction: IIntegrationAction = {\n                    label: 'Delete',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:DeletingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deleteIntegration(this.props.integration.id!);\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations.DeletingIntegrationFailedMessage',\n                                { error: err }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.DANGER,\n                        promptDialogButtonText: t('shared:Delete'),\n                        promptDialogIcon: ConfirmationIconType.DANGER,\n                        promptDialogText: t(\n                          'integrations:deleteIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:deleteIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const exportAction: IIntegrationAction = {\n                    label: 'Export',\n                    onClick: () =>\n                      exportIntegration(\n                        this.props.integration.id!,\n                        `${this.props.integration.name}-export.zip`\n                      ),\n                  };\n                  const ciCdAction: IIntegrationAction = {\n                    label: 'Manage CI/CD',\n                    onClick: () => {\n                      this.promptForCiCd(this.props.integration.id!);\n                    },\n                  };\n\n                  const actions: IIntegrationAction[] = [];\n                  if (canEdit(this.props.integration)) {\n                    actions.push(editAction);\n                  }\n                  if (canActivate(this.props.integration)) {\n                    actions.push(startAction);\n                  }\n                  if (canDeactivate(this.props.integration)) {\n                    actions.push(stopAction);\n                  }\n                  actions.push(deleteAction);\n                  actions.push(exportAction);\n                  actions.push(ciCdAction);\n                  return (\n                    <>\n                      {this.state.showCiCdPromptDialog && (\n                        <TagIntegrationDialogWrapper\n                          manageCiCdHref={resolvers.manageCicd.root()}\n                          tagIntegration={tagIntegration}\n                          targetIntegrationId={this.state.targetIntegrationId!}\n                          onSave={this.closeCiCdDialog}\n                          onHide={this.closeCiCdDialog}\n                        />\n                      )}\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        actions,\n                        ciCdAction,\n                        deleteAction,\n                        editAction,\n                        exportAction,\n                        startAction,\n                        stopAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { getFinishIcon, getStartIcon } from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { WithIntegrationActions } from './WithIntegrationActions';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport class Integrations extends React.Component<IIntegrationsProps> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <IntegrationsList>\n                <WithLoader\n                  error={this.props.error}\n                  loading={this.props.loading}\n                  loaderChildren={<IntegrationsListSkeleton />}\n                  errorChildren={<ApiError />}\n                >\n                  {() =>\n                    this.props.integrations.map(\n                      (mi: IntegrationWithMonitoring) => {\n                        try {\n                          return (\n                            <WithIntegrationActions\n                              integration={mi.integration}\n                            >\n                              {({ actions }) => (\n                                <IntegrationsListItem\n                                  key={mi.integration.id}\n                                  integrationName={mi.integration.name}\n                                  currentState={mi.integration!.currentState!}\n                                  targetState={mi.integration!.targetState!}\n                                  isConfigurationRequired={\n                                    !!(\n                                      mi.integration!.board!.warnings ||\n                                      mi.integration!.board!.errors ||\n                                      mi.integration!.board!.notices\n                                    )\n                                  }\n                                  monitoringValue={\n                                    mi.monitoring &&\n                                    t(\n                                      'integrations:' +\n                                        mi.monitoring.detailedState.value\n                                    )\n                                  }\n                                  monitoringCurrentStep={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.currentStep\n                                  }\n                                  monitoringTotalSteps={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.totalSteps\n                                  }\n                                  monitoringLogUrl={getPodLogUrl(mi.monitoring)}\n                                  startConnectionIcon={getStartIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  finishConnectionIcon={getFinishIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  actions={\n                                    <IntegrationActions\n                                      integrationId={mi.integration!.id!}\n                                      actions={actions}\n                                      detailsHref={resolvers.integration.details(\n                                        {\n                                          integrationId: mi.integration.id!,\n                                        }\n                                      )}\n                                    />\n                                  }\n                                  i18nConfigurationRequired={t(\n                                    'integrations:ConfigurationRequired'\n                                  )}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                  i18nProgressPending={t('shared:Pending')}\n                                  i18nProgressStarting={t(\n                                    'integrations:progressStarting'\n                                  )}\n                                  i18nProgressStopping={t(\n                                    'integrations:progressStopping'\n                                  )}\n                                  i18nLogUrlText={t('shared:viewLogs')}\n                                />\n                              )}\n                            </WithIntegrationActions>\n                          );\n                        } catch (e) {\n                          return (\n                            <IntegrationsListItemUnreadable\n                              key={mi.integration.id}\n                              integrationName={\n                                (mi && mi.integration && mi.integration.name) ||\n                                'An integration'\n                              }\n                              i18nDescription={\n                                \"Sorry, we can't display more information about this integration right now.\"\n                              }\n                              rawObject={JSON.stringify(\n                                mi.integration,\n                                null,\n                                2\n                              )}\n                            />\n                          );\n                        }\n                      }\n                    )\n                  }\n                </WithLoader>\n              </IntegrationsList>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { canActivate, canDeactivate } from '@syndesis/api';\nimport {\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport {\n  IMenuActions,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailInfo,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../shared';\n\nexport interface IIntegrationDetailHeaderProps {\n  data: IntegrationWithMonitoring;\n  startAction: IMenuActions;\n  stopAction: IMenuActions;\n  deleteAction: IMenuActions;\n  ciCdAction: IMenuActions;\n  editAction: IMenuActions;\n  exportAction: IMenuActions;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const IntegrationDetailHeader: React.FunctionComponent<\n  IIntegrationDetailHeaderProps\n> = (props: IIntegrationDetailHeaderProps) => {\n  const breadcrumbMenuActions: IMenuActions[] = [];\n  if (canActivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.startAction);\n  }\n  if (canDeactivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.stopAction);\n  }\n  breadcrumbMenuActions.push(props.deleteAction);\n  breadcrumbMenuActions.push(props.ciCdAction);\n\n  return (\n    <Translation ns={['integrations', 'shared']}>\n      {t => (\n        <>\n          <IntegrationDetailBreadcrumb\n            editHref={props.editAction.href}\n            editLabel={props.editAction.label}\n            exportAction={props.exportAction.onClick}\n            exportHref={props.exportAction.href}\n            exportLabel={props.exportAction.label}\n            homeHref={resolvers.dashboard.root()}\n            i18nHome={t('shared:Home')}\n            i18nIntegrations={t('shared:Integrations')}\n            i18nPageTitle={t('integrations:detail:pageTitle')}\n            integrationId={props.data.integration.id}\n            integrationsHref={resolvers.integrations.list()}\n            menuActions={breadcrumbMenuActions}\n          />\n\n          <IntegrationDetailInfo\n            name={props.data.integration.name}\n            version={props.data.integration.version}\n            currentState={props.data.integration.currentState!}\n            targetState={props.data.integration.targetState!}\n            monitoringValue={\n              props.data.monitoring &&\n              t('integrations:' + props.data.monitoring.detailedState.value)\n            }\n            monitoringCurrentStep={\n              props.data.monitoring &&\n              props.data.monitoring.detailedState.currentStep\n            }\n            monitoringTotalSteps={\n              props.data.monitoring &&\n              props.data.monitoring.detailedState.totalSteps\n            }\n            monitoringLogUrl={props.getPodLogUrl(props.data.monitoring)}\n            i18nProgressPending={t('shared:Pending')}\n            i18nProgressStarting={t('integrations:progressStarting')}\n            i18nProgressStopping={t('integrations:progressStopping')}\n            i18nLogUrlText={t('shared:viewLogs')}\n          />\n          <IntegrationDetailNavBar integration={props.data.integration} />\n        </>\n      )}\n    </Translation>\n  );\n};\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getIntegrationStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailHeader';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\nexport * from './WithIntegrationActions';\n","import { AboutModal as PfAboutModal } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModal {\n  brandImg: any;\n  handleModalToggle: any;\n  isModalOpen: boolean;\n  trademark: string;\n  productName: string;\n  children: React.ReactNode;\n}\n\nexport class AboutModal extends React.Component<IAboutModal> {\n  constructor(props: IAboutModal) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      brandImg,\n      children,\n      isModalOpen,\n      handleModalToggle,\n      productName,\n      trademark,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <PfAboutModal\n          isOpen={isModalOpen}\n          onClose={handleModalToggle}\n          trademark={trademark}\n          brandImageSrc={brandImg}\n          brandImageAlt=\"Brand Image\"\n          productName={productName}\n        >\n          {children}\n        </PfAboutModal>\n      </React.Fragment>\n    );\n  }\n}\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import {\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface IHelpDropdownProps {\n  className?: string;\n  isOpen: boolean;\n  launchAboutModal: any;\n}\n\nexport interface IHelpDropdownState {\n  isOpen: boolean;\n}\n\nexport class HelpDropdown extends React.Component<\n  IHelpDropdownProps,\n  IHelpDropdownState\n> {\n  public onToggle: any;\n  public onSelect: any;\n\n  constructor(props: IHelpDropdownProps) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.onToggle = (isOpen: boolean) => {\n      this.setState({\n        isOpen,\n      });\n    };\n    this.onSelect = (event: MouseEvent) => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    };\n  }\n\n  public render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem\n        key=\"action\"\n        component=\"span\"\n        onClick={() => {\n          this.props.launchAboutModal();\n        }}\n      >\n        About\n      </DropdownItem>,\n    ];\n    return (\n      <>\n        <Dropdown\n          direction={DropdownDirection.down}\n          position={DropdownPosition.right}\n          onSelect={this.onSelect}\n          toggle={\n            <DropdownToggle\n              className={classNames('', this.props.className)}\n              iconComponent={null}\n              onToggle={this.onToggle}\n            >\n              <HelpIcon />\n            </DropdownToggle>\n          }\n          isOpen={isOpen}\n          isPlain={true}\n          dropdownItems={dropdownItems}\n        />\n      </>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Level, LevelItem } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../Layout';\nimport { IMenuActions } from '../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Level gutter={'md'} className={'integration-detail__breadcrumb'}>\n        <LevelItem>\n          <Breadcrumb>\n            <span>\n              <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n            </span>\n            <span>\n              <Link to={this.props.integrationsHref!}>\n                {this.props.i18nIntegrations}\n              </Link>\n            </span>\n            <span>{this.props.i18nPageTitle}</span>\n          </Breadcrumb>\n        </LevelItem>\n        <LevelItem>\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        </LevelItem>\n      </Level>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  <>\n                    <ButtonLink\n                      to={this.props.publishHref}\n                      onClick={this.props.publishAction}\n                      children={this.props.publishLabel}\n                    />\n                    <ButtonLink\n                      href={this.props.editHref}\n                      children={this.props.editLabel}\n                    />\n                  </>\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        <>\n          {this.props.currentState === 'Pending' && (\n            <IntegrationStatusDetail\n              targetState={this.props.targetState}\n              value={this.props.monitoringValue}\n              currentStep={this.props.monitoringCurrentStep}\n              totalSteps={this.props.monitoringTotalSteps}\n              logUrl={this.props.monitoringLogUrl}\n              i18nProgressPending={this.props.i18nProgressPending}\n              i18nProgressStarting={this.props.i18nProgressStarting}\n              i18nProgressStopping={this.props.i18nProgressStopping}\n              i18nLogUrlText={this.props.i18nLogUrlText}\n            />\n          )}\n          {this.props.currentState === 'Published' && this.props.version && (\n            <>\n              <span className=\"pficon pficon-ok\" />\n              &nbsp;Published version {this.props.version}\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { HelpDropdown } from '../Shared/HelpDropdown';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n  onShowAboutModal(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  onShowAboutModal,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n  return (\n    <Page\n      header={\n        <PageHeader\n          logo={pictograph}\n          logoProps={{ href: logoHref }}\n          toolbar={\n            <>\n              {\n                <HelpDropdown\n                  className=\"syn-help-dropdown\"\n                  isOpen={false}\n                  launchAboutModal={() => {\n                    onShowAboutModal();\n                  }}\n                />\n              }\n              {appNav}\n            </>\n          }\n          showNavToggle={true}\n          isNavOpen={showNavigation}\n          onNavToggle={onNavToggle}\n        />\n      }\n      sidebar={\n        <PageSidebar\n          nav={\n            <Nav>\n              <NavList>{verticalNav}</NavList>\n            </Nav>\n          }\n          isNavOpen={showNavigation}\n        />\n      }\n    >\n      <PageSection>{children}</PageSection>\n    </Page>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { TextContent, TextList, TextListItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModalContent {\n  version: string;\n  productName: string;\n  buildId: string;\n  commitId: string;\n}\n\nfunction AboutModalContent({\n  productName,\n  version,\n  buildId,\n  commitId,\n}: IAboutModalContent) {\n  return (\n    <TextContent>\n      <TextList component=\"dl\">\n        <TextListItem component=\"dt\">{productName}:</TextListItem>\n        <TextListItem component=\"dd\">{version}</TextListItem>\n        <TextListItem component=\"dt\">Build ID:</TextListItem>\n        <TextListItem component=\"dd\">{buildId}</TextListItem>\n        <TextListItem component=\"dt\">Commit ID:</TextListItem>\n        <TextListItem component=\"dd\">{commitId}</TextListItem>\n      </TextList>\n    </TextContent>\n  );\n}\n\nexport { AboutModalContent };\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import { WithApiVersion } from '@syndesis/api';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { AboutModal, AboutModalContent } from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoute[];\n}\n\nexport interface IAppUIState {\n  showAboutModal: boolean;\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [showAboutModal, setShowAboutModal] = useState(false);\n  const toggleAboutModal = () => {\n    setShowAboutModal(!showAboutModal);\n  };\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => {\n          const productName = 'Syndesis';\n          return (\n            <>\n              {showAboutModal && (\n                <AboutModal\n                  trademark={''}\n                  productName={productName}\n                  isModalOpen={showAboutModal}\n                  handleModalToggle={toggleAboutModal}\n                  brandImg={'https://avatars0.githubusercontent.com/u/23079786'}\n                >\n                  <WithApiVersion>\n                    {({ data }) => {\n                      const {\n                        'commit-id': commitId,\n                        'build-id': buildId,\n                        version,\n                      } = data;\n                      return (\n                        <AboutModalContent\n                          version={version}\n                          buildId={buildId}\n                          commitId={commitId}\n                          productName={productName}\n                        />\n                      );\n                    }}\n                  </WithApiVersion>\n                </AboutModal>\n              )}\n              <AppLayout\n                onShowAboutModal={toggleAboutModal}\n                appNav={\n                  <AppTopMenu username={'developer'}>\n                    <PfDropdownItem>\n                      <Link\n                        to={'/logout'}\n                        className=\"pf-c-dropdown__menu-item\"\n                        children={t('Logout')}\n                      />\n                    </PfDropdownItem>\n                  </AppTopMenu>\n                }\n                verticalNav={routes.map(({ exact, icon, label, to }, index) => (\n                  <PfVerticalNavItem\n                    exact={exact}\n                    icon={icon}\n                    label={t(label)}\n                    to={to}\n                    key={index}\n                    data-testid={`navbar-link-${to}`}\n                  />\n                ))}\n                pictograph={\n                  <img\n                    src={logo}\n                    alt=\"Syndesis\"\n                    style={{ minWidth: '164px' }}\n                  />\n                }\n                logoHref={'/'}\n                showNavigation={showNavigation}\n                onNavigationCollapse={onHideNavigation}\n                onNavigationExpand={onShowNavigation}\n              >\n                <Notifications\n                  notifications={notifications}\n                  notificationTimerDelay={8000}\n                  removeNotificationAction={onRemoveNotification}\n                />\n                <WithRouter>\n                  {({ match }) => (\n                    <WithErrorBoundary key={match.url}>\n                      <Switch>\n                        {routes.map(({ to, exact, component }, index) => (\n                          <Route\n                            path={to}\n                            exact={exact}\n                            component={component}\n                            key={index}\n                          />\n                        ))}\n                        <Route component={PageNotFound} />\n                      </Switch>\n                    </WithErrorBoundary>\n                  )}\n                </WithRouter>\n              </AppLayout>\n            </>\n          );\n        }}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoute[];\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  location.state = location.state || JSON.parse(sessionStorage.getItem(key));\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in localStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key\n        }, null, href);\n\n        try {\n          sessionStorage.setItem(key, JSON.stringify(state));\n        } catch (e) {\n          // storage full, retry after a clean. Old history entries will be nuked, so if the user will go back pages will raise exceptions. Nothing we can do about that I guess?\n          sessionStorage.clear();\n          sessionStorage.setItem(key, JSON.stringify(state));\n        }\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(position: number, step: Step) =>\n                      getStepHref(\n                        step,\n                        { flowId, position: `${position}` },\n                        { integration },\n                        this.props\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <IntegrationEditorConnectionsListItem\n                                              key={idx}\n                                              integrationName={step.name}\n                                              integrationDescription={\n                                                step.description ||\n                                                'No description available.'\n                                              }\n                                              icon={\n                                                <img\n                                                  src={step.icon}\n                                                  width={24}\n                                                  height={24}\n                                                />\n                                              }\n                                              actions={\n                                                <ButtonLink\n                                                  href={getStepHref(\n                                                    step,\n                                                    params,\n                                                    state,\n                                                    this.props\n                                                  )}\n                                                >\n                                                  Select\n                                                </ButtonLink>\n                                              }\n                                            />\n                                          )\n                                        )}\n                                        <IntegrationEditorConnectionsListItem\n                                          integrationName={''}\n                                          integrationDescription={''}\n                                          icon={''}\n                                          actions={\n                                            <ButtonLink href={'#'}>\n                                              Create connection\n                                            </ButtonLink>\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { WithActivities } from '@syndesis/api';\nimport {\n  Activity,\n  ActivityStep,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport {\n  IntegrationDetailActivityItem,\n  IntegrationDetailActivityItemSteps,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../../i18n';\n\nexport interface IActivityPagetableProps {\n  integrationId: string;\n}\n\ninterface IExtendedActivity extends Activity {\n  [name: string]: any;\n}\n\ninterface IExtendedActivityStep extends ActivityStep {\n  [name: string]: any;\n}\n\ninterface IExtendedDeployment extends IntegrationDeployment {\n  [name: string]: any;\n}\n\nfunction fetchStepName(step: Step): string {\n  let stepName = 'n/a';\n\n  if (step) {\n    const { name, action } = step;\n    stepName = name || (action && action.name ? action.name : stepName);\n  }\n\n  return stepName;\n}\n\nexport class ActivityPageTable extends React.Component<\n  IActivityPagetableProps\n> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithActivities integrationId={this.props.integrationId}>\n            {({\n              activities: activitiesBase,\n              deployments: deploymentsBase,\n              // fetchActivities,\n              // fetchDeployments,\n            }) => {\n              const activities = activitiesBase as IExtendedActivity[];\n              const integrationDeployments = (deploymentsBase ||\n                []) as IExtendedDeployment[];\n              /*\n              const refresh = async () => {\n                await fetchActivities();\n                await fetchDeployments();\n              };\n              */\n\n              activities.forEach((activity: IExtendedActivity) => {\n                if (activity.steps && Array.isArray(activity.steps)) {\n                  activity.steps.forEach((step: IExtendedActivityStep) => {\n                    step.name = 'n/a';\n                    step.isFailed =\n                      typeof step.failure !== 'undefined' &&\n                      step.failure.length > 0;\n\n                    const deployedIntegration = integrationDeployments.find(\n                      deployment => deployment.version === +activity.ver\n                    );\n                    if (!deployedIntegration) {\n                      return;\n                    }\n\n                    for (const integrationFlow of deployedIntegration!.spec!\n                      .flows!) {\n                      const integrationStep = integrationFlow!.steps!.find(\n                        is => is.id === step.id\n                      );\n                      if (integrationStep) {\n                        step.name = fetchStepName(integrationStep);\n                        break;\n                      }\n                    }\n\n                    const errorMessages = [\n                      null,\n                      ...step.messages!,\n                      step.failure,\n                    ].filter(messages => !!messages);\n                    step.output =\n                      errorMessages.length > 0 ? errorMessages.join('\\n') : '';\n                  });\n                }\n              });\n\n              return (\n                <>\n                  {activities.map(\n                    (activity: IExtendedActivity, activityIndex: number) => (\n                      <IntegrationDetailActivityItem\n                        key={activityIndex}\n                        date={new Date(activity.at!).getDate().toLocaleString()}\n                        errorCount={activity.failed ? 1 : 0}\n                        i18nErrorsFound={t('integrations:ErrorsFound')}\n                        i18nNoErrors={t('integrations:NoErrors')}\n                        i18nNoSteps={t('integrations:NoSteps')}\n                        i18nVersion={t('shared:Version')}\n                        steps={(activity.steps || []).map(\n                          (step: IExtendedActivityStep, stepIndex: number) => (\n                            <IntegrationDetailActivityItemSteps\n                              key={stepIndex}\n                              duration={step.duration}\n                              name={step.name || ''}\n                              output={step.output}\n                              status={\n                                step.isFailed\n                                  ? i18n.t('shared:Error')\n                                  : i18n.t('shared:Success')\n                              }\n                            />\n                          )\n                        )}\n                        time={new Date(activity.at).getTime().toLocaleString()}\n                        version={activity.version}\n                      />\n                    )\n                  )}\n                </>\n              );\n            }}\n          </WithActivities>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithMonitoredIntegration } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationDetailActivity, Loader } from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { ActivityPageTable } from './ActivityPageTable';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <WithRouteData<IActivityPageParams, IActivityPageState>>\n                {({ integrationId }, { integration }, { history }) => {\n                  return (\n                    <>\n                      <WithMonitoredIntegration integrationId={integrationId}>\n                        {({ data, hasData, error }) => (\n                          <WithLoader\n                            error={error}\n                            loading={!hasData}\n                            loaderChildren={<Loader />}\n                            errorChildren={<ApiError />}\n                          >\n                            {() => (\n                              <WithIntegrationActions\n                                integration={data.integration}\n                              >\n                                {({\n                                  ciCdAction,\n                                  editAction,\n                                  deleteAction,\n                                  exportAction,\n                                  startAction,\n                                  stopAction,\n                                }) => {\n                                  return (\n                                    <>\n                                      <PageTitle\n                                        title={t(\n                                          'integrations:detail:pageTitle'\n                                        )}\n                                      />\n                                      <IntegrationDetailHeader\n                                        data={data}\n                                        startAction={startAction}\n                                        stopAction={stopAction}\n                                        deleteAction={deleteAction}\n                                        ciCdAction={ciCdAction}\n                                        editAction={editAction}\n                                        exportAction={exportAction}\n                                        getPodLogUrl={getPodLogUrl}\n                                      />\n                                      <IntegrationDetailActivity\n                                        i18nBtnRefresh={t('shared:Refresh')}\n                                        i18nLastRefresh={t(\n                                          'integrations:LastRefresh'\n                                        )}\n                                        i18nViewLogOpenShift={t(\n                                          'integrations:View Log in OpenShift'\n                                        )}\n                                        linkToOpenShiftLog={\n                                          getPodLogUrl(data.monitoring) || ''\n                                        }\n                                        children={\n                                          <ActivityPageTable\n                                            integrationId={data.integration.id!}\n                                          />\n                                        }\n                                      />\n                                    </>\n                                  );\n                                }}\n                              </WithIntegrationActions>\n                            )}\n                          </WithLoader>\n                        )}\n                      </WithMonitoredIntegration>\n                    </>\n                  );\n                }}\n              </WithRouteData>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { canActivate, WithMonitoredIntegration } from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  IntegrationDetailSteps,\n  WithIntegrationActions,\n} from '../../components';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<IIntegrationDetailsPageProps> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <WithRouteData<IIntegrationDetailsRouteParams, null>>\n                {({ integrationId }) => (\n                  <WithMonitoredIntegration integrationId={integrationId}>\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <WithIntegrationActions\n                            integration={data.integration}\n                          >\n                            {({\n                              ciCdAction,\n                              editAction,\n                              deleteAction,\n                              exportAction,\n                              startAction,\n                              stopAction,\n                            }) => {\n                              return (\n                                <>\n                                  <PageTitle\n                                    title={t('integrations:detail:pageTitle')}\n                                  />\n                                  <IntegrationDetailHeader\n                                    data={data}\n                                    startAction={startAction}\n                                    stopAction={stopAction}\n                                    deleteAction={deleteAction}\n                                    ciCdAction={ciCdAction}\n                                    editAction={editAction}\n                                    exportAction={exportAction}\n                                    getPodLogUrl={getPodLogUrl}\n                                  />\n                                  <IntegrationDetailSteps\n                                    integration={data.integration}\n                                  />\n                                  <IntegrationDetailDescription\n                                    description={data.integration.description}\n                                    i18nNoDescription={t(\n                                      'integrations:detail:noDescription'\n                                    )}\n                                  />\n                                  <IntegrationDetailHistoryListView\n                                    editHref={editAction.href}\n                                    editLabel={editAction.label}\n                                    hasHistory={\n                                      (data.integration.deployments || [])\n                                        .length > 0\n                                    }\n                                    isDraft={\n                                      (data.integration as IIntegrationOverviewWithDraft)\n                                        .isDraft\n                                    }\n                                    i18nTextDraft={t('shared:Draft')}\n                                    i18nTextHistory={t(\n                                      'integrations:detail:History'\n                                    )}\n                                    publishAction={\n                                      canActivate(data.integration)\n                                        ? startAction.onClick\n                                        : undefined\n                                    }\n                                    publishHref={\n                                      canActivate(data.integration)\n                                        ? startAction.href\n                                        : undefined\n                                    }\n                                    publishLabel={\n                                      canActivate(data.integration)\n                                        ? t('shared:Publish')\n                                        : undefined\n                                    }\n                                    children={(\n                                      data.integration.deployments || []\n                                    ).map((deployment, idx) => {\n                                      return (\n                                        <IntegrationDetailHistoryListViewItem\n                                          key={idx}\n                                          actions={\n                                            <IntegrationDetailHistoryListViewItemActions\n                                              actions={[]}\n                                              integrationId={\n                                                data.integration.id!\n                                              }\n                                            />\n                                          }\n                                          currentState={\n                                            deployment.currentState!\n                                          }\n                                          i18nTextLastPublished={t(\n                                            'integrations:detail:lastPublished'\n                                          )}\n                                          i18nTextVersion={t('shared:Version')}\n                                          updatedAt={deployment.updatedAt}\n                                          version={deployment.version}\n                                        />\n                                      );\n                                    })}\n                                  />\n                                </>\n                              );\n                            }}\n                          </WithIntegrationActions>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithMonitoredIntegration>\n                )}\n              </WithRouteData>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithMonitoredIntegration } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Loader } from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n                {({ integrationId }, { integration }, { history }) => {\n                  return (\n                    <WithMonitoredIntegration integrationId={integrationId}>\n                      {({ data, hasData, error }) => (\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={<Loader />}\n                          errorChildren={<ApiError />}\n                        >\n                          {() => (\n                            <WithIntegrationActions\n                              integration={data.integration}\n                            >\n                              {({\n                                ciCdAction,\n                                editAction,\n                                deleteAction,\n                                exportAction,\n                                startAction,\n                                stopAction,\n                              }) => {\n                                return (\n                                  <>\n                                    <PageTitle\n                                      title={t('integrations:detail:pageTitle')}\n                                    />\n                                    <IntegrationDetailHeader\n                                      data={data}\n                                      startAction={startAction}\n                                      stopAction={stopAction}\n                                      deleteAction={deleteAction}\n                                      ciCdAction={ciCdAction}\n                                      editAction={editAction}\n                                      exportAction={exportAction}\n                                      getPodLogUrl={getPodLogUrl}\n                                    />\n                                    <p>\n                                      This is the Integration Detail Metrics\n                                      page.\n                                    </p>\n                                  </>\n                                );\n                              }}\n                            </WithIntegrationActions>\n                          )}\n                        </WithLoader>\n                      )}\n                    </WithMonitoredIntegration>\n                  );\n                }}\n              </WithRouteData>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { createBrowserHistory } from '@syndesis/history';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { Router } from 'react-router-dom';\nimport { App } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router history={createBrowserHistory()}>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                icon: 'fa fa-tachometer-alt',\n                                label: 'Home',\n                                to: '/',\n                              },\n                              {\n                                component: IntegrationsModule,\n                                icon: 'pficon pficon-integration',\n                                label: 'Integrations',\n                                to: '/integrations',\n                              },\n                              {\n                                component: ConnectionsModule,\n                                icon: 'pficon pficon-plugged',\n                                label: 'Connections',\n                                to: '/connections',\n                              },\n                              {\n                                component: CustomizationsModule,\n                                icon: 'fa fa-cube',\n                                label: 'Customizations',\n                                to: '/customizations',\n                              },\n                              {\n                                component: DataModule,\n                                icon: 'fa fa-database',\n                                label: 'Data',\n                                to: '/data',\n                              },\n                              {\n                                component: SettingsModule,\n                                icon: 'pficon pficon-settings',\n                                label: 'Settings',\n                                to: '/settings',\n                              },\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}