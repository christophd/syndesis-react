{"version":3,"sources":["../../src/DataMapperAdapter.tsx","app/syndesis_logo_full_darkbkg.svg","../../src/Shared/AboutModal.tsx","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/HelpDropdown.tsx","../../src/Layout/AppLayoutContext.tsx","../../src/Layout/AppBreadcrumb.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/Details/IntegrationBulletinBoardAlert.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/Details/IntegrationActions.tsx","../../src/Integration/Details/IntegrationDetailBreadcrumb.tsx","../../src/Integration/Details/IntegrationDetailDescription.tsx","../../src/Integration/Details/IntegrationDetailEditableName.tsx","../../src/Integration/Details/IntegrationDetailHistoryListView.tsx","../../src/Integration/Details/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/Details/IntegrationDetailHistoryListViewItemActions.tsx","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/models.ts","../../src/Integration/Details/IntegrationDetailInfo.tsx","../../src/Integration/Activity/IntegrationDetailActivity.tsx","../../src/Integration/Activity/IntegrationDetailActivityItem.tsx","../../src/Integration/Activity/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/Metrics/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationSaveForm.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/EmptyViewsState.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewHeader.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/SqlClientContent.tsx","../../src/Data/Virtualizations/SqlClientForm.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/Details/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationEditorWizard.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/AboutModalContent.tsx","../../src/Shared/UnrecoverableError.tsx","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/dateHelpers.ts","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","../../src/constants.ts","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithActivities.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithApiVersion.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegration.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationMetrics.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","../../packages/history/esm/history.js","app/AppContext.tsx","shared/ApiError.tsx","shared/PageNotFound.tsx","shared/ModuleLoader.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/WithConfig.tsx","i18n/locales/index.ts","i18n/index.ts","modules/apiClientConnectors/routes.ts","modules/apiClientConnectors/pages/ApiConnectorsPage.tsx","modules/apiClientConnectors/index.tsx","modules/apiClientConnectors/resolvers.ts","modules/connections/routes.ts","modules/connections/resolvers.ts","modules/dashboard/routes.ts","modules/dashboard/resolvers.ts","modules/data/routes.ts","modules/data/resolvers.ts","modules/extensions/routes.ts","modules/extensions/resolvers.ts","modules/integrations/routes.ts","modules/integrations/resolvers.ts","modules/settings/routes.ts","modules/settings/resolvers.ts","modules/resolvers.ts","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/WithIntegrationActions.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/IntegrationDetailHeader.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/pages/DashboardPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/shared/WithVirtualizationSqlClientForm.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/extensions/shared/ExtensionIntegrations.tsx","modules/extensions/pages/ExtensionDetailsPage.tsx","modules/extensions/utils.ts","modules/extensions/pages/ExtensionImportPage.tsx","modules/extensions/pages/ExtensionsPage.tsx","modules/extensions/index.tsx","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPageTable.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/components/WithDeploymentActions.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx"],"names":["const","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","constructor","props","iframe","messageChannel","MessageChannel","onIframeLoad","this","bind","onMessages","componentDidMount","addEventListener","componentWillReceiveProps","nextProps","prevPayload","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","message","payload","onMappings","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","React","createElement","Object","assign","style","width","height","frameBorder","allowtransparency","extraProps","ref","el","module","exports","__webpack_require__","p","AboutModal","brandImg","children","isModalOpen","handleModalToggle","productName","trademark","PfAboutModal","isOpen","onClose","brandImageSrc","brandImageAlt","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","title","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","name","ok","error","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","icon","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","className","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","undefined","show","showDialog","i18nTitle","Dialog","body","footer","Container","classnames","DndFileChooser","state","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","length","map","file","index","key","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","idx","acceptedFiles","setState","onUploadAccepted","rejectedFiles","concat","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","GenericTable","rows","rowKey","Table","PfProvider","striped","bordered","hover","columns","HelpDropdown","onToggle","onSelect","dropdownItems","DropdownItem","component","onClick","launchAboutModal","Fragment","Dropdown","direction","DropdownDirection","down","position","DropdownPosition","right","toggle","DropdownToggle","classNames","iconComponent","HelpIcon","isPlain","AppLayoutContext","AppBreadcrumb","appLayoutContext","AppTopMenu","username","ButtonLink","href","as","size","Link","to","Breadcrumb","count","Level","gutter","LevelItem","PFBreadcrumb","Children","c","BreadcrumbItem","isActive","actions","Loader","inline","Spinner","loading","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","rest","path","pathname","escapedPath","Route","match","childLocation","i","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","NavExpandable","isExpanded","obj","WizardSteps","active","mainSteps","altSteps","ReadWidget","allowEditing","value","onEdit","EditWidget","placeholder","errorMsg","saving","asTextarea","onChange","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","then","result","e","handleConfirm","success","handleChange","isEditing","renderValue","v","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","followScroll","previousCount","renderRow","parent","CellMeasurer","cache","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","data","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","id","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","TitleLevel","h1","PageSection","variant","TextContent","Title","titleSize","headingLevel","titleHeadingLevel","Text","ProgressWithLink","currentStep","totalSteps","logUrl","target","i18nLogUrlText","ProgressBar","now","max","PfDropdownItem","superclass","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","Heading","techPreview","i18nTechPreview","Popover","bodyContent","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","configurationRequired","Tooltip","content","i18nCannotDelete","src","alt","description","Footer","i18nConfigurationRequired","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onStartEditing","onCancelEditing","i18nSaveLabel","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","noPadding","linkToConnectionCreate","createConnectionButtonStyle","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","apiConnectorId","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","i18nLinkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","i18nOverviewSectionTitle","overviewSection","i18nSupportsSectionTitle","supportsSection","i18nUsageSectionTitle","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","action","onImport","extensionUid","extensionId","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","integrationId","onSelectIntegration","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","i18nIntegrations","linkToIntegrations","linkToIntegrationCreation","topIntegrations","integrationBoard","integrationUpdates","i18nConnections","linkToConnections","linkToConnectionCreation","connections","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","onSave","validationError","NoErrors","htmlFor","i18nInputLabel","defaultValue","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","AlertLevel","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","items","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","background","border","i18nInfo","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","a","IntegrationBulletinBoardAlert","level","detail","ExpandCollapse","align","expanded","textExpanded","i18nTextExpanded","textCollapsed","i18nTextCollapsed","IntegrationDetailBreadcrumb","exportHref","exportAction","exportLabel","editLabel","menuActions","homeHref","i18nHome","integrationsHref","IntegrationDetailDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","isDraft","i18nTextDraft","publishHref","publishAction","publishLabel","hasHistory","states","Error","Unpublished","IntegrationDetailHistoryListViewItem","currentState","IntegrationDetailHistoryListViewItemActions","IntegrationStatusDetail","fallbackText","i18nProgressPending","targetState","IntegrationDetailInfo","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","version","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","onRefresh","cellFormat","statusCellFormat","status","Cell","outputCellFormat","output","IntegrationDetailActivityItem","time","errorCount","i18nErrorsFound","i18nNoErrors","date","InfoItem","i18nVersion","steps","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","step","IntegrationDetailMetrics","okMessagesCount","messages","errors","startAsHuman","Date","start","toLocaleString","marginBottom","marginTop","i18nTotalErrors","i18nLastProcessed","lastProcessed","i18nTotalMessages","i18nSince","i18nUptime","durationDifference","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorConnectionsListItem","IntegrationEditorForm","chooseActionHref","i18nChooseAction","submitForm","i18nNext","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","stepName","stepDescription","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","addStepHref","i18nAddStep","showDetails","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationSaveForm","IntegrationStatus","labelType","Label","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","viewName","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","EmptyViewsState","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","ViewList","hasListData","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewHeader","ViewInfoList","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","defaultCellFormat","defaultHeaderFormat","SqlClientContent","viewNames","formContent","queryResultRows","queryResultCols","col","i18nEmptyResultsMsg","SqlClientForm","VirtualizationPublishStatus","VirtualizationPublishStatusDetail","stepText","i18nPublishInProgress","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","virtualizationName","onExport","onPublish","serviceVdbName","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","publishingLogUrl","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishLogUrlText","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","saveHref","isSaveLoading","isSaveDisabled","isPublishLoading","isPublishDisabled","rawObject","window","appNav","verticalNav","logoHref","showNavigation","onNavigationCollapse","onNavigationExpand","onShowAboutModal","onNavToggle","breadcrumb","setHasBreadcrumb","Provider","b","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","bsClass","isDisabled","isAlt","subSteps","s","i18nCallbackDescription","callbackURI","buildId","commitId","TextList","TextListItem","i18nHelp","i18nRefreshLabel","i18nReportIssue","i18nShowErrorInfoLabel","errorInfo","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","getValidationState","field","form","FormInputComponent","ControlLabel","displayName","FieldLevelHelp","labelHint","fieldAttributes","controlHint","FormSelectComponent","isMultiple","newValue","select","currentTarget","Array","option","onBlur","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","d","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","initialValue","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","required","sort","massageType","secret","massageRequired","massageValue","parseInt","String","AutoForm","Formik","initialValues","values","touched","dirty","isValidating","resetForm","validateForm","this$1","toFormDefinitionProperty","controlTooltip","labelTooltip","formDefinitionProperty","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","filter","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","componentDidUpdate","prevProps","waitTimeout","setTimeout","errorChildren","loaderChildren","clearTimeout","minWait","WithRouteData","route","params","WithRouterBase","WithRouter","withRouter","properties","answer","timestamp","startDate","moment","uptimeDuration","days","hours","minutes","durationString","timeSpan","timeDuration","unit","durationMoment","seconds","milliseconds","durationStrings","getTime","remainingTimestamp","defaultRoute","mapper","reverse","present","asInt","optional","MessageLevel","DataShapeKinds","MessageCode","IntegrationType","ConsoleLinkType","DetailedStatus","SPLIT","AGGREGATE","ApiContextDefaultValue","apiUri","dvApiUri","headers","ApiContext","_Pact","onFulfilled","onRejected","callback","_settle","o","_this","pact","observer","_catch","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","done","_wrapYieldedValue","Symbol","Promise","resolve","returnValue","reject","callFetch","method","includeAccept","includeContentType","includeReferrerPolicy","fetch","url","contentType","JSON","credentials","mode","redirect","Fetch","read","hasData","nextState","response","_this3","baseUrl","statusText","indexOf","text","_response$text","json","_response$json","deepmerge","errorMessage","Stream","reader","getReader","textDecoder","TextDecoder","pushData","cancel","SyndesisFetch","stream","FetchOrStream","Consumer","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","WithIntegrationHelpersWrapped","addConnection","deleteIntegration","deployIntegration","exportIntegration","getDeployment","importIntegration","replaceDraft","saveIntegration","undeployIntegration","updateConnection","updateOrAddConnection","tagIntegration","setAttributes","getActionDescriptor","connectionId","actionId","configuredProperties","integration","connection","flowId","actionDescriptor","produce","draft","flows","f","Set","options","_this5","deployment","fileName","blob","_body$blob","saveAs","isIntegrationDeployment","environments","WithActivities","totalCount","deployments","activities","fetchActivities","fetchDeployments","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","WithApiConnectors","changeFilter","change","disableUpdates","WithApiVersion","Accept","camelkruntimeversion","camelversion","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","WithEnvironments","WithEnvironmentHelpersWrapped","createEnvironment","deleteEnvironment","renameEnvironment","stringifyBody","newName","WithExtension","extensionType","schemaVersion","WithExtensionHelpersWrapped","deleteExtension","importExtension","uploadExtension","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","WithIntegrations","WithIntegrationTags","WithMonitoredIntegration","getMonitoredIntegration","monitoring","WithMonitoredIntegrations","getMonitoredIntegrations","integrations","WithIntegrationMetrics","metricsProvider","WithIntegrationsMetrics","integrationDeploymentMetrics","getConnectionsForDisplay","metadata","getConnectionsWithFromAction","connector","some","getConnectionsWithToAction","transformResponse","connectionsForDisplay","connectionsWithFromAction","connectionsWithToAction","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","getActionsWithTo","getConnectionIcon","iconFile","File","URL","NEW_INTEGRATION","tags","getStep","getFlow","flow","getExtensionIcon","extension","getStepKindIcon","stepKind","getIntegrationStepIcon","stepIndex","getStepIcon","getStepsLastPosition","WithConnection","actionsWithFrom","actionsWithTo","WithConnectionHelpersWrapped","createConnection","deleteConnection","validateConfiguration","saveConnection","validateName","connectorId","proposedName","isError","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","connectorsForDisplay","WithConnectors","WithOAuthAppHelpersWrapped","updateOAuthApp","deleteOAuthApp","app","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","nextContext","webSocket","eventSource","startConnection","onFailure","reconnectIn","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","forEach","postChangeEvent","changeEvent","EventSource","onError","WebSocket","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","requiresOutputDataShape","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","toLowerCase","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","idPattern","WithVirtualizationHelpersWrapped","createVirtualization","updateViewEditorStates","deleteView","deleteViewEditorState","deleteVirtualization","publishVirtualization","queryVirtualization","refreshVirtualizationViews","unpublishServiceVdb","virtName","virtDesc","newVirtualization","keng__dataPath","keng__id","tko__description","virtualization","vdbName","editorStateId","_this2","pubVirtualization","sqlQuery","rowlimit","rowOffset","queryBody","limit","offset","query","viewEditorStateId","viewEditorStates","_this9","WithVirtualization","virtualizationId","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","publishedState","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","descriptor","propertyDefinitionSteps","nextIntegration","btoa","encodeURIComponent","decodeURIComponent","atob","addLeadingSlash","charAt","stripBasename","prefix","hasBasename","substr","stripTrailingSlash","slice","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","_extends","resolvePathname","parse","sessionStorage","getItem","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","fn","apply","arguments","push","notifyListeners","_len","args","_key","canUseDOM","document","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","AppContext","ApiError","react","es","ns","t","ui","PageNotFound","PageTitle","_React$PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","_ref","config","Helmet_default","WithClosedNavigation","context","UIContext","hideNavigation","WithErrorBoundary","_React$Component","_getPrototypeOf2","call","errorComponent","UI","routes","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","showAboutModal","setShowAboutModal","toggleAboutModal","_useState5","_useState6","setNotifications","onRemoveNotification","n","pushNotification","msg","toConsumableArray","toString","dist_api","_ref2","removeNotificationAction","react_router_dom","childrens","subRoute","subIndex","data-testid","minWidth","utils","_ref3","WithErrorBoundary_WithErrorBoundary","react_router","flattenedRoutes","App","getPodLogUrl","linkType","namespace","podName","consoleUrl","logout","UI_UI","WithConfig","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","configResponse","wrap","_context","prev","next","process","sent","t0","stop","en","appEn","it","appIt","modules","apiClientConnectors","apiClientConnectorsEn","apiClientConnectorsIt","settings","settingsEn","settingsIt","connectionsEn","connectionsIt","extensions","extensionsEn","extensionsIt","dashboard","dashboardEn","dashboardIt","dataEn","dataIt","integrationsEn","integrationsIt","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","i18n","use","LanguageDetector","init","include","apiConnector","create","review","save","security","upload","list","filterByName","sortByName","ApiConnectorsPage","api","numUsedBy","optionalIntValue","uses","alert","helpers","filteredAndSorted","apiConnectors","valueToLower","includes","thisApi","thatApi","localeCompare","getFilteredAndSortedApiConnectors","backgroundColor","ApiError_ApiError","filterUndefinedId","getUsedByMessage","ApiClientConnectorsModule","resolvers","makeResolver","makeResolverNoParams","edit","details","selectConnector","configureConnector","root","connections_resolvers","_ref4","dashboard_resolvers","virtualizations","import","metrics","relationship","sqlClient","views","importSource","selectConnection","selectViews","data_resolvers","_ref5","_ref6","update","extensions_resolvers","stepRoutes","selectStep","apiProvider","dataMapper","basicFilter","template","selectAction","configureAction","describeData","editorRoutes","addStep","editStep","saveAndPublish","manageCicd","finish","configure","activity","configureIndexMapper","objectSpread","configureSelectConnectionMapper","objectWithoutProperties","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","configureConfigureActionMapper","updatedIntegration","_configureSelectActio","positionAsNumber","stepObject","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","integrationDetailsResolver","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","oauthApps","settings_resolvers","modules_resolvers","ConnectionCreatorBreadcrumbs","toggleActive","assertThisInitialized","Connections","_x","_x2","fill","_","board","notices","warnings","isTechPreview","getConnectionHref","includeConnectionMenu","getConnectionEditHref","techPreviewPopoverHtml","ConnectionsWithToolbar","filteredAndSortedConnections","miA","miB","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","shouldValidateAgainstBackend","validateFormAgainstBackend","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","_callee2","_context2","ConnectionDetailsPage","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","_callee3","validation","_context3","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","_context5","_x6","cancelEditing","startEditing","WithConnectorForm_WithConnectorForm","_ref13","i18nUsageLabel","ConnectionsPage","PageTitle_PageTitle","ConnectionsWithToolbar_ConnectionsWithToolbar","ConfigurationPage","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectorsPage","ReviewPage","ConnectionsCreatorApp","WithClosedNavigation_WithClosedNavigation","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","TagIntegrationDialogWrapper","newEnvironments","targetIntegrationId","hasTags","tagError","hasEnvironments","environmentsError","mappedItems","stringify","WithIntegrationActions","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","editAction","startAction","_handleAction","promptDialogButtonStyle","stopAction","_handleAction2","err","deleteAction","_handleAction3","ciCdAction","promptForCiCd","canEdit","canActivate","canDeactivate","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","Integrations","mi","WithIntegrationActions_WithIntegrationActions","detailedState","getStartIcon","getFinishIcon","IntegrationDetailNavBar","WithConfigurationForm","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","toAlertLevel","WARN","ERROR","INFO","IntegrationDetailHeader","breadcrumbMenuActions","bbMap","arr","code","substring","bulletinBoards","toLocaleLowerCase","IntegrationDetailNavBar_IntegrationDetailNavBar","getStepKind","toUIStepKind","uiStepKind","toUIStepKindCollection","getDataShapeText","dataShape","isCollection","kind","getStepHref","hrefs","connectionHref","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","visibleStepsByPosition","flowSteps","atStart","atEnd","HIDE_FROM_STEP_SELECT","pattern","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","TEMPLATE","ENDPOINT","filterStepsByPosition","visible","IntegrationDetailSteps","getSteps","stepUri","HIDE_FROM_CONNECTION_PAGES","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","IntegrationEditorStepAdder","configureStepHref","getTimestamp","updatedAt","createdAt","byTimestamp","aTimestamp","DvConnectionStatus","DvConnectionSelection","DashboardPage","integrationsData","hasIntegrations","integrationsError","metricsData","connectionsData","hasConnections","connectionsError","integrationStatesCount","counts","stateCount","defineProperty","recentlyUpdatedIntegrations","getRecentlyUpdatedIntegrations","topIntegrationsArray","findIndex","getTopIntegrations","integrationsOverview","connectionsOverview","messagesOverview","uptimeOverview","toDurationDifferenceString","numberOfDays","i18nLast90Days","Integrations_Integrations","i18nLinkCreateIntegration","i18nLinkToConnections","i18nLinkToIntegrations","DashboardModule","modules_routes","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","iterator","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","i18nNameFilterPlaceholder","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","WithVirtualizationSqlClientForm","queryResults","queryResultsEmpty","setQueryResults","results","enums","row","formDefinition","rowLimit","componentProperty","deprecated","javaType","order","buildViews","getInitialView","doSubmit","sqlStatement","targetVdb","buildRows","buildColumns","linkCreateView","linkImportViews","i18nEmptyResultsTitle","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","splice","handleCreateViews","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","handleCreate","VirtualizationMetricsPage","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","WithVirtualizationSqlClientForm_WithVirtualizationSqlClientForm","VirtualizationViewsPage","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","ExtensionIntegrations_ExtensionIntegrations","lastUpdated","i18nTypeMessage","getTypeMessage","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","ExtensionsModule","AddStepPage","IntegrationEditorStepAdder_IntegrationEditorStepAdder","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","ConfigureActionPage","_ref2$step","stepAsNumber","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","selectHref","SaveIntegrationPage","shouldPublish","setIntegrationName","postSaveHref","_state$integration","integrationSteps","hasConnectionsData","extensionsData","hasExtensionsData","extensionsError","visibleSteps","extentionsByAction","isArray","actionType","mergeConnectionsSources","addStepPage","AddStepPage_AddStepPage","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","IntegrationEditorSidebar_IntegrationEditorSidebar","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","fetchStepName","ActivityPageTable","activitiesBase","deploymentsBase","integrationDeployments","refresh","isFailed","failure","deployedIntegration","ver","spec","integrationStep","is","errorMessages","join","lastRefreshed","i18nBtnRefresh","at","activityIndex","toLocaleDateString","toLocaleTimeString","failed","toDurationString","ActivityPage","IntegrationDetailHeader_IntegrationDetailHeader","ActivityPageTable_ActivityPageTable","WithDeploymentActions","startDeploymentAction","stopDeploymentAction","replaceDraftAction","DetailsPage","IntegrationDetailSteps_IntegrationDetailSteps","i18nTextHistory","aVersion","WithDeploymentActions_WithDeploymentActions","i18nTextLastPublished","i18nTextVersion","MetricsPage","ImportPage","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","filterByConnection","sortByStatus","IntegrationsPage","filteredAndSortedIntegrations","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","invariant","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","setItem","clear","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","createBrowserHistory","WithConfig_WithConfig","apiBase","apiEndpoint","datavirt","dvUrl","SYNDESIS-XSRF-TOKEN","functions","App_App","getElementById","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kRAQAA,IAQYC,EAUAC,EAlBNC,EAAUC,EAAhBJ,KACMK,EAAYD,EAAlBJ,KACMM,EAASF,EAAfJ,KACMO,EAAUH,EAAhBJ,KACMQ,EAASJ,EAAfJ,KACMS,EAAOL,EAAbJ,MAGYC,kCAAZ,KACEA,YACAA,YACAA,YACAA,cACAA,cACAA,YACAA,uBACAA,uBAEUC,sCAAZ,KACEA,wBACAA,kBACAA,sBACAA,oBAOF,IAAaQ,cAOXC,WAAYC,eACVA,QAHQC,OAAA,UAIRC,eAAsB,IAAtBC,oBACAC,aAAoBC,KAAAD,aAAAE,KAApBD,WACAE,WAAkBF,KAAAE,WAAAD,KAAlBD,gHAGKG,6BACDH,KAAJJ,aACEA,OAAAQ,iBAAA,OAAqCJ,KAArCD,2BAIGM,mCAAyBC,OACJC,IAAgBP,KAAKL,sBACpBa,sBACtBC,EAAKF,EAAVC,SACEE,oBAAAF,gBAIGG,wCACL,eAGKC,gCACDZ,KAAJJ,aACEA,OAAAiB,oBAAA,OAAwCb,KAAxCD,2BAIGA,6BACLe,YAAmBd,KAAAH,eAAnBkB,WACAD,YAAAE,UAA6BhB,KAA7BE,gBACAN,OAAAqB,cAAAC,YAAA,WAAqD,CACnDlB,KAAAH,eADFsB,qBAKKjB,oBAAUkB,UACPA,OAARC,aACE,YACyBC,IAAYtB,KAAKL,2BACxCe,oBAAAY,aAGF,eACQA,EAAmCF,OAAzCE,aACA3B,MAAA4B,WAAsBD,EAAtBE,wBAMCd,6BAAmBf,MACpBK,KAAJc,YAAsB,KACdO,EAAU,CACdA,QADc,SAEdC,QAAS,CACPG,WAAY9B,EADL8B,WAEPC,eAAgB/B,EAFT+B,eAGPC,iBAAkBhC,EAHXgC,iBAIPC,kBAAmBjC,EAJZiC,kBAKPC,oBAAqBlC,EALdkC,oBAMPC,UAAWnC,EANJmC,UAOPN,SAAU7B,EAPH6B,SAQPO,gBAAiBpC,EARVoC,gBASPC,kBAAmBrC,EATZqC,kBAUPC,mBAAoBtC,EAVbsC,mBAWPC,qBAAsBvC,EAXfuC,qBAYPC,WAAYxC,EAAMwC,kBAGtBrB,YAAAI,YAAAG,iBAIGe,6BACCC,EAAM,+WAYwBnD,yDACAE,yDACAC,yDACAC,yDACAC,yDACAC,EAjBpC,0CA2BE8C,EAAAC,cAAA,SAAAC,OAAAC,OAAA,CACEJ,OAAQA,EACRK,MAAO,CAAEC,MAAF,OAAiBC,OAAQ,QAChCC,YAAa,GAPE,CACjBC,kBAAmB,IAObC,CACJC,IAAG,SAAEC,UAAOjD,SAAciD,SArHrBxD,CAA0B6C,wDCrCvCY,EAAAC,QAAiBC,EAAAC,EAAuB,snqBCY3BC,cACX5D,WAAYC,eACVA,6GAGKyC,wBAQDpC,KAAKL,MANP4D,aACAC,aACAC,gBACAC,sBACAC,gBACAC,qBAGAtB,gBAACA,EAADA,cACEA,EAAAC,cAACsB,EAADP,WAAA,CACEQ,OAAQL,EACRM,QAASL,EACTE,UAAWA,EACXI,cAAeT,EACfU,cAAc,cACdN,YAAaA,GARnBH,OAdSF,CAAmBhB,iBCNpB4B,EAWAC,ECFCC,6JAGJhC,yBAEHE,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,gBAAC+B,OAAD/B,WACEA,EAAAC,cAACkC,EAADA,qBAAA,KACEnC,EAAAC,cAAA,sBAAkB,mBAAmBvC,KAAAL,MAH3C+E,SAMEpC,EAAAC,cAAC8B,OAADM,KAAA,KACErC,EAAAC,cAACqC,EAADA,6BAAA,KACEtC,EAAAC,cAACsC,EAADA,4BAAA,KACEvC,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,OACrB1C,EAAAC,cAAA,sBAAkB,sBAAsBvC,KAAAL,MAF1CsF,IADF,KAKE3C,EAAAC,cAACsC,EAADA,4BAAA,KACEvC,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBACrB1C,EAAAC,cAAA,sBAAkB,yBACfvC,KAAAL,MAhBbuF,cAJSd,CAA6B9B,kBDT9B4B,kDAAZ,KACEA,wBACAA,+BACAA,cACAA,UACAA,eAMUC,wDAAZ,KACEA,iBACAA,oBACAA,kBACAA,oBACAA,cACAA,cA4DF,IAAagB,6JAGJ/C,yBAEHE,EAAAC,cAAC6C,EAADA,cAAA,CACEC,eAAe,2BACfC,sBAAsB,kCACtBC,KACEvF,KAAAL,MAAA4F,OAAoBrB,uBAApBsB,MACElD,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAMhF,KAAAL,MAAW4F,OAGrCE,OAAQzF,KAAAL,MAAW+F,SACnBC,cAAe3F,KAAAL,MAAWiG,UAC1BC,2BAA4B7F,KAAAL,MAAWmG,sBACvCC,2BAA4B/F,KAAAL,MAAWqG,YACvCC,eACE3D,EAAAC,cAAA,KAAG2D,UAAU,QAAQlG,KAAAL,MAArBwG,yBAEFC,gBAAiBpG,KAAAL,MAAW+F,SAC5BW,6BAA8BrG,KAAAL,MAAW2G,qBACzCC,iBACEvG,KAAAL,MAAA6G,mBACElE,yBAAItC,KAAAL,MADN6G,yBAGEC,EAGJC,KAAM1G,KAAAL,MAAWgH,WACjBjC,MAAO1E,KAAAL,MAAWiH,eA9BbzB,CAA2B7C,aEzE3BuE,6JACJzE,yBAEHE,EAAAC,cAAC6C,EAADA,cAAA,CACEV,MAAO1E,KAAAL,MAAW+E,MAClBuB,eAAgBjG,KAAAL,MAAWmH,KAC3BC,OAAQ/G,KAAAL,MAAWoH,OACnBL,MAAM,EACNjB,OAAQzF,KAAAL,MAAW8F,YARdoB,CAAevE,aCV5B,IAQa0E,EAAS,SAA6ChE,WAEjEkD,iKACGvG,qBAEH2C,qCAAK4D,UAAWe,EAAU,kBAAAf,IAA1B5D,OC2FW4E,cASXxH,WAAmBC,eACjBA,QAGAwH,MAAa,CACXC,MADW,GAEXC,cAAe,SAGjBC,oBAA2BtH,KAAAsH,oBAAArH,KAA3BD,WACAuH,oBAA2BvH,KAAAuH,oBAAAtH,KAA3BD,gHAMKwH,yCAEL,IAAIxH,KAAAmH,MAAAC,MAAAK,OACKnF,uBAAYtC,KAAAmH,MAAAC,MAAA,GAAnBpC,MAIEhF,KAAAmH,MAAAC,MAAAK,OAAJ,EAEInF,0BACGtC,KAAAmH,MAAAC,MAAAM,IAAA,SAAqBC,EAAAC,GAAA,OACpBtF,EAAAC,cAAA,MAAIsF,IAAKD,GAAQD,EAAjB3C,SAOD1C,uBAAYtC,KAAAL,MAAnBmI,wCAMKC,mCACD/H,KAAAL,MAAJqI,yBAEI1F,EAAAC,cAAA,QAAM2D,UAAU,mCACd5D,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,OADvB,OAEShF,KAAAL,MAHXqI,0BAOEhI,KAAAL,MAAJsI,wBAEI3F,EAAAC,cAAA,QAAM2D,UAAU,mCACd5D,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBADvB,OAEShF,KAAAL,MAHXsI,yBAQAjI,KAAAL,MAAAuI,2BACAlI,KAAAL,MAFFwI,yBAKI7F,0BACGtC,KAAAL,MAAAuI,0BAAAR,IAAA,SAA0CrG,EAAA+G,GAAA,OACzC9F,EAAAC,cAAA,MACEsF,IAAK,UAAYO,EACjBlC,UAAU,mCAEV5D,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,OAJvB,OAAA3D,KAQDrB,KAAAL,MAAAwI,yBAAAT,IAAA,SAAyCrG,EAAA+G,GAAA,OACxC9F,EAAAC,cAAA,MAAIsF,IAAK,OAASO,EAAKlC,UAAU,mCAC/B5D,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBADvB,OAAA3D,MASDiB,kBAAP,mBAOKgF,6BAAmBe,QACxBC,SAAc9F,OAAAC,OAAA,GAAKzC,KAALmH,OAAiBC,MAA/BiB,UACA1I,MAAA4I,iBAAAF,gBAOKd,6BAAmBiB,cAClBnB,EAAgBmB,EAAAd,IAAA,SAAkBC,SAAS,CAC/CE,IAAKF,EAD0C3C,KAE/C3D,QAASrB,yBAA4B2H,EAFU3C,MAG/CD,KAAM,gBAMRuD,SAAc9F,OAAAC,OAAA,GACTzC,KADSmH,OAEZC,MAFY,GAGZC,cAAmBrH,KAAAmH,MAAJE,cAAAoB,OAHjBpB,mBAOKjF,oCAEHE,EAAAC,cAAAmG,EAAA,CACEC,OAAQ3I,KAAAL,MAAWiJ,eACnBC,SAAU7I,KAAAL,MAAWmJ,gBACrBC,SAAU/I,KAAAL,MAAWqJ,cACrBC,eAAgBjJ,KAAKsH,oBACrB4B,eAAgBlJ,KAAKuH,qBALvB,SAOGvE,WAAiBmG,sCAChB7G,uBACEA,EAAAC,cAAC6G,EAADA,KAAA5G,OAAAC,OAAA,CACEoG,SAAU7I,QAAW8I,gBACrBO,OAAO,EACPnD,UAAU,oBACNoD,EAAa,CAAEC,OAAQ,sBAE3BjH,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CACEvD,UAAU,iCACVwD,wBAAyB,CACvBC,OAAQ3J,QAAW4J,qBAIzBtH,gBAAC8G,OAAD9G,SACEA,gBAAC8G,OAAD9G,SACEA,yCAAW6G,QAGf7G,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CACEvD,UAAU,sCACV2D,GAAI,GAEH7J,QALL8J,uBAOExH,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,iCAAiC2D,GAAI,GACtD7J,EARLwH,0BAUElF,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,GAAI7J,EA7BtB+H,qBA+BG/H,wBACCsC,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,8BACjBlG,QAHNA,kBAhCLsC,YAtIG4E,CAAuB5E,aAKpB4E,eAAe,CAC3B8B,eAAe,OCrENe,EAAY,SAAqD/G,mCAClE,oCACC,iCACH,WAERgH,YACAC,uBAEA3H,EAAAC,cAAC2H,QAADC,WAAA,CACEC,QAASA,EACTC,SAAUA,EACVC,MAAOA,EACPC,QAASA,GAETjI,gBAAC4H,QAAD5H,OANF,MAOEA,EAAAC,cAAC2H,QAADvF,KAAA,CAAYqF,KAAMA,EAAMC,OAAQA,MCnCvBO,cAOX9K,WAAYC,0BACVA,QACAwH,MAAa,CACXrD,QAAQ,QAEV2G,SAAA,SAAiB3G,KACfwE,SAAc,QACZxE,UAGJ4G,SAAA,SAAiBtJ,KACfkH,SAAc,CACZxE,QAAS9D,QAAW8D,oHAKnB1B,6BACG0B,EAAW9D,KAAKmH,MAAhBrD,OACF6G,EAAgB,CACpBrI,EAAAC,cAACqI,EAADA,aAAA,CACE/C,IAAI,SACJgD,UAAU,OACVC,QAAO,aACLnL,MAAAoL,qBALN,iBAYEzI,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAC0I,EAADA,SAAA,CACEC,UAAWC,oBAAkBC,KAC7BC,SAAUC,mBAAiBC,MAC3Bb,SAAU1K,KAAK0K,SACfc,OACElJ,EAAAC,cAACkJ,EAADA,eAAA,CACEvF,UAAWwF,EAAU,GAAK1L,KAAAL,MAALuG,WACrByF,cAAe,KACflB,SAAUzK,KAAKyK,UAEfnI,gBAACsJ,EAADtJ,SALF,OAQFwB,OAAQA,EACR+H,SAAS,EACTlB,cAAeA,QAtDZH,CAAqBlI,aCbrBwJ,EAAmBxJ,gBAFzBvD,ICHMgN,EAAa,SAA4B/I,oBAC9CgJ,EAAmB1J,aAAzBwJ,UAEAxJ,YAAgB,kBACd0J,oBAEO,WACLA,yBAJJ1J,IAOA,MCEW2J,cAAb,SAAAA,4CAIS9E,MAAQ,CACbrD,QAAQ,QAEH2G,SAAA,SAAY3G,KACjBwE,SAAc,QACZxE,UAGG4G,SAAA,SAAYtJ,KACjBkH,SAAc,CACZxE,QAAS9D,QAAW8D,oHAGjB1B,wBAC0BpC,KAAKL,MAA5B6D,aAAU0I,oBAEhB5J,EAAAC,cAAC0I,EAADA,SAAA,CACEY,SAAS,EACTnB,SAAU1K,KAAK0K,SACfc,OACElJ,EAAAC,cAACkJ,EAADA,eAAA,CAAgBhB,SAAUzK,KAAKyK,UAA/ByB,GAEFpI,OAAQ9D,KAAAmH,MAAWrD,OACnB6G,cAAerI,2BA3BV2J,CAAmB3J,aCZhC,IAqBa6J,EAAU,SAA8CnJ,WAEnEoJ,YACAlG,SACA2C,6CACK,mBAELrF,qMACG7D,oBAEHuG,EAAYe,EAAU,aAAeoF,EAAfnG,EAAgC,iBAC1CoG,WAD0C,OAE1CA,WACS,OAATA,IAELF,MACL9J,EAAAC,cAACgK,EAADA,KAAA/J,OAAAC,OAAA,CAAM+J,GAAIJ,EAAMtB,QAASA,EAAS5E,UAAWA,GAA7CvG,GADKyM,GAKL9J,EAAAC,cAAA,UACEuI,QAASA,EACT5E,UAAWA,EACX2C,SAAUA,IAAaiC,IAAasB,GARxC5I,ICjBWiJ,EAAU,SAA8CzJ,WAEnEQ,qBAEMkJ,EAAQpK,iBAAdkB,UAEElB,uBACEA,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MACbtK,gBAACuK,EAADvK,eACEA,EAAAC,cAACuK,EAADL,WAAA,KACGnK,EAAAyK,SAAArF,IAAAlE,EAAA,SAA6BwJ,EAAA5E,GAAA,OAC5B9F,EAAAC,cAAC0K,EAADA,eAAA,CAAgBpF,IAAKO,EAAK8E,SAAU9E,IAAQsE,EAAQ,GAApDM,OAMLG,GAAW7K,gBAACuK,EAADvK,eAZlB6K,MCdWC,6JAQJhL,yBAEHE,EAAAC,cAAA,OACE2D,UAAWe,EAAU,SAAW,aACjBjH,KAAAL,MADiB0N,mBAEjBrN,KAAAL,MAAW0N,UAG1B/K,EAAAC,cAAC+K,EAADA,QAAA,CACEC,QAASvN,KAAAL,MAAW4N,QACpBjB,KAAMtM,KAAAL,MAAW2M,KACjBe,OAAQrN,KAAAL,MAAW0N,OACnBG,QAASxN,KAAAL,MAAW6N,cApBjBJ,CAAe9K,iBACZ8K,eAAe,CAC3BC,QAD2B,EAE3BG,SAF2B,EAG3BD,SAH2B,EAI3BjB,KAAM,MCKV,IAAamB,EAAS,SAAGzK,0CACL,kBAEP0K,gBACXC,cACUC,UACVC,aACAC,aACOC,WACPvB,UACAwB,OACAxK,0PACGyK,aAEGC,EAAO,kBAAA1B,EAAyBA,EAAzB2B,SAAb3B,EAGM4B,EAAcF,GAAQA,uCAA5B,eA2BE5L,EAAAC,cAAC8L,EAADA,MAAA,CACEH,KAAME,EACNT,MAAOA,EACPG,OAAQA,EACRD,SAAUA,EACVrK,SA9BiB,SAAGR,WAEtBsL,mBAKMpB,KAAcU,EAChBA,EAAYU,EADgBC,GAAhCD,GAIMpI,EAAYgH,EAlCtB,yEACSjG,kBAAkBuH,UAAKA,IAAvBvH,KAAP,KAkCMwH,CAAcf,EADQgB,GAA1BhB,EAGMhL,EAAQwK,EAAW1K,OAAAC,OAAA,GAAAsL,EAAHY,GAAtBZ,SAGEzL,EAAAC,cAAA,MAAI2D,UAAWA,GACb5D,gBAACiK,EAADjK,oBAAMI,MAAOA,EAAO8J,GAAIA,EAAIhJ,SAAUwK,GADxCC,IADFzK,OCzCJ,SAAAoL,EAAA5L,WAGY4K,UACVC,aACAC,aACAtB,WACAwB,OACAxK,kNACGyK,aAEGC,EAAO,kBAAA1B,EAAyBA,EAAzB2B,SAAb3B,EAGM4B,EAAcF,GAAQA,uCAA5B,eAiCE5L,EAAAC,cAAC8L,EAADA,MAAA,CACEH,KAAME,EACNT,MAAOA,EACPG,OAAQA,EACRD,SAAUA,EACVrK,SApCqB,SAAGR,aAE1BsL,mBAKMpB,KAAcU,EAChBA,EAAYU,EADgBC,GAAhCD,UAIO9K,EACLlB,EAAAC,cAACsM,EAADA,cAAA,CAAenK,MAAOsJ,EAAOd,SAAUA,EAAU4B,WAAY5B,GADhD1J,GAKblB,EAAAC,cAAA,MAAI2D,UAAW,kBACb5D,gBAACiK,EAADjK,oBACEkK,GAAIA,EACJtG,UAAWwF,EAAU,kBAAAqD,EAAmB,GAAAA,EACtC,gBAAkB7B,qBAENA,EAAQ,YAAYzG,EAClCjD,SAAUlB,oCAZhB2L,QA8BJW,iCCvEA,ICSaI,6JACJ5M,yBAEHE,EAAAC,cAAA,OAAK2D,UAAW,mBACd5D,EAAAC,cAAA,MACE2D,UAAS,4DACPlG,KAAAL,MAAAsP,OAAA,SAA+B,KAGhCjP,KAAAL,MANLuP,WAQE5M,EAAAC,cAAA,MACE2D,UAAS,wBAAyBlG,KAAAL,MAAAsP,OAAA,GAAyB,WAE1DjP,KAAAL,MAZPwP,cAFSH,CAAoB1M,aCWjCvD,IAAMqQ,EAAU,SAAyCpM,WAEvDqM,cACAC,iBACAC,wBAEAjN,EAAAC,cAAA,QACE2D,UAAWe,EAAU,yBAAAf,GACrB4E,QAASuE,EAAYE,OAAY9I,GAFnC6I,EAKGD,EACC/M,EAAAC,cAACuC,EAADA,KAAA,CACEoB,UAAU,uBACVlB,KAAK,OACL8F,QAASyE,EACTxK,KAAK,OAVX,OA2BIyK,EAAU,SAAyCxM,WAEvDsM,UACAG,UACAC,gBACAC,aACAC,WACAC,eACAjK,aACAF,8BAEApD,EAAAC,cAAA,OAAK2D,UAAW,0BACb0J,EACCtN,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAACuN,EAADA,UAAA,CACEC,UAAU,WACVC,gBAAiBC,EAAK,UAAe,SAErC3N,EAAAC,cAAC2N,EAADA,YAAA,CACEC,eAAe,WACftH,SAAU8G,EACVE,SAAUA,EACVJ,YAAaA,EACbH,MAAOA,IAERK,EACCrN,EAAAC,cAAA,QAAM2D,UAAU,OACd5D,EAAAC,cAAA6K,EAAA,CAAQC,QAAQ,EAAME,QAASoC,EAAQrD,KAAM,QAG/ChK,EAAAC,cAAC6N,aAADC,cAAA,CACExH,SAAU8G,IAAWM,EACrBnF,QAASlF,IAGbtD,EAAAC,cAAC6N,aAADE,aAAA,CAAyBzH,SAAU8G,EAAQ7E,QAASpF,KAErDgK,GAAYpN,gBAACiO,EAADjO,eAzBNoN,IA4BTpN,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAACuN,EAADA,UAAA,CAAWE,gBAAiBC,EAAK,UAAe,SAC9C3N,EAAAC,cAACiO,EAADA,WAAA,KACElO,EAAAC,cAAC2N,EAADA,YAAA,CACErH,SAAU8G,EACVE,SAAUA,EACVJ,YAAaA,EACb1K,KAAK,OACLuK,MAAOA,IAEThN,EAAAC,cAACiO,aAADC,OAAA,KACGd,EACCrN,EAAAC,cAAA,QAAM2D,UAAU,OACd5D,EAAAC,cAAA6K,EAAA,CAAQC,QAAQ,EAAME,QAASoC,EAAQrD,KAAM,QAG/ChK,EAAAC,cAAC6N,aAADC,cAAA,CACExH,SAAU8G,IAAWM,EACrBnF,QAASlF,KAIftD,EAAAC,cAACiO,aAADC,OAAA,KACEnO,EAAAC,cAAC6N,aAADE,aAAA,CAAyBzH,SAAU8G,EAAQ7E,QAASpF,MAGvDgK,GAAYpN,gBAACiO,EAADjO,eAvDrBoN,OAiGWgB,EAAc,SAAkD1N,WAE3EsM,cACAD,UACAsB,iBACAC,oBACAf,eACAgB,oOACGC,iBAEqCxO,cAAjCyO,OAAcC,SACS1O,eAAvB2O,OAASC,SACY5O,eAArBqN,OAAQwB,SAC4B7O,EAAA8O,SAAe,CACxD1B,SADwD,GAExDO,OAAO,IAFFoB,EAAAC,EAAA,GAAErB,UAAOP,aAAY6B,OAKtBC,EAAQ,SAAAC,2BACRZ,yBACmBA,EAAUY,IAAAC,KAAA,SAAzBC,GAEJJ,GADa,IAAXI,EACU,CACVjC,SADU,GAEVO,OAAO,GAGG,CACVP,SADUiC,EAEV1B,OAAO,MAIXsB,EAAY,CACV7B,SADU,GAEVO,OAAO,qEAjBC,MAAA2B,8BAsBRC,EAAa,mCACb5B,SACFkB,sBACsBtB,EAAQkB,IAAAW,KAAA,SAAxBI,GACNA,GACEZ,MAEFC,yEAPe,MAAAS,8BAWbG,EAAY,SAAIH,GACpBZ,EAAgBY,SAAhBZ,OACAQ,EAASI,SAATJ,QAGIjC,EAAM,WACV2B,MACAM,MAGI9L,EAAQ,WACZwL,MACAF,aA6BA1O,EAAAC,cAAC6N,EAADA,WAAA,CACElK,UAAWA,EACXoJ,MAAOyB,EACPiB,UANW,kBAASf,GAOpBgB,YA9Ba,SAAIC,UACnB5P,EAAAC,cAAA6M,EAAA,CACElJ,UAAWA,EACXoJ,MAAO4C,MAAwB,WAC/B7C,aAAcA,EACdE,OAAQA,KA0BR4C,WAtBY,SAAID,UAClB5P,EAAAC,cAAAiN,EAAAhN,OAAAC,OAAA,GACMqO,GACJb,MAAOA,EACPN,OAAQA,EACRL,MAAO4C,EACPxC,SAAUA,EACVE,WAAYgB,EACZf,SAAUkC,EACVnM,UAAWiM,EACXnM,SAAUA,SC/LH0M,cAAb1S,qDAiDS2S,YAAA,iBACuCrS,EAAKL,MAAzC2S,sBAAmBvB,wBAC3BuB,EAGA,WAAIA,aAEAhQ,EAAAC,cAACgQ,SAADC,cAAA,CACEC,aAAcH,EAAkBG,aAChC1B,aAAcA,EACd2B,sBAAuB1S,QAAW0S,wBAKpCpQ,EAAAC,cAAC2N,EAADA,YAAA,CACEnL,KAAMuN,EAAkBK,WACxBrD,MAAOyB,EACPtB,YAAa6C,EAAkB7C,YAC/BI,SAAU7P,QAAW4S,qBACrBC,WAAY7S,QAAW8S,kBAjB3B,gHAnDG1Q,oCAEHE,EAAAC,cAACwQ,EAADA,QAAA,KACEzQ,EAAAC,cAACgQ,EAADA,OAAA,KACEjQ,EAAAC,cAACgQ,SAADS,aAAA,CACEC,YAAajT,KAAAL,MAAWsT,YACxBX,kBAAmBtS,KAAAL,MAAA2S,kBAA6B5N,MAChDwO,qBAAsBlT,KAAAL,MAAWwT,qBAElCnT,KAPLqS,eASE/P,EAAAC,cAAC6Q,EAADA,KAAA,KACE9Q,EAAAC,cAAC6Q,OAADJ,aAAA,CACEK,UAAWrT,KAAAL,MAAW0T,UACtBC,gBAAiBtT,KAAAL,MAAW2T,gBAC5BC,mBAAoBvT,KAAAL,MAAW6T,0BAEjClR,EAAAC,cAAC6Q,OAADK,kBAAA,CACEC,WAAW,EACXC,YAAa3T,KAAAL,MAAWiU,gBACxB9I,QAAS9K,KAAAL,MAAWkU,gCAGxBvR,gBAACyQ,UAADzQ,kBAAuBtC,KAAAL,MArBzB6D,UAsBElB,EAAAC,cAACwQ,UAADe,QAAA,KACG9T,KAAAL,MAAAoU,eAA4B/T,KAAAL,MAAAoU,cAAAtM,OAA5B,GACCnF,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,0BAAKtC,KAAAL,MADPqU,kBAEE1R,gBAACiQ,SAADjQ,iBAFF,mBAGEA,EAAAC,cAACgQ,SAAD0B,KAAA,KACGjU,KAAAL,MAAAoU,cAAArM,IAAA,SAA6BwM,EAAAtM,GAAA,OAC5BtF,EAAAC,cAACgQ,SAAD4B,KAAA,CACEtM,IAAKD,EACLwM,SAAUpU,QAAWqU,eACrBC,WAAYJ,GAEXA,EALHxP,MAAA,IAKgBwP,EALhB5E,UASJhN,EAAAC,cAAA,KAAGuI,QAAS9K,KAAAL,MAAW4U,gBAvCjC,2BAFSnC,CAAwB9P,aCnCxBkS,cA2BX9U,WAAmBC,0BACjBA,QATKwH,MAAQ,CACbuF,MADa,EAEb+H,cAFa,EAGbC,cAAe,QAqDVC,UAAA,SAA6B3R,WAAUN,UAAOkS,wBACnDtS,EAAAC,cAACsS,EAADA,aAAA,CACEC,MAAO9U,EAAK+U,kBACZC,YAAa,EACbnN,IAAKD,EACLqN,SAAUrN,EACVgN,OAAQA,GAERtS,EAAAC,cAAA,OAAK2D,UAAW,eAAgBxD,MAAOA,GACrCJ,EAAAC,cAAA,QAAM2D,UAAU,uBAAuB0B,EADzC,GAEEtF,EAAAC,cAAA,QAAM2D,UAAU,wBAAwBlG,aAT5C4H,YAcKsN,aAAA,aACL5M,SAAc,CACZmM,cAAezU,QAAWyU,qBA/D5BM,kBAAyB,IAAII,EAAJA,kBAAsB,CAC7CC,YAD6C,EAE7CC,UAAW,qGAvBDC,kCAAPtS,EAAAmE,uBAIE3E,OAAAC,OAAA,GAAA0E,GAELuF,MAAO6I,EAFF9N,OAGLiN,cAAevN,eAAqBA,EAArBA,MAAmCA,EAHpDuN,6BAuBKtS,oCAEHE,EAAAC,cAACD,EAAD0I,SAAA,KACE1I,EAAAC,cAACiH,EAADA,IAAA,CAAKtD,UAAW,aACd5D,EAAAC,cAACkH,EAADA,IAAA,CAAK+L,GAAI,IACPlT,EAAAC,cAACkT,EAADA,UAAA,CACEC,gBAAiB1V,KAAAL,MAAWiD,OAC5B+S,eAAgB3V,KAAAL,MAAWgD,OAF7B,SAIGK,WAAUJ,wBACTN,EAAAC,cAAC0R,EAADA,KAAA,CACE2B,yBAA0B5V,EAAK+U,kBAC/BnS,OAAQ5C,gBAAqB4C,EAC7BiT,SAAU7V,aAAgByH,OAC1BqO,UAAW9V,oBAAuB8V,UAClCC,YAAa/V,EAAK2U,UAClBqB,aAAchW,QAAW0M,MACzBuJ,cACEjW,qBAA0BA,cAA1BA,GAAkD,EAEpD2C,MAAO3C,eAAoB2C,QAMrCL,EAAAC,cAACiH,EAADA,IAAA,KACElH,EAAAC,cAACkH,EAADA,IAAA,CAAK+L,GAAI,IACPlT,EAAAC,cAAC2T,EAADA,OAAA,CACEC,GAAI,gBACJC,UAAW,cACXvG,SAAU7P,KAAKkV,aACf5F,MAAOtP,KAAAmH,MAAWsN,qBAnEnBD,CAAkBlS,aAIfkS,eAAe,CAC3B5R,OAAQ,SCPCyT,6JACJjU,oCAEHE,EAAAC,cAAC+T,EAADA,sBAAA,CAAuBpQ,UAAU,yBAC9BlG,KAAAL,MAAA0H,cAAAK,IAAA,SAA6B6O,UAC5BjU,EAAAC,cAACiU,EAADA,uBAAA,CACE3O,IAAK0O,EAAa1O,IAClB9C,KAAMwR,EAAaxR,KACnB0R,YAAY,EACZC,UAAW1W,2CAIX2W,WAAY3W,QAAW4W,wBAEvBtU,EAAAC,cAAAyE,EAAA,CACE0C,wBAAyB,CACvBC,OAAQ4M,EAAalV,kBAjBxBgV,CAAsB/T,aCrBnC,IAqBauU,EAAgB,SAEzB7T,WAEF8T,yDACU,0CACE,gDACQC,aAAWC,6NAE5B/I,qBAGD3L,EAAAC,cAAC0U,EAADA,YAAAzU,OAAAC,OAAA,CACEyU,QAASA,EACThR,UAAWe,EAAU,GAAAf,IAFvB+H,GAKE3L,EAAAC,cAAC4U,EAADA,YAAA,KACE7U,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAM+K,EAAWC,aAAcP,aAAUQ,IADlD3Q,GAIGkQ,GACCxU,EAAAC,cAACiV,EAADA,KAAA,CACE9N,wBAAyB,CACvBC,OAAQmN,QChCTW,6JAGJrV,yBAEHE,EAAAC,cAAA,OAAK2D,UAAU,iBACb5D,2BACEA,EAAAC,cAAA,mBAAe,uBACZvC,KAAAL,MADH2P,MAAA,MACwBtP,KAAAL,MADxB+X,YAAA,SAEG1X,KAAAL,MAFHgY,WADFrV,MAKGtC,KAAAL,MAAAiY,QACCtV,EAAAC,cAAA,sBAAkB,oBAAoB2D,UAAU,cAC9C5D,EAAAC,cAAA,KAAGsV,OAAO,SAASzL,KAAMpM,KAAAL,MAAWiY,QACjC5X,KAAAL,MADHmY,eAAA,IAC8BxV,EAAAC,cAACuC,EAADA,KAAA,CAAME,KAAM,qBAKhD1C,EAAAC,cAACwV,EAADA,YAAA,CACEC,IAAKhY,KAAAL,MAAW+X,YAChBO,IAAKjY,KAAAL,MAAWgY,WAChBjV,MAAO,CACLE,OAAQ,SAvBP6U,CAAyBnV,iBCPhC4V,EAAN,SAAAC,kJACS/V,yBACEE,gBAACsI,EAADtI,kBAAetC,KAAAL,MAAtB6D,aAFJ,CAA6BlB,aC6ChB8V,cAIX1Y,WAAmBC,eACjBA,QAEAwH,MAAa,CACXkR,kBAAkB,GAGhBrY,KAAAL,MAAJ2Y,iBACEC,SAAgBvY,KAAAuY,SAAAtY,KAAhBD,WACAwY,SAAgBxY,KAAAwY,SAAAvY,KAAhBD,WACAqY,iBAAwBrY,KAAAqY,iBAAApY,KAAxBD,iHAIGuY,yBACLjQ,SAAc,CACZ+P,kBAAkB,iBAIfG,yBACLlQ,SAAc,CACZ+P,kBAAkB,IAGhBrY,KAAAL,MAAJ2Y,gBACE3Y,MAAA2Y,UAAAG,wBAIGJ,iCACL/P,SAAc,CACZ+P,kBAAkB,iBAIfjW,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACGhL,KAAAL,MAAA2Y,WACChW,EAAAC,cAAA4C,EAAA,CACEa,YAAa7B,0BAAwBuU,OACrCpS,qBAAsBtG,KAAAL,MAAA2Y,UAAqBK,gBAC3C7S,sBAAuB9F,KAAAL,MAAA2Y,UAAqBM,gBAC5CzS,wBACEnG,KAAAL,MAAA2Y,UAAqBO,uBAEvBjS,UAAW5G,KAAAL,MAAA2Y,UAAqBQ,qBAChCvT,KAAMrB,uBAAqBwU,OAC3B/R,WAAY3G,KAAAmH,MAAWkR,iBACvB3S,SAAU1F,KAAKuY,SACf3S,UAAW5F,KAAKwY,WAGpBlW,EAAAC,cAAC8B,EAADA,KAAA,CAAMG,aAAa,GACjBlC,EAAAC,cAAC8B,OAAD0U,QAAA,CACE7S,UACElG,KAAAL,MAAAqZ,YAAA,yCAEI,uCAGLhZ,KAAAL,MAAAqZ,YACC1W,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MACbtK,gBAACuK,EAADvK,eADF,QAEEA,EAAAC,cAACsK,EAADA,UAAA,KACG7M,KAAAL,MADHsZ,gBAAA,KAGE3W,EAAAC,cAAC2W,EAADA,QAAA,CACEC,YACE7W,gBAACA,EAADA,cACGtC,KAAAL,MADH2C,qCAIUtC,KAAAL,MAAWsZ,gBACvB5N,SAAU,QAEV/I,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAM,KAAMC,KAAM,YAK9B1C,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MA3BnB,QA6BG5M,KAAAL,MAAA2Y,WACChW,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAAC6W,EAADA,cAAA,CACEjD,GAAE,cAAgBnW,KAAAL,MAAWqF,aAC7BqU,WAAW,EACX3U,MAAO1E,KAAAL,MAAA2Y,UAAqBgB,eAE5BhX,EAAAC,cAAA,MAAIgX,KAAM,eAAgB1R,IAAK,GAC7BvF,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWyM,KAAMmN,KAAM,WAAYC,SAAU,GACpDxZ,KAAAL,MAAA2Y,UAPPmB,gBAUEnX,EAAAC,cAAA,MAAIgX,KAAM,eAAgB1R,IAAK,GAC7BvF,EAAAC,cAACgK,EAADA,KAAA,CACEC,GAAIxM,KAAAL,MAAA2Y,UAAqBoB,SACzBH,KAAM,WACNC,SAAU,GAETxZ,KAAAL,MAAA2Y,UAhBPqB,gBAmBErX,EAAAC,cAAA,MACE2D,UACGlG,KAAAL,MAAA2Y,UAADsB,gBAAqD,GAArD,WAEFL,KAAM,eACN1R,IAAK,GAEJ7H,KAAAL,MAAAka,sBACCvX,EAAAC,cAACuX,EAADA,QAAA,CACEC,QAAS/Z,KAAAL,MAAWqa,iBACpB3O,SAAU,UAEV/I,EAAAC,cAAA,KACE6J,KAAM,qBACNtB,QAAS9K,KAAKqY,iBACdkB,KAAM,WACNC,SAAU,GAETxZ,KAAAL,MAAA2Y,UAXNM,kBAeCtW,EAAAC,cAAA,KACE6J,KAAM,qBACNtB,QAAS9K,KAAKqY,iBACdkB,KAAM,WACNC,SAAU,GAETxZ,KAAAL,MAAA2Y,UA/EjBM,qBAuFEtW,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWyM,KAAMlG,UAAW,mBACpC5D,gBAAC+B,OAAD/B,UACEA,EAAAC,cAAA,OAAK2D,UAAW,4BACd5D,EAAAC,cAAA,OAAK2D,UAAU,yBACb5D,EAAAC,cAAA,OAAK0X,IAAKja,KAAAL,MAAW4F,KAAM2U,IAAKla,KAAAL,MAAWqF,KAAMrC,MAAO,MAE1DL,EAAAC,cAAC6U,EAADA,MAAA,CACE9K,KAAK,KACLpG,UAAU,0CACE,yBAEXlG,KAAAL,MATLqF,MAWE1C,EAAAC,cAACiV,EAADA,KAAA,CAAMtR,UAAU,gCACblG,KAAAL,MAdTwa,eAkBGna,KAAAL,MAAAka,sBACCvX,EAAAC,cAAC8B,OAAD+V,OAAA,CACElU,UACElG,KAAAL,MAAAqZ,aACA,6DAGF1W,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAM,KAAMC,KAAM,qBAAsBsH,KAAM,OACnDtM,KAAAL,MARJ0a,2BA1HT,WAzCSjC,CAAuB9V,iBC2BvBgY,6JAOJlY,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAC8B,EAADA,KAAA,KACE/B,gBAAC+B,OAAD/B,aACEA,gBAAC+B,OAAD/B,WAAatC,KAAAL,MAFjBiH,YAIEtE,EAAAC,cAAC8B,OAADM,KAAA,KACErC,EAAAC,cAAAyE,EAAA,KACE1E,EAAAC,cAAA,QACE2D,UAAU,8BACVqT,KAAK,OACLgB,SAAUva,KAAAL,MAAW6a,cAEpBxa,KAAAL,MAAA8a,kBAAA/S,IAAA,SAAiCkK,EAAAxJ,GAAA,OAChC9F,EAAAC,cAACmY,EAADA,MAAA,CAAO7S,IAAKO,EAAKrD,KAAM6M,EAAE7M,MACtB6M,EADHvQ,WAIDrB,KAAAL,MAVH6D,SAWGxD,KAAAL,MAAAqS,UACC1P,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACR9R,SAAU7I,KAAAL,MAAAib,YAAyB5a,KAAAL,MAAWkb,QAC9C/P,QAAS9K,KAAAL,MAAWkR,YAEnB7Q,KAAAL,MAAAib,UACCtY,EAAAC,cAAA6K,EAAA,CAAQd,KAAM,KAAMe,QAAQ,IANhC,KAQGrN,KAAAL,MATJmb,mBAYCxY,EAAAC,cAACkO,EAADA,OAAA,CAAQkK,QAAQ,UAAU7P,QAAS9K,KAAAL,MAAWob,gBAC3C/a,KAAAL,MA9Bbga,kBAoCErX,EAAAC,cAAC8B,OAAD+V,OAAA,KACE9X,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACRzU,UAAU,sCACV2C,SAAU7I,KAAAL,MAAWib,UACrB9P,QAAS9K,KAAAL,MAAWqb,iBAEnBhb,KAAAL,MAPLgZ,iBASErW,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACRzU,UAAU,sCACV2C,SAAU7I,KAAAL,MAAAib,YAAyB5a,KAAAL,MAAWkb,QAC9C/P,QAAS9K,KAAAL,MAAW6a,cAEnBxa,KAAAL,MArDXsb,qBARSX,CAA8BhY,aAG3BgY,eAAe,CAC3BG,kBAAmB,ICLvB,IAAaS,6JAGJ9Y,yBAEHE,EAAAC,cAAC0U,EAADA,YAAA,CAAaC,QAAS,SACpB5U,EAAAC,cAAC6G,EAADA,KAAA,CAAMC,OAAO,GACX/G,EAAAC,cAAC6G,OAADI,IAAA,CAAUtD,UAAW,kCAClBlG,KAAAL,MAAAwb,eACC7Y,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,GACZvH,EAAAC,cAAAyE,EAAA,CAAWd,UAAU,uBACnB5D,EAAAC,cAAA,OACE2D,UAAU,4CACV+T,IAAKja,KAAAL,MAAWwb,eAChBjB,IAAKla,KAAAL,MAAWyb,eAChBzY,MAAO,OARjB,KAaEL,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,IACZvH,EAAAC,cAAAmO,EAAA,CACExK,UAAU,4CACVoJ,MAAOtP,KAAAL,MAAWyb,eAClB/L,aAAcrP,KAAAL,MAAA0P,eAA4BrP,KAAAL,MAAWib,UACrDnL,YAAazP,KAAAL,MAAW0b,oBACxBzK,YAAY,EACZf,SAAU7P,KAAAL,MAAW2b,iBAI3BhZ,EAAAC,cAAC6G,OAADI,IAAA,CAAUtD,UAAW,kCACnB5D,EAAAC,cAAC6G,OAADK,IAAA,CACEI,GAAI,EACJ3D,UAAU,4CAETlG,KAAAL,MALL4b,sBAOEjZ,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,IACZvH,EAAAC,cAAAmO,EAAA,CACEpB,MAAOtP,KAAAL,MAAA6b,uBAAoC,GAC3CnM,aAAcrP,KAAAL,MAAA0P,eAA4BrP,KAAAL,MAAWib,UACrDjK,gBAAiB3Q,KAAAL,MAAW8b,2BAC5B7K,YAAY,EACZf,SAAU7P,KAAAL,MAAW+b,wBAI3BpZ,gBAAC8G,OAAD9G,SACEA,EAAAC,cAAC6G,OAADK,IAAA,CACEI,GAAI,EACJ3D,UAAU,4CAETlG,KAAAL,MALL2C,gBAOEA,EAAAC,cAAC6G,OAADK,IAAA,CACEI,GAAI,GACJ3D,UAAU,4CAETlG,KAAAL,MAvDXgc,wBAJST,CAAgC5Y,aC1EhCsZ,6JACJxZ,yBAEHE,EAAAC,cAACsZ,EAADA,SAAA,CAAUxS,OAAO,EAAM7E,aAAa,GAClClC,gBAACuZ,WAADvZ,SAAetC,KAAAL,MAFnB6D,cAFSoY,CAAwBtZ,aCAxBwZ,6JACJ1Z,yBAEHE,EAAAC,cAACsZ,WAADpS,IAAA,CAAcI,GAAI,EAAGkS,GAAI,GACtB/b,KAAAL,MAFL6D,aAFSsY,CAA4BxZ,aCS5B0Z,6JAGJ5Z,yBAEHE,gCACEA,EAAAC,cAAC0U,EAADA,YAAA,CAAagF,WAAW,EAAM/E,QAAS,SACrC5U,mCAAqBtC,KAArBsC,OACEA,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAWuc,uBACjB7P,GAAIrM,KAAAL,MAAAwc,6BAA0C,WAE7Cnc,KAAAL,MARX2C,6BAaEA,gBAAC2U,EAAD3U,iBAActC,KAAAL,MAdlB6D,cAJSwY,CAA4B1Z,aCoB5B8Z,6JAOJha,yBAEHE,uBACEA,EAAAC,cAAA,QACE2D,UAAU,8BACVqT,KAAK,OACLgB,SAAUva,KAAAL,MAAW6a,cAErBlY,EAAAC,cAAA,OAAK2D,UAAU,oBACb5D,EAAAC,cAAA,OAAK2D,UAAU,WACZlG,KAAAL,MAAA0c,eACC/Z,EAAAC,cAAA,OAAK2D,UAAU,iBAAiBlG,KAAAL,MAFpC0c,eAIE/Z,EAAAC,cAAA,OAAK2D,UAAU,gBACZlG,KAAAL,MAAA8a,kBAAA/S,IAAA,SAAkCkK,EAAAxJ,GAAA,OACjC9F,EAAAC,cAACmY,EAADA,MAAA,CAAO7S,IAAKO,EAAKrD,KAAM6M,EAAE7M,MACtB6M,EADHvQ,WAIFiB,uBAAYtC,KAAAL,MAlBxB6D,kBARS4Y,CAAmC9Z,aAGhC8Z,eAAe,CAC3B3B,kBAAmB,QC1BX6B,ECCCC,6JAGJna,yBAEHE,EAAAC,cAAC8B,EAADA,KAAA,CAAM6B,UAAU,sBACd5D,gBAACka,EAADla,cACEA,EAAAC,cAAA,OAAK2D,UAAW,+BACd5D,EAAAC,cAAA,WACED,EAAAC,cAAA,OACE2D,UAAU,2BACV+T,IAAKja,KAAAL,MAAW4F,KAChB2U,IAAKla,KAAAL,MAAWqF,QAGpB1C,EAAAC,cAAA,OACE2D,UAAU,wCACE,4BAEXlG,KAAAL,MAZLqF,MAcE1C,EAAAC,cAACiV,EAADA,KAAA,CAAMtR,UAAU,mCACblG,KAAAL,MAlBXwa,mBAJSoC,CAA+Bja,aCT/Bma,6JACJra,yBACEE,2BAAP,yCAFSma,CAAyBna,aCAzBoa,6JACJta,yBACEE,2BAAP,2CAFSoa,CAA2Bpa,aCgB3Bqa,6JAGJva,yBAEHE,EAAAC,cAACsZ,EAADA,SAAA,CAAUxS,OAAO,GACf/G,gBAACuZ,WAADvZ,SACEA,EAAAC,cAACsZ,WAADpS,IAAA,CAAcI,GAAI,GAAIkS,GAAI,GACxBzZ,EAAAC,cAAAga,EAAA,CACEpC,YAAana,KAAAL,MAAWwa,YACxB5U,KAAMvF,KAAAL,MAAW4F,KACjBP,KAAMhF,KAAAL,MAAWqF,QAGrB1C,EAAAC,cAACsZ,WAADpS,IAAA,CAAcI,GAAI,GAAIkS,GAAI,GACxBzZ,gBAAC+B,EAAD/B,UACEA,gBAACsa,EAADta,iBACEA,gBAACua,EAADva,eAAYtC,KAAAL,MAFhB2C,OAIEA,gBAACka,EAADla,cACEA,kBADFA,MAEEA,kBAjBZ,cAJSqa,CAA2Bra,aCM3Bwa,eAGXpd,WAAmBC,eACjBA,QACAod,aAAoB/c,KAAA+c,aAAA9c,KAApBD,WACAgd,cAAqBhd,KAAAgd,cAAA/c,KAArBD,gHAGKid,mCAEH3a,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAud,cACGld,KAAAL,MADHud,cAEGld,KAAAL,MAJRwd,yBASKC,oCAEH9a,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,cACTnW,KAAAL,MAAA0d,eACGrd,KAAAL,MADH0d,eAEGrd,KAAAL,MAJR2d,0BASKP,6BACLpd,MAAA8Y,SAAoBzY,KAAAL,MAApB4d,6BAGKP,8BACLrd,MAAA6d,UAAqBxd,KAAAL,MAArB4d,6BAGKnb,yBAEHE,EAAAC,cAACkb,EAADA,aAAA,CACEtQ,QACE7K,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAod,oBAA0BQ,UAAU,OAC3Dtb,EAAAC,cAACkO,EAADA,OAAA,CAAQkK,QAAQ,UAAU7P,QAAS9K,KAAKgd,eACrChd,KAAAL,MAHP2d,cAMEhb,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAid,mBAAyBW,UAAU,OAC1Dtb,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACR9R,SAAgC,IAAtB7I,KAAAL,MAAAke,OACV/S,QAAS9K,KAAK+c,cAEb/c,KAAAL,MAZPwd,cAiBFW,eAAgB,CACdxb,EAAAC,cAACwb,EAADA,iBAAA,CAAkBlW,IAAK,GACpB7H,KAAAL,MAFWqe,oBAKhB7D,YACEna,KAAAL,MAAAse,wBACIje,KAAAL,MADJse,wBAEI,GAENC,QAASle,KAAAL,MAAWwe,iBACpBC,eAAe,EACfC,YACEre,KAAAL,MAAA2e,iBACEhc,EAAAC,cAAA,OAAK2D,UAAU,uBACb5D,EAAAC,cAAA,OACE0X,IAAKja,KAAAL,MAAW2e,iBAChBpE,IAAKla,KAAAL,MAAWwe,iBAChBxb,MAAO,MAGT,KAEN4b,SAAS,OAjFJzB,CAA6Bxa,aCF7Bkc,8JAGJpc,yBAEHE,EAAAC,cAAC0U,EAADA,YAAA,KACE3U,EAAAC,cAAA6P,EAAA5P,OAAAC,OAAA,GAAqBzC,KAArBL,OACE2C,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAye,4BACTb,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW+e,uBACjBrS,GAAI,WAEHrM,KAAAL,MAXXgf,+BAgBG,KAAA3e,KAAAL,MAAAiH,WACCtE,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAK,MAAMtM,KAAAL,MAjBtBiH,WAmBG,KAAA5G,KAAAL,MAAAmX,iBACCxU,EAAAC,cAACiV,EAADA,KAAA,CACE9N,wBAAyB,CAAEC,OAAQ3J,KAAAL,MAAWmX,mBAGjD9W,KAAAL,MAAA6D,SACClB,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAGClB,EAAAC,cAACsc,EAADA,WAAA,KACEvc,gBAACuc,aAADvc,KADF,MAEEA,gBAACuc,aAADvc,WACGtC,KAAAL,MAHLmf,qBAKExc,gBAACuc,aAADvc,UAAkBtC,KAAAL,MALpBof,oBAMEzc,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAye,4BACTb,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW+e,uBACjBrS,GAAI,WAEHrM,KAAAL,MA3Cfgf,6CAqDMF,4CAEJnc,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAsf,8BACGjf,KAAAL,MADHsf,8BAEGjf,KAAAL,MAJRgf,+BA1DSH,CAA6Blc,aCoG7B4c,eAIXxf,WAAmBC,eACjBA,QAEAwH,MAAa,CACXkR,kBAAkB,QAGpBE,SAAgBvY,KAAAuY,SAAAtY,KAAhBD,WACAwY,SAAgBxY,KAAAwY,SAAAvY,KAAhBD,WACAqY,iBAAwBrY,KAAAqY,iBAAApY,KAAxBD,gHAGKuY,yBACLjQ,SAAc,CACZ+P,kBAAkB,iBAIfG,yBACLlQ,SAAc,CACZ+P,kBAAkB,SAIpB1Y,MAAA8Y,wBAGKwE,mCAEH3a,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAud,cACGld,KAAAL,MADHud,cAEGld,KAAAL,MAJRwd,yBASKgC,mCAEH7c,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAyf,cACGpf,KAAAL,MADHyf,cAEGpf,KAAAL,MAJR0f,yBASKhH,iCACL/P,SAAc,CACZ+P,kBAAkB,iBAIfjW,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA4C,EAAA,CACEa,YAAa7B,0BAAwBuU,OACrCpS,qBAAsBtG,KAAAL,MAAW2f,eACjCxZ,sBAAuB9F,KAAAL,MAAWwd,WAClChX,wBAAyBnG,KAAAL,MAAWkZ,uBACpCjS,UAAW5G,KAAAL,MAAWmZ,qBACtBvT,KAAMrB,uBAAqBwU,OAC3B/R,WAAY3G,KAAAmH,MAAWkR,iBACvB3S,SAAU1F,KAAKuY,SACf3S,UAAW5F,KAAKwY,WAElBlW,EAAAC,cAAC0U,EAADA,YAAA,CAAaC,QAAS,SACpB5U,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MACbtK,gBAACuK,EAADvK,eACEA,EAAAC,cAAC4U,EAADA,YAAA,KACE7U,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAK,KAAKgL,aAAcP,aAAWC,IACvChX,KAAAL,MAFL4f,eAIEjd,gBAACkV,EAADlV,UAAOtC,KAAAL,MANb6f,iBASEld,EAAAC,cAACsK,EAADA,UAAA,KACEvK,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAmf,mBAAyBvB,UAAU,OAC1Dtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW8f,oBACjBpT,GAAI,WAEHrM,KAAAL,MANP0f,aASE/c,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAid,mBAAyBW,UAAU,OAC1Dtb,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACR9R,SAAuC,IAA7B7I,KAAAL,MAAA+f,cACV5U,QAAS9K,KAAKqY,kBAEbrY,KAAAL,MArCbwd,gBA2CE7a,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAC8B,EAADA,KAAA,KACE/B,EAAAC,cAACia,EAADA,SAAA,KACEla,EAAAC,cAAC6U,EAADA,MAAA,CACE9K,KAAK,KACLgL,aAAcP,aAAW4I,GACzBzZ,UAAU,oCAETlG,KAAAL,MANLigB,0BAQG5f,KAAAL,MARHkgB,gBAUEvd,EAAAC,cAAC6U,EAADA,MAAA,CACE9K,KAAK,KACLgL,aAAcP,aAAW4I,GACzBzZ,UAAU,oCAETlG,KAAAL,MAfLmgB,0BAiBG9f,KAAAL,MAjBHogB,gBAmBEzd,EAAAC,cAAC6U,EAADA,MAAA,CACE9K,KAAK,KACLgL,aAAcP,aAAW4I,GACzBzZ,UAAU,oCAETlG,KAAAL,MAxBLqgB,uBA0BGhgB,KAAAL,MAxEXsgB,2BA1DSf,CAAwB5c,aCjDxB4d,8JAGJ9d,yBAEHE,EAAAC,cAAC8B,EAADA,KAAA,KACE/B,gBAAC+B,OAAD/B,aACEA,gBAAC+B,OAAD/B,WAAatC,KAAAL,MAFjBiH,YAIEtE,EAAAC,cAAC8B,OAADM,KAAA,KACErC,gBAACkV,EAADlV,UAAOtC,KAAAL,MADTwgB,wBAEGngB,KAAAL,MAAAygB,iBACC9d,EAAAC,cAACmY,EAADA,MAAA,CAAO3V,KAAM,SACXzC,4BAAOtC,KAAAL,MAFVygB,mBAFH,KAOE9d,EAAAC,cAAA2E,EAAA,CACE4B,gBAAiB9I,KAAAL,MAAW0gB,YAC5BzX,eAAgB,OAChB0X,gBAAiBtgB,KAAAL,MAAW4gB,mBAC5B3W,iBAAkB5J,KAAAL,MAAW6gB,oBAC7B1Y,0BAA2B9H,KAAAL,MAAW8gB,6BACtC3W,sBAAuB9J,KAAAL,MAAW+gB,yBAClCzY,wBAAyBjI,KAAAL,MAAWghB,2BACpC3Y,yBAA0BhI,KAAAL,MAAWihB,4BACrCrY,iBAAkBvI,KAAAL,MAAWkhB,oBAC7BC,iBAAkB9gB,KAAAL,MAAWohB,2BA1B5Bb,CAA4B5d,aC+B5B0e,eAGXthB,WAAmBC,eACjBA,QACAshB,aAAoBjhB,KAAAihB,aAAAhhB,KAApBD,gHAGKkhB,wCACAlhB,KAAAL,MAALwN,QAKE7K,uBACGtC,KAAAL,MAAAwN,QACGnN,KAAAL,MAAAwN,QAAAzF,IAAA,SAAuByZ,EAAAvZ,GAAA,OACrB,IAAAA,EACEtF,EAAAC,cAAC6G,OAADK,IAAA,CACE5B,IAAK,EACL6B,wBAAyB,CACvBC,OAAQ3J,uBACNmhB,EADMnhB,KAENmhB,EAFMnhB,gBAOZsC,EAAAC,cAAC6G,OAADI,IAAA,CAAU3B,IAAKD,GACbtF,EAAAC,cAAC6G,OAADK,IAAA,CAAU5B,IAAK,EAAGgC,GAAI,IACtBvH,EAAAC,cAAC6G,OAADK,IAAA,CACE5B,IAAK,EACL6B,wBAAyB,CACvBC,OAAQ3J,uBACNmhB,EADMnhB,KAENmhB,EAFMnhB,mBApB1B,MAHSsC,gBAAC8G,OAAD9G,IAAP,mBAqCG2e,+BACEjhB,KAAAL,MAAAyhB,SAAoBphB,KAAAL,MAA3B0hB,2BAGKjf,yBAEHE,EAAAC,cAAC6G,EAADA,KAAA,CAAMlD,UAAU,sCACd5D,EAAAC,cAAC6G,OAADI,IAAA,CAAUtD,UAAU,kCACjBlG,KAAAL,MAFLiH,WAIEtE,gBAAC8G,OAAD9G,SACEA,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,0CACxBlG,KAAAL,MAFL2C,aAIEA,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,0CACjBlG,KAAAL,MATP2hB,cAYEhf,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,0CACxBlG,KAAAL,MAFL4hB,eAIEjf,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,0CACjBlG,KAAAL,MAjBP4f,gBAoBEjd,gBAAC8G,OAAD9G,SACEA,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,0CACxBlG,KAAAL,MAFL2C,sBAIEA,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,0CACjBlG,KAAAL,MAAA6hB,qBACGxhB,KAAAL,MADH6hB,qBAzBP,OA8BElf,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,0CACxBlG,KAAAL,MAFL8hB,eAIEnf,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,0CACjBlG,KAAAL,MAnCP+hB,2BAsCEpf,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,0CACxBlG,KAAAL,MAFLgiB,kBAIG3hB,KA1CLkhB,cA4CE5e,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUmY,SAAU,GAClBtf,gBAAC8G,OAAD9G,SACEA,EAAAC,cAAC6G,OAADK,IAAA,KACEnH,EAAAC,cAAAyE,EAAA,CAAWd,UAAU,sCACnB5D,EAAAC,cAACkO,EAADA,OAAA,CAAQkK,QAAQ,UAAU7P,QAAS9K,KAAKihB,cACrCjhB,KAAAL,MAFLkiB,YAIEvf,EAAAC,cAAA4J,EAAA,CACEjG,UAAU,wCACVkG,KAAMpM,KAAAL,MAAWmiB,WACjBzV,GAAI,WAEHrM,KAAAL,MA1DjBoiB,qBApDSf,CAA8B1e,aCtF9B0f,8JAGJC,iCACCC,EAAY,SAAI5S,UACpBhN,gBAAC4H,QAAD5H,uBAqBK,CACL,CACE6f,KAAM,CACJC,WAAY,CArBQ,SAAG9S,EAAAtM,0BAOzBV,gBAAC4H,QAAD5H,UACEA,EAAAC,cAAA,KAAG6J,KAAK,qBAAqBtB,QAHpB,kBAAS9K,wBAA2BqiB,EAA3BriB,MACtBsP,OAiBEgT,OAAQ,CACNF,WAAY,CADNF,GAENlU,MAAOhO,KAAAL,MAAW4iB,UAEpBC,SAAU,QAEZ,CACEL,KAAM,CACJC,WAAY,UAAE9S,UAAkBhN,gBAAC4H,QAAD5H,gBAElCggB,OAAQ,CACNF,WAAY,CADNF,GAENlU,MAAOhO,KAAAL,MAAWmX,iBAEpB0L,SAAU,6BAKTC,+BAAqBC,QAC1B/iB,MAAAgjB,oBAAAD,gBAGKtgB,yBAEHE,EAAAC,cAAA,OAAK2D,UAAU,mBACb5D,gBAACkH,EAADlH,SACEA,EAAAC,cAAA,OAAK2D,UAAU,6BACb5D,gBAACkV,EAADlV,UAAOtC,KAAAL,MADTgc,kBAEG,IAAA3b,KAAAL,MAAA4V,KAAA9N,OACCnF,EAAAC,cAAC2H,QAADC,WAAA,CACEC,SAAS,EACTC,UAAU,EACVC,OAAO,EACPC,QAASvK,KAAAiiB,cAET3f,gBAAC4H,QAAD5H,OANF,MAOEA,EAAAC,cAAC2H,QAADvF,KAAA,CAAYqF,KAAMhK,KAAAL,MAAW4V,KAAMtL,OAAO,UAbtD,WAvDS+X,CAAmC1f,aC6BnCsgB,eAIXljB,WAAmBC,eACjBA,QAEAwH,MAAa,CACXkR,kBAAkB,QAGpBE,SAAgBvY,KAAAuY,SAAAtY,KAAhBD,WACAwY,SAAgBxY,KAAAwY,SAAAvY,KAAhBD,WACAqY,iBAAwBrY,KAAAqY,iBAAApY,KAAxBD,gHAGKuY,yBACLjQ,SAAc,CACZ+P,kBAAkB,iBAIfG,yBACLlQ,SAAc,CACZ+P,kBAAkB,SAIpB1Y,MAAA8Y,SAAoBzY,KAAAL,MAApB2hB,0BAGKrE,mCAEH3a,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAud,cACGld,KAAAL,MADHud,cAEGld,KAAAL,MAJRwd,yBASKC,oCAEH9a,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,cACTnW,KAAAL,MAAA0d,eACGrd,KAAAL,MADH0d,eAEGrd,KAAAL,MAJR2d,0BASK6B,mCAEH7c,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAyf,cACGpf,KAAAL,MADHyf,cAEGpf,KAAAL,MAJR0f,yBASKhH,iCACL/P,SAAc,CACZ+P,kBAAkB,iBAIfjW,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA4C,GAEEa,YAAa7B,0BAAwBuU,OACrCpS,qBAAsBtG,KAAAL,MAAW2f,eACjCxZ,sBAAuB9F,KAAAL,MAAWwd,WAClChX,wBAAyBnG,KAAAL,MAAWkZ,uBACpCjS,UAAW5G,KAAAL,MAAWmZ,qBACtBvT,KAAMrB,uBAAqBwU,OAC3B/R,WAAY3G,KAAAmH,MAAWkR,iBACvB3S,SAAU1F,KAAKuY,SACf3S,UAAW5F,KAAKwY,WAElBlW,EAAAC,cAACkb,EAADA,aAAA,CACEtQ,QACE7K,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAod,oBACTQ,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWkjB,gBAAiBxW,GAAI,WAC/CrM,KAAAL,MANP2d,cASEhb,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAmf,mBAAyBvB,UAAU,OAC1Dtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW8f,oBACjBpT,GAAI,WAEHrM,KAAAL,MAdP0f,aAiBE/c,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAid,mBAAyBW,UAAU,OAC1Dtb,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACR9R,SAAgC,IAAtB7I,KAAAL,MAAAke,OACV/S,QAAS9K,KAAKqY,kBAEbrY,KAAAL,MAvBPwd,cA4BFW,eAAgB,CACdxb,EAAAC,cAACwb,EAADA,iBAAA,CAAkBlW,IAAK,GACpB7H,KAAAL,MAFWmjB,mBAIdxgB,EAAAC,cAACwb,EAADA,iBAAA,CAAkBlW,IAAK,GACpB7H,KAAAL,MALWqe,oBAQhB7D,YACEna,KAAAL,MAAA6hB,qBACIxhB,KAAAL,MADJ6hB,qBAEI,GAENtD,QAASle,KAAAL,MAAW4f,cACpBnB,eAAe,EACfC,YACEre,KAAAL,MAAAojB,cACEzgB,EAAAC,cAAA,OAAK2D,UAAU,uBACb5D,EAAAC,cAAA,OACE0X,IAAKja,KAAAL,MAAWojB,cAChB7I,IAAKla,KAAAL,MAAW4f,cAChB5c,MAAO,MAGT,KAEN4b,SAAS,QA1INqE,CAA0BtgB,aCvB1B0gB,8JAGJC,mCAEH3gB,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAujB,2BACGljB,KAAAL,MADHujB,2BAEGljB,KAAAL,MAJRwjB,sCASK/gB,yBAEHE,EAAAC,cAAC0U,EAADA,YAAA,KACE3U,EAAAC,cAAA6P,EAAA5P,OAAAC,OAAA,GAAqBzC,KAArBL,OACE2C,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAijB,mBAAyBrF,UAAU,OAC1Dtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWyjB,oBAAqB/W,GAAI,WACnDrM,KAAAL,MALXwjB,4BAUG,KAAAnjB,KAAAL,MAAAiH,WACCtE,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAK,MAAMtM,KAAAL,MAXtBiH,WAaG,KAAA5G,KAAAL,MAAAmX,iBACCxU,EAAAC,cAACiV,EAADA,KAAA,CACE9N,wBAAyB,CAAEC,OAAQ3J,KAAAL,MAAWmX,mBAGjD9W,KAAAL,MAAA6D,SACClB,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAGClB,EAAAC,cAACsc,EAADA,WAAA,KACEvc,gBAACuc,aAADvc,KADF,MAEEA,gBAACuc,aAADvc,WACGtC,KAAAL,MAHLmf,qBAKExc,gBAACuc,aAADvc,UAAkBtC,KAAAL,MALpBof,oBAMEzc,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAijB,mBAAyBrF,UAAU,OAC1Dtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAWyjB,oBACjB/W,GAAI,WAEHrM,KAAAL,MAlCfwjB,gCAdSH,CAA0B1gB,aCyB1B+gB,8JAGJjhB,yBAEHE,gBAAC8G,EAAD9G,UACEA,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,qCACxBlG,KAAAL,MAFL4iB,UAIEjgB,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,qCACjBlG,KAAAL,MANP2C,gBASEA,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,qCACxBlG,KAAAL,MAFLmX,iBAIExU,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,qCACjBlG,KAAAL,MAAA6hB,qBACGxhB,KAAAL,MADH6hB,qBAdPlf,OAmBEA,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,qCACxBlG,KAAAL,MAFL2jB,UAIEhhB,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,qCACjBlG,KAAAL,MAxBP2C,kBA2BEA,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,EAAG3D,UAAU,qCACxBlG,KAAAL,MAFL4jB,gBAIEjhB,EAAAC,cAAC6G,OAADK,IAAA,CAAUvD,UAAU,qCACjBlG,KAAAL,MAAA6jB,mBACGxjB,KAAAL,MADH6jB,mBAjCT,WAJSH,CAA0B/gB,aClC1BmhB,8JAGJrhB,yBAEHE,EAAAC,cAAA,OAAK2D,UAAU,mBACZ,IAAAlG,KAAAL,MAAA+jB,iBAAAjc,OACCnF,gBAACkH,EAADlH,SACEA,EAAAC,cAAA,OAAK2D,UAAU,6BACZlG,KAAAL,MAAA+jB,iBAAAhc,IAAA,SACCyZ,EAAAvZ,GAAA,OACEtF,EAAAC,cAAA,OAAKsF,IAAKD,GACRtF,8BAAS6e,EADXnc,MAAA,MACoCmc,EADpChH,iBAPd,SAJSsJ,CAA0BnhB,aCR1BqhB,8JAGJvhB,yBAEHE,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,gBAAC+B,OAAD/B,WAAatC,KAAAL,MAFjBiH,eAJS+c,CAA0BrhB,iBCyB1BshB,8JACJxhB,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAAsU,EAAA,CACEjQ,UAAW5G,KAAAL,MAAWiH,UACtBkQ,gBAAiB9W,KAAAL,MAAWmX,kBAE9BxU,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MACbtK,gBAACuK,EAADvK,eACEA,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAM,MAAOtM,KAAAL,MAFxBkkB,mBAIEvhB,gBAACuK,EAADvK,eACEA,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWmkB,oBAClB9jB,KAAAL,MAFL2C,wBAIEA,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAWokB,0BACjB1X,GAAI,WAEHrM,KAAAL,MAbT2C,6BAiBEA,EAAAC,cAACsZ,EAADA,SAAA,CAAUxS,OAAO,EAAM7E,aAAa,GAClClC,gBAACuZ,WAADvZ,SACEA,EAAAC,cAACsZ,WAADpS,IAAA,CAAc+L,GAAI,EAAGuG,GAAI,GACtB/b,KAAAL,MAFL2C,sBAIEA,EAAAC,cAACsZ,WAADpS,IAAA,CAAc+L,GAAI,EAAGuG,GAAI,GACtB/b,KAAAL,MALL2C,qBAOEA,EAAAC,cAACsZ,WAADpS,IAAA,CAAc+L,GAAI,EAAGuG,GAAI,GACtB/b,KAAAL,MARL2C,kBAUEA,EAAAC,cAACsZ,WAADpS,IAAA,CAAc+L,GAAI,EAAGuG,GAAI,GACtB/b,KAAAL,MA7BT2C,kBAiCEA,EAAAC,cAAC6G,EAADA,KAAA,CAAMC,OAAO,GACX/G,gBAAC8G,OAAD9G,SACEA,EAAAC,cAAC6G,OAADK,IAAA,CAAU+L,GAAI,IAAKxV,KAAAL,MAFvBqkB,kBAIE1hB,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAU+L,GAAI,GAAIuG,GAAI,GACnB/b,KAAAL,MAFLskB,kBAIE3hB,EAAAC,cAAC6G,OAADK,IAAA,CAAU+L,GAAI,GAAIuG,GAAI,GACnB/b,KAAAL,MA/CXukB,uBAqDE5hB,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MACbtK,gBAACuK,EAADvK,eACEA,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAM,MAAOtM,KAAAL,MAFxBwkB,kBAIE7hB,gBAACuK,EAADvK,eACEA,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWykB,mBAClBpkB,KAAAL,MAFL2C,uBAIEA,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW0kB,yBACjBhY,GAAI,WAEHrM,KAAAL,MAbT2C,4BAiBEA,EAAAC,cAACsZ,EAADA,SAAA,CAAUxS,OAAO,EAAM7E,aAAa,GAClClC,gBAACuZ,WAADvZ,SAAetC,KAAAL,MAxEvB2kB,mBAFSV,CAAkBthB,iBCjBlBiiB,8JAGJniB,sBACCmT,EAAO,CACXiP,OAAQ,CACNC,QAASC,6BADHC,SAENC,UAAWF,6BAFLG,QAGNC,QAASJ,6BAA2BK,UAEtCxa,QAAS,CACP,CACEvK,KAAAL,MADFqlB,4BAEEhlB,KAAAL,MAHKslB,qBAKP,CACEjlB,KAAAL,MADFulB,4BAEEllB,KAAAL,MAPKwlB,qBASP,CACEnlB,KAAAL,MADFylB,4BAEEplB,KAAAL,MAjBO0lB,sBAoBXtgB,KAAM,gBAINzC,EAAAC,cAAC8B,EAADA,KAAA,KACE/B,gBAAC+B,OAAD/B,aACEA,gBAAC+B,OAAD/B,WAAatC,KAAAL,MAFjBiH,YAIEtE,EAAAC,cAAC8B,OAADM,KAAA,KACErC,EAAAC,cAAC+iB,EAADA,WAAA,CACEnP,GAAG,oBACH7J,KAAM,CAAE1J,OAAQ,KAChB2S,KAAMA,EACNgQ,QAAS,CACPC,SAAUd,aADHe,uBAEP/e,MAAM,GAERhC,MAAO,CACLghB,UAAW1lB,KAAAL,MADNkkB,iBAEL9e,KAAM/E,KAAAL,MAAWgmB,WAEnBC,OAAQ,CAAElf,MAAF,EAAc2E,SAAU,gBA7C/BkZ,CAAyBjiB,iBCRzBujB,8JACJzjB,yBAEHE,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,GACdhC,gBAAC+B,OAAD/B,aACEA,gBAAC+B,OAAD/B,WAAatC,KAAAL,MAFjBiH,YAIEtE,gBAAC+B,OAAD/B,UAAYtC,KAAAL,MALhB6D,cAFSqiB,CAA0BvjB,clBG3Bga,sDAAZ,KACEA,oBACAA,kBACAA,4BmBWWwJ,eAIXpmB,WAAYC,eACVA,QACAwH,MAAa,CACX4e,QAAS/lB,KAAAL,MAAWomB,cAEtBC,YAAmBhmB,KAAAgmB,YAAA/lB,KAAnBD,WACA+R,aAAoB/R,KAAA+R,aAAA9R,KAApBD,gHAEK+R,sBAAY3Q,cACX4D,EAAO5D,eAAb6kB,YACA3d,SAAc,CAAEyd,QAAS/gB,GAAzB,kBAAuChF,qCAElCgmB,4BACLrmB,MAAAumB,OAAkBlmB,KAAAmH,MAAlB4e,sBAEK3jB,yBAEHE,EAAAC,cAAAsE,EAAA,CACEC,KACExE,EAAAC,cAAA,QAAM2D,UAAU,mBACd5D,yBAAItC,KAAAL,MADNmX,iBAEExU,EAAAC,cAAA,OACE2D,UACElG,KAAAL,MAAAwmB,kBAA+B7J,yBAA/B8J,SAAA,aAEI,wBAGN9jB,EAAAC,cAAA,SAAO2D,UAAU,yBAAyBmgB,QAAQ,gBAC/CrmB,KAAAL,MARL2mB,gBAUEhkB,EAAAC,cAAA,OAAK2D,UAAU,YACb5D,EAAAC,cAAA,SACE4T,GAAG,eACHjQ,UAAU,eACVnB,KAAK,OACLwhB,aAAcvmB,KAAAL,MAAWomB,QACzBlW,SAAU7P,KAAK+R,eAEhB/R,KAAAL,MAAAwmB,kBACC7J,yBADD8J,UAEC9jB,EAAAC,cAAA,QAAM2D,UAAU,cAVpB,QAcGlG,KAAAL,MAAAwmB,kBACC7J,yBADDkK,QAEClkB,EAAAC,cAAA,QAAM2D,UAAU,cACblG,KAAAL,MAjBP8mB,iBAoBGzmB,KAAAL,MAAAwmB,kBACC7J,yBADDoK,WAECpkB,EAAAC,cAAA,QAAM2D,UAAU,cACblG,KAAAL,MAnCXgnB,uBA0CF5f,OACEzE,gCACEA,EAAAC,cAACkO,EAADA,OAAA,CAAQ3F,QAAS9K,KAAAL,MAAW8F,QACzBzF,KAAAL,MAFL2C,sBAIEA,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAS,UACT7P,QAAS9K,KAAKgmB,YACdnd,SACE,KAAA7I,KAAAmH,MAAA4e,SACA/lB,KAAAL,MAAAwmB,kBAA+B7J,yBAAuB8J,UAGvDpmB,KAAAL,MAZL2C,qBAgBFmD,OAAQzF,KAAAL,MAAW8F,OACnBf,MAAO1E,KAAAL,MAAWiH,eAnFbkf,CAAuBxjB,aCjBvBskB,8JACJxkB,yBACEE,gBAACsc,EAADtc,cAAWtC,KAAAL,MAAlB6D,aAFSojB,CAAiBtkB,aCGjBukB,8JACJzkB,yBAEHE,gBAACuc,EAADvc,gBACEA,gBAACuc,aAADvc,KADFA,MAEEA,gBAACuc,aAADvc,WAAmBtC,KAAAL,MAFrB2C,WAGEA,gBAACuc,aAADvc,UAAkBtC,KAAAL,MAHpB2C,UAIEA,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACRmM,OAAO,QACPhc,QAAS9K,KAAAL,MAAWonB,UAEnB/mB,KAAAL,MAXTqnB,2BAFSH,CAA2BvkB,aCS3B2kB,eACXvnB,WAAYC,eACVA,QACAunB,kBAAyBlnB,KAAAknB,kBAAAjnB,KAAzBD,WACAmnB,oBAA2BnnB,KAAAmnB,oBAAAlnB,KAA3BD,gHAEKknB,kCACLvnB,MAAAynB,cAAyBpnB,KAAAL,MAAzBqF,mBAEKmiB,oCACLxnB,MAAA0nB,gBAA2BrnB,KAAAL,MAA3BqF,mBAEK5C,yBAEHE,EAAAC,cAACkb,EAADA,aAAA,CACES,QAASle,KAAAL,MAAWqF,KACpBmV,YAAana,KAAAL,MAAW2nB,aACxBxJ,eAAgB,GAChB3Q,QACE7K,2BACEA,EAAAC,cAACkO,EAADA,OAAA,CAAQ3F,QAAS9K,KAAKknB,mBACnBlnB,KAAAL,MAFL2C,oBAIEA,EAAAC,cAACkO,EAADA,OAAA,CAAQ3F,QAAS9K,KAAKmnB,qBACnBnnB,KAAAL,MALL2C,4BAnBG2kB,CAAqB3kB,aCTrBilB,8JACJnlB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAA6P,EAAA5P,OAAAC,OAAA,GAAqBzC,KAArBL,OACE2C,EAAAC,cAAA,OAAK2D,UAAU,cACZ,IAAAlG,KAAAL,MAAA6nB,cACCllB,EAAAC,cAACkO,EAADA,OAAA,CAAQvK,UAAU,kBAAkB4E,QAAS9K,KAAAL,MAAWonB,UACrD/mB,KAAAL,MALX2C,wBAUGtC,KAAAL,MAXL6D,aAFS+jB,CAAqBjlB,aCyCrBmlB,eAIX/nB,WAAmBC,eACjBA,QACAwH,MAAa,CACXugB,eADW,EAEXC,gBAFW,EAGXC,kBAAkB,QAEpBC,cAAqB7nB,KAAA6nB,cAAA5nB,KAArBD,WACA8nB,eAAsB9nB,KAAA8nB,eAAA7nB,KAAtBD,WACA+nB,eAAsB/nB,KAAA+nB,eAAA9nB,KAAtBD,WACAgoB,gBAAuBhoB,KAAAgoB,gBAAA/nB,KAAvBD,WACAioB,iBAAwBjoB,KAAAioB,iBAAAhoB,KAAxBD,WACAkoB,kBAAyBloB,KAAAkoB,kBAAAjoB,KAAzBD,WACAmoB,WAAkBnoB,KAAAmoB,WAAAloB,KAAlBD,WACAooB,oBAA2BpoB,KAAAooB,oBAAAnoB,KAA3BD,gHAEKmoB,oBAAUnjB,GACXhF,KAAAmH,MAAJwgB,sBACEK,uBACAroB,MAAA0oB,WAAsBroB,KAAAmH,MAAtBmhB,gBAAAtjB,IAEEhF,KAAAmH,MAAJugB,qBACEI,sBACAnoB,MAAA4oB,UAAAvjB,IAEEhF,KAAAmH,MAAJygB,wBACEM,yBACAvoB,MAAA6oB,aAAAxjB,iBAGGojB,oCACLD,WAAgBnoB,KAAAmH,MAAhBmhB,8BAEKL,0BAAgBjjB,QACrBsD,SAAc,CAAEggB,gBAAFtjB,EAAyB4iB,kBAAkB,iBAEpDM,kCACL5f,SAAc,CAAEsf,kBAAkB,iBAE7BC,8BACLvf,SAAc,CAAEof,eAAe,iBAE1BI,+BACLxf,SAAc,CAAEof,eAAe,iBAE1BK,wBAAc/iB,QACnBsD,SAAc,CAAEggB,gBAAFtjB,EAAyB2iB,gBAAgB,iBAElDK,gCACL1f,SAAc,CAAEqf,gBAAgB,iBAE3BvlB,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAAsU,EAAA,CACEjQ,UAAW5G,KAAAL,MAAW8oB,cACtB3R,gBAAiB9W,KAAAL,MAAW+oB,sBAE7B1oB,KAAAmH,MAAAugB,eACCplB,EAAAC,cAAAujB,GAAA,CACElf,UAAW5G,KAAAL,MAAWgpB,sBACtB7R,gBAAiB9W,KAAAL,MAAWipB,4BAC5B7C,QAAS,GACTO,eAAgBtmB,KAAAL,MAAWkpB,kBAC3BC,mBAAoB9oB,KAAAL,MAAWmpB,mBAC/BxiB,qBAAsBtG,KAAAL,MAAW2G,qBACjCmgB,gBAAiBzmB,KAAAL,MAAW8mB,gBAC5BE,mBAAoB3mB,KAAAL,MAAWgnB,mBAC/BR,gBAAiBnmB,KAAAL,MAAWopB,oBAC5BtjB,OAAQzF,KAAK8nB,eACb5B,OAAQlmB,KAAKmoB,WACbtX,WAAY7Q,KAAAL,MAAWqpB,iBAG1BhpB,KAAAmH,MAAAwgB,gBACCrlB,EAAAC,cAAAujB,GAAA,CACElf,UAAW5G,KAAAL,MAAWspB,uBACtBnS,gBAAiB9W,KAAAL,MAAWupB,6BAC5BnD,QAAS/lB,KAAAmH,MAAWmhB,gBACpBhC,eAAgBtmB,KAAAL,MAAWkpB,kBAC3BC,mBAAoB9oB,KAAAL,MAAWmpB,mBAC/BxiB,qBAAsBtG,KAAAL,MAAW2G,qBACjCmgB,gBAAiBzmB,KAAAL,MAAW8mB,gBAC5BE,mBAAoB3mB,KAAAL,MAAWgnB,mBAC/BR,gBAAiBnmB,KAAAL,MAAWopB,oBAC5BtjB,OAAQzF,KAAKgoB,gBACb9B,OAAQlmB,KAAKmoB,WACbtX,WAAY7Q,KAAAL,MAAWqpB,iBAG1BhpB,KAAAmH,MAAAygB,kBACCtlB,EAAAC,cAAA4C,EAAA,CACEa,YAAa7B,0BAAwBglB,OACrC5jB,KAAMrB,uBAAqBwU,OAC3BpS,qBAAsBtG,KAAAL,MAAWypB,4BACjCtjB,sBAAuB9F,KAAAL,MAAW0pB,4BAClCljB,wBAAyBnG,KAAAL,MAAA2pB,8BACvBtpB,KAAAmH,MADuBmhB,iBAGzB1hB,UAAW5G,KAAAL,MAAW4pB,4BACtB/iB,mBAAoBxG,KAAAL,MAAW6pB,oCAC/B7iB,WAAY3G,KAAAmH,MAAWygB,iBACvBliB,SAAU1F,KAAKkoB,kBACftiB,UAAW5F,KAAKooB,sBAGpB9lB,EAAAC,cAAAglB,GAAA,CACExT,cAAe/T,KAAAL,MAAWoU,cAC1BzB,kBAAmBtS,KAAAL,MAAW2S,kBAC9BgB,gBAAiBtT,KAAAL,MAAW2T,gBAC5BvC,aAAc/Q,KAAAL,MAAWoR,aACzBkC,YAAajT,KAAAL,MAAWsT,YACxBW,gBAAiB5T,KAAAL,MAAWiU,gBAC5B4T,aAAcxnB,KAAAL,MAAW6nB,aACzBnU,UAAWrT,KAAAL,MAAW0T,UACtBT,qBAAsB5S,KAAAL,MAAWiT,qBACjCE,gBAAiB9S,KAAAL,MAAWmT,gBAC5B2W,cAAezpB,KAAAL,MAAW8pB,cAC1BtW,mBAAoBnT,KAAAL,MAAWwT,mBAC/BT,sBAAuB1S,KAAAL,MAAW+S,sBAClC2B,eAAgBrU,KAAAL,MAAW0U,eAC3BE,eAAgBvU,KAAAL,MAAW4U,eAC3BV,6BAA8B7T,KAAAL,MAAWkU,6BACzCL,wBAAyBxT,KAAAL,MAAW6T,wBACpCQ,iBAAkBhU,KAAAL,MAAWqU,iBAC7BgT,qBAAsBhnB,KAAAL,MAAWqnB,qBACjCD,SAAU/mB,KAAK6nB,eAEd7nB,KAAAL,MAAA6D,SAAoB,CACnBqkB,cAAe7nB,KADI6nB,cAEnBE,eAAgB/nB,KAFG+nB,eAGnBE,iBAAkBjoB,KAAKioB,wBAvItBR,CAAyBnlB,aC5CtCvD,ICJY2qB,GDINC,GAAY,kBAChBrnB,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,GACRD,MAAO,IACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAO,CACLE,OADK,GAELD,MAAO,SAGTL,EAAAC,cAAA,QACEynB,EAAE,KACFC,EAAE,KACFC,GAAG,IACHC,GAAG,IACHxnB,MAAO,KArBbynB,EAqB4B,GArB5BnS,EAqB4B,EApBnBoS,eAAiBpS,EAAjBoS,GAAPD,GAqBIxnB,OAAO,QAtBb,IAAAwnB,EAAAnS,GA2BaqS,8JACJloB,yBAEHE,gCACEA,EAAAC,cAAA,OACE2D,UAAW,gCACC,8BAEZ5D,2BACEA,mBANNA,QASEA,EAAAC,cAAA,OACE2D,UAAW,gCACC,8BAEZ5D,2BACEA,mBAdNA,QAiBEA,EAAAC,cAAA,OACE2D,UAAW,gCACC,8BAEZ5D,2BACEA,mBAvBR,YAFSgoB,CAAyBhoB,iBENzBioB,eAKX7qB,WAAYC,eACVA,QACAwH,MAAa,CACXqjB,aAAa,QAEfxE,YAAmBhmB,KAAAgmB,YAAA/lB,KAAnBD,WACA+R,aAAoB/R,KAAA+R,aAAA9R,KAApBD,gHAEK+R,sBAAY0Y,EAAAC,OAIXF,EAAcE,eAEhBxW,EAAAtM,GAAA,OACEsM,SAAcuW,KAAdvW,MACAA,aAAkBuW,KAAaE,WAJjBD,gBAMVE,EAAAC,GAAA,OAAkBD,GAAOC,IANnC,QAOAC,WAAAL,OACAniB,SAAc,aAAEkiB,iBAEXxE,4BACLrmB,MAAAumB,OAAkBlmB,KAAlB8qB,yBAEK1oB,yBAEHE,EAAAC,cAAAsE,EAAA,CACEC,KAAM9G,KAAAL,MAAA6D,SAAoB,CACxBuO,aAAc/R,KAAK+R,eAErBhL,OACEzE,gCACEA,EAAAC,cAACkO,EAADA,OAAA,CAAQ3F,QAAS9K,KAAAL,MAAW8F,QACzBzF,KAAAL,MAFL2C,sBAIEA,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAS,UACT7P,QAAS9K,KAAKgmB,YACdnd,SAAU7I,KAAAmH,MAAWqjB,aAEpBxqB,KAAAL,MATL2C,qBAaFoC,MAAO1E,KAAAL,MAAWiH,UAClBnB,OAAQzF,KAAAL,MAAW8F,YAnDd8kB,CAA6BjoB,aCf7ByoB,eAGXrrB,WAAYC,eACVA,QACAoS,aAAoB/R,KAAA+R,aAAA9R,KAApBD,gHAEK+R,sBAAY3Q,QACjBzB,MAAAkQ,SAAoB7P,KAAAL,MAApBqF,KAAqC5D,SAArC4pB,sBAEK5oB,yBAEHE,EAAAC,cAACkb,EAADA,aAAA,CACEwN,cACE3oB,EAAAC,cAAA,SACEwC,KAAK,WACLmmB,eAAgBlrB,KAAAL,MAAWgrB,SAC3B9a,SAAU7P,KAAK+R,eAGnBmM,QAASle,KAAAL,MAAWqF,KACpBmV,YAAa,GACb2D,eAAgB,QAtBXiN,CAA+BzoB,aCG/B6oB,8JAGJ/oB,yBAEHE,EAAAC,cAACsc,EAADA,WAAA,CACEnc,MACE,CACE0oB,WADF,UAEEC,OAAQ,SAIZ/oB,gBAACuc,aAADvc,KARF,MASEA,gBAACuc,aAADvc,WAAmBtC,KAAAL,MATrBiH,WAUEtE,gBAACuc,aAADvc,UAAkBtC,KAAAL,MAVpB2rB,UAWEhpB,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAAA4J,EAAA,CAAYE,GAAG,UAAUC,KAAK,KAAKF,KAAMpM,KAAAL,MAAWyM,MACjDpM,KAAAL,MAdT4rB,mCAJSJ,CAAuC7oB,aCWvCkpB,eAIX9rB,WAAYC,eACVA,QACAwH,MAAa,CACXsjB,MAAOzqB,KAAAL,MAAW+qB,mBAEpB3Y,aAAoB/R,KAAA+R,aAAA9R,KAApBD,gHAEK+R,sBAAY/M,EAAA2lB,OACXF,EAAQzqB,KAAAL,MAAA+qB,aAAAhjB,IAAA,SAA4BwM,UACxCA,EAAAlP,SAAqB,MAAAA,WAAQ2lB,GAAazW,SAE5CvU,MAAAkQ,SAAA4a,EAA2BzqB,KAAAL,MAA3B+qB,2BAEKtoB,oCAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACGhL,KAAAmH,MAAAsjB,MAAAhjB,OAAA,GACCnF,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAAqkB,GAAA,KACG5mB,KAAAmH,MAAAsjB,MAAA/iB,IAAA,SAAqBwM,EAAAtM,GAAA,OACpBtF,EAAAC,cAAAwoB,GAAA,CACEljB,IAAKD,EACL5C,KAAMkP,EAAKlP,KACX2lB,SAAUzW,EAAKyW,SACf9a,SAAU7P,EAAK+R,mBAMxB,IAAA/R,KAAAmH,MAAAsjB,MAAAhjB,QACCnF,EAAAC,cAAA4oB,GAAA,CACE/e,KAAMpM,KAAAL,MAAW8rB,eACjB7kB,UAAW5G,KAAAL,MAAWmf,oBACtBwM,SAAUtrB,KAAAL,MAAWof,mBACrBwM,6BAA8BvrB,KAAAL,MAAW+rB,+BAvCxCF,CAAiClpB,aCNjCqpB,8JACJvpB,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAAsU,EAAA,CACEjQ,UAAW5G,KAAAL,MAAW8oB,cACtB3R,gBAAiB9W,KAAAL,MAAW+oB,sBAE9BpmB,EAAAC,cAAC0U,EAADA,YAAA,KACE3U,EAAAC,cAAA2E,EAAA,CACE8B,eAAe,EACfJ,eAAgB,OAChBkY,iBAAkB9gB,KAAAL,MAAWmhB,iBAC7BhY,iBAAiB,EACjBP,iBAAkBvI,KAAAL,MAAW4I,iBAC7BT,0BAA2B9H,KAAAL,MAAWmI,0BACtCgC,sBAAuB9J,KAAAL,MAAWmK,sBAClCF,iBAAkB5J,KAAAL,MAAWiK,iBAC7BzB,yBAA0BnI,KAAAL,MAAWwI,yBACrCD,0BAA2BlI,KAAAL,MAAWuI,0BACtCoY,gBAAiBtgB,KAAAL,MAAW2gB,uBApB3BqL,CAAqBrpB,aCCrBspB,8JAGJxpB,yBAEHE,gCACEA,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWksB,YAAaxf,GAAI,WADhD/J,QAIEA,EAAAC,cAAC6W,EAADA,cAAA,CACEjD,GAAE,eAAiBnW,KAAAL,MAAW+iB,6BAC9BrJ,WAAW,GAEVrZ,KAAAL,MAAAwN,QAAAzF,IAAA,SAAuBokB,EAAA1jB,GAAA,OACtB9F,EAAAC,cAAA,MAAIgX,KAAM,eAAgB1R,IAAKO,GAC5B0jB,OACCxpB,EAAAC,cAACgK,EAADA,KAAA,CACEC,GAAIsf,EAAE1f,KACNtB,QAASghB,EAAEhhB,QACXyO,KAAM,WACNC,SAAUpR,EAAM,GAEf0jB,EAPJA,OAUCxpB,EAAAC,cAAA,KACE6J,KAAM,qBACNtB,QAASghB,EAAEhhB,QACXyO,KAAM,WACNC,SAAUpR,EAAM,GAEf0jB,EAjBP9d,eAdC4d,CAA2BtpB,cNf5BonB,+BAAZ,KACEA,cACAA,kBACAA,eAWF,IAAaqC,8JAGJ3pB,yBAEHE,EAAAC,cAACmY,EAADA,MAAA,CAAO3V,KAAM/E,KAAAL,MAAWqsB,OACtB1pB,EAAAC,cAAA,QACEmH,wBAAyB,CACvBC,OAAQ3J,KAAAL,MAAW0B,WAGtBrB,KAAAL,MAAAssB,QACC3pB,EAAAC,cAAC2pB,EAADA,eAAA,CACEC,MAAM,OACN9hB,UAAU,EACV+hB,UAAU,EACVC,aAAcrsB,KAAAL,MAAW2sB,iBACzBC,cAAevsB,KAAAL,MAAW6sB,mBAE1BlqB,2BAAMtC,KAAAL,MAfdssB,aAJSF,CAAsCzpB,aOMtCmqB,8JAGJrqB,yBAEHE,EAAAC,cAAAkK,EAAA,CACEU,QACE7K,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA4J,EAAA,CACEK,GAAIxM,KAAAL,MAAW+sB,WACf5hB,QAAS9K,KAAAL,MAAWgtB,aACpBnpB,SAAUxD,KAAAL,MAAWitB,cAEvBtqB,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW+Z,SACjBlW,SAAUxD,KAAAL,MAAWktB,YAEvBvqB,EAAAC,cAAC6W,EAADA,cAAA,CACEjD,GAAE,eAAiBnW,KAAAL,MAAW+iB,6BAC9BrJ,WAAW,GAEVrZ,KAAAL,MAAAmtB,YACG9sB,KAAAL,MAAAmtB,YAAAplB,IAAA,SAA2BokB,EAAA1jB,GAAA,OACzB9F,EAAAC,cAAA,MAAIgX,KAAM,eAAgB1R,IAAKO,GAC5B0jB,OACCxpB,EAAAC,cAACgK,EAADA,KAAA,CACEC,GAAIsf,EAAE1f,KACNtB,QAASghB,EAAEhhB,QACXyO,KAAM,WACNC,SAAUpR,EAAM,GAEf0jB,EAPJA,OAUCxpB,EAAAC,cAAA,KACE6J,KAAM,qBACNtB,QAASghB,EAAEhhB,QACXyO,KAAM,WACNC,SAAUpR,EAAM,GAEf0jB,EAjBP9d,UAhBV,QA2CF1L,4BACEA,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWotB,UAAY/sB,KAAAL,MA9CrCqtB,WAgDE1qB,4BACEA,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWstB,kBAClBjtB,KAAAL,MAlDPkkB,mBAqDEvhB,4BAAOtC,KAAAL,MAtDX8oB,mBAJSgE,CAAoCnqB,aCfpC4qB,8JAGJ9qB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,gBAACkV,EAADlV,UAAOtC,KAAAL,MAFXwa,iBAJS+S,CAAqC5qB,iBCDrC6qB,8JAGJ/qB,yBACEE,gCAAGtC,KAAAL,MAAAqF,MAAmB1C,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAK,MAAMtM,KAAAL,MAA/CqF,UAJSmoB,CAAsC7qB,iBCWtC8qB,8JAGJhrB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAC6G,EAADA,KAAA,CACEC,OAAO,EACPxB,IAAK,EACL3B,UAAU,wCAETlG,KAAAL,MAAA0tB,QACC/qB,EAAAC,cAAC6G,OAADI,IAAA,CAAUtD,UAAU,aAClB5D,EAAAC,cAAC6G,OAADK,IAAA,CACEI,GAAI,EACJkS,GAAI,EACJ7V,UAAU,qDAETlG,KAAAL,MALH2tB,cADF,KAQEhrB,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,GAAIkS,GAAI,IACpBzZ,EAAAC,cAACkb,EAADA,aAAA,CACE5V,IAAK,EACLqW,QAASle,KAAAL,MAAW2tB,cACpBngB,QACE7K,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA4J,EAAA,CACEK,GAAIxM,KAAAL,MAAW4tB,YACfziB,QAAS9K,KAAAL,MAAW6tB,cACpBhqB,SAAUxD,KAAAL,MAAW8tB,eAEvBnrB,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAW+Z,SACjBlW,SAAUxD,KAAAL,MAAWktB,aAI3BtO,SAAS,MA/BnB,KAqCGve,KAAAL,MAAA6D,UAAuBxD,KAAAL,MAAvB+tB,WACCprB,EAAAC,cAAC6G,OAADI,IAAA,CAAUtD,UAAU,aAClB5D,EAAAC,cAAC6G,OAADK,IAAA,CACEI,GAAI,EACJkS,GAAI,EACJ7V,UAAU,qDAET5D,4BAAOtC,KAAAL,MAAP2C,gBANL,MAQEA,EAAAC,cAAC6G,OAADK,IAAA,CAAUI,GAAI,GAAIkS,GAAI,IACnB/b,KAAAL,MAAA6D,SACClB,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAVN,OAvCP,UAJS4pB,CAAyC9qB,aCehDqrB,GAAS,CACbC,MAAOtrB,EAAAC,cAACqc,WAAD9Z,KAAA,CAAeC,KAAK,KAAKC,KAAK,mBACrCyf,QAASniB,EAAAC,cAACqc,WAAD9Z,KAAA,CAAeE,KAAK,UAC7B4f,UAAWtiB,EAAAC,cAACqc,WAAD9Z,KAAA,CAAeC,KAAK,KAAKC,KAAK,OACzC6oB,YAAavrB,EAAAC,cAACqc,WAAD9Z,KAAA,CAAeE,KAAK,WAGtB8oB,8JAGJ1rB,yBAKHE,EAAAC,cAACkb,EAADA,aAAA,CACEtQ,QAASnN,KAAAL,MAAWwN,QACpB+Q,QACE5b,gCACGtC,KAAAL,MADH2C,qBACiCtC,KAAAL,MADjC2C,SAIF6X,YACE7X,gCACGtC,KAAAL,MADH2C,sBAEGtC,KAAAL,MAFH2C,WAKFwb,eAAgB,GAChBO,aAlBJ0P,EAkBqC/tB,KAAAL,MAADouB,aAjB3BJ,OAAP,MAkBEpP,SAAS,QAnBbwP,KAJSD,CAA6CxrB,aC9B7C0rB,8JAGJ5rB,yBAEHE,EAAAC,cAAC6W,EAADA,cAAA,CACEjD,GAAE,eAAiBnW,KAAAL,MAAW+iB,6BAC9BrJ,WAAW,GAEVrZ,KAAAL,MAAAwN,QAAAzF,IAAA,SAAuBokB,EAAAlkB,UAEpBtF,EAAAC,cAAA,MAAIgX,KAAM,eAAgB1R,IAAKD,GAC5BkkB,OACCxpB,EAAAC,cAACgK,EAADA,KAAA,CACEC,GAAIsf,EAAE1f,KACNtB,QAASghB,EAAEhhB,QACXyO,KAAM,WACNC,SAAU5R,EAAQ,GAEjBkkB,EAPJA,OAUCxpB,EAAAC,cAAA,KACE6J,KAAM,qBACNtB,QAASghB,EAAEhhB,QACXyO,KAAM,WACNC,SAAU5R,EAAQ,GAEjBkkB,EAlBT9d,cAVGggB,CAAoD1rB,aCSpD2rB,8JAGJ7rB,sBACD8rB,EAAeluB,KAAAL,MAAnBwuB,2BACQnuB,KAAAL,MAARyuB,iBCvBGrvB,YDyBCmvB,EAAeluB,KAAAL,MAAfuuB,+BCxBDnvB,cD2BCmvB,EAAeluB,KAAAL,MAAfuuB,4BAIF5rB,EAAAC,cAAA,qBACc,4BACZ2D,UAAW,6BAEVlG,KAAAL,MAAA2P,OAAoBtP,KAAAL,MAApB+X,aAA8C1X,KAAAL,MAA9CgY,WACCrV,EAAAC,cAAAkV,EAAA,CACEC,YAAa1X,KAAAL,MAAW+X,YACxBC,WAAY3X,KAAAL,MAAWgY,WACvBrI,MAAOtP,KAAAL,MAAW2P,MAClBsI,OAAQ5X,KAAAL,MAAWiY,OACnBE,eAAgB9X,KAAAL,MAAWmY,iBAG7BxV,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAC+K,EAADA,QAAA,CAASC,SAAS,EAAMF,QAAQ,IAfxC6gB,OAbSD,CAAgC3rB,aEChC+rB,8JAGJjsB,yBAEHE,EAAAC,cAAA,OAAK2D,UAAU,2BACZlG,KAAAL,MADHqF,KAEE1C,EAAAC,cAAAD,EAAA0I,SAAA,KACG,YAAAhL,KAAAL,MAAAouB,cACCzrB,EAAAC,cAAA0rB,GAAA,CACEG,YAAapuB,KAAAL,MAAWyuB,YACxB9e,MAAOtP,KAAAL,MAAW2uB,gBAClB5W,YAAa1X,KAAAL,MAAW4uB,sBACxB5W,WAAY3X,KAAAL,MAAW6uB,qBACvB5W,OAAQ5X,KAAAL,MAAW8uB,iBACnBN,oBAAqBnuB,KAAAL,MAAWwuB,oBAChCO,qBAAsB1uB,KAAAL,MAAW+uB,qBACjCC,qBAAsB3uB,KAAAL,MAAWgvB,qBACjC7W,eAAgB9X,KAAAL,MAAWmY,iBAG9B,cAAA9X,KAAAL,MAAAouB,cAA2C/tB,KAAAL,MAA3CivB,SACCtsB,EAAAC,cAAAD,EAAA0I,SAAA,wBAEE1I,EAAAC,cAAA,QAAM2D,UAAU,qBAFlB,yBAG2BlG,KAAAL,MArBnCivB,cAJSP,CAA8B/rB,iBCL9BusB,8JAGJzsB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAAyE,EAAA,KACE1E,EAAAC,cAAA,OAAK2D,UAAU,kDACZlG,KAAAL,MAAAmvB,oBACCxsB,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWmvB,oBAClB9uB,KAAAL,MAFLovB,sBAFJ,aASEzsB,EAAAC,cAAA,QAAM2D,UAAU,oDACblG,KAAAL,MAVLqvB,iBAAA,WAaE1sB,EAAAC,cAACkO,EAADA,OAAA,CAAQ3F,QAAS9K,KAAAL,MAAWsvB,WACzBjvB,KAAAL,MAhBT2C,kBAoBGtC,KAAAL,MAAA6D,SACClB,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UArBL,SAJSqrB,CAAkCvsB,aCSzC4f,GAAY,SAAI5S,UAAkBhN,gBAAC4H,QAAD5H,iBAClC4sB,GAAU,SAAI5f,UAAkBhN,gBAAC4H,QAAD5H,cAChC6sB,GAAgB,SAAIC,UACxB9sB,EAAAC,cAAC2H,QAADmlB,KAAA,KACG,YAAAD,EACC9sB,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,OAFxB,YAKC1C,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBAP3B,YAYIsqB,GAAgB,SAAIC,UACxBjtB,EAAAC,cAAC2H,QAADmlB,KAAA,KACE/sB,EAAAC,cAAA,OAAK2D,UAAU,gDADjBqpB,KAKWC,8JAGJptB,yBAEHE,EAAAC,cAACqc,WAADzK,KAAA,CACEjO,UAAU,mCACV2B,IAAK7H,KAAAL,MAAW8vB,KAChBtiB,QACE7K,EAAAC,cAAA,OAAK2D,UAAU,iDACZlG,KAAAL,MAAA+vB,WAAA,EACCptB,EAAAC,cAAA,YACED,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBADvB,KAGGhF,KAAAL,MAJJgwB,iBAOCrtB,EAAAC,cAAA,YACED,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,OADvB,KAGGhF,KAAAL,MAXPiwB,eAgBFvR,YAAare,KAAAL,MAAWkwB,KACxB3R,QAAS5b,iCACT6X,YAAana,KAAAL,MAAW8vB,KACxB3R,eAAgB,CACdxb,EAAAC,cAACqc,WAADkR,SAAA,CAAmBjoB,IAAK,GACrB7H,KAAAL,MADHowB,YAAA,OAGG/vB,KAAAL,MAJWivB,WAQhBtsB,gBAACkH,EAADlH,SACGtC,KAAAL,MAAAqwB,MACC1tB,EAAAC,cAACkH,EAADA,IAAA,CAAK+L,GAAI,IACPlT,EAAAC,cAAC2H,QAADC,WAAA,CACEC,SAAS,EACTC,UAAU,EACVC,OAAO,EACPC,QAAS,CACP,CACE4X,KAAM,CACJC,WAAY,CADR8M,IAEJ1M,SAAU,QAEZF,OAAQ,CACNF,WAAY,CADNF,IAENlU,MAAO,SAGX,CACEmU,KAAM,CACJC,WAAY,CADR8M,IAEJ1M,SAAU,QAEZF,OAAQ,CACNF,WAAY,CADNF,IAENlU,MAAO,SAGX,CACEmU,KAAM,CACJC,WAAY,CADR8M,IAEJ1M,SAAU,YAEZF,OAAQ,CACNF,WAAY,CADNF,IAENlU,MAAO,aAGX,CACEmU,KAAM,CACJC,WAAY,CADR+M,IAEJ3M,SAAU,UAEZF,OAAQ,CACNF,WAAY,CADNF,IAENlU,MAAO,WAGX,CACEmU,KAAM,CACJC,WAAY,CADRkN,IAEJ9M,SAAU,UAEZF,OAAQ,CACNF,WAAY,CADNF,IAENlU,MAAO,aAKb1L,gBAAC4H,QAAD5H,OAzDF,MA0DGtC,KAAAL,MA5DNqwB,QAgEC1tB,EAAAC,cAACkH,EAADA,IAAA,CAAK+L,GAAI,IACPlT,4BAAOtC,KAAAL,MAlGjBswB,mBAJST,CAAsCltB,aClCtC4tB,8JAGJ9tB,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAC2H,QAADvF,KAAA,CACEqF,KAAM,CACJ,CACEmmB,SAAUnwB,KAAAL,MADZwwB,SAEEZ,OAAQvvB,KAAAL,MAFV4vB,OAGEH,OAAQpvB,KAAAL,MAHVyvB,OAIEgB,KAAMpwB,KAAAL,MAJRqF,KAKEyqB,KAAMzvB,KAAAL,MAAW8vB,OAGrBxlB,OAAQjK,KAAAL,MAAWqF,WAhBhBkrB,CAA2C5tB,aCiB3C+tB,8JAGJjuB,sBACCkuB,EAAkBtwB,KAAAL,MAAA4wB,SAAuBvwB,KAAAL,MAA/C6wB,OAEMC,EADc,IAAAC,KAAS1wB,KAAAL,MAA7BgxB,OACAC,wBAGEtuB,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAACsZ,EAADA,SAAA,CAAUxS,OAAO,EAAM7E,aAAa,GAClClC,EAAAC,cAACiH,EAADA,IAAA,CAAK9G,MAAO,CAAEmuB,aAAF,OAAwBC,UAAW,SAC7CxuB,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,EAAG2L,GAAI,EAAGuG,GAAI,GACrBzZ,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,EAAAC,cAACsa,EAADA,UAAA,KACEva,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBACpBhF,KAAAL,MAHL6wB,QAKEluB,gBAACka,EAADla,cAAWtC,KAAAL,MAPjBoxB,mBAUEzuB,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,EAAG2L,GAAI,EAAGuG,GAAI,GACrBzZ,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,EAAAC,cAACsa,EAADA,UAAA,KACEva,EAAAC,cAACuC,EAADA,KAAA,CAAME,KAAK,WACVhF,KAAAL,MAHLqxB,mBAKE1uB,gBAACka,EAADla,cACEA,0BAAKtC,KAAAL,MAjBbsxB,kBAqBE3uB,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,EAAG2L,GAAI,EAAGuG,GAAI,GACrBzZ,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,gBAACua,EAADva,eACEA,gBAACmC,EAADnC,0BACGtC,KAAAL,MADH2C,SADFA,QAIGtC,KAAAL,MALLuxB,mBAOE5uB,EAAAC,cAACia,EAADA,SAAA,KACEla,EAAAC,cAACqC,EAADA,6BAAA,KACEtC,EAAAC,cAACsC,EAADA,4BAAA,KACEvC,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,OADvBsrB,EADF,QAKEhuB,EAAAC,cAACsC,EAADA,4BAAA,KACEvC,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAK,KAAKC,KAAK,mBACpBhF,KAAAL,MArCb6wB,YA2CEluB,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,EAAG2L,GAAI,EAAGuG,GAAI,GACrBzZ,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,EAAAC,cAAC8B,OAAD+S,MAAA,CAAYlR,UAAW,aACrB5D,EAAAC,cAAA,SAAO2D,UAAW,cACflG,KAAAL,MADHwxB,UADFV,GAKEnuB,2BAAMtC,KAAAL,MANVyxB,aAQE9uB,gBAAC+B,OAAD/B,UACEA,0BAAKtC,KAAAL,MAxDnB0xB,6BARShB,CAAiC/tB,aCnBjCgvB,8JAGJlvB,yBAEHE,EAAAC,cAACqc,WAADzK,KAAA,CACEhH,QAASnN,KAAAL,MAAWwN,QACpB+Q,QAASle,KAAAL,MAAW4xB,gBACpBpX,YAAana,KAAAL,MAAW6xB,uBACxBjT,SAAS,OATJ+S,CAAyChvB,aCDzCmvB,8JACJrvB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,gBAACsc,EAADtc,cAAWtC,KAAAL,MAFf6D,cAFSiuB,CAAsCnvB,aCEtCovB,8JAGJtvB,yBAEHE,EAAAC,cAACqc,WAADzK,KAAA,CACEhH,QAASnN,KAAAL,MAAWwN,QACpB+Q,QAASle,KAAAL,MAAW4xB,gBACpBpX,YAAana,KAAAL,MAAW6xB,uBACxBnT,YAAare,KAAAL,MAAW4F,KACxBgZ,SAAS,OAVJmT,CAA6CpvB,aCmB7CqvB,8JAGJvvB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAAyE,EAAA,KACE1E,EAAAC,cAAA,QACE2D,UAAU,8BACVqT,KAAK,OACLgB,SAAUva,KAAAL,MAAW6a,cAErBlY,EAAAC,cAAA,OAAK2D,UAAU,oBACb5D,EAAAC,cAAA,OAAK2D,UAAU,WACZlG,KAAAL,MAAA0c,eACC/Z,EAAAC,cAAA,OAAK2D,UAAU,iBACZlG,KAAAL,MAHP0c,eAME/Z,EAAAC,cAAA,OAAK2D,UAAU,gBACb5D,uBAAYtC,KAAAL,MAPhB6D,WASElB,EAAAC,cAAA,OAAK2D,UAAU,kBACb5D,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWiyB,kBAC3BtvB,EAAAC,cAAA,KAAG2D,UAAW,uBADhB,IAEGlG,KAAAL,MAHLkyB,kBAKEvvB,EAAAC,cAAA4J,EAAA,CACErB,QAAS9K,KAAAL,MAAWmyB,WACpBjpB,UAAW7I,KAAAL,MAAWkb,QACtBxO,GAAI,WAEHrM,KAAAL,MA5BjBoyB,mBAJSJ,CAA8BrvB,aCT9B0vB,8JAGJ5vB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAAyE,EAAA,KACE1E,EAAAC,cAAA,OAAK2D,UAAU,oBACb5D,EAAAC,cAAA,OAAK2D,UAAU,WACb5D,EAAAC,cAAA,OAAK2D,UAAU,gBACb5D,uBACEA,EAAAC,cAACiV,EAADA,KAAA,CAAMtR,UAAU,oBACd5D,EAAAC,cAAA,QAAM2D,UAAU,uBACflG,KAAAL,MALTsyB,aASE3vB,EAAAC,cAAA,OAAK2D,UAAU,kBACb5D,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWiyB,kBAC3BtvB,EAAAC,cAAA,KAAG2D,UAAW,uBADhB,IAEGlG,KAAAL,MAHLkyB,kBAKEvvB,EAAAC,cAAA4J,EAAA,CAAYrB,QAAS9K,KAAAL,MAAWmyB,WAAYzlB,GAAI,WAC7CrM,KAAAL,MAnBfoyB,kBAJSC,CAA4C1vB,aCjB5C4vB,8JACJ9vB,yBAEHE,EAAAC,cAACqc,EAADA,SAAA,CAAUlc,MAAO,CAAE0oB,WAAY,gBAC5BprB,KAAAL,MAFL6D,aAFS0uB,CAAmC5vB,aCOnC6vB,8JAGJ/vB,yBAEHE,EAAAC,cAACqc,WAADzK,KAAA,CACEhH,QAASnN,KAAAL,MAAWwN,QACpB+Q,QAASle,KAAAL,MAAWyyB,SACpBjY,YAAana,KAAAL,MAAW0yB,gBACxBhU,YAAare,KAAAL,MAAW4F,KACxBgZ,SAAS,EACTH,eAAe,OAXV+T,CAAuC7vB,aCKvCgwB,eAcX5yB,WAAYC,eACVA,QAPKwH,MAAQ,CACborB,aAAa,QAGRC,aAAelwB,EAAfmwB,iBAILF,YAAmBvyB,KAAAuyB,YAAAtyB,KAAnBD,WACA0yB,YAAmB1yB,KAAA0yB,YAAAzyB,KAAnBD,WACA2yB,cAAqB3yB,KAAA2yB,cAAA1yB,KAArBD,gHAGKuyB,4BACLjqB,SAAc,CACZiqB,aAAa,iBAIVG,4BACLpqB,SAAc,CACZiqB,aAAa,iBAIVI,8BACLrqB,SAAc,CACZiqB,aAAcvyB,KAAAmH,MAAWorB,2BAItBnwB,yBAEHE,EAAAC,cAAA,OACE2D,UAAW,4BACX0sB,aAAc5yB,KAAKuyB,YACnBM,aAAc7yB,KAAK0yB,YACnBI,aAAc9yB,KAAK2yB,eAElB3yB,KAAAL,MAAAozB,aACCzwB,EAAAC,cAAA,OACE2D,UAAW,yCACXlD,IAAKhD,KAAKwyB,cAEVlwB,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWozB,aACnBzwB,EAAAC,cAAA,OAAK2D,UAAW,mCACd5D,EAAAC,cAAA,KACE2D,UAAU,oBACVxB,MAAO1E,KAAAL,MAAWqzB,iBAM3BhzB,KAAAL,MAAAszB,aAA0BjzB,KAAAL,MAtB/B6D,aAxCS8uB,CAA+BhwB,aAI5BgwB,gBAAe,CAC3BrjB,QAAQ,OCMCikB,8JAOJ9wB,sBACCmjB,EACJjjB,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAI,yBAA0BnW,KAAAL,MADzCwzB,aAGM5tB,EACJjD,EAAAC,cAAA,OAAK2D,UAAW,+BAAgClG,KAAAL,MADlD4F,aAIEjD,EAAAC,cAAA,OACE2D,UAAWe,EAAU,wBAA0B,aAChCjH,KAAAL,MADgCsP,qBAE9BjP,KAAAL,MAAWszB,eAG3BjzB,KAAAL,MAAAszB,YACC3wB,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA,OAAK2D,UAAW,sCADlBX,GAEGvF,KAAAL,MAHJ6D,UAMClB,EAAAC,cAAA,OAAK2D,UAAW,sCACd5D,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS4H,EACT3H,UAAU,QACVwV,QAAS,kBACTC,WAAW,GAlBrB9tB,QAdS2tB,CAA4B5wB,aAGzB4wB,gBAAe,CAC3BjkB,QAAQ,GC1BZlQ,IAAMqY,GAAK,SAA4BpU,2BACrCV,EAAAC,cAAA,OAAK2D,UAAW,wCAAhB1C,IAGI8vB,GAAkB,SAA4BtwB,2BAClDV,EAAAC,cAAA,OAAK2D,UAAW,uCAAhB1C,IAYI+vB,GAAY,SAAgDvwB,WAEhEgC,kBACAwuB,SACArS,oBACAsS,WACAC,sCAEApxB,EAAAC,cAAA,OAAK2D,UAAW,uCACd5D,EAAAC,cAAA,MAAI2D,UAAW,2CACb5D,0BADFqxB,GAEErxB,0BAHJ0C,IAKGmc,GACC7e,EAAAC,cAAA,MAAI2D,UAAW,2CACb5D,0BADFkxB,GAEElxB,0BARN6e,IAWGuS,GACCpxB,EAAAC,cAAA,MAAI2D,UAAW,2CACb5D,0BADFmxB,GAEEnxB,0BAdNoxB,MAmCWE,8JAOJxxB,yBAEHE,EAAAC,cAAA,OACE2D,UAAWe,EAAU,gCAAkC,aACxCjH,KAAAL,MAAWsP,UAGzBjP,KAAAL,MAAA6D,SAAoB,oBAAA8vB,gBAAAC,SAGnBnc,SAjBGwc,CAAmCtxB,aAGhCsxB,gBAAe,CAC3B3kB,QAAQ,GCnCZ,ICxBa4kB,GAAe,SAExB7wB,WAAwB8wB,oDAC1BxxB,EAAAC,cAAA,OAAK2D,UAAW,oBACd5D,EAAAC,cAAA,OAAK0X,IAAK8Z,EAAqB7tB,UAAW,2BAC1C5D,EAAAC,cAAA,KAAG2D,UAAU,gDACb5D,EAAAC,cAAA,OAAK0X,IAAK6Z,EAAsB5tB,UAAW,6BCQlC8tB,8JAGJ5xB,yBAEHE,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAA,QACE2D,UAAU,8BACVqT,KAAK,OACLgB,SAAUva,KAAAL,MAAW6a,cAErBlY,EAAAC,cAAA,OAAK2D,UAAU,oBACb5D,EAAAC,cAAA,OAAK2D,UAAU,WACZlG,KAAAL,MAAA0c,eACC/Z,EAAAC,cAAA,OAAK2D,UAAU,iBAAiBlG,KAAAL,MAFpC0c,eAIE/Z,EAAAC,cAAA,OAAK2D,UAAU,gBACb5D,uBAAYtC,KAAAL,MAbxB6D,kBAJSwwB,CAA4B1xB,aCN5B2xB,8JAGJ7xB,sBACC8xB,EnBjBHn1B,UmBkBDiB,KAAAL,MAAAouB,aAAA,SnBrBChvB,cmBuBGiB,KAAAL,MAAAouB,cnBrBHhvB,YmBsBGiB,KAAAL,MAAAouB,aADA,UAHN,UAOI/f,EnBzBDjP,iBmB0BKiB,KAAAL,MAARouB,kBnB5BGhvB,YmB8BCiP,EAAQhO,KAAAL,MAARqO,wBnB7BDjP,cmBgCCiP,EAAQhO,KAAAL,MAARqO,0BnB9BDjP,QmBiCCiP,EAAQhO,KAAAL,MAARqO,iBAGG1L,EAAAC,cAAC4xB,EAADA,MAAA,CAAOpvB,KAAMmvB,GAApBlmB,MAvBSimB,CAA0B3xB,aCQ1B8xB,8JAGJhyB,yBAEHE,EAAAC,cAAA,OAAK2D,UAAU,sCACZ,IAAAlG,KAAAL,MAAA00B,QACC/xB,EAAAC,cAACuC,EAADA,KAAA,CAAME,KAAM,cAAekB,UAAU,eAFzC,MAIIlG,KAAAL,MAADyM,MACC9J,EAAAC,cAAA,WACED,EAAAC,cAAA,OAAK2D,UAAW,YAAaxB,MAAO1E,KAAAL,MAAW+E,OAC7CpC,EAAAC,cAAA,OAAK0X,IAAKja,KAAAL,MAAW4F,QAEvBjD,yBAAItC,KAAAL,MATVqF,OAYGhF,KAAAL,MAAAyM,MACC9J,EAAAC,cAACgK,EAADA,KAAA,CAAMC,GAAIxM,KAAAL,MAAWyM,MACnB9J,2BACEA,EAAAC,cAAA,OAAK2D,UAAW,YAAaxB,MAAO1E,KAAAL,MAAW+E,OAC7CpC,EAAAC,cAAA,OAAK0X,IAAKja,KAAAL,MAAW4F,QAEvBjD,yBAAItC,KAAAL,MAnBdqF,YAJSovB,CAAuC9xB,aCvBvCgyB,8JACJlyB,yBACEE,EAAAC,cAAA,OAAK2D,UAAU,aAAalG,KAAAL,MAAnC6D,aAFS8wB,CAAuChyB,aCuBvCiyB,eAaX70B,WAAYC,eACVA,QANKwH,MAAQ,CACbilB,SACkE,OAA/DoI,oDAAD,WAKFC,eAAsBz0B,KAAAy0B,eAAAx0B,KAAtBD,gHAGKy0B,8BACCrI,GAAYpsB,KAAAmH,MAAlBilB,SACAoI,kDAAmDpI,EAAQ,IAA3DoI,UACAlsB,SAAc,UACZ8jB,iBAIGhqB,yBAEHE,EAAAC,cAAA,OACE2D,UAAWe,EAAU,4BAA8B,eAClCjH,KAAAmH,MAAWilB,YAG5B9pB,EAAAC,cAAA,OAAK2D,UAAU,mCACZlG,KAAAL,MAAA6D,SAAoBxD,KANzBmH,QAQE7E,EAAAC,cAAA,OAAK2D,UAAU,qCACb5D,EAAAC,cAAA4J,EAAA,CAAYrB,QAAS9K,KAAKy0B,eAAgBpoB,GAAI,cArC3CkoB,CAAgCjyB,aAI7BiyB,gBAAe,CAC3B1rB,UAAU,OC3BD6rB,8JACJtyB,yBACEE,gBAACsc,EAADtc,cAAWtC,KAAAL,MAAlB6D,aAFSkxB,CAAyBpyB,aC0BzBqyB,8JAGJvyB,yBAEHE,EAAAC,cAACqc,WAADzK,KAAA,CACEhH,QAASnN,KAAAL,MAAWwN,QACpB+Q,QAASle,KAAAL,MAAW4xB,gBACpBpX,YACEna,KAAAL,MAAAi1B,wBACEtyB,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAACuC,EAADA,KAAA,CAAMC,KAAM,KAAMC,KAAM,uBACvBhF,KAAAL,MAHL0a,2BAME,GAGJyD,eAAgB,CACdxb,EAAAC,cAACqc,WAADkR,SAAA,CAAmBjoB,IAAK,GACrB,YAAA7H,KAAAL,MAAAouB,aACCzrB,EAAAC,cAAA0rB,GAAA,CACEG,YAAapuB,KAAAL,MAAWyuB,YACxB9e,MAAOtP,KAAAL,MAAW2uB,gBAClB5W,YAAa1X,KAAAL,MAAW4uB,sBACxB5W,WAAY3X,KAAAL,MAAW6uB,qBACvB5W,OAAQ5X,KAAAL,MAAW8uB,iBACnBN,oBAAqBnuB,KAAAL,MAAWwuB,oBAChCO,qBAAsB1uB,KAAAL,MAAW+uB,qBACjCC,qBAAsB3uB,KAAAL,MAAWgvB,qBACjC7W,eAAgB9X,KAAAL,MAAWmY,iBAG7BxV,EAAAC,cAAA0xB,GAAA,CACElG,aAAc/tB,KAAAL,MAAWouB,aACzB8G,cAAe70B,KAAAL,MAAWk1B,cAC1BC,gBAAiB90B,KAAAL,MAAWm1B,gBAC5BC,UAAW/0B,KAAAL,MAAWo1B,cAK9B1W,YACE/b,EAAAC,cAAAsxB,GAAA,CACEE,oBAAqB/zB,KAAAL,MAAWo0B,oBAChCD,qBAAsB9zB,KAAAL,MAAWm0B,uBAGrCvV,SAAS,OAhDJoW,CAA6BryB,aC1B1C,SAAA0yB,GAAA5K,EAAAnS,UACSoS,eAAiBpS,EAAjBoS,GAAPD,EAGFrrB,ICDYk2B,GDCNtL,GAAY,kBAChBrnB,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,GACRD,MAAO,IACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAO,CACLE,OADK,GAELD,MAAO,SAGTL,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B9yB,EAAAC,cAAA,QACEynB,EAAE,MACFC,EAAE,KACFC,GAAG,IACHC,GAAG,IACHxnB,MAAO,IAAM0yB,GAAS,MACtBzyB,OAAO,OAETN,EAAAC,cAAA,QACEynB,EAAE,MACFC,EAAE,KACFC,GAAG,IACHC,GAAG,IACHxnB,MAAO,IAAM0yB,GAAS,MACtBzyB,OAAO,SAKA0yB,8JACJlzB,yBAEHE,gCACEA,EAAAC,cAAA,OACE2D,UAAW,gCACC,6BAEZ5D,2BACEA,mBANNA,QASEA,EAAAC,cAAA,OACE2D,UAAW,gCACC,6BAEZ5D,2BACEA,mBAdNA,QAiBEA,EAAAC,cAAA,OACE2D,UAAW,gCACC,6BAEZ5D,2BACEA,mBAvBR,YAFSgzB,CAAiChzB,iBEpBjCizB,8JAGJnzB,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAAsU,EAAA,CACEjQ,UAAW5G,KAAAL,MAAWiH,UACtBkQ,gBAAiB9W,KAAAL,MAAWmX,kBAE9BxU,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAA6P,EAAA5P,OAAAC,OAAA,GAAqBzC,KAArBL,OACE2C,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAW61B,kBAC1Bx1B,KAAAL,MAFL81B,gBAIEnzB,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAW+1B,yBAC1B11B,KAAAL,MALLkiB,YAOEvf,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAWokB,0BACjB1X,GAAI,WAEHrM,KAAAL,MAbT2C,4BAiBGtC,KAAAL,MAvBP6D,cAJS+xB,CAA6BjzB,aCR7BqzB,8JAGJvzB,yBAEHE,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAO4B,UAAW,uBAChC5D,gBAAC+B,OAAD/B,aACEA,EAAAC,cAAC8B,OAADuxB,eAAA,CACEzf,GAAG,sBACHzR,MAAO1E,KAAAL,MAAWk2B,gBAElBvzB,EAAAC,cAACuzB,EAADA,SAAA,CAAUC,SAAS,IAAI9mB,QAAQ,GAC5BjP,KAAAL,MALLk2B,gBAOEvzB,EAAAC,cAACuzB,EAADA,SAAA,CAAUC,SAAS,KAAK/1B,KAAAL,MAP1Bq2B,gBAQE1zB,EAAAC,cAACuzB,EAADA,SAAA,CAAUC,SAAS,KAAK/1B,KAAAL,MAT5B2C,iBAWEA,gBAAC+B,OAAD/B,WAAatC,KAAAL,MAZjBiH,YAcEtE,gBAAC+B,OAAD/B,UAAYtC,KAAAL,MAfhB6D,cAJSmyB,CAA4BrzB,aCH5B2zB,8JACJ7zB,sBAECquB,EADc,IAAAC,KAAS1wB,KAAAL,MAA7BgxB,OACAC,wBAEEtuB,EAAAC,cAAC8B,EAADA,KAAA,CAAMC,UAAU,EAAMC,YAAY,EAAMC,aAAa,GACnDlC,EAAAC,cAAC8B,OAAD+S,MAAA,CAAYlR,UAAW,aACrB5D,EAAAC,cAAA,SAAO2D,UAAW,cAAlB,SADFuqB,GAEEnuB,2BAAMtC,KAAAL,MAHViH,YAKEtE,gBAAC+B,OAAD/B,UACEA,0BAAKtC,KAAAL,MAPX0xB,yBAJS4E,CAAqB3zB,iBC0BrB4zB,eAIXx2B,WAAmBC,0BACjBA,QA8FMw2B,WAAA,WACFn2B,QAAJo2B,YACEz2B,MAAA4P,OAAkBvP,QAAlBo2B,gBA/FFjvB,MAAa,CACXkR,kBAAkB,QAEpBge,aAAoBr2B,KAAAq2B,aAAAp2B,KAApBD,WACA+c,aAAoB/c,KAAA+c,aAAA9c,KAApBD,WACAqY,iBAAwBrY,KAAAqY,iBAAApY,KAAxBD,gHAGKoC,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA4C,EAAA,CACEa,YAAa7B,0BAAwBuU,OACrCpS,qBAAsBtG,KAAAL,MAAW2f,eACjCxZ,sBAAuB9F,KAAAL,MAAWwd,WAClChX,wBAAyBnG,KAAAL,MAAWkZ,uBACpCjS,UAAW5G,KAAAL,MAAWmZ,qBACtBvT,KAAMrB,uBAAqBwU,OAC3B/R,WAAY3G,KAAAmH,MAAWkR,iBACvB3S,SAAU1F,KAAKq2B,aACfzwB,UAAW5F,KAAK+c,eAElBza,EAAAC,cAACkb,EAADA,aAAA,CACEtQ,QACE7K,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAs2B,iBAAuB1Y,UAAU,OACxDtb,EAAAC,cAACkO,EAADA,OAAA,CAAQkK,QAAQ,UAAU7P,QAAS9K,KAAKm2B,YACrCn2B,KAAAL,MAHP42B,WAMEj0B,EAAAC,cAAC6W,EAADA,cAAA,CACEjD,GAAE,QAAUnW,KAAAL,MAAWy2B,wBACvB/c,WAAW,GAEX/W,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAid,mBACTW,UAAU,QAEVtb,EAAAC,cAACuzB,EAADA,SAAA,CAAUhrB,QAAS9K,KAAKqY,kBACrBrY,KAAAL,MAfTwd,eAqBFe,QAASle,KAAAL,MAAWy2B,SACpBjc,YACEna,KAAAL,MAAA62B,gBAA6Bx2B,KAAAL,MAA7B62B,gBAA0D,GAE5DpY,eAAe,EACfC,YACEre,KAAAL,MAAA82B,SACEn0B,EAAAC,cAAA,OAAK2D,UAAU,uBACb5D,EAAAC,cAAA,OACE0X,IAAKja,KAAAL,MAAW82B,SAChBvc,IAAKla,KAAAL,MAAWy2B,SAChBzzB,MAAO,MAIXL,EAAAC,cAACm0B,EAADA,aAAA,CAAc1xB,KAAM,SAGxBuZ,SAAS,kBAMTtB,mCAEJ3a,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAud,cACGld,KAAAL,MADHud,cAEGld,KAAAL,MAJRwd,yBASMmZ,iCAEJh0B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,WACTnW,KAAAL,MAAAg3B,YAAyB32B,KAAAL,MAAzBg3B,YAAkD32B,KAAAL,MAFvD42B,uBAOMF,6BACN/tB,SAAc,CACZ+P,kBAAkB,iBAUdA,iCACN/P,SAAc,CACZ+P,kBAAkB,iBAId0E,6BACNzU,SAAc,CACZ+P,kBAAkB,IAIhBrY,KAAAL,MAAJy2B,eACEz2B,MAAA8Y,SAAoBzY,KAAAL,MAApBy2B,aAtHOF,CAAqB5zB,aClBrBs0B,8JACJx0B,yBAEHE,gBAACuc,EAADvc,gBACEA,gBAACuc,aAADvc,KADFA,MAEEA,gBAACuc,aAADvc,WAAmBtC,KAAAL,MAFrB2C,qBAGEA,gBAACuc,aAADvc,UAAkBtC,KAAAL,MAHpB2C,oBAIEA,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAA62B,wBACTjZ,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAWm3B,oBACjBzqB,GAAI,UACJnG,UAAW,sBAEVlG,KAAAL,MAVPo3B,kBAaEz0B,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAg3B,uBAA6BpZ,UAAU,OAC9Dtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWs3B,mBAAoB5qB,GAAI,WAClDrM,KAAAL,MApBXu3B,gCA4BMF,uCAEJ10B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAw3B,kBACGn3B,KAAAL,MADHw3B,kBAEGn3B,KAAAL,MAJRu3B,6BASML,wCAEJv0B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,kBACTnW,KAAAL,MAAAy3B,mBACGp3B,KAAAL,MADHy3B,mBAEGp3B,KAAAL,MAJRo3B,oBAzCSH,CAAwBt0B,aCOxB+0B,eACX33B,WAAmBC,eACjBA,6GAGKyC,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAC0U,EAADA,YAAA,CAAagF,WAAW,EAAM/E,QAAS,SACrC5U,mCAAqBtC,KAArBsC,OACEA,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAA62B,wBACTjZ,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CACEC,KAAMpM,KAAAL,MAAWm3B,oBACjBzqB,GAAI,WAEHrM,KAAAL,MATPo3B,kBAYEz0B,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAg3B,uBACTpZ,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWs3B,mBAAoB5qB,GAAI,WAClDrM,KAAAL,MApBbu3B,oBA0BE50B,EAAAC,cAAC0U,EAADA,YAAA,KACGjX,KAAAL,MAAA23B,YACCh1B,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAGClB,EAAAC,cAAAq0B,GAAA,CACE9X,oBAAqB9e,KAAAL,MAAWmf,oBAChCC,mBAAoB/e,KAAAL,MAAWof,mBAC/BmY,eAAgBl3B,KAAAL,MAAWu3B,eAC3BC,kBAAmBn3B,KAAAL,MAAWw3B,kBAC9BJ,gBAAiB/2B,KAAAL,MAAWo3B,gBAC5BK,mBAAoBp3B,KAAAL,MAAWy3B,mBAC/BH,mBAAoBj3B,KAAAL,MAAWs3B,mBAC/BH,oBAAqB92B,KAAAL,MAAWm3B,qCAQpCE,uCAEJ10B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAAw3B,kBACGn3B,KAAAL,MADHw3B,kBAEGn3B,KAAAL,MAJRu3B,6BASML,wCAEJv0B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,kBACTnW,KAAAL,MAAAy3B,mBACGp3B,KAAAL,MADHy3B,mBAEGp3B,KAAAL,MAJRo3B,oBAhESM,CAAiB/0B,cNlBlB2yB,2CAAZ,KACEA,gBACAA,uBAeF,IAAasC,eAIX73B,WAAmBC,0BACjBA,QAOK63B,eAAA,SAAkBC,mBAAsBr2B,GAEzCpB,mBAAwBi1B,mBAA5ByC,WACEpvB,SAAc,CACZqvB,YAAa33B,QAAW23B,eAE1Bh4B,MAAAi4B,mBAAAH,GAAyCz3B,QAAzC23B,oBAZFxwB,MAAa,CACXwwB,WAAYh4B,EAAMgrB,eAEpB6M,eAAsBx3B,KAAAw3B,eAAAv3B,KAAtBD,gHAaKoC,yBAEHE,EAAAC,cAAA,OACE2D,UAAW,qBACX4E,QAAS9K,KAAAw3B,eAAoBx3B,KAAAL,MAApBqF,OAET1C,EAAAC,cAAC8B,EAADA,KAAA,CAAMG,aAAa,EAAMF,SAAUtE,KAAAmH,MAAWwwB,YAC5Cr1B,gBAAC+B,OAAD/B,UACEA,EAAAC,cAAA,OAAK2D,UAAU,8BACb5D,EAAAC,cAAC4xB,EAADA,MAAA,CACEpvB,KACE/E,KAAAL,MAAAk4B,WAAwB5C,mBAAxByC,OAAA,UAEI,UAGL13B,KAAAL,MATP2C,WAYEA,EAAAC,cAAA,OAAK2D,UAAW,+BACd5D,EAAAC,cAAA,OAAK2D,UAAU,4BACb5D,EAAAC,cAAA,OAAK0X,IAAKja,KAAAL,MAAW4F,KAAM2U,IAAKla,KAAAL,MAAWqF,KAAMrC,MAAO,MAE1DL,EAAAC,cAAA,OACE2D,UAAU,6CACE,4BAEXlG,KAAAL,MARLqF,MAUE1C,EAAAC,cAACiV,EAADA,KAAA,CAAMtR,UAAU,mCACblG,KAAAL,MA7Bbwa,oBAvBSod,CAAyBj1B,iBOpBzBw1B,8JACJ11B,yBAEHE,EAAAC,cAACsZ,EAADA,SAAA,CAAUxS,OAAO,EAAM7E,aAAa,GAClClC,gBAACuZ,WAADvZ,SAAetC,KAAAL,MAFnB6D,cAFSs0B,CAA0Bx1B,aCA1By1B,8JACJ31B,yBAEHE,EAAAC,cAACsZ,WAADpS,IAAA,CAAcI,GAAI,EAAGkS,GAAI,GACtB/b,KAAAL,MAFL6D,aAFSu0B,CAA8Bz1B,aCO9B01B,8JAGJ51B,yBAEHE,gCACEA,EAAAC,cAAA6P,EAAA5P,OAAAC,OAAA,GAAqBzC,KAArBL,OACE2C,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWuc,uBAAwB7P,GAAI,WACtDrM,KAAAL,MAJT2C,4BAQEA,uBAAYtC,KAAAL,MAThB6D,cAJSw0B,CAA8B11B,aCD9B21B,8JACJ71B,yBAEHE,EAAAC,cAAC0U,EAADA,YAAA,CAAaC,QAAS,SACpB5U,gBAAC6U,EAAD7U,iBACEA,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAK,MAAMgL,aAAcP,aAAWC,IACxChX,KAAAL,MAFL2C,WAIGtC,KAAAL,MAAAmX,iBACCxU,gBAACkV,EAADlV,UAAOtC,KAAAL,MAPfmX,sBAFSmhB,CAAmB31B,aCEnB41B,8JACJ91B,yBAEHE,gCACEA,mCAAqBtC,KAArBsC,OACEA,sBAFJA,OAIGtC,KAAAL,MAAA6D,SACClB,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAGClB,gBAACuc,EAADvc,gBACEA,gBAACuc,aAADvc,KADFA,MAEEA,gBAACuc,aAADvc,WACGtC,KAAAL,MAHL2C,qBAKEA,gBAACuc,aAADvc,UAAkBtC,KAAAL,MAb1Bof,yBAFSmZ,CAAqB51B,aCOrB61B,eAIXz4B,WAAmBC,0BACjBA,QAqBKy4B,qBAAA,SAAwBhC,mBAAsBh1B,KACnDkH,SAAc,CACZ+vB,cAAer4B,QAAWq4B,iBAE5B14B,MAAAi4B,mBAAAxB,GAAyCp2B,QAAzCq4B,qBAxBAlxB,MAAa,CACXkxB,aAAc14B,EAAMgrB,eAEtByN,qBAA4Bp4B,KAAAo4B,qBAAAn4B,KAA5BD,gHAGKs4B,uBACgBt4B,KAAAL,MAArBwa,YACwBna,KAAAL,MAAxByb,4BAIKmd,kCACDrqB,EAAJ,GACKnP,MAAiBiB,KAAAL,MAAW64B,uBAAjC,EAA2C,CACzCtqB,GAAQ,IADCuqB,YAGXvqB,eAUK9L,yBAEHE,EAAAC,cAACkb,EAADA,aAAA,CACES,QAASle,KAAAL,MAAWqF,KACpBmV,YAAana,KAAAu4B,iBACbtN,cACE3oB,EAAAC,cAAA,SACEwC,KAAK,WACLuK,MAAM,GACN4b,eAAgBlrB,KAAAL,MAAWgrB,SAC3B9a,SAAU7P,KAAAo4B,qBAA0Bp4B,KAAAL,MAA1BqF,QAGd8Y,eAAgB,CACdxb,EAAAC,cAACwb,EAADA,iBAAA,CAAkBlW,IAAK,IACpB,IAAA7H,KAAAL,MAAA+4B,aACCp2B,EAAAC,cAAC4xB,EAADA,MAAA,CAAOpvB,KAAK,WAAW/E,KAAAL,MADxB0f,YAFW,KAShBjB,eAAe,EACfG,SAAS,OAxDJ4Z,CAAyB71B,aCsChCq2B,GAAiB,SAAIrpB,UACzBhN,gBAAC4H,QAAD5H,iBAEIs2B,GAAmB,SAAItpB,UAAehN,gBAAC4H,QAAD5H,cAQ/Bu2B,8JACJz2B,yBAEHE,EAAAC,cAAC0U,EAADA,YAAA,KACGjX,KAAAL,MAAAm5B,UAAArxB,OAAA,EACCnF,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAUsS,GAAI,GACZzZ,uBAAYtC,KAAAL,MAFhBo5B,cAIEz2B,EAAAC,cAAC6G,OAADK,IAAA,CAAUsS,GAAI,GACZzZ,uBACGtC,KAAAL,MAAAq5B,gBAAAvxB,OAAA,EACCnF,EAAAC,cAAAwH,EAAAvH,OAAAC,OAAA,CACE8H,QAASvK,KAAAL,MAAAs5B,gBAAAvxB,IAAA,SAA+BwxB,SAAQ,CAC9C/W,KAAM,CACJC,WAAY,CAAAuW,KAEdrW,OAAQ,CACNF,WAAY,CADNwW,IAEN5qB,MAAOkrB,EAAIlrB,OAEbwU,SAAU0W,EAAI/iB,MAEhBnM,KAAMhK,KAAAL,MAAWq5B,gBACjB/uB,OACEjK,KAAAL,MAAAs5B,gBAAAxxB,OAAA,EACIzH,KAAAL,MAAAs5B,gBAAA,GADJ9iB,GAEI,IAEFnW,KAlBPL,QAqBC2C,gBAACuc,EAADvc,gBACEA,gBAACuc,aAADvc,WACGtC,KAAAL,MAFL2C,uBAIEA,gBAACuc,aAADvc,UACGtC,KAAAL,MAjCdw5B,yBAyCC72B,EAAAC,cAAAq0B,GAAA,CACE9X,oBAAqB9e,KAAAL,MAAWmf,oBAChCC,mBAAoB/e,KAAAL,MAAWof,mBAC/BmY,eAAgBl3B,KAAAL,MAAWu3B,eAC3BC,kBAAmBn3B,KAAAL,MAAWw3B,kBAC9BJ,gBAAiB/2B,KAAAL,MAAWo3B,gBAC5BK,mBAAoBp3B,KAAAL,MAAWy3B,mBAC/BH,mBAAoBj3B,KAAAL,MAAWs3B,mBAC/BH,oBAAqB92B,KAAAL,MAAWm3B,0BArD/B+B,CAAyBv2B,aCpDzB82B,8JACJh3B,yBAEHE,gCACEA,EAAAC,cAAAyE,EAAA,KACE1E,EAAAC,cAAA,QACE2D,UAAU,8BACVqT,KAAK,OACLgB,SAAUva,KAAAL,MAAW6a,cAErBlY,EAAAC,cAAA,OAAK2D,UAAU,oBACb5D,EAAAC,cAAA,OAAK2D,UAAU,WACb5D,EAAAC,cAAA,OAAK2D,UAAU,gBACb5D,uBAAYtC,KAAAL,MATtB6D,cAcElB,EAAAC,cAAA,UACEwC,KAAK,SACLmB,UAAU,kBACV4E,QAAS9K,KAAAL,MAAW6a,cAnB5B,eAFS4e,CAAsB92B,aCOtB+2B,8JAGJj3B,sBACC8xB,ECpBHn1B,WDqBDiB,KAAAL,MAAAouB,aAAA,SCtBChvB,YDwBGiB,KAAAL,MAAAouB,aAAA,UAHN,UAMI/f,EChCDjP,kBDiCKiB,KAAAL,MAARouB,kBC5BGhvB,UD8BCiP,EAAQhO,KAAAL,MAARqO,wBC5BDjP,gBAPAA,WDuCCiP,EAAQhO,KAAAL,MAARqO,0BCjCDjP,SDoCCiP,EAAQhO,KAAAL,MAARqO,oBCzCDjP,gBACAA,kBACAA,WD4CCiP,EC3CDjP,mBD+CDuD,EAAAC,cAAC4xB,EAADA,MAAA,CAAOjuB,UAAW,sCAAuCnB,KAAMmvB,GADjElmB,MA5BSqrB,CAAoC/2B,aEPpCg3B,8JAGJl3B,yBAEHE,EAAAC,cAAA,qBACc,uCACZ2D,UAAW,wCAEVlG,KAAAL,MAAA45B,UACDv5B,KAAAL,MADC+X,aAED1X,KAAAL,MAFCgY,WAGCrV,EAAAC,cAAAkV,EAAA,CACEC,YAAa1X,KAAAL,MAAW+X,YACxBC,WAAY3X,KAAAL,MAAWgY,WACvBrI,MAAOtP,KAAAL,MAAW45B,SAClB3hB,OAAQ5X,KAAAL,MAAWiY,OACnBE,eAAgB9X,KAAAL,MAAWmY,iBAG7BxV,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAC+K,EAADA,QAAA,CAASC,SAAS,EAAMF,QAAQ,IAC/BrN,KAAAL,MAlBT65B,2BAJSF,CAA0Ch3B,aCmD1Cm3B,eAIX/5B,WAAmBC,eACjBA,QACAwH,MAAa,CACXuyB,wBAAwB,QAE1BrD,aAAoBr2B,KAAAq2B,aAAAp2B,KAApBD,WACA+c,aAAoB/c,KAAA+c,aAAA9c,KAApBD,WACA25B,aAAoB35B,KAAA25B,aAAA15B,KAApBD,WACA45B,gBAAuB55B,KAAA45B,gBAAA35B,KAAvBD,WACA65B,cAAqB75B,KAAA65B,cAAA55B,KAArBD,WACA05B,uBAA8B15B,KAAA05B,uBAAAz5B,KAA9BD,gHAGKs2B,iCAEHh0B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,cACTnW,KAAAL,MAAAg3B,YAAyB32B,KAAAL,MAAzBg3B,YAAkD32B,KAAAL,MAFvD42B,uBAOKF,6BACL/tB,SAAc,CACZoxB,wBAAwB,iBAIrB3c,6BACLzU,SAAc,CACZoxB,wBAAwB,IAItB15B,KAAAL,MAAJm6B,yBACEn6B,MAAA8Y,SAAoBzY,KAAAL,MAApBm6B,iCAIGH,wBACD35B,KAAAL,MAAJm6B,yBACEn6B,MAAAo6B,SAAoB/5B,KAAAL,MAApBm6B,iCAIGD,yBACD75B,KAAAL,MAAJm6B,yBACEn6B,MAAAq6B,UAAqBh6B,KAAAL,MAArBm6B,iCAIGF,gCACLtxB,SAAc,CACZoxB,wBAAwB,IAGtB15B,KAAAL,MAAJs6B,qBACEt6B,MAAAu6B,YAAuBl6B,KAAAL,MAAvBs6B,6BAIGP,uCACLpxB,SAAc,CACZoxB,wBAAwB,iBAIrBS,oCFnIFp7B,YEqIDiB,KAAAL,MAAAy6B,2BAEAR,uBAEA7c,4BAIG3a,sBAECi4B,EF/IHt7B,YEgJDiB,KAAAL,MAAAy6B,sBACIE,EFnJHv7B,aEoJDiB,KAAAL,MAAAy6B,uBFrJCr7B,gBEsJDiB,KAAAL,MAAAy6B,uBFpJCr7B,cEqJDiB,KAAAL,MAAAy6B,uBFxJCr7B,cEyJDiB,KAAAL,MAAAy6B,6BAKA93B,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAA4C,EAAA,CACEa,YACEq0B,EACIl2B,0BADOo2B,QAEPp2B,0BAAwBuU,OAE9BpS,qBAAsBtG,KAAAL,MAAW2f,eACjCxZ,sBACEu0B,EAAcr6B,KAAAL,MAAH66B,cAA8Bx6B,KAAAL,MAAWwd,WAEtDhX,wBACEk0B,EACIr6B,KAAAL,MADO86B,0BAEPz6B,KAAAL,MAAWkZ,uBAEjBjS,UACEyzB,EACIr6B,KAAAL,MADO+6B,wBAEP16B,KAAAL,MAAWmZ,qBAEjBvT,KACE80B,EACIn2B,uBADOq2B,QAEPr2B,uBAAqBwU,OAE3B/R,WAAY3G,KAAAmH,MAAWuyB,uBACvBh0B,SAAU1F,KAAKq2B,aACfzwB,UAAW5F,KAAK+c,eAElBza,EAAAC,cAACkb,EAADA,aAAA,CACEtQ,QACE7K,EAAAC,cAAA,OAAK2D,UAAU,cACZo0B,EACCh4B,EAAAC,cAAA+2B,GAAA,CACE1hB,OAAQ5X,KAAAL,MAAWg7B,iBACnBpB,SAAUv5B,KAAAL,MAAWi7B,mBACrBljB,YAAa1X,KAAAL,MAAWk7B,sBACxBljB,WAAY3X,KAAAL,MAAWm7B,qBACvBtB,sBAAuBx5B,KAAAL,MAAW65B,sBAClC1hB,eAAgB9X,KAAAL,MAAWo7B,wBAG7Bz4B,EAAAC,cAAA82B,GAAA,CACEtL,aAAc/tB,KAAAL,MAAWy6B,sBACzBvF,cAAe70B,KAAAL,MAAWk1B,cAC1BC,gBAAiB90B,KAAAL,MAAWq7B,UAC5BjG,UAAW/0B,KAAAL,MAAWo1B,YAG1BzyB,EAAAC,cAACmb,EAADA,eAAA,CAAgBC,QAAS3d,KAAAs2B,iBAAuB1Y,UAAU,OACxDtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAWkjB,gBAAiBxW,GAAI,WAC/CrM,KAAAL,MApBP42B,WAuBEj0B,EAAAC,cAAC6W,EAADA,cAAA,CACEjD,GAAE,kBACAnW,KAAAL,MAAWm6B,kCAEbzgB,WAAW,GAEX/W,EAAAC,cAACuzB,EAADA,SAAA,CAAUhrB,QAAS9K,KAAK05B,wBACrB15B,KAAAL,MAPLwd,YASE7a,EAAAC,cAACuzB,EAADA,SAAA,CAAUhrB,QAAS9K,KAAK25B,cACrB35B,KAAAL,MAVLs7B,YAYE34B,EAAAC,cAACuzB,EAADA,SAAA,CACEhrB,QACEuvB,KACIr6B,KADJq6B,gBAEIr6B,KAAK65B,eAGVQ,KACGr6B,KAAAL,MADH06B,cAEGr6B,KAAAL,MA5CVu7B,eAiDFhd,QAASle,KAAAL,MAAWm6B,mBACpB3f,YACEna,KAAAL,MAAAw7B,0BACIn7B,KAAAL,MADJw7B,0BAEI,GAEN/c,eAAe,EACfC,YACEre,KAAAL,MAAA4F,KACEjD,EAAAC,cAAA,OAAK2D,UAAU,uBACb5D,EAAAC,cAAA,OACE0X,IAAKja,KAAAL,MAAW4F,KAChB2U,IAAKla,KAAAL,MAAWm6B,mBAChBn3B,MAAO,MAIXL,EAAAC,cAACm0B,EAADA,aAAA,CAAc1xB,KAAM,aAGxBuZ,SAAS,GAERve,KAAAL,MAAA6D,SACClB,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAxGP,UA5FSi2B,CAA+Bn3B,aChC/B84B,eAGX17B,WAAmBC,eACjBA,QACAshB,aAAoBjhB,KAAAihB,aAAAhhB,KAApBD,gHAGKq7B,iDAEH/4B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAA27B,gCACGt7B,KAAAL,MADH27B,gCAEGt7B,KAAAL,MAJR47B,2CASKC,iDAEHl5B,EAAAC,cAACuX,EAADA,QAAA,CAAS3D,GAAG,aACTnW,KAAAL,MAAA87B,cACGz7B,KAAAL,MADH87B,cAEGz7B,KAAAL,MAJRkiB,yBASKZ,6BACLthB,MAAAyhB,SAAA,iBAGKhf,yBAEHE,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,EAAAC,cAAAsU,EAAA,CACEjQ,UAAW5G,KAAAL,MAAWiH,UACtBkQ,gBAAiB9W,KAAAL,MAAWmX,kBAE9BxU,gBAAC2U,EAAD3U,iBACEA,EAAAC,cAAA6P,EAAA5P,OAAAC,OAAA,GAAqBzC,KAArBL,OACE2C,EAAAC,cAAA,OAAK2D,UAAU,cACb5D,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAw7B,iCACT5d,UAAU,OAEVtb,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACRnO,GAAIxM,KAAAL,MAAWkiB,WACf/W,QAAS9K,KAAKihB,cAEbjhB,KAAAL,MAVPkiB,aAaEvf,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAq7B,iCACTzd,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAW+7B,eAAgBrvB,GAAI,WAC9CrM,KAAAL,MApBX2C,iCAyBGtC,KAAAL,MAAA23B,YACCh1B,gBAACsc,EAADtc,cAAWtC,KAAAL,MADZ6D,UAGClB,EAAAC,cAACsc,EAADA,WAAA,KACEvc,gBAACuc,aAADvc,KADF,MAEEA,gBAACuc,aAADvc,WACGtC,KAAAL,MAHLmf,qBAKExc,gBAACuc,aAADvc,UAAkBtC,KAAAL,MALpBof,oBAMEzc,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAACmb,EAADA,eAAA,CACEC,QAAS3d,KAAAq7B,iCACTzd,UAAU,OAEVtb,EAAAC,cAAA4J,EAAA,CAAYC,KAAMpM,KAAAL,MAAW+7B,eAAgBrvB,GAAI,WAC9CrM,KAAAL,MA9CjB47B,sCAjCSH,CAA2B94B,aClB3Bq5B,eAGXj8B,WAAYC,eACVA,6GAEKyC,yBAEHE,gCACGtC,KAAAL,MAAAi8B,aACCt5B,gBAACkH,EAADlH,SACEA,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,IACPvH,EAAAC,cAACmY,EAADA,MAAA,CAAO3V,KAAM,WACXzC,8BAAStC,KAAAL,MADXk8B,gBAAA,OAEG77B,KAAAL,MANX2C,mBAWEA,EAAAC,cAACiH,EAADA,IAAA,KACElH,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,EAAG+X,SAAU,GACnB5hB,KAAAL,MAbP2C,WAgBEA,gBAACkH,EAADlH,SACEA,EAAAC,cAACkH,EAADA,IAAA,CAAKI,GAAI,EAAG+X,SAAU,GACpBtf,gCACEA,EAAAC,cAACkO,EAADA,OAAA,CACEkK,QAAQ,UACR7P,QAAS9K,KAAAL,MAAWumB,OACpBrd,SAAU7I,KAAAL,MAAW6qB,aAEpBxqB,KAAAL,MANL2C,wBAQEA,EAAAC,cAACkO,EAADA,OAAA,CACE3F,QAAS9K,KAAAL,MAAWyU,SACpBvL,SAAU7I,KAAAL,MAAWm8B,eAEpB97B,KAAAL,MA/Bbo8B,6BAPSJ,CAA6Br5B,aCH7B05B,eACXt8B,WAAYC,eACVA,6GAEKyC,yBAEHE,EAAAC,cAACkb,EAADA,aAAA,CACE5V,IAAK7H,KAAAL,MAAWwW,GAChBiI,eAAe,EACf6d,aAAcj8B,KAAAL,MAAWysB,SACzBlO,QAASle,KAAAL,MAAWqF,KACpBqZ,YACE/b,EAAAC,cAAA,OACE2D,UAAW,kCACX+T,IAAKja,KAAAL,MAAW4F,OAGpB4U,YAAa,GACb2D,eAAgB,EACb9d,KAAAL,MAADu8B,YACE55B,EAAAC,cAAA,KAAGsF,IAAK,GAAI7H,KAAAL,MAFAw8B,yBAMfn8B,KAAAL,MAnBL6D,aALSw4B,CAAyB15B,sFC8CF,SAEhCU,WAEF+W,WACArU,YACA02B,aACAC,WACAC,WACAC,eACAC,aACAC,aACAC,gEACa,+BAIXp6B,EAAAC,cAAA,OACE2D,UAAWe,EAAU,0DAEnB,eACgB,KAJpBqb,EASEhgB,EAAAC,cAAA,OAAK2D,UAAU,sEACb5D,EAAAC,cAAA,OACE2D,UACE,qEAGF5D,EAAAC,cAAA,OAAK2D,UAAU,sCAfrB6T,KAkBEzX,EAAAC,cAAA,OAAK2D,UAAU,sDACb5D,EAAAC,cAAA4J,EAAA,CACErB,QAASsxB,EACThwB,KAAMmwB,EACNr2B,UAAW,kBAEX5D,EAAAC,cAAA,KAAG2D,UAAU,qBANjB,SAQGy2B,GACCr6B,EAAAC,cAAA,OAAK2D,UAAW,0BATpBy2B,GAWEr6B,EAAAC,cAAA4J,EAAA,CACErB,QAASuxB,EACTjwB,KAAMowB,EACNnwB,GAAI,UACJnG,UAAW,iBACX2C,SAAU4zB,GAAiBC,GAE1BD,EAAgBn6B,EAAAC,cAAA6K,EAAA,CAAQd,KAAM,KAAMe,QAAQ,IAP/C,KAQGuvB,EAAU,OAGTt6B,EAAAC,cAAAD,EAAA0I,SAAA,aACO1I,EAAAC,cAAA,KAAG2D,UAAU,wBAIxB5D,EAAAC,cAAA4J,EAAA,CACErB,QAASpF,EACT0G,KAAMkwB,EACNp2B,UAAW,oBAjDnB,oICvE6B,SAAIvG,UACjC2C,EAAAC,cAAC8B,EAADA,KAAA,CAAMG,aAAa,GACjBlC,gBAAC+B,OAAD/B,UACEA,EAAAC,cAACsc,EAADA,WAAA,KACEvc,EAAAC,cAAAqnB,EAAApnB,OAAAC,OAAA,CACEG,OAAQ,IACRD,MAAO,IACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,WALjBpqB,GAQE2C,EAAAC,cAAA,UAAQ2yB,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,sNCT3B,SAEjCI,WAAUN,uBACZJ,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,IACRD,MAAOA,EACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAOA,GAEPJ,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE7DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE9DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,2LCxBhC,SAE9BI,WAAUN,uBACZJ,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,IACRD,MAAOA,EACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAOA,GAEPJ,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE7DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE9DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,qLCpBpC,SAAgDI,WAE5E65B,oBACAC,4BACA/H,oBACAF,cACAC,yCAEAxyB,EAAAC,cAAC6G,OAADI,IAAA,KACElH,EAAAC,cAAC6G,OAADK,IAAA,CAAU+L,GAAI,GADhB+b,GAEEjvB,EAAAC,cAAC6G,OAADK,IAAA,CAAU+L,GAAI,GACZlT,EAAAC,cAAA0xB,GAAA,CACElG,aAAc8O,EACd9H,UAAWA,EACXF,cAAeA,EACfC,gBAAiBA,KAGrBxyB,EAAAC,cAAC6G,OAADK,IAAA,CAAU+L,GAAI,GAAI,IAAAkb,KAAAoM,GAVpBlM,4CCnBgC,SAAIjxB,UACpC2C,EAAAC,cAAAqnB,EAAApnB,OAAAC,OAAA,CACEG,OAAQ,IACRD,MAAO,IACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,WALjBpqB,GAQE2C,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACpDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACpDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAEpDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACpDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAErDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACpDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAErDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAErDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,uGCpB7B,SAEzBI,WAAUN,uBACZJ,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,IACRD,MAAOA,EACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAOA,GAEPJ,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE7DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE9DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,wGC9BjC,SAAIjD,UACnC2C,EAAAC,cAAC8B,EAADA,KAAA,CAAMG,aAAa,GACjBlC,gBAAC+B,OAAD/B,UACEA,EAAAC,cAACsc,EAADA,WAAA,KACEvc,EAAAC,cAAAqnB,EAAApnB,OAAAC,OAAA,CACEG,OAAQ,IACRD,MAAO,IACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,WALjBpqB,GAQE2C,EAAAC,cAAA,UAAQ2yB,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACrDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,2ICT/B,SAE7BI,WAAUN,uBACZJ,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,IACRD,MAAOA,EACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAOA,GAEPJ,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE7DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE9DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,6BCuBpC,SAE1BI,WAEF+W,WACArU,YACA02B,aACAC,WACAU,WACAT,kBACAC,eACAC,aACAC,aACAC,uEACa,GAGXp6B,EAAAC,cAAA,OACE2D,UAAWe,EAAU,qCAAuC,eAC5C,KAFlBqb,EAMEhgB,EAAAC,cAAA,OAAK2D,UAAU,2CACb5D,EAAAC,cAAA,OACE2D,UACE,+DAGF5D,EAAAC,cAAA,OAAK2D,UAAU,gCAZrB6T,KAeEzX,EAAAC,cAAA,OAAK2D,UAAU,gDACb5D,EAAAC,cAAA4J,EAAA,CACErB,QAASsxB,EACThwB,KAAMmwB,EACNr2B,UAAW,kBAEX5D,EAAAC,cAAA,KAAG2D,UAAU,qBANjB,SAQE5D,EAAAC,cAAA4J,EAAA,CACErB,QAAS8xB,EAAUG,EAAmBV,EACtCjwB,KAAMowB,EACNnwB,GAAI,UACJnG,UAAW,iBACX2C,SAAU4zB,GAAiBC,GAE1BD,EAAgBn6B,EAAAC,cAAA6K,EAAA,CAAQd,KAAM,KAAMe,QAAQ,IAP/C,KAQGuvB,EAAU,OAGTt6B,EAAAC,cAAAD,EAAA0I,SAAA,aACO1I,EAAAC,cAAA,KAAG2D,UAAU,wBAIxB5D,EAAAC,cAAA4J,EAAA,CACErB,QAASpF,EACT0G,KAAMkwB,EACNp2B,UAAW,oBA3CnB,uIC/DqC,SAEnClD,WAAUN,uBACZJ,EAAAC,cAAAqnB,EAAA,CACEhnB,OAAQ,IACRD,MAAOA,EACPknB,MAAO,EACPC,aAAa,UACbC,eAAe,UACfrnB,MAAOA,GAEPJ,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACtDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE7DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,OAE9DN,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,UAAQ2yB,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B9yB,EAAAC,cAAA,QAAMynB,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,MAAMC,OAAO,OACvDN,EAAAC,cAAA,QAAMynB,EAAGrnB,EAAQ,IAAKsnB,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIxnB,MAAM,KAAKC,OAAO,gcCzBxB,SAEtCI,WAAY0B,yBACdpC,EAAAC,cAAA,OAAK2D,UAAU,WACb5D,EAAAC,cAAA,OAAK2D,UAAU,iBADjBxB,GAEEpC,EAAAC,cAAA,OAAK2D,UAAU,gBAFjB6T,ujBCuDkC,SAEhC/W,WAEFmX,UACA6iB,gBACAjjB,YACAigB,YACAt0B,cACAwgB,aACA+W,WACAX,aACA/O,eACA2P,gBACAC,kBACAC,mBACAC,8CAGE/6B,EAAAC,cAAA,OAAK2D,UAAW,6BACd5D,EAAAC,cAAA,OAAK2D,UAAW,qCACd5D,EAAAC,cAAC0U,EAADA,YAAA,CAAaC,QAAS,SACpB5U,EAAAC,cAACoK,EAADA,MAAA,CAAOC,OAAQ,MACbtK,gBAACuK,EAADvK,eACEA,EAAAC,cAAC4U,EAADA,YAAA,KACE7U,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAM,MAAOgL,aAAcP,aAAWC,IAD/CtS,GAIEpC,gBAACkV,EAADlV,UANN6X,KASE7X,EAAAC,cAACsK,EAADA,UAAA,MACIyvB,GAAD52B,IACCpD,EAAAC,cAAA4J,EAAA,CAAYrB,QAASpF,EAAU0G,KAAMkwB,GACnCh6B,EAAAC,cAAA,KAAG2D,UAAW,qBAHpB,YAMI+2B,GAAD/W,IACC5jB,EAAAC,cAAA4J,EAAA,CACErB,QAASob,EACT9Z,KAAM6wB,EACNp0B,SAAUq0B,GAAiBC,GAE1BD,EAAgB56B,EAAAC,cAAA6K,EAAA,CAAQd,KAAM,KAAMe,QAAQ,IAL/C,KAPJ,SAgBIkgB,GAADyM,IACC13B,EAAAC,cAAA4J,EAAA,CACErB,QAASkvB,EACT5tB,KAAMmhB,EACNlhB,GAAI,UACJxD,SAAUu0B,GAAoBC,GAjC5C,eA0CE/6B,EAAAC,cAAA,OAAK2D,UAAW,mCACd5D,EAAAC,cAAA,OAAK2D,UAAW,2CACd5D,EAAAC,cAAA,OAAK2D,UAAW,2CAFpB82B,IAME16B,EAAAC,cAAA,OAAK2D,UAAW,2CACd5D,EAAAC,cAAA,OAAK2D,UAAW,2CAlDxB6T,8IC1BkC,SAEhC/W,WAEFg6B,WACAjjB,YACArU,YACA02B,aACAC,WACAC,WACAC,eACAC,aACAC,aACAC,uEACa,GAGXp6B,EAAAC,cAAA,OACE2D,UAAWe,EAAU,0DAEnB,eACgB,KAJpBqb,EASEhgB,EAAAC,cAAA,OAAK2D,UAAU,sEACb5D,EAAAC,cAAA,OAAK2D,UAAU,qBADjB82B,GAEE16B,EAAAC,cAAA,OACE2D,UACE,qEAGF5D,EAAAC,cAAA,OAAK2D,UAAU,sCAhBrB6T,KAmBEzX,EAAAC,cAAA,OAAK2D,UAAU,sDACb5D,EAAAC,cAAA4J,EAAA,CACErB,QAASsxB,EACThwB,KAAMmwB,EACNr2B,UAAW,kBAEX5D,EAAAC,cAAA,KAAG2D,UAAU,qBANjB,SAQE5D,EAAAC,cAAA4J,EAAA,CACErB,QAASuxB,EACTjwB,KAAMowB,EACNnwB,GAAI,UACJnG,UAAW,iBACX2C,SAAU4zB,GAAiBC,GAE1BD,EAAgBn6B,EAAAC,cAAA6K,EAAA,CAAQd,KAAM,KAAMe,QAAQ,IAP/C,KAQGuvB,EAAU,OAGTt6B,EAAAC,cAAAD,EAAA0I,SAAA,aACO1I,EAAAC,cAAA,KAAG2D,UAAU,wBAIxB5D,EAAAC,cAAA4J,EAAA,CACErB,QAASpF,EACT0G,KAAMkwB,EACNp2B,UAAW,oBA/CnB,+H7C1CqC,SAEnClD,2CAEO,WAETmwB,cACAF,gBACA9Y,mCAEA7X,EAAAC,cAAA2wB,GAAA,CACE3tB,KAAMA,EACN0J,OAAQA,EACRkkB,YAAaA,EACbF,YAAaA,GAEb3wB,EAAAC,cAAAqxB,GAAA,CAA4B3kB,OAAQA,GAApC,SACGjM,WAAUswB,oCACThxB,gCACEA,uBADFA,GAEEA,uBAFFA,0C8CRoC,SAExCU,WAEFmwB,cACA5tB,gDACS,WAETP,gBACAmc,SACAuS,2BAEApxB,EAAAC,cAAA2wB,GAAA,CACE3tB,KAAMA,EACN0J,OAAQA,EACRkkB,YAAaA,EACbF,YAAaA,GAEb3wB,EAAAC,cAAAqxB,GAAA,CAA4B3kB,OAAQA,GAApC,SACGjM,WAAUuwB,8BACTjxB,EAAAC,cAAAD,EAAA0I,SAAA,KACE1I,uBADFsE,GAEEtE,EAAAC,cAAAgxB,EAAA,CACEI,cAAe,QACf3uB,KAAMA,EACNwuB,gBAAiB,UACjBrS,OAAQA,EACRsS,kBAAmB,aACnBC,SAAUA,iSC7DqB,SAEvC1wB,WAAoB8T,oBAAiBwmB,qCAGrCh7B,EAAAC,cAACqc,WAADzK,KAAA,CACE+J,QAASqT,EACTpkB,QAAS7K,EAAAC,cAAA4J,EAAA,CAAYrB,QAJZ,kBAASyyB,kBAIT,oBACTpjB,YAAarD,EACbyH,SAAS,2FCGO,SAAyCvb,WAE7Dw6B,eACAC,WACAC,gBACAC,aACAC,mBACAC,yBACAC,uBACAt6B,8BAEMu6B,EAAcJ,EAAcC,EAAlCC,IAIuCv7B,iBAAhC07B,OAAYC,cAIjB37B,EAAAC,cAACuJ,EAADoyB,SAAA,CACE5uB,MAAO,gBAJS,SAAI6uB,UAAWF,EAAgBE,MAQ/C77B,EAAAC,cAAC67B,EAADA,KAAA,CACE9b,OACEhgB,EAAAC,cAAC87B,EAADA,WAAA,CACEC,KAAMC,EACNC,UAAW,CAAEpyB,KAAMsxB,GACnBe,QACEn8B,EAAAC,cAAAD,EAAA0I,SAAA,KAEI1I,EAAAC,cAAAiI,EAAA,CACEtE,UAAU,oBACVpC,QAAQ,EACRiH,iBAAgB,WACd+yB,OANRN,GAaFkB,eAAe,EACfC,UAAWhB,EACXI,YAAaA,IAGjBf,QACE16B,EAAAC,cAACq8B,EAADA,YAAA,CACEC,IACEv8B,gBAACw8B,EAADx8B,SACEA,gBAACy8B,EAADz8B,aADFA,IAIFq8B,UAAWhB,IAGfK,WAAYA,GAxClBx6B,wHCjCiB,SAA0CR,mJAExDrD,oBAEH2C,gBAACw8B,EAADx8B,mBAAK08B,QAAQ,4BAAb18B,oBzHCqB,SAA8CU,WAEnEwJ,oJACG7M,cACC2C,iCAAW0L,MAAOA,EAAOxB,GAAIA,GAA7BlK,kB0HDiB,SAA8CU,WAEnEi8B,kDACQ,WAER7O,YACA1rB,2CACW,gDACK,GAEhBpC,EAAAC,cAAA,MACE2D,WAAcg5B,EAAK,qBAA0B,uBAC3ChyB,EAAQ,SAAc,SACpB+xB,EAAU,WAAgB,IAC9Bn0B,QAASA,GAETxI,yBACEA,EAAAC,cAAA,QAAM2D,UAAS,kBAAmBg5B,EAAK,OAAY,eADrD58B,GAIEA,EAAAC,cAAA,QAAM2D,UAAS,kBAAmBg5B,EAAK,OAAY,cAJrD58B,IAOG48B,GACCC,EAAAz3B,IAAA,SAAa03B,EAAAh3B,GAAA,OACX9F,EAAAC,cAAA,QACE2D,UAAS,iCACPkC,eAAmC,IAErCP,IAAKO,GAJPg3B,MAULF,MACC58B,0BACG68B,EAAAz3B,IAAA,SAAa03B,EAAAh3B,GAAA,OACZ9F,EAAAC,cAAA,MACE2D,UAAS,+BACPkC,eAAmC,YAErCP,IAAKO,GAEL9F,yBANF88B,oEC1CiB,SAAkDp8B,WAE3E8T,kBACAuoB,oBACAC,+CAEAh9B,EAAAC,cAAC0U,EAADA,YAAA,CAAaC,QAAS,SACpB5U,EAAAC,cAAC4U,EAADA,YAAA,KACE7U,EAAAC,cAAC6U,EAADA,MAAA,CAAO9K,KAAM,MAAOgL,aAAcP,aAAWC,IAD/CyR,GAIEnmB,EAAAC,cAACiV,EAADA,KAAA,CAAM9N,wBAAyB,CAAEC,OAAQmN,KACzCxU,gBAACkV,EAADlV,kBANJg9B,qBCVuB,SAAgDt8B,2BAEnEV,gBAACsc,EAADtc,+DCD2B,SAE7BU,mJAAgBiL,oBAClB3L,gBAAC2U,EAAD3U,iBACEA,mCADFA,2CCDF,SAAAU,WAEE4rB,gBACA2Q,YACAC,4BAGEl9B,gBAAC6U,EAAD7U,iBACEA,EAAAC,cAACk9B,EAADA,SAAA,CAAU50B,UAAU,MAClBvI,EAAAC,cAACm9B,EAADA,aAAA,CAAc70B,UAAU,MAAxBlH,EADF,KAEErB,EAAAC,cAACm9B,EAADA,aAAA,CAAc70B,UAAU,MAF1B+jB,GAGEtsB,EAAAC,cAACm9B,EAADA,aAAA,CAAc70B,UAAU,MAH1B,aAIEvI,EAAAC,cAACm9B,EAADA,aAAA,CAAc70B,UAAU,MAJ1B00B,GAKEj9B,EAAAC,cAACm9B,EAADA,aAAA,CAAc70B,UAAU,MAL1B,cAMEvI,EAAAC,cAACm9B,EAADA,aAAA,CAAc70B,UAAU,MAR9B20B,0GxIkB8B,SAAIlwB,UAClChN,gBAAC4H,QAAD5H,qCAE4B,SAAIgN,UAChChN,gBAAC4H,QAAD5H,yMyIrB6B,SAAuCU,WAEpEsoB,cACAqU,aACAC,aACAC,qBACAC,oBACA56B,2BACA66B,sBAE0C3uB,YAAQ,GAA3C4uB,OAAeC,cAGpB39B,uBACEA,EAAAC,cAACsc,EAADA,WAAA,KACEvc,EAAAC,cAACsc,aAAD/Z,KAAA,CAAiBE,KAAM,mBACvB1C,gBAACuc,aAADvc,WAFFsE,GAGEtE,gBAACuc,aAADvc,UAHFgpB,GAIEhpB,gBAACuc,aAADvc,UAJFq9B,GAKEr9B,EAAAC,cAACsc,aAADG,OAAA,KACE1c,EAAAC,cAAA4J,EAAA,CAAYC,KAAM,IAAKC,GAAI,UAAWC,KAAM,MANhDszB,IAUEt9B,EAAAC,cAACsc,aAADG,OAAA,CAAmB0G,WAAW,GAC3BxgB,GACC5C,EAAAC,cAAA4J,EAAA,CAAYrB,QAfD,kBAASm1B,GAAgBD,KAaxCF,GAMEx9B,EAAAC,cAAA,KACE2D,UAAW,kBACXkG,KACE,4GAnBRyzB,IAyBGG,MACC19B,EAAAC,cAACsc,aAADqhB,KAAA,CAAiBx9B,MAAO,CAAEy9B,UAAW,SACnC79B,gBAACkV,EAADlV,UACG4C,EADH5C,UACiB4C,EAFnB7D,SAIG0+B,GAAaz9B,2BAAMy9B,EAhC9BK,8EC3BcC,EAAmBr9B,WAAQs9B,sBAClCC,UAAaD,EAAbC,OAA4BA,SAAYD,EAAxCC,cAEHA,UAAaD,EAAbC,gBAFJ,KCQKxhC,IAAMyhC,EAAkB,SAE3B7gC,UACF2C,EAAAC,cAACuN,EAADA,UAAA,CACEC,UAAWpQ,QAAYqF,KACvBgL,gBAAiBqwB,EAAkB1gC,IAEnC2C,gBAACm+B,EAADn+B,kBAAe3C,WAJjB+gC,aAKG/gC,sBACC2C,EAAAC,cAACk+B,EAADA,aAAA,KACEn+B,EAAAC,cAACo+B,EAADA,eAAA,CAAgB5mB,QAASpa,WAAeihC,aAG5Ct+B,EAAAC,cAAC2N,EAADA,YAAA1N,OAAAC,OAAA,GACM9C,WAAekhC,gBACflhC,EAAM2gC,qBACG3gC,QAAYqF,KACzB6D,SAAUlJ,qBAA2BA,WAAekJ,SACpD4G,YAAa9P,WAAe8P,YAC5B1K,KAAMpF,QAAc,OACpBkQ,SAAUlQ,QAAYkQ,SACtBnL,MAAO/E,WAAemhC,eAExBx+B,gBAACiO,EAADjO,eACG3C,WADH2C,YAEG3C,cAAkBA,QAtBvBqF,SCCKjG,IAAMgiC,EAAmB,SAE5BphC,OACIqhC,EACJrhC,4BAAkCA,2BADpCoJ,WAEuCpJ,EAAM2gC,MAArCzwB,aAAqBywB,qJACvBvuB,EAAY,SAAI3Q,MACpB4/B,EAAgB,KACRC,GAZZC,EAYyC9/B,EAAnC+/B,cAXGC,WAAWF,EAAXE,8BAAuCC,UAAUA,EAAO/xB,SAY3D3P,qBAAyBA,QAAzBA,aAEAkQ,KAfN,IAAAqxB,UAmBI5+B,EAAAC,cAACuN,EAADA,UAAA,CACEC,UAAWuwB,EAAMt7B,KACjBgL,gBAAiBqwB,EAAkB1gC,IAEnC2C,gBAACm+B,EAADn+B,kBAAe3C,WAJjB+gC,aAKG/gC,sBACC2C,EAAAC,cAACk+B,EAADA,aAAA,KACEn+B,EAAAC,cAACo+B,EAADA,eAAA,CAAgB5mB,QAASpa,WAAeihC,aAG5Ct+B,EAAAC,cAAC2N,EAADA,YAAA1N,OAAAC,OAAA,GACM9C,WAAekhC,gBACflhC,EAAM2gC,OACVzwB,SAAUkC,EACVuvB,OAAQvvB,gBACKpS,QAAYqF,KACzB6D,SAAUlJ,qBAA2BA,WAAekJ,SACpDsH,eAAe,SACfzL,MAAO/E,WAAemhC,cAErBnhC,iBACCA,EAAA6iB,SAAA+e,KAAA75B,IAAA,SAAyB85B,UACvBl/B,EAAAC,cAAA,UAAQsF,IAAK25B,EAAIlyB,MAAOA,MAAOkyB,EAAIlyB,OAChCkyB,EADHxzB,UAKN1L,gBAACiO,EAADjO,eACG3C,WADH2C,YAEG3C,cAAkBA,QA9BzBqF,SClBWy8B,EAAqB,SAE9B9hC,UACF2C,EAAAC,cAACuN,EAADA,UAAA,CACEC,UAAWpQ,QAAYqF,KACvBgL,gBAAiBqwB,EAAkB1gC,IAEnC2C,gBAACm+B,EAADn+B,kBAAe3C,WAJjB+gC,aAKG/gC,sBACC2C,EAAAC,cAACk+B,EAADA,aAAA,KACEn+B,EAAAC,cAACo+B,EAADA,eAAA,CAAgB5mB,QAASpa,WAAeihC,aAG5Ct+B,EAAAC,cAAC2N,EAADA,YAAA1N,OAAAC,OAAA,GACM9C,WAAekhC,gBACflhC,EAAM2gC,qBACG3gC,QAAYqF,KACzB6D,SAAUlJ,qBAA2BA,WAAekJ,SACpDsH,eAAe,WACfzL,MAAO/E,WAAemhC,eAExBx+B,gBAACiO,EAADjO,eACG3C,WADH2C,YAEG3C,cAAkBA,QApBvBqF,SCJW08B,EAAqB,SAE9B/hC,UACF2C,EAAAC,cAACuN,EAADA,UAAA,CACEC,UAAWpQ,QAAYqF,KACvBgL,gBAAiBqwB,EAAkB1gC,IAEnC2C,EAAAC,cAACo/B,EAADA,SAAAn/B,OAAAC,OAAA,GACM9C,WAAekhC,gBACflhC,EAAM2gC,OACVnqB,GAAIxW,QAAYqF,KAChBgmB,QAASrrB,QAAY2P,oBACR3P,QAAYqF,KACzB6D,SAAUlJ,qBAA2BA,WAAekJ,SACpDnE,MAAO/E,WAAemhC,cAErBnhC,WATH+gC,YAUG/gC,sBACC2C,EAAAC,cAACo+B,EAADA,eAAA,CACEz6B,UAAW,eACX6T,QAASpa,WAAeihC,aAI9Bt+B,gBAACiO,EAADjO,eACG3C,WADH2C,YAEG3C,cAAkBA,QAvBvBqF,SCVW48B,EAAmB,SAE5BjiC,UACF2C,EAAAC,cAAA,WACED,EAAAC,cAAA,QAAAC,OAAAC,OAAA,GACM9C,WAAekhC,gBACflhC,EAAM2gC,OACVv7B,KAAMpF,EAAMoF,KACZoR,GAAIxW,EAAMqF,mBACGrF,EAAMqF,QAEpBrF,eAAmBA,QAAnBA,OACCA,cAAkBA,QADnBA,OAEG2C,EAAAC,cAAA,OAAK2D,UAAU,SAASvG,cAAkBA,QAVhDqF,SCYI68B,EAAY,CAChB,CACE7zB,MADF,eAEEsB,MAAO,GAET,CACEtB,MADF,UAEEsB,MAAO,KAET,CACEtB,MADF,UAEEsB,MAAO,KAET,CACEtB,MADF,QAEEsB,MAAO,MAET,CACEtB,MADF,OAEEsB,MAAO,QAQX,SAAAwyB,EAAA3R,EAAA7gB,UACSA,EAAQ6gB,EAAf7gB,MAOF,IAAayyB,cAKXriC,WAAYC,0BACVA,QAFMqiC,gBAAAv7B,MAIAmB,EACJi6B,qBAAoBI,WAAOjiC,oBAAyBiiC,EAAzBjiC,OAAF,KAD3B,EAGMmwB,EAAW0R,MAAoBA,EAAUA,SAA/C,QACA16B,MAAa,UACXgpB,QAEF+R,eAAsBliC,KAAAkiC,eAAAjiC,KAAtBD,WACA+R,aAAoB/R,KAAA+R,aAAA9R,KAApBD,WACAmiC,WAAkBniC,KAAAmiC,WAAAliC,KAAlBD,WACAoiC,gBAAuBpiC,KAAAoiC,gBAAAniC,KAAvBD,gHAEKoiC,yBAAep/B,QACpBg/B,WAAAh/B,eAEKk/B,wBAAcnM,EAAA30B,OACbihC,EACJR,gBAAe1R,UAAYA,UAAmB4F,KAAa8L,EAD7D,QAEAv5B,SAAc,CACZ6nB,SAAUkS,SAEZ1iC,MAAA4gC,KAAA+B,cACEtiC,KAAAL,MAAA2gC,MADFt7B,KAEE88B,EAAcO,EAAcriC,KAAAgiC,WAF9BO,gBAAA,gBAMKxwB,sBAAY3Q,QACjBzB,MAAA4gC,KAAA+B,cACEtiC,KAAAL,MAAA2gC,MADFt7B,KAEE88B,EAAe9hC,KAAAmH,MAADgpB,SAAsB/uB,SAFtCmhC,gBAAA,gBAMKJ,oBAAU/gC,QACfzB,MAAA4gC,KAAA+B,cACEtiC,KAAAL,MAAA2gC,MADFt7B,KAEE88B,EAAe9hC,KAAAmH,MAADgpB,SAAsB/uB,SAFtCmhC,gBAAA,gBAMKngC,yBAEHE,EAAAC,cAACuN,EAADA,UAAA,CACEC,UAAW/P,KAAAL,MAAA2gC,MAAiBt7B,KAC5BgL,gBAAiBqwB,EAAmBrgC,KAADL,QAEnC2C,gBAACm+B,EAADn+B,kBAAetC,KAAAL,MAAA6iB,SAJjBke,aAKG1gC,KAAAL,MAAA6iB,SAAAoe,WACCt+B,EAAAC,cAACk+B,EAADA,aAAA,KACEn+B,EAAAC,cAACo+B,EAADA,eAAA,CAAgB5mB,QAAS/Z,KAAAL,MAAA6iB,SAAoBoe,aAGjDt+B,EAAAC,cAACigC,OAADhyB,WAAA,KACElO,EAAAC,cAACigC,OAADtyB,YAAA1N,OAAAC,OAAA,CACE2nB,IAAK,GACDpqB,KAAAL,MAAA6iB,SAAoBqe,+BACX7gC,KAAAL,MAAA2gC,MAAiBt7B,KAC9BD,KAAM,SACNwhB,cA/EZ4J,EAgFcnwB,KAAAmH,MAD6BgpB,SA/E3CsS,EAiFcziC,KAAAL,MAAA2gC,MAF6BhxB,MA9ElCmzB,EAAetS,EAAtB7gB,OAkFUzG,SACE7I,KAAAL,MAAA4gC,KAAAmC,cAAgC1iC,KAAAL,MAAA6iB,SAAoB3Z,SAEtDgH,SAAU7P,KAAK+R,aACfuvB,OAAQthC,KAAKmiC,WACbQ,SAAU3iC,KAAKoiC,gBACf19B,MAAO1E,KAAAL,MAAA6iB,SAAoBse,eAE7Bx+B,EAAAC,cAACqzB,EAADA,eAAA,CACEzf,GAAInW,KAAAL,MAAA2gC,MAAAt7B,KAAwB,YAC5BmL,eAAgBqyB,kBAAgB/xB,OAChC/L,MAAO1E,KAAAmH,MAAAgpB,SAAoBniB,MAC3BtD,SAAU1K,KAAKkiC,eACfr5B,SACE7I,KAAAL,MAAA4gC,KAAAmC,cAAgC1iC,KAAAL,MAAA6iB,SAAoB3Z,UAGrDg5B,eAAc1R,EAAAvoB,GAAA,OACbtF,EAAAC,cAACuzB,EAADA,SAAA,CAAUjuB,IAAKD,EAAOmuB,SAAU5F,EAAS7gB,OACtC6gB,EADHniB,WAMN1L,gBAACiO,EAADjO,eACGtC,KAAAL,MAAA6iB,SADHlgB,YAEGtC,KAAAL,MAAA4gC,KAAA/P,OAAuBxwB,KAAAL,MAAA2gC,MA/C9Bt7B,QA9DJ,IAAAmrB,EAAAsS,KAYaV,CAA8Bz/B,aChB9BsgC,cAAbljC,qDAKSmjC,SAAA,SAAYljC,OAEXoF,EAAO/E,cAAiBL,EAA9B6iB,UACMsgB,EAAoB,CACxBC,SADwBrB,EAExBvR,SAFwB4R,EAGxBiB,OAHwBpB,EAIxBV,OAJwBH,EAKxBkC,SAAUxB,UASVn/B,EAAAC,cAAC2gC,EAADA,MAAA1gC,OAAAC,OAAA,CACEoF,IAAKlI,WAAeqF,KACpBA,KAAMrF,WAAeqF,KACrBD,KAAMA,EACNyM,SAXU,SAAIlC,MACZ3P,sBAAJ2P,SACStP,QAAPmjC,uBAUIxjC,GACJkL,UAAWi4B,MAA2BtC,gHAKrCp+B,sBACCghC,EAASpjC,KAAAqjC,yBAA8BrjC,KAAAL,MAA7C2jC,YACMC,EAAgBvjC,KAAAwjC,eACpBxjC,KAAAL,MADoB2jC,WAEpBtjC,KAAAL,MAFF8iC,qBAIOziC,KAAAL,MAAA6D,SAAoB,QAAA4/B,EAEzBP,SAAU7iC,KAFe6iC,SAGzBJ,aAHyBc,EAIzBrd,OAAQlmB,KAAAL,MAAWumB,sBAOfsd,wBAAcF,EAAAb,qBACbjgC,OAAAihC,KAAAH,GAAAI,OAAA,SAA+B/xB,EAAA9J,SAC9B87B,EAAOL,EAAbz7B,GACIyH,EAAQtP,iBAAwByiC,EAApC56B,WACA,MAAIyH,IACFA,EAAQtP,iBAAwB2jC,EAAhCr0B,eAEK9M,OAAAC,OAAA,GAAAkP,UAAa9J,GAAOyH,EAA3BP,KANF,iBAaMs0B,kCAAwBC,qBACvB9gC,OAAAihC,KAAAH,GAAA57B,IAAA,SACAG,UAAQrF,OAAAC,OAAA,GACR6gC,EADQz7B,IAEX7C,KAFW6C,EAGX+7B,SAAU5jC,kBAAqBsjC,EAHpBz7B,IAIX9C,KAAM/E,cAAiBsjC,EAJjBz7B,QADHg8B,KAAA,SAOC/X,EAAAqS,UACYrS,SAAhB,IACgBqS,SAAhB,kBAUE2F,qBAAWthB,OACbzd,EAAOyd,QAAX,cACAzd,OACE,UACA,cACA,OACEA,qBAEF,SACEA,mBAEF,UACEA,oBAEAyd,QAAiBA,OAArB/a,SACE1C,YAEEyd,EAAJuhB,SACEh/B,cAEFA,eAUMi/B,yBAAexhB,UACbA,EAARzd,UACE,cACA,eACA,gBACE,iBAEOyd,EAAPohB,uBAYEK,sBAAYzhB,EAAAlT,WACdA,OAAJ,OAA2BA,SACzBA,SAEMkT,EAARzd,UACE,gBACSm/B,SAAQ50B,EAAf,QACF,cACA,iBACE,SAAO60B,6CAEP70B,MAhJKszB,CAAuBtgC,aCevB8hC,6JACJhiC,oCAEHE,EAAAC,cAAAqgC,EAAA,CACEU,WAAYtjC,KAAAL,MAAW2jC,WACvBb,aAAcziC,KAAAL,MAAW8iC,aACzBvc,OAAQlmB,KAAAL,MAAWumB,OACnBid,qBAAsBnjC,KAAAL,MAAWwjC,sBAJnC,SAMGngC,WAAiBogC,iBAAQld,WAAQ2c,2BAChCvgC,EAAAC,cAAC8hC,EAADA,OAAA,CACEC,cAAe7B,EACfloB,SAAU2L,EACV1U,SAAUxR,QAAWwR,UAHvB,SAKGxO,WAECuhC,iBACAC,WACAC,YACAjU,UACA3V,WACA6pB,YACAhC,iBACAiC,iBACAC,cACA9S,mCAEA+S,EAAAllC,MAAA6D,SAAoB,OAAAihC,SAAAjU,EAGlB4S,OACE9gC,EAAAC,cAACD,EAAD0I,SAAA,KACGo4B,EAAA17B,IAAA,SAAW8a,UACVqgB,EAAS,QAAArS,WAAAhO,UAAAgiB,EAIPl1B,OAAQi1B,GAAD,IAAe/hB,EAAfxd,wBAVGwV,eAAAkoB,UAAA7nB,eAAA6pB,YAAAC,aAAA7S,eAAA8S,SAsBlBL,WAlDHH,CAAoB9hC,uICvBjC,SAAgBwiC,EAAyBtiB,gBAGrCvK,QACAmS,QACArhB,aACAiB,SACA82B,gBACAiE,mBACAnE,cACAoE,iBACGC,uOAEEziC,OAAAC,OAAA,GAAAwiC,GAELnE,YAAaA,GAFRiE,EAGLlE,gBAAiB,MAAAqE,MAAAjtB,MAAAmS,WAAArhB,OAKfiB,GAEF42B,UAAWA,GAVboE,IC1CFjmC,IAAMomC,EAANpmC,mEAEMqmC,EAANrmC,GACIsmC,EAAJC,MC4BaC,cAIX7lC,WAAYC,0BACVA,QAWKiT,qBAAA,SAAwBxR,KAC7BkH,SAAc,CAAEyI,aAAe3P,SAAkCkO,cAG5DwD,gBAAA,SAAmB0yB,SACoBxlC,EAAKmH,MAAzC4J,iBAAcuB,sBAElBkzB,oBAA4Cz0B,SAAhD,MACEzI,SAAc,CAAEyI,aAAc,OAC9B0Y,cAAmBnX,EAAnB5N,MAAAqM,GACAy0B,oBACAA,0BAIG/b,cAAA,SAAgB/kB,EAAA4K,OACbyE,EAAkB/T,EAAKmH,MAAvB4M,gBACRzL,SAAc,CACZyL,cAAeA,EAAAtL,OAAA,CAEb,OAAA/D,QAEE4K,aAMD6D,mBAAA,SAAsBR,GACG3S,EAAKmH,MAA3BmL,oBACRK,KACErK,SAAc,CAAEyI,aAAF,GAAoBuB,kBAAmBK,UAIlDD,sBAAA,SAAyB+yB,OAItBnzB,EAAsBtS,EAAKmH,MAA3BmL,oBAERhK,SAAc,CAAEyI,aAAc00B,EAAY/gC,QAC1C+gC,KACEhc,cAAmBnX,EAAnB5N,MAA4C+gC,EAA5C/gC,aAIG2P,eAAA,SAAkBqxB,OACf3xB,EAAkB/T,EAAKmH,MAAvB4M,cAEFnM,EAAQmM,UAAd2xB,MACI99B,GAAJ,EAAgB,KACR+9B,EACD5xB,UADWnM,GAAAa,OAEXsL,QAAoBnM,EAFzB,MAIAU,SAAc,CAAEyL,cAAe4xB,WAI5BpxB,eAAA,SAAkBnT,GACvBA,qBACAkH,SAAc,CAAEyL,cAAe,WAG1BF,6BAAA,eACGD,EAAoB5T,EAAKmH,MAAzByM,kBAERtL,SAAc,CAAEsL,iBAAkBA,UAG7BJ,wBAAA,SAA2BoyB,GACJ5lC,EAAKmH,MAAzBmM,kBAERsyB,KACEt9B,SAAc,CACZgL,gBADYsyB,EAEZhyB,iBAAiB,UAvFrBzM,MAAa,CACX4M,cADW,GAEXzB,kBAAmBtS,KAAAL,MAFRkmC,kBAGXvyB,gBAAiBtT,KAAAL,MAAAmmC,gBAHNphC,MAIXqM,aAJW,GAKXg1B,eALW,KAMXnyB,iBAAiB,6GAsFdxR,yBACEpC,KAAAL,MAAA6D,SAAoBhB,OAAAC,OAAA,IACzB8R,eAAgBvU,KADSuU,eAEzBkV,cAAezpB,KAFUypB,cAGzB/W,sBAAuB1S,KAHE0S,sBAIzB2B,eAAgBrU,KAJSqU,eAKzBlB,mBAAoBnT,KALKmT,mBAMzBU,6BAA8B7T,KANL6T,6BAOzBL,wBAAyBxT,KAPAwT,wBAQzBZ,qBAAsB5S,KARG4S,qBASzBE,gBAAiB9S,KATQ8S,iBAUtB9S,KAVLmH,WAnGSo+B,CAAmCjjC,aCsBhD,IAAa0jC,cAUXtmC,WAAYC,eACVA,QACAwH,MAAa,CACX8+B,QAASjmC,KAAAL,MAAW4N,mHAIjBlN,mCAAyBC,QAC9BgI,SAAc,CACZ29B,QAAS3lC,EAAUiN,uBAIhB24B,4BAAkBC,GAClBnmC,KAAAL,MAAD4N,SAAwBvN,KAA5BomC,kBACEC,0BAIGjkC,yBACDpC,KAAAL,MAAJuF,MACSlF,KAAAL,MAAP2mC,cAEGtmC,KAAAmH,MAAL8+B,OAGOjmC,KAAAL,MAAP6D,WAFSxD,KAAAL,MAAP4mC,4BAKMF,sCACRG,oBACAJ,YAAmB7I,OAAA8I,WAAA,aACjB/9B,SAAc,CACZ29B,QAAQ,KAETjmC,KAAAL,MAJH8mC,sBAOQD,wBACJxmC,KAAJomC,cACEI,aAAaxmC,KAAbwmC,kBACAJ,iBAAA3/B,MAnDOu/B,CAAmB1jC,iBAIhB0jC,eAAe,CAC3BS,QAAS,KCtCb,IAAaC,6JAGJtkC,oCAEHE,EAAAC,cAAC8L,EAADA,MAAA,cACGs4B,OACMA,EAALr4B,YACQ,IAAAsf,MAAN,kCAEIgZ,EAAYD,gBAAlB,GACMx/B,EAAWw/B,kBAAjB,UACO3mC,qBAAP2mC,QAZGD,CAA4BpkC,aCpBzC,IAOaukC,6JACJzkC,wBAC0BpC,KAAKL,aAC7B6D,EADCA,0JAFCqjC,CAAuBvkC,aAOvBwkC,EAAaC,aAAnBF,sBLAP,SAAiCG,OAC/BA,QACQ,IAAApZ,MAAN,2DAEIqZ,EAAN,UACAzkC,gCAAgCqF,GAC9Bo/B,KAAcnC,EAAyBkC,EAAvCC,MAEFA,sEMnBAC,EACA3gB,qBAAe,QAEf2gB,SACE3gB,MAEI4gB,EAAYC,EAAlBF,GACMG,EAAiBD,WAAgBA,SAAvCD,IACMhX,EAAW,CACfmX,KAAMD,EADSC,OAEfC,MAAOF,EAFQE,QAGfC,QAASH,aAELI,EAAiBjlC,OAAAihC,KAAAtT,GAAAuT,OAAA,SACrBgE,EAAA7/B,UACSsoB,OACHuX,EAAcvX,EAAQtoB,GAAA,IAASA,EAD5BsoB,IAAPuX,GAFJ,WAQOD,GAAkBA,SAAlBA,IAAPlhB,sBAKF,SACEohB,EACAC,OAEAD,QACE,MAEF,OAAIC,IACFD,YAEIE,EAAiBT,WAAvBO,GACML,EAAOjd,WAAWwd,EAAxBP,QACMC,EAAQld,WAAWwd,EAAzBN,SACMC,EAAUnd,WAAWwd,EAA3BL,WACMM,EAAUzd,WAAWwd,EAA3BC,WACMC,EAAe1d,WAAWwd,EAAhCE,gBACMC,EAAN,UACIV,EAAJ,GACEU,OAAwBV,WAEtBC,EAAJ,GACES,OAAwBT,YAEtBC,EAAJ,GACEQ,OAAwBR,cAEtBM,EAAJ,GACEE,OAAwBF,cAE1B,IAAIE,WACED,EAAJ,EACEC,OAAwBD,SACnB,IAAIJ,GACTK,OAAwBL,qBAGrBK,aAAP/hB,cLnDF,cAEE,IAAImf,aACGE,IAAI92B,EAAT,EAAgBA,EAAhB,GAAwBA,IACtB42B,KAAgB/a,WAAhB+a,GAA2B/a,mBAK3B1Y,EAAJ,GACMu1B,GAAY,IAAAxW,MAAlBuX,aAMIf,IAAJ7B,MACOC,IAAI92B,EAAT,EAAgBA,EAAhB,KACE42B,OACA,KAAIA,MAFkB52B,IAGpB42B,KADwB,MAQzBE,IAAI92B,EAAT,EAAgBA,EAAhB,GAAwBA,IACtBmD,EAASwzB,SAAgBC,EAAhBD,IAATxzB,UAMEu2B,EAAJhB,EACS14B,EAAT,EAAgBA,EAAhB,EAAuBA,IACrBmD,EAASwzB,SAAgB+C,EAAhB/C,IAATxzB,EACAu2B,EAAqB7d,WAAW6d,EAAhCA,WAGF7C,IACA1zB,kBMlCF,SACEw2B,EACAC,mBAEQ7yB,SAC2B6yB,EAAM7yB,GAA/BqxB,WAAQD,UAAOx/B,gBAChB,QAAAy/B,EAELz4B,SAAUk6B,UAAQ1B,GAADwB,EAAwBvB,GAFpC,IAGLD,MAAOA,GAHFwB,QAILhhC,wCAcN,SACEghC,EACAC,2BAGmCA,IAAzBxB,WAAQD,UAAOx/B,gBAChB,QAAAy/B,EAELz4B,SAAUk6B,UAAQ1B,GAADwB,EAAwBvB,GAFpC,IAGLD,MAAOA,GAHFwB,QAILhhC,4BAUN,SAAqCw/B,2BACO,CACxCx4B,SAAUk6B,UAD8B1B,SAExCA,wDC7DJ,SAAkCr3B,SACzB,CAAEg5B,SAAF,EAAiBC,MAAOj5B,uBAQjC,SACEk5B,EACAjiB,qBAAuB,GAEnBiiB,GAAYA,EAAhBF,QAAkC,KAC1Bh5B,EAAQk5B,EAAdD,aACOj5B,GAAPiX,SAGFA,yBAOF,SACEiiB,YAEOA,IAAYA,EAAZA,UAA+BA,EAA/BA,8nHClCGC,EAOAC,EAYAC,8DAnBAF,kCAAZ,KACEA,YACAA,cACAA,iBAIUC,sCAAZ,KACEA,UACAA,cACAA,4BACAA,gCACAA,0BACAA,8CACAA,8BACAA,eAIUC,gCAAZ,KACEA,0BACAA,4BACAA,4BACAA,4BACAA,4BACAA,4BACAA,4BACAA,4BACAA,4BAIF,IAWYC,EAQAC,EAKAC,GAbAF,wCAAZ,KACEA,wBACAA,4BACAA,yBAKUC,wCAAZ,KACEA,gBACAA,eAGUC,sCAAZ,KACEA,wBACAA,sBACAA,wBACAA,sBAIF,IAcaC,EAAN,QACMC,EAAN,YCxEMC,EAAyB,CACpCC,OADoC,qBAEpCC,SAFoC,qBAGpCC,QAAS,IAGEC,EAAa/mC,gBAAnB2mC,GCbMK,EAAS,oBACrBA,YACAA,iBAAuB,SAAAC,EAAAC,OAChB73B,EAAS,IAAf23B,EACMniC,EAAQnH,KAAdo/B,KACAj4B,EAAW,KACJsiC,EAAWtiC,MAAjBqiC,KACAC,EAAc,KAEZC,EAAO/3B,EAAA,EAAY83B,EAASzpC,KAA5B0pC,IACC,MAAA93B,GACD83B,EAAO/3B,EAAA,EAAP+3B,UAED/3B,SAEA3R,iBAGF2pC,EAAS,SAAAC,WAEDt6B,EAAQs6B,EAAd13B,EACA,EAAI03B,IACHF,EAAO/3B,EAAA,EAAY43B,EAAcA,EAAHj6B,GAA9Bo6B,GACMF,EACNE,EAAO/3B,EAAA,EAAY63B,EAAnBE,IAEAA,EAAO/3B,EAAA,EAAP+3B,GAEA,MAAA93B,GACD83B,EAAO/3B,EAAA,EAAP+3B,KAGF/3B,GAED23B,EAlCqB,GAsCf,SAAAI,EAAAG,EAAA1iC,EAAAmI,OACDu6B,EAALzK,EAAa,IACR9vB,aAAJg6B,EAA4B,KACvBh6B,EAAJ8vB,cAMC9vB,IAAUo6B,cAAVp6B,IALA,EAAInI,IACHA,EAAQmI,EAARnI,GAEDmI,EAAQA,EAARA,KAMEA,GAASA,EAAboC,iBACCpC,OAAWo6B,cAAXp6B,GAA4Co6B,cAA5Cp6B,IAGDu6B,MACAA,UACMC,EAAWD,EAAjBF,EACAG,GACCA,MAwfI,SAAAC,EAAAjjC,EAAAkjC,WAEDr4B,EAAS7K,IACZ,MAAA8K,UACMo4B,EAAPp4B,UAEGD,GAAUA,EAAdD,KACQC,YAAY,EAAnBq4B,GAEDr4B,EAyCM5S,IAAMkrC,EAANlrC,IAayB,oBAC/BmrC,EAAAC,QACCC,OAAAD,OACAE,MAAA,UACAC,SAAA,UACAC,QAAA,UACAC,SAAA,cAGDC,EAAAn7B,SACQ,CAAEA,MAAFA,EAAgBo7B,MAAM,YAE9BC,EAAAr7B,SACQ,CAAEA,MAAFA,EAAgBo7B,MAAM,GAG9BR,YAA0BU,uBAAyBA,qBAAuBA,OAA1EV,0BAA6G,kBAC5GlqC,MAEDkqC,mBAAmC,SAAA56B,eAElCg7B,SAAch7B,GAASA,EAATA,KAAsBA,OAAtBA,GAAsDq7B,EAFlBr7B,IAI3CtP,KAAAqqC,MAAa,IAApBf,GAEDY,iBAAiC,SAAA56B,OAE1Bs6B,EAAN5pC,YACO4pC,WAAiB,IAAAiB,QAAY,SAAAC,OAC7BT,EAAQT,EAAdS,SACA,OAAIA,EAAgB,KAUnBU,WAAAz7B,GACCs6B,WAAet6B,GAASA,EAATA,KAAsBA,OAAtBA,GAAuDm7B,EAAtEb,IACAA,aACAA,iBAZKQ,EAASR,EAAfQ,UACA,OAAIA,SAGIU,EAAQlB,EAAfY,UAGDZ,cACAA,aAMAQ,YAAgC,SAAAllC,MAC3BA,IAAJ+kC,EACCc,EAAYnB,EAAZmB,aACM,KACAlB,EAAO,IAAbP,EACAM,cACAA,aACAA,gBACAU,SAAQT,EAAA,EAARS,WAKFV,aACAA,aACAF,EAAOW,EAAA,EAAPX,MAIHQ,mBAAmC,SAAA56B,OAE5Bs6B,EAAN5pC,YACO4pC,WAAiB,IAAAiB,QAAY,SAAAC,OAC7BT,EAAQT,EAAdS,SACA,OAAIA,SACH,OAAIT,SAGIkB,EAAQlB,EAAfY,WAGDZ,cACOkB,EAAQx7B,GAASA,EAATA,KAAsBA,OAAtBA,GAAuDm7B,EAAtEn7B,KAGDs6B,YACAA,aACAA,aACAF,EAAOW,EAAA,EAAPX,MAGFQ,kBAAkC,SAAAhlC,OAE3B0kC,EAAN5pC,YACO4pC,WAAiB,IAAAiB,QAAY,SAAAC,EAAAE,OAC7BX,EAAQT,EAAdS,SACA,OAAIA,SACH,OAAIT,SAGIkB,EAAQlB,EAAfY,WAGDZ,cACOoB,EAAP9lC,IAGD0kC,aACAA,aACAF,EAAOW,EAAA,EAAPX,MAxG6B,YCzkBhBuB,EAAUjoC,WAExBkoC,0CACU,wDAEW,sCACP,yEACE,iCACP,iFACe,4CACR,GAEZC,KAAmB,WAAvB/B,GAA6C,CAE3CA,EAAO,OAAPA,KAGFgC,EAAwB,CAEtBhC,EADA,gBACAA,KAGFiC,EAA2B,CAEzBjC,EAAO,eAAPA,qBAGKkC,MAAKC,EAAM,CAChBzkC,KACE0kC,kCACIC,eADJD,GAFc1kC,EAKhBgO,MALgB,WAMhB42B,YANgB,UAOhBtC,QAAS5mC,OAAAC,OAAA,GAPO2mC,UAAA8B,EAWhBS,KAXgB,OAYhBC,SAAU,eCrDDC,cACXnsC,WAAmBC,eACjBA,QACAmsC,KAAY9rC,KAAA8rC,KAAA7rC,KAAZD,WACAmH,MAAa,CACXoO,KAAMvV,KAAAL,MAAA8iC,cAA2BziC,KAAAL,MADtB4mB,aAEXrhB,OAFW,EAGX6mC,UAAW/rC,KAAAL,MAHA8iC,aAIXl1B,SAAS,6GAIApN,iCACXH,KAAA8rC,uDAGW5F,4BAAmBC,OAC1BA,QAAkBnmC,KAAAL,MAAtB4rC,KAAsBvrC,KACpB8rC,uDAIGnrC,+BAAqBL,EAAA0rC,UAIlBvrC,EAAMT,KAADL,MAANW,KAAkCG,EAAMT,KAADmH,MAA9C6kC,gBAGK5pC,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzBsoC,KAAM9rC,KADmB8rC,KAEzBG,SAAUjsC,KAAKmH,qBAIN2kC,0BAET9rC,kCAAAsI,SAAc,CAAEiF,SAAS,oBACF09B,EAAU,CAC/BO,YAAaU,EAAAvsC,MADkB6rC,YAE/BpC,QAAS8C,EAAAvsC,MAFsBypC,QAG/B8B,OAH+B,MAI/BK,IAAG,GAAKW,EAAAvsC,MAAWwsC,QAAUD,EAAAvsC,MAAW4rC,OANxC75B,KAAA,SAAAu6B,kBAuBF3jC,SAAc,MAAAiN,EAAQw2B,SAAR,EAAuBx+B,SAAS,QAfzC0+B,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,gBAEF72B,IAEG22B,EAAAvsC,MAAD6rC,aAbA,IAcAU,EAAAvsC,MAAA6rC,YAAAa,QAAA,oCAOaJ,EArBbK,QAAA56B,KAAA,SAAA66B,GAqBAh3B,sBALa02B,EAhBbO,QAAA96B,KAAA,SAAA+6B,GAgBAl3B,IACI22B,EAAAvsC,MAjBJ4mB,eAkBEhR,EAAOm3B,EAAUR,EAAAvsC,MAAD4mB,aAAhBhR,iDAMG3D,KACPtJ,SAAc,CACZiN,KAAM22B,EAAAvsC,MADM4mB,aAEZrhB,OAFY,EAGZynC,aAAc/6B,EAHFvQ,QAIZ0qC,SAJY,EAKZx+B,SAAS,4CAnEJs+B,CAAiBvpC,aCzBjBsqC,cAAbltC,mBAoBMM,kCAFG8rC,KAAA,qBAEHxjC,SAAc,CACZiF,SAAS,IAGX09B,EAAU,CACRO,YAAa5B,EAAAjqC,MADL6rC,YAERpC,QAASQ,EAAAjqC,MAFDypC,QAGR8B,OAHQ,MAIRK,IAAG,GAAK3B,EAAAjqC,MAAWwsC,QAAUvC,EAAAjqC,MAAW4rC,MAJ1CN,cAMQgB,UAAYA,EAASnlC,OAN7BmkC,cAOQnkC,KACJ+lC,OAAc/lC,EAAdgmC,gBACMC,EAAc,IAAAC,YAApB,WAqBAH,OAAAf,OAAAp6B,KApBc,SAARu7B,EAAWjqC,WAEfsM,eAKAo7B,IACEpiC,SAAc,CACZiF,SAAS,OAGXjF,SAAc,CACZiN,MAAWq0B,EAAAziC,MAAAoO,MAAJ,IAAA9M,OAAA,CAA4BskC,SAA7Bz9B,SAGRu9B,OAAAf,OAAAp6B,KAAAu7B,QAMR,MAAAr7B,KACAtJ,SAAc,CACZpD,OADY,EAEZynC,aAAc/6B,EAFFvQ,QAGZkM,SAAS,WA1CR,MAAAqE,mCA+CAsU,OAAA,qBACC,IAAA0H,MAAN,4BADK,MAAAhc,wIA9DMs0B,4BAAmBC,OAC1BA,QAAkBnmC,KAAAL,MAAtB4rC,MAAsBvrC,KACpB6sC,QADoB7sC,KAElB6sC,OAAAK,SAFkBltC,KAIpB8rC,wDAIGlrC,gCACDZ,KAAJ6sC,aACEA,OAAAK,YAdON,CAAef,GCH5B,IAgBasB,6JACJ/qC,wBAC6BpC,KAAKL,MAA/B4rC,QAAK6B,WAAWztC,gJAElB0tC,EAAgBD,EAAMR,EAA5Bf,SAGEvpC,EAAAC,cAAC8mC,EAADiE,SAAA,cACGtqC,WAAWomC,0BACV9mC,iCACE6pC,QAASjD,EACTqC,IAAKA,EACLnC,QAAS5mC,OAAAC,OAAA,GACH9C,WAAJypC,IAJJ9mC,SATG6qC,CAAyB7qC,aChBtC,IAcairC,6JACJnrC,wBAC6BpC,KAAKL,MAA/B4rC,QAAgB5rC,uJAGtB2C,EAAAC,cAAC8mC,EAADiE,SAAA,cACGtqC,WAAqBomC,gBACpB9mC,iCAAO6pC,QAAShD,EAAUoC,IAAKA,EAAKnC,QAAS,IAA7C9mC,SAPGirC,CAAmBjrC,aCJnBkrC,EAAN,GAEMC,EAAsBnrC,gBAA5BkrC,GC6IME,cAGXhuC,WAAYC,eACVA,QACAguC,cAAqB3tC,KAAA2tC,cAAA1tC,KAArBD,WACA4tC,kBAAyB5tC,KAAA4tC,kBAAA3tC,KAAzBD,WACA6tC,kBAAyB7tC,KAAA6tC,kBAAA5tC,KAAzBD,WACA8tC,kBAAyB9tC,KAAA8tC,kBAAA7tC,KAAzBD,WACA+tC,cAAqB/tC,KAAA+tC,cAAA9tC,KAArBD,WACAguC,kBAAyBhuC,KAAAguC,kBAAA/tC,KAAzBD,WACAiuC,aAAoBjuC,KAAAiuC,aAAAhuC,KAApBD,WACAkuC,gBAAuBluC,KAAAkuC,gBAAAjuC,KAAvBD,WACAmuC,oBAA2BnuC,KAAAmuC,oBAAAluC,KAA3BD,WACAouC,iBAAwBpuC,KAAAouC,iBAAAnuC,KAAxBD,WACAquC,sBAA6BruC,KAAAquC,sBAAApuC,KAA7BD,WACAsuC,eAAsBtuC,KAAAsuC,eAAAruC,KAAtBD,WACAuuC,cAAqBvuC,KAAAuuC,cAAAtuC,KAArBD,gHAGWwuC,6BACXC,EACAC,EACAC,cAEAA,kBACyB1D,EAAU,CAC/BnkC,KAD+B6nC,EAE/BvF,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,OAI/BK,IAFSvrC,KAGPL,MAAWupC,uBACGuF,cAAwBC,KAPlBh9B,KAAA,SAAAu6B,OASnBA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAEYH,EAZUO,UAcxB,qDAISmB,uBACXiB,EACAC,EACA1tB,EACA2tB,EACAzjC,EACAsjC,8BAE+B3uC,KAAAwuC,oBAC7BK,EAD6B14B,GAE7BgL,EAF6BhL,GAAAw4B,IAAAj9B,KAAA,SAAzBq9B,UAKCC,EAAOJ,EAAA,SAAcK,OACpB7e,EAAa,QAAAjP,uBAAAwtB,aAAAE,EAIjB14B,GAAI24B,GAENC,IACE3e,uBAEFA,sBACA6e,QAAcA,EAAAC,MAAAxnC,IAAA,SAAiBynC,UACzBA,OAAJL,GACEK,sBAEFA,IAEFF,OAAa7N,WAAW,IAAAgO,KAAaH,QAAJ,IAAAxmC,OAAA,CAAuBomC,EAAxDI,2DAISlB,uBAAc53B,EAAYyY,8BACdqc,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,MAG/BK,IAFSvrC,KAEDL,MAAWupC,wBAAuB/yB,kBAAkByY,KAH9Bld,KAAA,SAA1Bu6B,OAKDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAEKH,EAAPO,yDAGW+B,uBAAcp4B,EAAYk5B,8BACdpE,EAAU,CAC/BnkC,KAD+BuoC,EAE/BjG,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,QAI/BK,IAFSvrC,KAEDL,MAAWupC,wBAAuB/yB,KAJZzE,KAAA,SAA1Bu6B,OAMDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAIS6B,sBAAa93B,EAAYyY,aACX5uB,4BAAAsvC,EAAAvB,cAAA53B,EAAAyY,IAAAld,KAAA,SAAnB69B,0BACAD,EAAAf,cAAAp4B,EAAuB,CAC3B+4B,MAAOK,OAAiBL,SADpBx9B,KAAA,gEAKKk8B,2BAAkBz3B,8BACN80B,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,SAG/BK,IAFSvrC,KAEDL,MAAWupC,wBAAuB/yB,KAHZzE,KAAA,SAA1Bu6B,OAKDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAIS4B,2BAAkBrmC,8BACNsjC,EAAU,CAC/BnkC,KAD+Ba,EAE/B6jC,YAF+B,kBAG/BpC,QAASppC,KAAAL,MAHsBypC,QAI/BgC,oBAJ+B,EAK/BF,OAL+B,OAM/BK,IAHSvrC,KAGDL,MAAWupC,wCANWx3B,KAAA,SAA1Bu6B,OAQDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAIS0B,2BAAkB33B,EAAYq5B,cAClCvE,EAAU,CACf7B,QAASppC,KAAAL,MADMypC,QAEf8B,OAFe,MAGfK,IAFSvrC,KAEDL,MAAWupC,6CAA4C/yB,IAH1DzE,KAAA,SAAA5K,8BAI4BA,EAJ5B2oC,QAAA/9B,KAAA,SAAAg+B,UAIeC,SAAMD,EAJrBF,0FAOI3B,2BACX13B,EACAyY,EACAghB,mBAA0B,8BAEH3E,EAAU,CAC/BnkC,KAAM8oC,EAA0B,CAAExhB,YT1QjC,aSyQ8B,GAE/Bgb,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAAQ0E,EAAuB,OAHA,MAI/BrE,IAAKqE,EAFI5vC,KAIHL,MAAWupC,wBACI/yB,kBAAkByY,iBAL9B5uB,KAMFL,MAAWupC,wBAAuB/yB,oBARXzE,KAAA,SAA1Bu6B,OAUDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAIS+B,6BAAoBh4B,EAAYyY,8BACpBqc,EAAU,CAC/BnkC,KAAM,CAAEsnB,YTzRP,eS0RDgb,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,OAI/BK,IAFSvrC,KAGPL,MAAWupC,wBACI/yB,kBAAkByY,oBANLld,KAAA,SAA1Bu6B,OAQDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAISgC,0BACXQ,EACAC,EACA1tB,EACA2tB,EACAzjC,EACAsjC,8BAE+B3uC,KAAAwuC,oBAC7BK,EAD6B14B,GAE7BgL,EAF6BhL,GAAAw4B,IAAAj9B,KAAA,SAAzBq9B,UAKCC,EAAOJ,EAAA,SAAcK,OACpB7e,EAAa,QAAAjP,uBAAAwtB,aAAAE,EAIjB14B,GAAI24B,GAENC,IACE3e,uBAEFA,sBACA6e,QAAcA,EAAAC,MAAAxnC,IAAA,SAAiBynC,UACzBA,OAAJL,IACEK,cAEFA,wDAIOd,+BACXO,EACAC,EACA1tB,EACA2tB,EACAzjC,EACAsjC,8BAE+B3uC,KAAAwuC,oBAC7BK,EAD6B14B,GAE7BgL,EAF6BhL,GAAAw4B,IAAAj9B,KAAA,SAAzBq9B,UAKCC,EAAOJ,EAAA,SAAcK,OACpB7e,EAAa,QAAAjP,uBAAAwtB,aAAAE,EAIjB14B,GAAI24B,GAENC,IACE3e,uBAEFA,sBACA6e,QAAcA,EAAAC,MAAAxnC,IAAA,SAAiBynC,UACzBA,OAAJL,IACMK,QAAJ9jC,GACE8jC,cAEAA,sBACAF,OAAa7N,WACX,IAAAgO,KAAaH,QAAJ,IAAAxmC,OAAA,CAAuBomC,EADlCI,SAKJE,wDAKOjB,yBAAgBU,8BACJ3D,EAAU,CAC/BnkC,KAD+B8nC,EAE/BxF,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAAQ0D,WAHuB,OAI/BrD,IAAKqD,KAFI5uC,KAGFL,MAAWupC,wBAAuB0F,EAAYz4B,GAH5CnW,KAIFL,MAAWupC,0BANYx3B,KAAA,SAA1Bu6B,OAQDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAEMwC,EAAYz4B,mBACR81B,UACRpB,qEAGOyD,wBAAe5rB,EAAuBmtB,cAC1C5E,EAAU,CACfnkC,KADe+oC,EAEfzG,QAASppC,KAAAL,MAFMypC,QAGf8B,OAHe,MAIfK,IAFSvrC,KAEDL,MAAWupC,+BAA8BxmB,4DAI9CtgB,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzBmqC,cAAe3tC,KADU2tC,cAEzBC,kBAAmB5tC,KAFM4tC,kBAGzBC,kBAAmB7tC,KAHM6tC,kBAIzBC,kBAAmB9tC,KAJM8tC,kBAKzBC,cAAe/tC,KALU+tC,cAMzBC,kBAAmBhuC,KANMguC,kBAOzBC,aAAcjuC,KAPWiuC,aAQzBC,gBAAiBluC,KARQkuC,gBASzBK,cAAevuC,KATUuuC,cAUzBD,eAAgBtuC,KAVSsuC,eAWzBH,oBAAqBnuC,KAXImuC,oBAYzBC,iBAAkBpuC,KAZOouC,iBAazBC,sBAAuBruC,KAAKquC,2BA/RrBX,CAAsCprC,aCpItCwtC,6JACJ1tC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,iBAAmBvrC,KAAAL,MAAW+iB,6BACjC6D,aAAc,CAAEkE,MAAF,GAAaslB,WAAY,IAFzC,SAIG/sC,WAAqCgtC,yBACpC1tC,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,0BAA4BvrC,QAAW0iB,cAC1C6D,aAAc,IAFhB,SAIGvjB,WAAoCitC,yBAC5BpL,EAAAllC,MAAA6D,SAAoB,CACzBysC,WAAYA,EADa16B,KAEzBy6B,YAAaA,OAFYvlB,sBAAAylB,mBAIzBC,WAjBHL,CAAuBxtC,aCVvB8tC,cAGX1wC,WAAmBC,eACjBA,QACA0wC,eAAsBrwC,KAAAqwC,eAAApwC,KAAtBD,gHAGKoC,yBACEpC,KAAAL,MAAP6D,wBAGWrD,iCACXH,KAAAL,MAAA2wC,uBAAAtwC,KAAAqwC,gEAGWzvC,oCACXZ,KAAAL,MAAA4wC,yBAAAvwC,KAAAqwC,gEAGKA,wBAAcjvC,GACfpB,KAAAL,MAAA+lC,OAAJtkC,SACEzB,MAAAmsC,UAtBOsE,CAA2B9tC,aCO3BkuC,6JAGJC,sBAAYC,UACVA,kBAAP,0BAGKtuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,kEACLhlB,aAAc,CACZkE,MADY,GAEZslB,WAAY,IAJhB,SAOG/sC,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAPisC,GAGA3pC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAMSzwC,6BA7BZwwC,CAA0BluC,aCT1BsuC,6JACJxuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,WACHnC,QAAS,CACPyH,OAAQ,oBAEVtqB,aAAc,eAEZuqB,qBAFY,GAGZC,aAHY,kBAKZniB,QAAS,KAVb,SAaG5rB,2BAAkBhD,yBAhBd4wC,CAAuBtuC,aCDvB0uC,cAGXtxC,WAAmBC,eACjBA,QACAsxC,OAAcjxC,KAAAixC,OAAAhxC,KAAdD,gHAGWG,iCACXH,KAAAkxC,+DAGWtwC,oCACXZ,KAAAmxC,8DAGK/uC,yBACEpC,KAAAL,MAAP6D,wBAGKytC,uBACLtxC,MAAAmsC,oBAGKsF,mBAASC,QACdJ,OAAAI,eAGMH,6BACNC,cACInxC,KAAAL,MAAJ2xC,eACEC,aAAoBC,YAAYxxC,KAADixC,OAAcjxC,KAAAL,MAA7C2xC,uBAIIH,uBACFnxC,KAAJuxC,eACEE,cAAczxC,KAAdyxC,mBACAF,kBAAA9qC,MAtCOuqC,CAAoB1uC,aCMpBovC,6JACJtvC,oCAEHE,EAAAC,cAAA4qC,EAAA,CAAyB5B,IAAK,uBAAwBhlB,aAAc,IAApE,SACGvjB,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAoBwC,OAAAC,OAAA,GAAAwpC,QAA3BH,KAGAxpC,EAAAC,cAAAyuC,EAAA,CAAalF,KAAMA,EAAMwF,QAAS,KAAlC,kBACSzM,EAAAllC,MAAA6D,SAAoBhB,OAAAC,OAAA,GAAAwpC,QAApBH,YAVR4F,CAAyBpvC,aCGzBqvC,cAGXjyC,WAAYC,eACVA,QACAiyC,kBAAyB5xC,KAAA4xC,kBAAA3xC,KAAzBD,WACA6xC,kBAAyB7xC,KAAA6xC,kBAAA5xC,KAAzBD,WACA8xC,kBAAyB9xC,KAAA8xC,kBAAA7xC,KAAzBD,gHAGW4xC,2BAAkB5sC,8BACNimC,EAAU,CAC/BnkC,KAD+B9B,EAE/BokC,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAAQ,MACR6G,eAJ+B,EAK/BxG,IAHSvrC,KAGDL,MAAWupC,+BAA8BlkC,KALnB0M,KAAA,SAA1Bu6B,OAODA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAEWH,EAASnlC,wDAGX+qC,2BAAkB7sC,8BACNimC,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,SAG/BK,IAFSvrC,KAEDL,MAAWupC,+BAA8BlkC,KAHnB0M,KAAA,SAA1Bu6B,OAKDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAEWH,EAASnlC,wDAGXgrC,2BAAkB9sC,EAAcgtC,8BACpB/G,EAAU,CAC/BnkC,KAD+BkrC,EAE/B5I,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,MAI/B6G,eAJ+B,EAK/BxG,IAHSvrC,KAGDL,MAAWupC,+BAA8BlkC,KALnB0M,KAAA,SAA1Bu6B,OAODA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAEWH,EAASnlC,wDAGjB1E,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzBouC,kBAAmB5xC,KADM4xC,kBAEzBC,kBAAmB7xC,KAFM6xC,kBAGzBC,kBAAmB9xC,KAAK8xC,uBAtDjBH,CAAsCrvC,aCFtC2vC,6JACJ7vC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,eAAiBvrC,KAAAL,MAAW2hB,YAC/BiF,aAAc,CACZpZ,QADY,GAEZ+kC,cAFY,QAGZltC,KAHY,GAIZmtC,cAAe,IAEjB1P,aAAcziC,KAAAL,MAAW8iC,cAR3B,SAUGz/B,2BAAkBhD,yBAbdiyC,CAAsB3vC,aCAtB8vC,cAGX1yC,WAAYC,eACVA,QACA0yC,gBAAuBryC,KAAAqyC,gBAAApyC,KAAvBD,WACAsyC,gBAAuBtyC,KAAAsyC,gBAAAryC,KAAvBD,WACAuyC,gBAAuBvyC,KAAAuyC,gBAAAtyC,KAAvBD,gHAOWqyC,yBAAgB/wB,8BACJ2pB,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,SAG/BK,IAFSvrC,KAEDL,MAAWupC,sBAAqB5nB,KAHV5P,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAOWwH,yBAAgBhxB,8BACJ2pB,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,OAG/BK,IAFSvrC,KAEDL,MAAWupC,sBAAqB5nB,gBAHV5P,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAOWyH,yBACX5qC,EACA2Z,WAEM/L,EAAO,IAAbi9B,SACAj9B,kBAA0B5N,EAA1B4N,UAEMg2B,EAASvrC,KAAAL,MAAWupC,OAA1B,qCAEuB+B,EAAU,CAC/BnkC,KAD+ByO,EAE/Bi2B,YAF+B,sBAG/BpC,QALappC,KAKJL,MAHsBypC,QAI/B+B,eAJ+B,EAK/BC,oBAL+B,EAM/BC,uBAN+B,EAO/BH,OAP+B,OAQ/BK,IAAKjqB,EAAiBiqB,gBAAiBjqB,EAAgBiqB,KARzB75B,KAAA,SAA1Bu6B,OAWDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAGYH,4DAGT7pC,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzB6uC,gBAAiBryC,KADQqyC,gBAEzBC,gBAAiBtyC,KAFQsyC,gBAGzBC,gBAAiBvyC,KAAKuyC,qBAjFfH,CAAoC9vC,aCGpCmwC,6JAGJhC,sBAAYC,SAGfA,wBAAiD,2BAAhBA,oBAI9BtuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,eAAiBvrC,KAAAL,MAAW2hB,4BAC/BiF,aAAc,IAFhB,SAIGvjB,WAASipC,yBACRjsC,uBACEA,iBADFA,GAGEsC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAMSzwC,6BA5BZyyC,CAAkCnwC,aCGlCowC,6JACJjC,sBAAYC,SACjB,cAAOA,oBAGFtuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,cACLhlB,aAAc,CAAEkE,MAAF,GAAaslB,WAAY,IAFzC,SAIG/sC,WAASipC,yBACRjsC,uBACEA,iBADFA,GAGEsC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAMSzwC,6BAvBZ0yC,CAAuBpwC,aCFvBqwC,cACXjzC,WAAmBC,eACjBA,QACA8wC,aAAoBzwC,KAAAywC,aAAAxwC,KAApBD,gHAEKywC,sBAAYC,UAEfA,kCACAA,gBAAqB1wC,KAAAL,MAFvB+iB,4BAKKtgB,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,iBAAmBvrC,KAAAL,MAAW+iB,cACjC6D,aAAc,CACZ8G,SADY,EAEZroB,KAAM,IAERy9B,aAAcziC,KAAAL,MAAW8iC,cAN3B,SAQGz/B,WAASipC,yBACRjsC,uBACEA,iBADFA,GAGEsC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAMSzwC,6BAjCZ2yC,CAAwBrwC,aCDxBswC,6JACJnC,sBAAYC,SAEfA,wBADF,2BACmCA,oBAI9BtuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,gBACLhlB,aAAc,CAAEkE,MAAF,GAAaslB,WAAY,IAFzC,SAIG/sC,WAASipC,yBACRjsC,uBACEA,iBADFA,GAGEsC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAMSzwC,6BAzBZ4yC,CAAyBtwC,aCRzBuwC,6JAGJzwC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,wBAA0BvrC,KAAAL,MAAW+iB,sBACxC6D,aAAc,GACdkc,aAAcziC,KAAAL,MAAW8iC,cAH3B,SAKGz/B,2BAAkBhD,yBAVd6yC,CAA4BvwC,aCczC,IAAawwC,cAGXpzC,WAAmBC,eACjBA,QACA8wC,aAAoBzwC,KAAAywC,aAAAxwC,KAApBD,gHAEKywC,sBAAYC,UAEfA,kCACAA,gBAAqB1wC,KAAAL,MAFvB+iB,4BAKKqwB,iCAAuBnE,EAAA3C,SAIrB,aAAA2C,EAELoE,WAAY/G,qBACTtC,UAA6BA,kBAAoBiF,EAAYz4B,mBAI7D/T,oCAEHE,EAAAC,cAAAowC,EAAA,CACEjwB,cAAe1iB,KAAAL,MAAW+iB,cAC1B+f,aAAcziC,KAAAL,MAAW8iC,aACzBkO,eAAgB3wC,KAAAL,MAAWgxC,gBAH7B,SAKG3tC,+IAAyBrD,gBACxB2C,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,2BACLhlB,aAAc,IAFhB,SAIGvjB,WAASipC,qBACJjsC,QAAJ2wC,eAA+B,KACvBp7B,EAAOvV,4BAAbisC,UAIOjsC,iBAAoBwC,OAAAC,OAAA,GAAA9C,QAA3B4V,YAGAjT,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,eAOUl7B,EAAOvV,4BAAbisC,UAIOjsC,iBAAoBwC,OAAAC,OAAA,GAAA9C,QAA3B4V,gBA1DXu9B,CAAiCxwC,aCnB9C,IAkBa2wC,6JAGJxC,sBAAYC,SAEfA,mCADF,yCAEEA,oBAGGwC,kCAAwBC,EAAAlH,SAItB,CACLxhB,MAAO0oB,EAAA1oB,MAAA/iB,IAAA,SACJ8G,SAA+C,CAC9CogC,YAD8CpgC,EAE9CwkC,WAAY/G,qBACTtC,UAA6BA,kBAAoBn7B,EAAE2H,QAI1D45B,WAAYoD,EAAapD,yBAGtB3tC,oCAEHE,EAAAC,cAAAqwC,EAAA,CAAkBjC,eAAgB3wC,KAAAL,MAAWgxC,gBAA7C,SACG3tC,+IAA0BrD,gBACzB2C,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,2BACLhlB,aAAc,IAFhB,SAIGvjB,WAASipC,qBACJjsC,QAAJ2wC,eAA+B,KACvBp7B,EAAOvV,6BAAbisC,UAIOjsC,iBAAoBwC,OAAAC,OAAA,GAAA9C,QAA3B4V,YAGAjT,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,eAOUl7B,EAAOvV,6BAAbisC,UAIOjsC,iBAAoBwC,OAAAC,OAAA,GAAA9C,QAA3B4V,gBAvDX09B,CAAkC3wC,aCXlC8wC,6JAGJhxC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,yBAA2BvrC,KAAAL,MAAW+iB,cACzC6D,aAAc,CACZiK,OADY,EAEZS,cAAa,GAAKP,KAFN1Y,MAGZuY,SAHY,EAIZ8iB,gBAJY,OAKZ1iB,MAAK,GAAKD,aAPd,SAUG1tB,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAPisC,GAGA3pC,EAAAC,cAAAyuC,EAAA,CAAalF,KAAMA,EAAMwF,QAAS,KAAlC,kBACStxC,2BArBRozC,CAA+B9wC,aCD/BgxC,6JAGJlxC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,wBACLhlB,aAAc,CACZiK,OADY,EAEZra,GAFY,KAGZo9B,6BAHY,GAIZtiB,cAAa,GAAKP,KAJN1Y,MAKZuY,SALY,EAMZ8iB,gBANY,OAOZ1iB,MAAK,GAAKD,KAPE1Y,MAQZgM,gBAAiB,KAVrB,SAaGhhB,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAPisC,GAGA3pC,EAAAC,cAAAyuC,EAAA,CAAalF,KAAMA,EAAMwF,QAAS,KAAlC,kBACStxC,2BAxBRszC,CAAgChxC,sBCH7BkxC,EAAyBlvB,UAChCA,kBACLtX,UAAMA,EAADymC,WAAgBzmC,2CAIzB,SAAgB0mC,EACdpvB,UAEOA,EAAAohB,OAAA,SAAmBmJ,UACnBA,EAAL8E,WAIO9E,EAAA8E,UAAAxmC,QAAAymC,KAAA,SAAkCzyB,SACvC,SAAOA,cAKb,SAAgB0yB,EAA2BvvB,UAClCA,EAAAohB,OAAA,SAAmBmJ,UACnBA,EAAL8E,WAIA,iBAAI9E,eAIGA,EAAA8E,UAAAxmC,QAAAymC,KAAA,SAAkCzyB,SACvC,OAAOA,cAuBb,SAAgB2yB,EACd7H,UAEOzpC,OAAAC,OAAA,GAAAwpC,GAEL12B,KAAM,CACJw+B,sBAAuBP,EAAyBvH,OAD5CxhB,OAEJupB,0BAA2BN,EACzBzH,OAHExhB,OAKJwpB,wBAAyBJ,EAA2B5H,OALhDxhB,OAMJypB,iCAAkCjI,OAN9BxhB,MAOJslB,WAAY9D,OAAc8D,cAKhC,IAAaoE,8JACJ1D,sBAAYC,UACVA,kBAAP,2BAGKtuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,eACLhlB,aAAc,CACZkE,MADY,GAEZslB,WAAY,IAJhB,SAOG/sC,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAoB8zC,EAA3B7H,IAGA3pC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAMSzwC,iBAAoB8zC,EAApB9zC,aA3BZm0C,CAAwB7xC,sBCpErB8xC,GAAmBjnC,yBAAoB,IAC9CA,kBAAe2e,SAAmB,SAAdA,YAG7B,SAAgBuoB,GAAiBlnC,yBAAoB,IAC5CA,kBAAe2e,SAAmB,OAAdA,YAqE7B,SAAgBwoB,GACdpL,EACA2F,MAGE,qBAAOA,EAAPtpC,MADF,qBAESspC,EAAP0F,eAIA,MAGE1F,YAAuBA,kBAA3B2F,KAA4D,KACpD7sC,EAAOknC,YAAuBA,EAApCtpC,YACyBkvC,oBAAzB9sC,UAIEknC,gCAAJ,SACSA,EAAPtpC,KAIAspC,wCACAA,gCAFF,cAIY3F,iBAAqB2F,EAAW14B,YAAW04B,EAAWtpC,sBAG1CspC,EAAWtpC,2BCxGxBmvC,GAAkB,CAC7B1vC,KAD6B,GAE7B2vC,KAAM,IA0GR,SAAgBC,GACdhG,EACAE,EACA1e,cAGeykB,GAAOjG,EAApBE,GACOgG,MAAP1kB,GACA,MAAAxe,SACM,IAAAgc,MAAA,qBACiBwC,eAAiB0e,qBACpCF,EAFJz4B,KA+BJ,SAAgB4+B,GAAiBC,UACxBA,QAAP,GAGF,SAAgBC,GAAgBC,yBACPA,SAUzB,SAAgBC,GACdjM,EACA0F,EACAE,EACAsG,UAGOC,GAAWnM,EADL0L,GAAOhG,EAAAE,EAApBsG,IASF,SAAgBC,GAAYnM,EAAgB9Y,UACtCA,EAAJye,WAESyF,GAAiBpL,EADL9Y,EAAnBye,YAIEze,EAAJ4kB,UACSD,GAAiB3kB,EAAxB4kB,WAGKC,GAAgB7kB,EAAvB8kB,UAQF,SAAgBL,GAAQjG,EAA0BE,MAE5CF,GAAiBA,EAAjBM,OAAJJ,SAGOF,sBAAuBkG,UAAQA,OAAYhG,IAsBpD,SAAgBwG,GAAqBtlB,UAC/BA,UAAJ,EACE,EAEKA,SAAP,MC7NWulB,8JACJnzC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,gBAAkBvrC,KAAAL,MAAWwW,GAChCoQ,aAAc,CACZvhB,KAAM,IAERy9B,aAAcziC,KAAAL,MAAW8iC,cAL3B,SAOGz/B,2BACChD,iBAAoBwC,OAAAC,OAAA,GAAAwpC,GAElB12B,KAAM/S,OAAAC,OAAA,GACDwpC,EADC12B,MAEJigC,gBAAiBpB,GACfnI,iBAA0BA,iBAA1BA,QAHE,IAKJwJ,cAAepB,GACbpI,iBAA0BA,iBAA1BA,QARNjsC,cAXGu1C,CAAuBjzC,aCiFvBozC,eAGXh2C,WAAYC,eACVA,QACAg2C,iBAAwB31C,KAAA21C,iBAAA11C,KAAxBD,WACA41C,iBAAwB51C,KAAA41C,iBAAA31C,KAAxBD,WACAouC,iBAAwBpuC,KAAAouC,iBAAAnuC,KAAxBD,WACA61C,sBAA6B71C,KAAA61C,sBAAA51C,KAA7BD,WACA81C,eAAsB91C,KAAA81C,eAAA71C,KAAtBD,WACA+1C,aAAoB/1C,KAAA+1C,aAAA91C,KAApBD,gHAGK21C,0BAAgBhC,EAAA3uC,EAAAmV,EAAAw0B,OAMfE,EAAN,UACOG,EAAOH,EAAA,SAAaI,GACzBJ,SACAA,gBACAA,yBACAA,cACAA,cAAyB8E,EAAzB9E,GACAA,OAAkB8E,EAAlB9E,oBAIS+G,0BAAiBnH,8BACLxD,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,SAG/BK,IAFSvrC,KAEDL,MAAWupC,uBAAsBuF,KAHX/8B,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAGKsD,0BAAgBS,EAAA7pC,EAAAmV,EAAAw0B,UAMdK,EAAOH,EAAA,SAAaI,GACzBJ,OAAkB7pC,GAAQ6pC,EAA1BA,KAEAA,mBACE10B,MAA4B00B,EAA5B10B,YADF00B,EAEAA,uBACEF,GAAwBE,EAD1BA,oCAKSgH,+BACXG,EACAzR,8BAEuB0G,EAAU,CAC/BnkC,KAD+By9B,EAE/B6E,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,OAI/BK,IAFSvrC,KAEDL,MAAWupC,sBAAqB8M,iBAJVtkC,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAEYH,4DAGH6J,wBAAejH,8BACH5D,EAAU,CAC/BnkC,KAD+B+nC,EAE/BzF,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAAQ2D,WAHuB,OAI/BtD,IAAKsD,KAFI7uC,KAGFL,MAAWupC,uBAAsB2F,EAAW14B,GAH1CnW,KAIFL,MAAWupC,yBANYx3B,KAAA,SAA1Bu6B,OAQDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAEMyC,EAAW14B,mBACP81B,UACRpB,qEAGOkL,sBACXlH,EACAoH,UAGIpH,SAAJoH,QACS,CACLC,SAAS,OAIPC,EAAW,CAAEnxC,KAAMixC,0BACFhL,EAAU,CAC/BnkC,KAD+BqvC,EAE/B/M,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,OAI/BK,IAFSvrC,KAEDL,MAAWupC,oCAJWx3B,KAAA,SAA1Bu6B,UAOFA,EAAShnC,GACJ,CACLixC,SAAS,mBAKQjK,wBAAft6B,UACCnP,OAAAC,OAAA,IACLyzC,SADK,GAEFvkC,EAFL,wDAMKvP,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzBmyC,iBAAkB31C,KADO21C,iBAEzBC,iBAAkB51C,KAFO41C,iBAGzBE,eAAgB91C,KAHS81C,eAIzB1H,iBAAkBpuC,KAJOouC,iBAKzByH,sBAAuB71C,KALE61C,sBAMzBE,aAAc/1C,KAAK+1C,kBArIZL,CAAqCpzC,aCvFrC8zC,8JACJh0C,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAG,eAAiBvrC,KAAAL,MAAWwW,GAC/BoQ,aAAc,CACZpZ,QADY,GAEZnI,KAAM,IAERy9B,aAAcziC,KAAAL,MAAW8iC,cAN3B,SAQGz/B,2BAAkBhD,yBAXdo2C,CAAsB9zC,sBCanB+zC,GAAwBC,UAC/BA,kBACLtpC,UAAMA,EAADymC,WAAgBzmC,2CAIzB,SAAgBupC,GACdtK,UAEOzpC,OAAAC,OAAA,GAAAwpC,GAEL12B,KAAM,CACJihC,qBAAsBH,GAAwBpK,OAD1CxhB,OAEJypB,iCAAkCjI,OAF9BxhB,MAGJslB,WAAY9D,OAAc8D,cAKhC,IC4OAhhC,GD5Oa0nC,8JACJhG,sBAAYC,UACVA,kBAAP,0BAEKtuC,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,cACLhlB,aAAc,CACZkE,MADY,GAEZslB,WAAY,IAJhB,SAOG/sC,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAoBu2C,GAA3BtK,IAGA3pC,EAAAC,cAACkrC,EAADH,SAAA,cACGtqC,WAA2ButC,2DAC1BjuC,EAAAC,cAAA6tC,EAAA,CACEtE,KAAMA,EACNwE,uBAAwBA,EACxBC,yBAA0BA,EAC1B7K,OAAQ1lC,EAAKywC,cAJf,kBAOIzwC,iBAAoBu2C,GAApBv2C,aA3BPy2C,CAAuBn0C,aE7BvBo0C,eAGXh3C,WAAYC,eACVA,QACAg3C,eAAsB32C,KAAA22C,eAAA12C,KAAtBD,WACA42C,eAAsB52C,KAAA42C,eAAA32C,KAAtBD,gHAGW22C,wBAAeE,8BACH5L,EAAU,CAC/BnkC,KAD+B+vC,EAE/BzN,QAASppC,KAAAL,MAFsBypC,QAG/B8B,OAH+B,MAI/BK,IAFSvrC,KAEDL,MAAWupC,4BAA2B2N,EAAI1gC,MAJpBzE,KAAA,SAA1Bu6B,OAMDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAISwK,wBAAezgC,8BACH80B,EAAU,CAC/B7B,QAASppC,KAAAL,MADsBypC,QAE/B8B,OAF+B,SAG/BK,IAFSvrC,KAEDL,MAAWupC,4BAA2B/yB,KAHhBzE,KAAA,SAA1Bu6B,OAKDA,EAAShnC,SACN,IAAA2oB,MAAUqe,EAAhBG,8DAIGhqC,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzBozC,eAAgB52C,KADS42C,eAEzBD,eAAgB32C,KAAK22C,oBAnCdD,CAAmCp0C,aCGnCw0C,8JACJ10C,oCAEHE,EAAAC,cAAA4qC,EAAA,CACE5B,IAAK,oBACLhlB,aAAc,CACZkE,MADY,GAEZslB,WAAY,IAJhB,SAOG/sC,WAASipC,yBACJjsC,QAAJ2wC,eACS3wC,iBAAoBwC,OAAAC,OAAA,GAAAwpC,QAA3BH,KAGAxpC,EAAAC,cAAAyuC,EAAA,CAAalF,KAAMA,EAAMwF,QAAS,KAAlC,kBACSzM,EAAAllC,MAAA6D,SAAoBhB,OAAAC,OAAA,GAAAwpC,QAApBH,YAhBRgL,CAAsBx0C,aCatBy0C,eAWXr3C,WAAmBC,eACjBA,QAXMq3C,UAAA,OACAC,SAAA,OACAC,YAAA,OACAC,QAAA,OACAC,kBAAA,QAQNC,gBAAA,QACAC,iBAAA,QACAhH,uBAA8BtwC,KAAAswC,uBAAArwC,KAA9BD,WACAu3C,wBAA+Bv3C,KAAAu3C,wBAAAt3C,KAA/BD,WACAuwC,yBAAgCvwC,KAAAuwC,yBAAAtwC,KAAhCD,WACAw3C,0BAAiCx3C,KAAAw3C,0BAAAv3C,KAAjCD,gHAGKswC,gCAAsBmH,QAC3BJ,gBAAuBr3C,KAAAq3C,gBAAA5uC,OAAA,CAAvBgvC,iBAGKF,iCAAuBE,QAC5BH,iBAAwBt3C,KAAAs3C,iBAAA7uC,OAAA,CAAxBgvC,iBAGKlH,kCAAwBkH,QAC7BJ,gBAAuBr3C,KAAAq3C,gBAAA3R,OAAA,SAA4BgS,UAAKA,IAAMD,iBAGzDD,mCAAyBC,QAC9BH,iBAAwBt3C,KAAAs3C,iBAAA5R,OAAA,SAA6BgS,UAAKA,IAAMD,iBAGrDt3C,iCACXH,KAAA2wB,wDAGW/vB,oCACXZ,KAAAk3C,YAAA,EAAAl3C,KACA23C,QADA33C,KAEAq3C,gBAAA,GAFAr3C,KAGAs3C,iBAAA,mDAGK32C,+BAAqBL,EAAA0rC,EAAA4L,UAK1B,eAGKx1C,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzB8sC,uBAAwBtwC,KADCswC,uBAEzBiH,wBAAyBv3C,KAFAu3C,wBAGzBhH,yBAA0BvwC,KAHDuwC,yBAIzBiH,0BAA2Bx3C,KAAKw3C,yCAI5BG,sBACNV,SAAA,OACAD,UAAA,EACIh3C,KAAJ63C,iBACEA,UAAAF,aACAE,eAAApxC,GAEEzG,KAAJ83C,mBACEA,YAAAH,aACAG,iBAAArxC,gBAIIkqB,sBACNonB,gBAAqB/3C,KAAAm3C,QAAA,IAArB,gBAGMa,mBAAS9yC,sBACfyyC,SACI33C,KAAJk3C,iBAGAC,cAEIc,EA3FRl5C,IA4FQiB,KAAAm3C,QAAJ,IACEc,KAEF5R,WAAU,kBAEArmC,EAARo3C,uBAEE,OACEW,iBAAA,aAEF,OACEA,iBAAA,mBAIAA,gBAAqB/3C,cAArB,KAZNqmC,iBAkBY0R,yBAAgBG,aACxBl4C,QAAAksC,EAAA8K,UAAiB9K,EAAjB+K,SAAiC/K,EAArCgL,2BAGAF,UAAA,sCAEyB/L,EAAU,CAC/BnkC,KAD+B,GAE/BsiC,QAAS8C,EAAAvsC,MAFsBypC,QAG/B8B,OAH+B,OAI/BK,IAAQW,EAAAvsC,MAAWupC,gCALnBx3B,KAAA,SAAAu6B,0BAOsBA,EAPtBO,QAAA96B,KAAA,SAAAymC,MAQFA,EAAcA,EAAdA,KARED,EAAA,KAUIE,EAAgBlM,EAAAvsC,MAAAupC,OAAAmP,QAAA,QAApB,MACAD,GAAiB,qBAXjBD,IAaAnB,UAAA,IACAC,SAAA,IACAqB,iBAAAF,UAEApB,UAAA,IACAC,SAlBA,IAoBAsB,mBACErM,EAAAvsC,MAAAupC,OAAA,kBADFiP,iBAIKjzC,WACP8yC,UAAA9yC,GACAA,oDAIIszC,0BAAgBC,QACtBnB,iBAAAoB,QAAA,SAA8BjB,GAC5BA,oBAIIkB,yBAAeC,QACrBvB,gBAAAqB,QAAA,SAA6BjB,GAC3BA,oBAIIc,4BAAkBhN,mBACxBuM,YAAmB,IAAAe,YAAnBtN,QACAuM,YAAA13C,iBAAA,mBAA8CgB,KAC5C61C,SAAA,IACAD,UAAA,IACAI,kBAAA,OAEAoB,iBAAAp3C,UAEF02C,YAAA13C,iBAAA,wBAAmDgB,KACjD61C,SAAA,MACM3nC,EAAQm8B,WAAWrqC,EAAzBmU,QAEAojC,gBAAArpC,SAEIwpC,EAAO,SAAI13C,KAEf42C,UAAA52C,gBAEF02C,YAAA13C,iBAAA,QAAA04C,QACAhB,YAAA13C,iBAAA,QAAA04C,GACO94C,KAAP83C,yBAGMQ,0BAAgB/M,0BACtBsM,UAAiB,IAAAkB,UAAjBxN,QACAsM,UAAA72C,UAAA,SAA2BI,KACzB61C,SAAA,IACAD,UAAA,MACMyB,EAAehN,WAAWrqC,EAAhCmU,aACQkjC,EAARr3C,WACE,YACEg2C,kBADF,OAGEoB,iBAAAC,aAEF,mBACQnpC,EAAQm8B,WAAWgN,EAD3BljC,QAGEojC,gBAAArpC,UAONuoC,UAAAmB,QAAA,SAAyB53C,KAEvB42C,UAAA52C,IAEKpB,KAAP63C,aAhNSd,CAAyBz0C,aHjBhC22C,GAAwB,CA2M9B,SAAAlqC,EAAAmqC,EAAAC,mBAEgB,mBACE,UAEhBpqC,mBAAc1D,EAAA+tC,EAAAC,OAKZH,EAAkB,KAEVI,EAAeF,0BAEbha,UAAKma,GAAena,KAC5Bga,EAAgBE,EAAe,CAAHA,GAA5BF,OAEFD,EAAoB,KAEZK,EAAiBJ,gBAAmBha,UAAKma,GAAena,GAAA,KAC9Dia,EAAkBG,EAAiB,CAAHA,GAAhCH,UAGAI,OADFJ,EArCArpB,gBACEoP,UACEA,GACAA,EADAA,QAEAA,SAFAA,YAGAA,oBAHAA,gBAIAA,mCAJAA,MAKAA,wDACEsJ,iBANFtJ,MAOAA,wDACEsJ,iBAAegR,MAVrB1pB,OADF,GA2CAjhB,EArOA4qC,CACE,CACExjC,QADF1P,EAEEooC,gBAFFpoC,EAGE0a,YAHF1a,EAIEzB,KAJF,cAKEmV,YALF,qDAME+6B,SnCmDC,SmClDDlO,WAPF,GAQE2H,0BAAsBloC,IATG,GADD,GAe5BmzC,GACE,CACEzjC,QADF1P,EAEEooC,gBAFFpoC,EAGE0a,YAHF1a,EAIEzB,KAJF,eAKEmV,YACE,wHAEF+6B,SnCoCC,amCnCDlO,gBATFvgC,EAUEkoC,0BAAsBloC,IA1BE,GA8B5BmzC,GAAwB,CACtBzjC,QADsB1P,EAEtBooC,gBAFsBpoC,EAGtB0a,YAHsB1a,EAItBzB,KAJsB,WAKtBkwC,SnCkCG,WmCjCH/6B,YANsB,iGAQtBw0B,0BARsBloC,EAStBugC,gBAAYvgC,KAmOhBsI,GAjOsB,CAClBoH,QADkB1P,EAElBooC,gBAFkBpoC,EAGlB0a,YAHkB1a,EAIlBzB,KAJkB,kBAKlBmV,YALkB,kGAOlB+6B,SnCaG,mBmCZHlO,WAAY,CACVtB,OAAQ,CACN3gC,KADM,WAEN27B,YAFM,mBAGNjxB,YAHM,sLAONm0B,UAPM,EAQN55B,KAAM,KAGV2kC,0BAAsBloC,GA8MxBsI,oBAAc1D,EAAA+tC,EAAAC,UAKJQ,GAART,IAEFrqC,IAnNA,CACEoH,QADF1P,EAEEooC,gBAFFpoC,EAGE0a,YAHF1a,EAIEzB,KAJF,MAKEkwC,SnCAG,MmCCH/6B,YANF,2CAOEw0B,0BAPFloC,EAQEugC,WAAY,CACV8S,sBAAuB,CACrB/0C,KADqB,UAErB27B,YAFqB,kBAGrBkD,UAAU,GAEZmW,mBAAoB,CAClBh1C,KADkB,UAElB27B,YAFkB,eAGlBkD,UAAU,GAEZoW,WAAY,CACVj1C,KADU,SAEV27B,YAFU,cAGVkD,UAAU,KAkBhBgW,GAAwB,CACtBzjC,QADsB1P,EAEtBooC,gBAFsBpoC,EAGtB0a,YAHsB1a,EAItBzB,KAJsB,QAKtBmV,YALsB,kDAMtB+6B,SANsBnM,EAOtB/B,WAPsB,GAQtB2H,0BAAsBloC,IAiM1B,SAAAsI,UACEA,mBAAc1D,EAAA+tC,EAAAC,MAKeD,kBAAqBha,UAAKA,aAAe2J,IAApEthC,QAE+B2xC,kBAC7Bha,UAAMA,YAAD,IAAA6a,gBAAqCjR,IAD5CvhC,cAKE,MAGIyyC,EAAoBb,qBACxBja,UAAKA,aAAe2J,IAEhBoR,EAAwBd,qBAC5Bja,UAAKA,aAAe4J,WAGtB,IAAIkR,GACF,IAAOC,GAIPA,OAAgCD,EADlCC,GAIFprC,EA9NAqrC,CAAiC,CAC/BjkC,QAD+B1P,EAE/BooC,gBAF+BpoC,EAG/B0a,YAH+B1a,EAI/BzB,KAJ+B,YAK/BmV,YAL+B,oCAM/B+6B,SAN+BlM,EAO/BhC,WAP+B,GAQ/B2H,0BAAsBloC,KAgD1B,SAAAgzC,GAAAzpB,UAEIA,kBACEoP,UACEA,GACAA,EADAA,QAEAA,SAFAA,YAGAA,oBAHAA,iBAIAA,oCAJAA,MAKAA,yDACEsJ,iBANFtJ,MAOAA,yDACEsJ,iBAAegR,MAVrB1pB,OADF,EA+DF,SAAAupB,GAAAnpB,EAAAiqB,0BAA6C,GAC3CA,KAEIjqB,GACAA,EADAA,QAEAA,SAFAA,YAGAA,oBAJF1uB,mBAQE0uB,GACAA,EADAA,QAEAA,SAFAA,YAGAA,oBAJFruB,iBASJ,SAAA83C,GAAAT,OACQkB,EAAoBlB,0BAElBha,UAAKma,GAAena,YAE1Bkb,GACAA,EADAA,QAEAA,SAFAA,YAGAA,oBAHAA,iBAIAA,oCAJAA,UADF,eAMEA,qDAgBJ,SAAAV,GAAA7qC,EAAAwrC,0BAEyB,GAGrBxrC,UADFwrC,EACExrC,SAAc1D,EAAA+tC,EAAAC,UAMVI,QACCI,GAFHT,IAMFrqC,SAAc1D,EAAA+tC,EAAAC,UAKLI,GAAPL,IAGJrqC,EA8CF,IIzVayrC,8JACJp4C,oCAEHE,EAAAC,cAAAgrC,EAAA,CACEhC,IAAG,kBAAoBvrC,KAAAL,MAAW86C,4BAClCl0B,aAAc,GACdkc,aAAcziC,KAAAL,MAAW8iC,cAH3B,SAKGz/B,2BAAwBhD,yBARpBw6C,CAAkBl4C,aCAlBo4C,8JAGJt4C,oCAEHE,EAAAC,cAAAgrC,EAAA,CACEhC,IACE,uCACCvrC,KAAAL,MAAAg7C,UAAuB,YAAc36C,KAAAL,MAArCg7C,UADD,IAGFp0B,aAAc,IALhB,SAOGvjB,WAASipC,yBAAejsC,iBAAoBwC,OAAAC,OAAA,GAAAwpC,QAApBjsC,UAZpB06C,CAA6Bp4C,aCwB7Bs4C,eAGXl7C,WAAYC,eACVA,QACAk7C,qBAA4B76C,KAAA66C,qBAAA56C,KAA5BD,WACA86C,uBAA8B96C,KAAA86C,uBAAA76C,KAA9BD,WACA+6C,WAAkB/6C,KAAA+6C,WAAA96C,KAAlBD,WACAg7C,sBAA6Bh7C,KAAAg7C,sBAAA/6C,KAA7BD,WACAi7C,qBAA4Bj7C,KAAAi7C,qBAAAh7C,KAA5BD,WACAk7C,sBAA6Bl7C,KAAAk7C,sBAAAj7C,KAA7BD,WACAm7C,oBAA2Bn7C,KAAAm7C,oBAAAl7C,KAA3BD,WACAo7C,2BAAkCp7C,KAAAo7C,2BAAAn7C,KAAlCD,WAGAq7C,oBAA2Br7C,KAAAq7C,oBAAAp7C,KAA3BD,gHAQW66C,8BACXS,EACAC,WAEMC,EAAoB,CACxBC,eA1DN18C,6BA0D0CiB,KAAAL,MAAWuM,aADvBovC,EAExBI,SAAQ,GAFgBJ,EAGxBrhB,gBAAc,GAAKqhB,GAAHrB,cAHQ,MAIxB0B,iBAAkBJ,EAAQ,GAAMA,EAAa,2BAGxBtQ,EAAU,CAC/BnkC,KAD+B00C,EAE/BpS,QAF+B,GAG/B8B,OAH+B,OAI/BK,IAVoCvrC,KAU5BL,MAAWwpC,mCAAkCmS,KAJvB5pC,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,gBAAP2Q,qDAQWT,oBACXa,EACAxlB,aAKMp2B,KAHA67C,EAAUD,EAAhB3hB,eACM6hB,EAAgBD,MAAtBzlB,yBAEM2lB,EAAAf,sBAAAc,IAAApqC,KAAA,kCAEiBu5B,EAAU,CAC/B7B,QAD+B,GAE/B8B,OAF+B,SAG/BK,IACEwQ,EAAAp8C,MAAWwpC,2BACK0S,yBAA8BzlB,KALlB1kB,KAAA,SAA1Bu6B,OAQDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,8DAOWmQ,8BAAqBnhB,8BACTmR,EAAU,CAC/B7B,QAD+B,GAE/B8B,OAF+B,SAG/BK,IAAQvrC,KAAAL,MAAWwpC,mCAAkCrP,KAHvBpoB,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAOWoQ,+BACXphB,WAEMkiB,EAAoB,CACxBh3C,KAAI,GAAK80B,0BAGYmR,EAAU,CAC/BnkC,KAD+Bk1C,EAE/B5S,QAF+B,GAG/B8B,OAH+B,OAI/BK,IAAQvrC,KAAAL,MAAWwpC,+BAJWz3B,KAAA,SAA1Bu6B,OAODA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAUWqQ,6BACXrhB,EACAmiB,EACAC,EACAC,WAGMC,EAAY,CAChBC,MADgBH,EAEhBI,OAFgBH,EAGhBI,MAHgBN,EAIhBpkC,OAAQiiB,0BAGamR,EAAU,CAC/BnkC,KAD+Bs1C,EAE/BhT,QAF+B,GAG/B8B,OAH+B,OAI/BK,IAAQvrC,KAAAL,MAAWwpC,6BAJWz3B,KAAA,SAA1Bu6B,OAODA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mCAGYH,4DAOHoP,6BAAoBQ,8BACR5Q,EAAU,CAC/B7B,QAD+B,GAE/B8B,OAF+B,SAG/BK,IAAQvrC,KAAAL,MAAWwpC,6BAA4B0S,KAHjBnqC,KAAA,SAA1Bu6B,OAMDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAOWkQ,+BAAsBwB,8BACVvR,EAAU,CAC/B7B,QAD+B,GAE/B8B,OAF+B,SAG/BK,IACEvrC,KAAAL,MAAWwpC,gDAC0BqT,KALT9qC,KAAA,SAA1Bu6B,OAQDA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAOWgQ,gCACX2B,8BAEuBxR,EAAU,CAC/BnkC,KAD+B21C,EAE/BrT,QAF+B,GAG/B8B,OAH+B,MAI/BK,IAAQvrC,KAAAL,MAAWwpC,mDAJWz3B,KAAA,SAA1Bu6B,OAODA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,4DAOWsQ,oCACXthB,EACA2iB,aAGMz8C,4BAAA08C,EAAA5B,uBAAA2B,IAAA/qC,KAAA,kCACiBu5B,EAAU,CAC/B7B,QAD+B,GAE/B8B,OAF+B,OAG/BK,IACEmR,EAAA/8C,MAAWwpC,gDAC0BrP,KALTpoB,KAAA,SAA1Bu6B,OAODA,EAALhnC,SACQ,IAAA2oB,MAAUqe,EAAhBG,mBAGKvB,QAAPC,8DAGK1oC,yBACEpC,KAAAL,MAAA6D,SAAoB,CACzBq3C,qBAAsB76C,KADG66C,qBAEzBE,WAAY/6C,KAFa+6C,WAGzBC,sBAAuBh7C,KAHEg7C,sBAIzBC,qBAAsBj7C,KAJGi7C,qBAKzBC,sBAAuBl7C,KALEk7C,sBAMzBC,oBAAqBn7C,KANIm7C,oBAOzBC,2BAA4Bp7C,KAPHo7C,2BAQzBC,oBAAqBr7C,KARIq7C,oBASzBP,uBAAwB96C,KAAK86C,4BAvPtBF,CAAyCt4C,aCxBzCq6C,8JAGJv6C,oCAEHE,EAAAC,cAAAgrC,EAAA,CACEhC,IAAG,0BAA4BvrC,KAAAL,MAAWi9C,iBAC1Cr2B,aAAc,CACZjC,YADY,EAEZu4B,QAFY,EAGZC,aAHY,GAIZC,cAJY,GAKZtB,eALY,GAMZuB,mBANY,EAOZtB,SAPY,GAQZuB,YARY,GASZC,eATY,WAUZjjB,eAVY,GAWZkjB,kBAXY,GAYZC,uBAZY,GAaZC,iBAbY,GAcZ1B,iBAAkB,IAEpBlZ,aAAcziC,KAAAL,MAAW8iC,cAlB3B,SAoBGz/B,2BAAkBhD,yBAzBd28C,CAA2Br6C,aCA3Bg7C,8JAGJl7C,oCAEHE,EAAAC,cAAAgrC,EAAA,CACEhC,IAAK,yBACLhlB,aAAc,IAFhB,SAIGvjB,WAASipC,yBAEN3pC,EAAAC,cAAAyuC,EAAA,CAAalF,KAAMA,EAAMwF,QAAS,KAAlC,kBACSzM,EAAAllC,MAAA6D,SAAoBhB,OAAAC,OAAA,GAAAwpC,QAApBH,YAZRwR,CAA4Bh7C,aCN5Bi7C,8JAGJn7C,oCAEHE,EAAAC,cAAAgrC,EAAA,CACEhC,IAAK,kCACLhlB,aAAc,IAFhB,SAIGvjB,2BAAwBhD,yBATpBu9C,CAA6Cj7C,aCC7Ck7C,8JAGJp7C,oCAEHE,EAAAC,cAAAgrC,EAAA,CACEhC,IAAG,YAAcvrC,KAAAL,MAAW8uC,uBAC5BloB,aAAc,IAFhB,SAIGvjB,2BAAwBhD,yBATpBw9C,CAA2Cl7C,uB7CuBjD,sBACA,0BACA,sBACA,gCA6BA,qDACA,yCAGA,uBACA,iDAEA,wBACA,+BACA,gCACA,uBACA,uBACA,qCACA,sDAGA,iBACA,6OS4X4B,SAE/B3C,UACF2C,gBAAC+mC,EAAD/mC,uBACGm7C,UAAcn7C,mCAAmC3C,EAAnC2C,mJOtYgB,SAE/B3C,UACF2C,gBAAC+mC,EAAD/mC,uBACGm7C,UAAcn7C,mCAAmC3C,EAAnC2C,gFEqBc,SAE7B3C,UACF2C,gBAAC+mC,EAAD/mC,uBACGm7C,UAAcn7C,mCAAiC3C,EAAjC2C,icc4Ie,SAE9B3C,UACF2C,gBAAC+mC,EAAD/mC,uBACGm7C,UAAcn7C,oCAAkC3C,EAAlC2C,kKInMa,SAE5B3C,UACF2C,gBAAC+mC,EAAD/mC,uBACGm7C,UAAcn7C,oCAAgC3C,EAAhC2C,mGD8SG,SAA6CU,UAG1DQ,cAAS,CACdinB,MAAOwuB,iFNzVX,SACEpK,EACAhnC,UAEiBgnC,YAAjB,IACAhnC,6BAGF,SACEgnC,OAEKA,EAAL8E,gBACQ/lB,MAAK,qBAAsBihB,EAAW14B,GAA5C,oCAEK04B,EAAP8E,iCAGF,SAAoCA,UAC3BA,EAAPxmC,yBAGF,SAA8BA,EAAmBuhC,OACzCvtB,EAAShU,gBAAa2e,UAAKA,OAAS4iB,QAC1CvtB,QACQyM,MAAK,iBAAkB8gB,EAA7B,qBAEFvtB,yBAGF,SAAoCA,OAC7BA,EAALu8B,iBACQ9vB,MAAK,iBAAkBzM,EAAOhL,GAApC,uCAEKgL,EAAPu8B,6BAGF,SACEA,OAEKA,EAALC,8BACQ/vB,MAAN,wDAEK8vB,EAAPC,yCAGF,SACE3tB,EACAI,MAEIA,EAAOJ,SAAX,QACQpC,MAAK,eAAgBwC,EAA3B,kDAEKJ,EAAPI,8BAGF,SACEA,OAIKA,EAAL4W,iBACQpZ,MAAK,eAAgBwC,EAA3B,0CAEKA,EAAP4W,8EC7DF,kBACSgI,EAAO0F,GAAA,SAAkBzF,GAC9BA,QAAc,CACZ,CACE94B,GAAItO,EADNA,MAEE7C,KAFF,GAGEgrB,MAAO,6BAaf,SACE4e,EACA5pC,UAEOgqC,EAAOJ,EAAA,SAAcgP,GAC1BA,yBAUJ,SAA2BhP,SACzB,YAAOA,8BAST,SAA4BA,SAExBA,4BADF,cAEEA,0BAUJ,SAAwBA,SACtB,YAAOA,gCAST,SAA8BA,SAC5B,gBAAOA,2BAWT,SAAyBA,EAA0BE,cAElC+F,GAAOjG,EAApBE,GACA9e,MACA,MAAApe,SACA,iCAmCJ,SAA6Bs3B,EAAgB0F,UAEpCuG,GAAsBjM,EAAA0F,EADhBA,QAAb,GAC6Bz4B,GAA7B,oBAOF,SAA8B+yB,EAAgB0F,OACtCkG,EAAOlG,QAAb,UACOuG,GAAsBjM,EAAA0F,EAG3BkG,EAH2B3+B,GAI3B2+B,eAJF,2HAqEF,SAAgClG,EAA0BE,MACxDA,OAGMgG,EAAOD,GAAOjG,EAApBE,MACAgG,GAIKA,EAAL9kB,aAGOslB,GAAqBR,EAA5B9kB,sDAeF,SACE4e,EACAE,EACAzjC,OAEMypC,EAAOD,GAAOjG,EAApBE,UACIgG,GAAUA,EAAd9kB,MAIO8kB,gBAAPzpC,GAFE,yBAWJ,SACEujC,EACAE,EACAzjC,OAEMypC,EAAOD,GAAOjG,EAApBE,UACIgG,GAAUA,EAAd9kB,MAIO8kB,cAAiBzpC,EAAxB,GAFE,2BgBhR6B,SAAImD,UACnCqvC,KAAKC,mBAAmBrS,eAApBj9B,+BCD6B,SAAIA,UACrCi9B,WAAWsS,mBAAmBC,KAA9BvS,iHNgSoC,SAElC9rC,UACF2C,gBAAC+mC,EAAD/mC,uBACGm7C,UACCn7C,oCAAsC3C,EAAtC2C,swFOxSNY,EAAAC,QAAiBC,EAAAC,EAAuB,2CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0CCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yGCMxC,SAAS46C,EAAgB/vC,GACvB,MAA0B,MAAnBA,EAAKgwC,OAAO,GAAahwC,EAAO,IAAMA,EAQ/C,SAASiwC,EAAcjwC,EAAMkwC,GAC3B,OAJF,SAAqBlwC,EAAMkwC,GACzB,OAA4D,IAArDlwC,EAAK+rC,cAAc5N,QAAQ+R,EAAOnE,iBAAuE,IAA/C,MAAM5N,QAAQn+B,EAAKgwC,OAAOE,EAAO32C,SAG3F42C,CAAYnwC,EAAMkwC,GAAUlwC,EAAKowC,OAAOF,EAAO32C,QAAUyG,EAElE,SAASqwC,EAAmBrwC,GAC1B,MAAwC,MAAjCA,EAAKgwC,OAAOhwC,EAAKzG,OAAS,GAAayG,EAAKswC,MAAM,GAAI,GAAKtwC,EA0BpE,SAASuwC,EAAW5wC,GAClB,IAAIM,EAAWN,EAASM,SACpBuwC,EAAS7wC,EAAS6wC,OAClBC,EAAO9wC,EAAS8wC,KAChBzwC,EAAOC,GAAY,IAGvB,OAFIuwC,GAAqB,MAAXA,IAAgBxwC,GAA6B,MAArBwwC,EAAOR,OAAO,GAAaQ,EAAS,IAAMA,GAC5EC,GAAiB,MAATA,IAAczwC,GAA2B,MAAnBywC,EAAKT,OAAO,GAAaS,EAAO,IAAMA,GACjEzwC,EAGT,SAAS0wC,EAAe1wC,EAAM/G,EAAOU,EAAKg3C,GACxC,IAAIhxC,EA2CJ,MAzCoB,kBAATK,GAETL,EAvCJ,SAAmBK,GACjB,IAAIC,EAAWD,GAAQ,IACnBwwC,EAAS,GACTC,EAAO,GACPG,EAAY3wC,EAASk+B,QAAQ,MAEd,IAAfyS,IACFH,EAAOxwC,EAASmwC,OAAOQ,GACvB3wC,EAAWA,EAASmwC,OAAO,EAAGQ,IAGhC,IAAIC,EAAc5wC,EAASk+B,QAAQ,KAOnC,OALqB,IAAjB0S,IACFL,EAASvwC,EAASmwC,OAAOS,GACzB5wC,EAAWA,EAASmwC,OAAO,EAAGS,IAGzB,CACL5wC,SAAUA,EACVuwC,OAAmB,MAAXA,EAAiB,GAAKA,EAC9BC,KAAe,MAATA,EAAe,GAAKA,GAkBfK,CAAU9wC,IACZ/G,MAAQA,QAISV,KAD1BoH,EAAWoxC,YAAS,GAAI/wC,IACXC,WAAwBN,EAASM,SAAW,IAErDN,EAAS6wC,OACuB,MAA9B7wC,EAAS6wC,OAAOR,OAAO,KAAYrwC,EAAS6wC,OAAS,IAAM7wC,EAAS6wC,QAExE7wC,EAAS6wC,OAAS,GAGhB7wC,EAAS8wC,KACqB,MAA5B9wC,EAAS8wC,KAAKT,OAAO,KAAYrwC,EAAS8wC,KAAO,IAAM9wC,EAAS8wC,MAEpE9wC,EAAS8wC,KAAO,QAGJl4C,IAAVU,QAA0CV,IAAnBoH,EAAS1G,QAAqB0G,EAAS1G,MAAQA,IAGxEU,IAAKgG,EAAShG,IAAMA,GAEpBg3C,EAEGhxC,EAASM,SAE6B,MAAhCN,EAASM,SAAS+vC,OAAO,KAClCrwC,EAASM,SAAW+wC,YAAgBrxC,EAASM,SAAU0wC,EAAgB1wC,WAFvEN,EAASM,SAAW0wC,EAAgB1wC,SAMjCN,EAASM,WACZN,EAASM,SAAW,KAIxBN,EAAS1G,MAAQ0G,EAAS1G,OAASskC,KAAK0T,MAAMC,eAAeC,QAAQx3C,IAC9DgG,EAMT,SAASyxC,IACP,IAAIC,EAAS,KAiCb,IAAIC,EAAY,GA4BhB,MAAO,CACLC,UA5DF,SAAmBC,GAGjB,OADAH,EAASG,EACF,WACDH,IAAWG,IAAYH,EAAS,QAyDtCI,oBArDF,SAA6B9xC,EAAUsT,EAAQy+B,EAAqBnW,GAIlE,GAAc,MAAV8V,EAAgB,CAClB,IAAI5tC,EAA2B,oBAAX4tC,EAAwBA,EAAO1xC,EAAUsT,GAAUo+B,EAEjD,kBAAX5tC,EAC0B,oBAAxBiuC,EACTA,EAAoBjuC,EAAQ83B,GAG5BA,GAAS,GAIXA,GAAoB,IAAX93B,QAGX83B,GAAS,IAmCXoW,eA7BF,SAAwBC,GACtB,IAAI5yC,GAAW,EAEf,SAASuqC,IACHvqC,GAAU4yC,EAAGC,WAAM,EAAQC,WAIjC,OADAR,EAAUS,KAAKxI,GACR,WACLvqC,GAAW,EACXsyC,EAAYA,EAAU9Z,OAAO,SAAUxxB,GACrC,OAAOA,IAASujC,MAmBpByI,gBAdF,WACE,IAAK,IAAIC,EAAOH,UAAUv4C,OAAQ24C,EAAO,IAAIhf,MAAM+e,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQL,UAAUK,GAGzBb,EAAU9G,QAAQ,SAAUjB,GAC1B,OAAOA,EAASsI,WAAM,EAAQK,OAYpC,IAAIE,IAAiC,qBAAX/iB,SAA0BA,OAAOgjB,WAAYhjB,OAAOgjB,SAASh+C,eACvF,SAASi+C,EAAgBn/C,EAASooC,GAChCA,EAASlM,OAAOkjB,QAAQp/C,IAwC1B,IAAIq/C,EAAgB,WAChBC,EAAkB,aAEtB,SAASC,IACP,IACE,OAAOrjB,OAAOsjB,QAAQ15C,OAAS,GAC/B,MAAOyK,GAGP,MAAO,qDCrNEkvC,UAAax+C,gBAFY,8BCFzBy+C,EAAsC,SAAAphD,GAAK,OACtDqhD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,WACf,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,mBAAD,CACEx6C,UAAWu6C,EAAE,eACb71B,SAAU61B,EAAE,cACZxhB,SAAUwhB,EAAE,cACZvhB,iBAAkBuhB,EAAE,uBACpBthB,gBAAiBshB,EAAE,2BACnBj8C,MAAOvF,EAAMuF,MACb66B,UAAWpgC,EAAMogC,qDCfZshB,GCCqB/+C,YDDI,kBACpC0+C,EAAA,cAACI,EAAA,YAAD,KACEJ,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,WACf,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,mBAAD,CACEx6C,UAAWu6C,EAAE,aACb71B,SAAU61B,EAAE,YACZxhB,SAAUwhB,EAAE,YACZvhB,iBAAkBuhB,EAAE,qBACpBthB,gBAAiBshB,EAAE,kDEIhBG,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA9+C,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAshD,GAAA9+C,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA8+C,GAAAvB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA8+C,EAAAC,GAAA/+C,OAAAo/C,EAAA,EAAAp/C,CAAA8+C,EAAA,EAAAz5C,IAAA,SAAAyH,MAAA,WACkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACF,EAAWxT,SAAZ,KACG,SAAAuU,GAAA,IAAGC,EAAHD,EAAGC,OAAH,OACCd,EAAA,cAACe,EAAAj2B,EAAD,KACEk1B,EAAA,8BAAAv4C,OAAWmhC,EAAKjqC,MAAM+E,MAAtB,OAAA+D,OAAiCq5C,EAAOp9C,OACtC,oBAPd48C,EAAA,CAA+Bh/C,iBCLlB0/C,EAAgD,SAAAH,GAAkB,IAAfr+C,EAAeq+C,EAAfr+C,SACxDy+C,EAAU3/C,aAAiB4/C,GAUjC,OAPA5/C,YAAgB,WAGd,OAFA2/C,EAAQE,iBAED,WACLF,EAAQtkB,mBAET,IACIqjB,EAAA,cAAAA,EAAA,cAAGx9C,ICVC4+C,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA1Y,EAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAoiD,GAAA,QAAAjC,EAAAH,UAAAv4C,OAAA24C,EAAA,IAAAhf,MAAA+e,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAL,UAAAK,GAAA,OAAAzW,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,MAAAsiD,EAAA9/C,OAAAk/C,EAAA,EAAAl/C,CAAA4/C,IAAAG,KAAAxC,MAAAuC,EAAA,CAAAtiD,MAAAyI,OAAA23C,MAISj5C,MAAiC,GAJ1CyiC,EAAA,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAA4/C,EAAAC,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA4/C,EAAA,EAAAv6C,IAAA,oBAAAyH,MAAA,SAM2BpK,EAAc66B,GACrC//B,KAAKsI,SAAS,CACZpD,QACA66B,gBATN,CAAAl4B,IAAA,4BAAAyH,MAAA,SAcIhP,EACAs3C,GAEA53C,KAAKsI,SAAS,CACZpD,WAAOuB,EACPs5B,eAAWt5B,MAnBjB,CAAAoB,IAAA,SAAAyH,MAAA,WAuBkB,IAAAysC,EAAA/7C,KACd,OAAOA,KAAKmH,MAAMjC,OAASlF,KAAKmH,MAAM44B,UACpC//B,KAAKL,MAAM6iD,eACTlgD,gBAAoBtC,KAAKL,MAAM6iD,eAAgB,CAC7Ct9C,MAAOlF,KAAKmH,MAAMjC,MAClB66B,UAAW//B,KAAKmH,MAAM44B,YAGxBihB,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,WACf,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,mBAAD,CACEx6C,UAAWu6C,EAAE,eACb71B,SAAU61B,EAAE,cACZxhB,SAAUwhB,EAAE,cACZvhB,iBAAkBuhB,EAAE,uBACpBthB,gBAAiBshB,EAAE,kCACnBrhB,uBAAwBqhB,EAAE,6BAC1Bj8C,MAAO62C,EAAK50C,MAAMjC,MAClB66B,UAAWgc,EAAK50C,MAAM44B,cAM9B//B,KAAKL,MAAM6D,aA/CjB4+C,EAAA,CAAuC9/C,+BCF1B4/C,EAAY5/C,gBAFY,ICoBxBmgD,EAA2C,SAAAZ,GAAgB,IAAba,EAAab,EAAba,OAAaC,EAC1BvxC,oBAAS,GADiBwxC,EAAApgD,OAAAqgD,EAAA,EAAArgD,CAAAmgD,EAAA,GAC/DhlB,EAD+DilB,EAAA,GAC/CE,EAD+CF,EAAA,GAEhEG,EAAmB,kBAAMD,GAAkB,IAC3CE,EAAmB,kBAAMF,GAAkB,IAHqBG,EAK1B7xC,oBAAS,GALiB8xC,EAAA1gD,OAAAqgD,EAAA,EAAArgD,CAAAygD,EAAA,GAK/DE,EAL+DD,EAAA,GAK/CE,EAL+CF,EAAA,GAMhEG,EAAmB,WACvBD,GAAmBD,IAPiDG,EAU5BlyC,mBAA0B,IAVEmyC,EAAA/gD,OAAAqgD,EAAA,EAAArgD,CAAA8gD,EAAA,GAU/Dj8C,EAV+Dk8C,EAAA,GAUhDC,EAVgDD,EAAA,GAqBhEE,EAAuB,SAACltC,GAC5BitC,EACEn8C,EAAcq+B,OAAO,SAACge,GAAD,OAAsBA,EAAE77C,MAAQ0O,EAAa1O,QAItE,OACEm5C,EAAA,cAACkB,EAAUhkB,SAAX,CACE5uB,MAAO,CACL6yC,eAAgBY,EAChBY,iBApBmB,SAACC,EAAa7+C,GACrCy+C,EAAgB,GAAA/6C,OAAAjG,OAAAqhD,EAAA,EAAArhD,CACX6E,GADW,CAEd,CACEQ,IAAK6oB,KAAK1Y,MAAM8rC,WAChBziD,QAASuiD,EACT7+C,YAeA44B,eAAgBqlB,IAGlBhC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,MAAO,WACtB,SAAAC,GAEC,OACEH,EAAA,cAAAA,EAAA,cACGmC,GACCnC,EAAA,cAACI,EAAA,WAAD,CACEx9C,UAAW,GACXD,YANY,WAOZF,YAAa0/C,EACbz/C,kBAAmB2/C,EACnB9/C,SAAU,qDAEVy9C,EAAA,cAAC+C,EAAA,eAAD,KACG,SAAAC,GAAc,IAAXzuC,EAAWyuC,EAAXzuC,KAEaiqB,EAGXjqB,EAHF,aACYgqB,EAEVhqB,EAFF,YACAqZ,EACErZ,EADFqZ,QAEF,OACEoyB,EAAA,cAACI,EAAA,kBAAD,CACExyB,QAASA,EACT2Q,QAASA,EACTC,SAAUA,EACV77B,YAvBI,gBA8BhBq9C,EAAA,cAACI,EAAA,cAAD,CACE/5C,cAAeA,EACfuP,uBAAwB,IACxBqtC,yBAA0BR,IAE5BzC,EAAA,cAACI,EAAA,UAAD,CACEtjB,iBAAkBulB,EAClB7lB,OACEwjB,EAAA,cAACI,EAAA,WAAD,CAAYl1C,SAAU,aACpB80C,EAAA,cAACI,EAAA,eAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CACE13C,GAAI,UACJtG,UAAU,2BACV1C,SAAU29C,EAAE,cAKpB1jB,YAAailB,EAAOh7C,IAAI,SAACi/B,EAAO/+B,GAAR,OACpB++B,EAAiCwd,UASjCnD,EAAA,cAACI,EAAA,kBAAD,CACEpzC,MAAOmzC,EAAExa,EAAM34B,OACfnG,IAAKD,EACL4E,GAAI,KAEFm6B,EAAiCwd,UAAUz8C,IAC3C,SAAC08C,EAAUC,GAAX,OACErD,EAAA,cAACI,EAAA,kBAAD,CACEzzC,MAAOy2C,EAASz2C,MAChBK,MAAOmzC,EAAEiD,EAASp2C,OAClBxB,GAAI43C,EAAS53C,GACb3E,IAAKw8C,EACLC,cAAA,eAAA77C,OAA4B27C,EAAS53C,SApB7Cw0C,EAAA,cAACI,EAAA,kBAAD,CACEzzC,MAAQg5B,EAAoBh5B,MAC5BK,MAAOmzC,EAAGxa,EAAoB34B,OAC9BxB,GAAKm6B,EAAoBn6B,GACzB3E,IAAKD,EACL08C,cAAA,eAAA77C,OAA6Bk+B,EAAoBn6B,QAsBvD+xB,WACEyiB,EAAA,qBACE/mC,IAAKqkB,IACLpkB,IAAI,WACJxX,MAAO,CAAE6hD,SAAU,WAGvB7mB,SAAU,IACVC,eAAgBA,EAChBC,qBAAsBmlB,EACtBllB,mBAAoBmlB,GAEpBhC,EAAA,cAACwD,EAAA,WAAD,KACG,SAAAC,GAAA,IAAGn2C,EAAHm2C,EAAGn2C,MAAH,OACC0yC,EAAA,cAAC0D,EAAD,CAAmB78C,IAAKyG,EAAMi9B,KAC5ByV,EAAA,cAAC2D,EAAA,OAAD,KACGjC,EACEhf,OACC,SAACkhB,EAAiBje,GAAlB,SAAAl+B,OAAAjG,OAAAqhD,EAAA,EAAArhD,CACKoiD,GADLpiD,OAAAqhD,EAAA,EAAArhD,CAEQmkC,EAAiCwd,UAElCxd,EAAiCwd,UADlC,CAACxd,MAGP,IAEDj/B,IAAI,SAACi/B,EAAO/+B,GAAR,OACHo5C,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMy4B,EAAMn6B,GACZmB,MAAOg5B,EAAMh5B,MACb9C,UAAW87B,EAAM97B,UACjBhD,IAAKD,MAGXo5C,EAAA,cAAC2D,EAAA,MAAD,CAAO95C,UAAWw2C,cCnJ7BwD,EAA8C,SAAAhD,GAGrD,IAFJC,EAEID,EAFJC,OACAY,EACIb,EADJa,OA+BA,OACE1B,EAAA,cAACF,EAAW5iB,SAAZ,CACE5uB,MAAO,CACLwyC,SACAgD,aA7Be,SACnB9R,GAEA,GACG8O,GACA9O,GACAA,EAAW+R,UACX/R,EAAWgS,WACXhS,EAAWiS,QALd,CASA,IAAM9Y,EAAO,GAAA1jC,OAAMq5C,EAAOoD,WAAb,aAAAz8C,OACXuqC,EAAWgS,UADA,iBAAAv8C,OAEGuqC,EAAWiS,QAFd,SAGb,OAAQjS,EAAW+R,UACjB,IAAK,OACH,OAAO5Y,EAAU,OACnB,IAAK,SACH,OAAOA,EAAU,SACnB,QACE,UASAgZ,OAlCS,eAqCXnE,EAAA,cAACoE,EAAD,CAAI1C,OAAQA,+BC7BL2C,EAAb,SAAAhD,GAAA,SAAAgD,IAAA,IAAA/C,EAAA1Y,EAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAqlD,GAAA,QAAAlF,EAAAH,UAAAv4C,OAAA24C,EAAA,IAAAhf,MAAA+e,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAL,UAAAK,GAAA,OAAAzW,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,MAAAsiD,EAAA9/C,OAAAk/C,EAAA,EAAAl/C,CAAA6iD,IAAA9C,KAAAxC,MAAAuC,EAAA,CAAAtiD,MAAAyI,OAAA23C,MAISj5C,MAAQ,CACbjC,OAAO,EACPqI,SAAS,GANbq8B,EAAA,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAA6iD,EAAAhD,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6iD,EAAA,EAAAx9C,IAAA,oBAAAyH,MAAA,eAAAg2C,EAAA9iD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAA,SAAAC,IAAA,IAAAC,EAAA7D,EAAA,OAAA0D,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAWmCza,MAAK,GAAA7iC,OAC7Bu9C,kDAD6B,iBAXxC,cAWYL,EAXZE,EAAAI,KAAAJ,EAAAE,KAAA,EAc2BJ,EAAenZ,OAd1C,OAcYsV,EAdZ+D,EAAAI,KAeMjmD,KAAKsI,SAAS,CACZw5C,SACAv0C,SAAS,IAjBjBs4C,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAoBM7lD,KAAKsI,SAAS,CACZpD,OAAO,EACPqI,SAAS,IAtBjB,yBAAAs4C,EAAAM,SAAAT,EAAA1lD,KAAA,sCAAAslD,EAAAvF,MAAA//C,KAAAggD,YAAA,KAAAn4C,IAAA,SAAAyH,MAAA,WA4BI,OAAOtP,KAAKL,MAAM6D,SAASxD,KAAKmH,WA5BpCk+C,EAAA,CAAgC/iD,wNCtBhC8jD,GAAGA,GAAGvP,IAAMwP,EACZC,GAAGA,GAAGzP,IAAM0P,EAGZH,GAAGA,GAAGI,QAAQC,oBAAsBC,GACpCJ,GAAGA,GAAGE,QAAQC,oBAAsBE,GAGpCP,GAAGA,GAAGI,QAAQI,SAAWC,GACzBP,GAAGA,GAAGE,QAAQI,SAAWE,GAGzBV,GAAGA,GAAGI,QAAQliC,YAAcyiC,GAC5BT,GAAGA,GAAGE,QAAQliC,YAAc0iC,GAG5BZ,GAAGA,GAAGI,QAAQS,WAAaC,GAC3BZ,GAAGA,GAAGE,QAAQS,WAAaE,GAG3Bf,GAAGA,GAAGI,QAAQY,UAAYC,GAC1Bf,GAAGA,GAAGE,QAAQY,UAAYE,GAG1BlB,GAAGA,GAAGI,QAAQjxC,KAAOgyC,GACrBjB,GAAGA,GAAGE,QAAQjxC,KAAOiyC,GAGrBpB,GAAGA,GAAGI,QAAQrT,aAAesU,GAC7BnB,GAAGA,GAAGE,QAAQrT,aAAeuU,GC7C7B,IAAMrY,GAAU,CACdsY,cAAe,CACbC,aAAa,GAGfC,OAAO,EAEPC,UAAW,CACT1B,GAAI,CACFK,oBAAqBL,GAAGA,GAAGI,QAAQC,oBACnC5P,IAAKuP,GAAGA,GAAGvP,IACXvyB,YAAa8hC,GAAGA,GAAGI,QAAQliC,YAC3B8iC,UAAWhB,GAAGA,GAAGI,QAAQY,UACzB7xC,KAAM6wC,GAAGA,GAAGI,QAAQjxC,KACpB0xC,WAAYb,GAAGA,GAAGI,QAAQS,WAC1B9T,aAAciT,GAAGA,GAAGI,QAAQrT,aAC5ByT,SAAUR,GAAGA,GAAGI,QAAQI,SACxBmB,OAAQ3B,GAAGA,GAAG2B,QAEhBzB,GAAI,CACFG,oBAAqBH,GAAGA,GAAGE,QAAQC,oBACnC5P,IAAKyP,GAAGA,GAAGzP,IACXvyB,YAAagiC,GAAGA,GAAGE,QAAQliC,YAC3B8iC,UAAWd,GAAGA,GAAGE,QAAQY,UACzB7xC,KAAM+wC,GAAGA,GAAGE,QAAQjxC,KACpB0xC,WAAYX,GAAGA,GAAGE,QAAQS,WAC1B9T,aAAcmT,GAAGA,GAAGE,QAAQrT,aAC5ByT,SAAUN,GAAGA,GAAGE,QAAQI,SACxBmB,OAAQzB,GAAGA,GAAGyB,SAIlBC,UAAW,SACXC,YAAqD,KACrDC,WAAY,CAAC,UACbC,aAAc,IACdjH,GAAI,CACF,SACA,MACA,sBACA,cACA,YACA,aACA,eACA,aAIJkH,IAAKC,IAAIC,KAAkBC,KAAKlZ,IACjB+Y,SAAf,oBCnDeI,sBAAQ,iBAAkB,CACvCC,aAAc,kBACdC,OAAQF,mBAAQ,2BAA4B,CAC1CG,OAAQ,SACRC,KAAM,OACNC,SAAU,WACVC,OAAQ,WAEVC,KAAM,KCsCR,IAAMC,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAA6B,CAAC+1C,IAE9BC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAEXC,6LACMC,GACvB,YAAkB1iD,IAAX0iD,EAAIhzC,4CAGWgzC,GACtB,IAAMC,EAAYC,2BAAiBF,EAAIG,MAEvC,OAAkB,IAAdF,EACKhB,GAAKjH,EAAE,iCAGTiH,GAAKjH,EAAE,kCAAmC,CAAEz0C,MAAO08C,yCAGxC7rC,GAElBgsC,MAAM,+BAAiChsC,yCAGpBA,GAEnBgsC,MAAM,wCAA0ChsC,oCAGlC,IAAAqsB,EAAA5pC,KACd,OACEghD,EAAA,cAAC+C,EAAA,kBAAD,KACG,SAAAlC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAMw2B,EAAT8V,EAAS9V,QAAS7mC,EAAlB28C,EAAkB38C,MAAlB,OACC87C,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMC,EA7EpB,SACEC,EACA31C,EACAT,EACAM,GAEA,IAAI61C,EAAoBC,EAiBxB,OAhBA31C,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClCwP,EAAoBA,EAAkB/jB,OAAO,SAACyjB,GAAD,OAC3CA,EAAInkD,KAAKi1C,cAAc2P,SAASD,OAIpCF,EAAoBA,EAAkB5lB,KAAK,SAACgmB,EAASC,GACnD,OAAIl2C,EACKi2C,EAAQ7kD,KAAK+kD,cAAcD,EAAQ9kD,MAIrC8kD,EAAQ9kD,KAAK+kD,cAAcF,EAAQ7kD,QAyDNglD,CACxBz0C,EAAKkV,MACL++B,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,sBAAuB,WACtC,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,iBAAD,CACEx6C,UAAWu6C,EAAE,uCACbrqC,gBAAiBqqC,EACf,+CAGJH,EAAA,cAACI,EAAA,qBAAD5+C,OAAAC,OAAA,CACEwQ,YAAaA,GACbI,UAAWA,GACXqL,uBAAwBgkC,GAAOgG,OAAOI,OACtCthC,aAAciiC,EAAkBhiD,QAC5B+hD,EALN,CAME5iD,UAAW,GACXkQ,gBAAiB,GACjBiI,mBAAoBoiC,EAAE,+BACtBriC,oBAAqBqiC,EACnB,mCAEFxiC,2BAA4BwiC,EAC1B,mCAEFliC,8BAA+BkiC,EAC7B,sCAEF5+B,SAAU4+B,EAAE,eACZntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAO+8C,EAAkBhiD,WAG3Bu5C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAACI,EAAA,yBAAD,CACEz+C,MAAO,IACPD,MAAO,CACLunD,gBAAiB,OACjBn5B,UAAW,MAIjBwV,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCT,EACG/jB,OAAO,SAACyjB,GAAD,OACNvf,EAAKugB,kBAAkBhB,KAExBzhD,IAAI,SAACyhD,EAAgBvhD,GAAjB,OACHo5C,EAAA,cAACI,EAAA,qBAAD,CACEv5C,IAAKD,EACL2V,eAAgB4rC,EAAIhzC,GACpB8H,wBAAyBkrC,EAAIhvC,YAC7BmE,iBAAkB6qC,EAAI5jD,KACtB4Y,iBAAkBgrC,EAAInkD,KACtBmY,WAAYgkC,EAAE,iBACd7jC,YAAa6jC,EAAE,kBACf9jC,eAAgB8jC,EACd,uCAEFnjC,kBAAmB4rB,EAAKwgB,iBAAiBjB,GACzC1wC,SAAUmxB,EAAK7sB,aACfS,UAAWosB,EAAK5sB,cAChBa,OAAQwrC,2BAAiBF,EAAIG,2BA5GhBhnD,aC5DlC+nD,GAAb,SAAAhI,GAAA,SAAAgI,IAAA,OAAA7nD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAqqD,GAAA7nD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA6nD,GAAAtK,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA6nD,EAAAhI,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6nD,EAAA,EAAAxiD,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOqG,KAAMp7C,OAAO,EAAM9C,UAAWq+C,UAJ1DmB,EAAA,CAA+C/nD,aCAhCgoD,GAAA,CACb7B,aAAc8B,uBACZ7H,GAAO+F,aACP,SAAA5G,GAAA,IAAG4G,EAAH5G,EAAG4G,aAAH,MAAuB,CACrB7hB,OAAQ,CACNrpB,eAAgBkrC,EAAatyC,IAE/BhP,MAAO,CACLshD,mBAINC,OAAQ,CACNI,OAAQ0B,+BAAqB9H,GAAOgG,OAAOI,QAC3CH,OAAQ6B,+BAAqB9H,GAAOgG,OAAOC,QAC3CE,SAAU2B,+BAAqB9H,GAAOgG,OAAOG,UAC7CD,KAAM4B,+BAAqB9H,GAAOgG,OAAOE,OAE3CG,KAAMyB,+BAAqB9H,GAAOqG,OCpBrBP,sBAAQ,eAAgB,CACrClkC,YAAa,GACbuqB,WAAY2Z,mBAAQ,gBAAiB,CACnCiC,KAAM,OACNC,QAAS,KAEXhC,OAAQF,mBAAQ,SAAU,CACxBmC,gBAAiB,oBACjBC,mBAAoB,gCACpBjC,OAAQ,SACRkC,KAAM,OCRKC,GAAA,CACbxmC,YAAakmC,+BAAqB9H,GAAOp+B,aACzCuqB,WAAY,CACV6b,QAASH,uBACP7H,GAAO7T,WAAW6b,QAClB,SAAA7I,GAAA,IAAGhT,EAAHgT,EAAGhT,WAAH,MAAqB,CACnBjI,OAAQ,CACN6H,aAAcI,EAAW14B,IAE3BhP,MAAO,CACL0nC,iBAIN4b,KAAMF,uBACJ7H,GAAO7T,WAAW4b,KAClB,SAAAzG,GAAA,IAAGnV,EAAHmV,EAAGnV,WAAH,MAAqB,CACnBjI,OAAQ,CACN6H,aAAcI,EAAW14B,IAE3BhP,MAAO,CACL0nC,kBAKR6Z,OAAQ,CACNiC,gBAAiBH,+BAAqB9H,GAAOgG,OAAOiC,iBACpDC,mBAAoBL,uBAEjB7H,GAAOgG,OAAOkC,mBAAoB,SAAAnG,GAAA,IAAG9Q,EAAH8Q,EAAG9Q,UAAH,MAAoB,CACvD/M,OAAQ,CACNoP,YAAarC,EAAUx9B,IAEzBhP,MAAO,CACLwsC,gBAGJgV,OAAQ4B,uBAGL7H,GAAOgG,OAAOC,OAAQ,SAAAoC,GAAA,MAA0C,CACjE5jD,MAAO,CACLwsC,UAFqBoX,EAAGpX,UAGxBhF,qBAHqBoc,EAAcpc,2BC5C5B6Z,sBAAQ,IAAK,CAC1BqC,KAAM,KCaO,IALelkB,GAKfqkB,GAAA,CACbH,MAN4BlkB,GAMD+b,GAAOmI,KAL3B,kBAAMxiB,mBAAQ1B,OCVR6hB,sBAAQ,QAAS,CAC9BqC,KAAM,GACNI,gBAAiBzC,mBAAQ,kBAAmB,CAC1CE,OAAQ,SACRwC,OAAQ,SACRnC,KAAM,GACNnN,eAAgB4M,mBAAQ,oBAAqB,CAC3C2C,QAAS,UACTC,aAAc,eACdP,KAAM,GACNQ,UAAW,YACXC,MAAO9C,mBAAQ,QAAS,CACtB+C,aAAc/C,mBAAQ,eAAgB,CACpCqC,KAAM,GACNW,iBAAkB,mBAClBC,YAAa,gBAEfZ,KAAM,WCbCa,GAAA,CACbT,gBAAiB,CACfK,MAAO,CACLT,KAAMN,uBACJ7H,GAAOuI,gBAAgBrP,eAAe0P,MAAMT,KAC5C,SAAAhJ,GAAA,IAAGjG,EAAHiG,EAAGjG,eAAH,MAAyB,CACvBhV,OAAQ,CACNgW,iBAAkBhB,EAAeF,UAEnCv0C,MAAO,CACLy0C,qBAIN2P,aAAc,CACZV,KAAML,+BACJ9H,GAAOuI,gBAAgBrP,eAAe0P,MAAMC,aAAaV,MAE3DW,iBAAkBjB,uBAChB7H,GAAOuI,gBAAgBrP,eAAe0P,MAAMC,aACzCC,iBACH,SAAAxH,GAAA,IAAGpI,EAAHoI,EAAGpI,eAAH,MAAyB,CACvBhV,OAAQ,CACNgW,iBAAkBhB,EAAeF,UAEnCv0C,MAAO,CACLy0C,qBAIN6P,YAAalB,uBAIX7H,GAAOuI,gBAAgBrP,eAAe0P,MAAMC,aAAaE,YACzD,SAAAhH,GAAA,IAAGhW,EAAHgW,EAAGhW,aAAcmN,EAAjB6I,EAAiB7I,eAAjB,MAAuC,CACrChV,OAAQ,CACNgW,iBAAkBhB,EAAeF,UAEnCv0C,MAAO,CACLsnC,eACAmN,uBAMVwP,aAAcb,uBACZ7H,GAAOuI,gBAAgBrP,eAAewP,aACtC,SAAAL,GAAA,IAAGnP,EAAHmP,EAAGnP,eAAH,MAAyB,CACvBhV,OAAQ,CACNgW,iBAAkBhB,EAAeF,UAEnCv0C,MAAO,CACLy0C,qBAINyP,UAAWd,uBACT7H,GAAOuI,gBAAgBrP,eAAeyP,UACtC,SAAAM,GAAA,IAAG/P,EAAH+P,EAAG/P,eAAH,MAAyB,CACvBhV,OAAQ,CACNgW,iBAAkBhB,EAAeF,UAEnCv0C,MAAO,CACLy0C,qBAINuP,QAASZ,uBACP7H,GAAOuI,gBAAgBrP,eAAeuP,QACtC,SAAAS,GAAA,IAAGhQ,EAAHgQ,EAAGhQ,eAAH,MAAyB,CACvBhV,OAAQ,CACNgW,iBAAkBhB,EAAeF,UAEnCv0C,MAAO,CACLy0C,qBAIN8M,OAAQ8B,+BAAqB9H,GAAOuI,gBAAgBvC,QACpDwC,OAAQV,+BAAqB9H,GAAOuI,gBAAgBC,QACpDnC,KAAMyB,+BAAqB9H,GAAOuI,gBAAgBlC,OAEpD8B,KAAML,+BAAqB9H,GAAOuI,gBAAgBlC,OCxFrCP,sBAAQ,cAAe,CACpCxT,UAAWwT,mBAAQ,eAAgB,CACjCkC,QAAS,GACTmB,OAAQ,WAEVX,OAAQ,SACRnC,KAAM,KCHO+C,GAAA,CACb9W,UAAW,CACT0V,QAASH,uBACP7H,GAAO1N,UAAU0V,QACjB,SAAA7I,GAAA,IAAG7M,EAAH6M,EAAG7M,UAAH,MAAoB,CAClBpO,OAAQ,CACNtlB,YAAa0zB,EAAU7+B,IAEzBhP,MAAO,CACL6tC,gBAIN6W,OAAQtB,uBACN7H,GAAO1N,UAAU6W,OACjB,SAAA7H,GAAA,IAAGhP,EAAHgP,EAAGhP,UAAH,MAAoB,CAClBpO,OAAQ,CACNtlB,YAAa0zB,EAAU7+B,IAEzBhP,MAAO,CACL6tC,iBAKRkW,OAAQV,+BAAqB9H,GAAOwI,QACpCnC,KAAMyB,+BAAqB9H,GAAOqG,0BC5B9BgD,GAAa,CAEjBC,WAAY,GAEZC,YAAazD,mBAAQ,eAAgB,CACnCM,OAAQ,GACRH,OAAQ,SACR8B,KAAM,SAGRyB,WAAY,SAEZC,YAAa,SAEbC,SAAU,WAEVh8B,KAAM,OAEN4kB,UAAW,YAEXnG,WAAY2Z,mBAAQ,2BAA4B,CAC9C6D,aAAc,GACdC,gBAAiB,kBAEjBC,aAAc,sDAQZC,GAAehE,mBAAQ,UAAW,CACtC5gD,MAAO,WACP6kD,QAASjE,mBAAQ,gBAAiBuD,IAClCW,SAAUlE,mBAAQ,iBAAkBuD,IACpCY,eAAgB,OAChB9B,KAAM,KAGOrC,sBAAQ,gBAAiB,CACtCO,KAAM,GACN6D,WAAYpE,mBAAQ,aAAc,CAAEqC,KAAM,KAC1CK,OAAQ,SACRxC,OAAQF,mBAAQ,SAAU,CACxB73B,MAAO63B,mBAAQ,0BAA2BuD,IAC1Cc,OAAQrE,mBAAQ,2BAA4BuD,IAC5Ce,UAAWtE,mBAAQ,YAAagE,IAChC3B,KAAM,KAERjc,YAAa4Z,mBAAQ,iBAAkB,CACrCkC,QAAS,UACTqC,SAAU,WACV5B,QAAS,UACTV,KAAMjC,mBAAQ,OAAQgE,IACtB3B,KAAM,OCTGmC,GAAuB,SAAAnL,GAAA,IAClC/S,EADkC+S,EAClC/S,OACAF,EAFkCiT,EAElCjT,YAFkC,MAGf,CACnBhI,OAAOpkC,OAAAyqD,GAAA,EAAAzqD,CAAA,CACLssC,OAAQA,GAAkBF,EAAYM,MAAO,GAAG/4B,IAC5Cy4B,GAAeA,EAAYz4B,GAAK,CAAEuM,cAAeksB,EAAYz4B,IAAO,IAE1EhP,MAAO,CACLynC,iBAISse,GAAkC,SAAAlJ,GAGhB,IAF7B34C,EAE6B24C,EAF7B34C,SACG4C,EAC0BzL,OAAA2qD,GAAA,EAAA3qD,CAAAwhD,EAAA,cAAAoJ,EACHJ,GAAqB/+C,GAAvC24B,EADqBwmB,EACrBxmB,OAAQz/B,EADaimD,EACbjmD,MAChB,MAAO,CACLy/B,OAAOpkC,OAAAyqD,GAAA,EAAAzqD,CAAA,GACFokC,EADC,CAEJv7B,aAEFlE,UAISkmD,GAA8B,SAAA5I,GAGhB,IAFzB5V,EAEyB4V,EAFzB5V,WACG5gC,EACsBzL,OAAA2qD,GAAA,EAAA3qD,CAAAiiD,EAAA,gBAAA6I,EACCJ,GAAgCj/C,GAAlD24B,EADiB0mB,EACjB1mB,OAAQz/B,EADSmmD,EACTnmD,MAChB,MAAO,CACLy/B,OAAOpkC,OAAAyqD,GAAA,EAAAzqD,CAAA,GACFokC,EADC,CAEJ6H,aAAcI,EAAW14B,KAE3BhP,MAAM3E,OAAAyqD,GAAA,EAAAzqD,CAAA,GACD2E,EADA,CAEH0nC,iBAKO0e,GAAiC,SAAAxC,GAQhB,IAP5Brc,EAO4Bqc,EAP5Brc,SACAI,EAM4Bic,EAN5Bjc,OACA1e,EAK4B26B,EAL5B36B,KACAwe,EAI4Bmc,EAJ5Bnc,YACA4e,EAG4BzC,EAH5ByC,mBACAniD,EAE4B0/C,EAF5B1/C,SACG4C,EACyBzL,OAAA2qD,GAAA,EAAA3qD,CAAAuoD,EAAA,4EAAA0C,EACFJ,GAA4B7qD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACjDyL,EADgD,CAEnD6gC,SACAF,cACAvjC,cAJMu7B,EADoB6mB,EACpB7mB,OAAQz/B,EADYsmD,EACZtmD,MAMVumD,EAAmBxpB,SAAS74B,EAAU,IACtCsiD,EAAa/Y,kBAAQhG,EAAaE,EAAQ4e,IAAqB,GACrE,MAAO,CACL9mB,OAAOpkC,OAAAyqD,GAAA,EAAAzqD,CAAA,GACFokC,EADC,CAEJ8H,WACAte,KAAI,GAAA3nB,OAAK2nB,GAAQ,KAEnBjpB,MAAM3E,OAAAyqD,GAAA,EAAAzqD,CAAA,GACD2E,EADA,CAEHqmD,qBACA7e,qBAAsBgf,EAAWhf,sBAAwB,OAOlDif,GAAepD,+BAAqB9H,GAAOqG,MAE3C8E,GAAqBrD,+BAAqB9H,GAAOkK,WAAW/B,MAE5DiD,GAAqBtD,+BAAqB9H,GAAOgG,OAAOmC,MAExDkD,GAAgCC,2CAG3CtL,GAAOgG,OAAO/3B,MAAMq7B,WAAY,WAChC,IAAMpd,EAAcqf,gCACpB,MAAO,CACLrnB,OAAQ,CACNkI,OAAQF,EAAYM,MAAO,GAAG/4B,GAC9B9K,SAAU,KAEZlE,MAAO,CACLynC,kBAKOsf,GAAkC3D,uBAI7C7H,GAAOgG,OAAO/3B,MAAMke,WAAWwd,aAAcgB,IAElCc,GAAqC5D,uBAKhD7H,GAAOgG,OAAO/3B,MAAMke,WAAWyd,gBAC/BiB,IAGWa,GAAiC7D,uBAI5C7H,GAAOgG,OAAOmE,OAAOb,WAAYkB,IAEtBmB,GAAmC9D,uBAI9C7H,GAAOgG,OAAOmE,OAAOhe,WAAWwd,aAAcgB,IAEnCiB,GAAsC/D,uBAKjD7H,GAAOgG,OAAOmE,OAAOhe,WAAWyd,gBAChCiB,IAGWgB,GAA+BhE,uBAI1C7H,GAAOgG,OAAOoE,UAAUllD,MAAOolD,IAEpBwB,GAA2CjE,uBAItD7H,GAAOgG,OAAOoE,UAAUL,QAAQT,WAAYkB,IAEjCuB,GAA6ClE,uBAKxD7H,GAAOgG,OAAOoE,UAAUL,QAAQ5d,WAAWwd,aAC3CgB,IAGWqB,GAAgDnE,uBAK3D7H,GAAOgG,OAAOoE,UAAUL,QAAQ5d,WAAWyd,gBAC3CiB,IAGWoB,GAA8CpE,uBAKzD7H,GAAOgG,OAAOoE,UAAUJ,SAAS7d,WAAWwd,aAC5CgB,IAGWuB,GAAiDrE,uBAK5D7H,GAAOgG,OAAOoE,UAAUJ,SAAS7d,WAAWyd,gBAC5CiB,IAGWsB,GAAgDtE,uBAI3D7H,GAAOgG,OAAOoE,UAAUH,eAAgBK,IAE7B8B,GAA8BvE,uBAIzC7H,GAAO9T,YAAYme,SAAU,SAAApB,GAAA,MAAqC,CAClE/kB,OAAQ,CACNlkB,cAF2BipC,EAAGjpC,eAIhCvb,MAAO,CACLynC,YAL2B+c,EAAkB/c,gBASpCmgB,GAA6BxE,uBAIxC7H,GAAO9T,YAAY8b,QAAS,SAAAkB,GAAA,MAAqC,CACjEhlB,OAAQ,CACNlkB,cAF0BkpC,EAAGlpC,eAI/Bvb,MAAO,CACLynC,YAL0Bgd,EAAkBhd,gBASnCogB,GAA+BzE,uBAI1C7H,GAAO9T,YAAY6b,KAAK7iD,MAAOolD,IAEpBiC,GAA2C1E,uBAItD7H,GAAO9T,YAAY6b,KAAKgC,QAAQT,WAAYkB,IAEjCgC,GAA6C3E,uBAKxD7H,GAAO9T,YAAY6b,KAAKgC,QAAQ5d,WAAWwd,aAC3CgB,IAGW8B,GAAgD5E,uBAK3D7H,GAAO9T,YAAY6b,KAAKgC,QAAQ5d,WAAWyd,gBAC3CiB,IAGW6B,GAA8C7E,uBAKzD7H,GAAO9T,YAAY6b,KAAKiC,SAAS7d,WAAWwd,aAC5CgB,IAGWgC,GAAiD9E,uBAK5D7H,GAAO9T,YAAY6b,KAAKiC,SAAS7d,WAAWyd,gBAC5CiB,IAGW+B,GAAgC/E,uBAI3C7H,GAAO9T,YAAY6b,KAAKkC,eAAgBK,IAE7BuC,GAAkBhF,uBAI7B7H,GAAO9T,YAAYuc,QAAS,SAAAqE,GAAA,MAAqC,CACjE5oB,OAAQ,CACNlkB,cAF0B8sC,EAAG9sC,eAI/Bvb,MAAO,CACLynC,YAL0B4gB,EAAkB5gB,gBAgKjC0b,GAnJiC,CAC9CvB,KAAM6E,GACNhB,WAAY,CACV/B,KAAMgD,IAERnF,OAAQ,CACNmC,KAAMiD,GACNn9B,MAAO,CACLq7B,WAAY+B,GACZlf,WAAY,CACVwd,aAAc6B,GACd5B,gBAAiB6B,GACjB5B,aAAc,iBAAM,iBAEtBN,YAAa,CACXnD,OAAQ0B,+BAAqB9H,GAAOgG,OAAO/3B,MAAMs7B,YAAYnD,QAC7DH,OAAQ,iBAAM,UACd8B,KAAM,iBAAM,SAEd0B,YAAa,iBAAM,eACnBD,WAAY,iBAAM,cAClBE,SAAU,iBAAM,YAChBh8B,KAAM,iBAAM,QACZ4kB,UAAW,iBAAM,cAEnB6X,OAAQ,CACNb,WAAYoC,GACZvf,WAAY,CACVwd,aAAcgC,GACd/B,gBAAiBgC,GACjB/B,aAAc,iBAAM,iBAEtBN,YAAa,CACXnD,OAAQ0B,+BAAqB9H,GAAOgG,OAAOmE,OAAOZ,YAAYnD,QAC9DH,OAAQ,iBAAM,UACd8B,KAAM,iBAAM,SAEd0B,YAAa,iBAAM,eACnBD,WAAY,iBAAM,cAClBE,SAAU,iBAAM,YAChBh8B,KAAM,iBAAM,QACZ4kB,UAAW,iBAAM,cAEnB8X,UAAW,CACTjC,KAAMiD,GACNlmD,MAAO2mD,GACP9B,QAAS,CACPT,WAAYwC,GACZ3f,WAAY,CACVwd,aAAcoC,GACdnC,gBAAiBoC,GACjBnC,aAAc,iBAAM,iBAEtBN,YAAa,CACXnD,OAAQ0B,+BACN9H,GAAOgG,OAAOoE,UAAUL,QAAQR,YAAYnD,QAE9CH,OAAQ,iBAAM,UACd8B,KAAM,iBAAM,SAEd0B,YAAa,iBAAM,eACnBD,WAAY,iBAAM,cAClBE,SAAU,iBAAM,YAChBh8B,KAAM,iBAAM,QACZ4kB,UAAW,iBAAM,cAEnB0X,SAAU,CACRV,WAAY,WACV,MAAM,IAAIp+B,MAAM,kCAElBihB,WAAY,CACVwd,aAAcsC,GACdrC,gBAAiBsC,GACjBrC,aAAc,iBAAM,iBAEtBN,YAAa,CACXnD,OAAQ0B,+BACN9H,GAAOgG,OAAOoE,UAAUJ,SAAST,YAAYnD,QAE/CH,OAAQ,iBAAM,UACd8B,KAAM,iBAAM,SAEd0B,YAAa,iBAAM,eACnBD,WAAY,iBAAM,cAClBE,SAAU,iBAAM,YAChBh8B,KAAM,iBAAM,QACZ4kB,UAAW,iBAAM,cAEnB2X,eAAgBkC,KAGpBjgB,YAAa,CACXic,KAAMiD,GACNf,SAAU+B,GACVpE,QAASqE,GACTtE,KAAM,CACJI,KAAMiD,GACNlmD,MAAOonD,GACPvC,QAAS,CACPT,WAAYiD,GACZpgB,WAAY,CACVwd,aAAc6C,GACd5C,gBAAiB6C,GACjB5C,aAAc,iBAAM,iBAEtBN,YAAa,CACXnD,OAAQ0B,+BACN9H,GAAO9T,YAAY6b,KAAKgC,QAAQR,YAAYnD,QAE9CH,OAAQ,iBAAM,UACd8B,KAAM,iBAAM,SAEd0B,YAAa,iBAAM,eACnBD,WAAY,iBAAM,cAClBE,SAAU,iBAAM,YAChBh8B,KAAM,iBAAM,QACZ4kB,UAAW,iBAAM,cAEnB0X,SAAU,CACRV,WAAY,WACV,MAAM,IAAIp+B,MAAM,kCAElBihB,WAAY,CACVwd,aAAc+C,GACd9C,gBAAiB+C,GACjB9C,aAAc,iBAAM,iBAEtBN,YAAa,CACXnD,OAAQ0B,+BACN9H,GAAO9T,YAAY6b,KAAKiC,SAAST,YAAYnD,QAE/CH,OAAQ,iBAAM,UACd8B,KAAM,iBAAM,SAEd0B,YAAa,iBAAM,eACnBD,WAAY,iBAAM,cAClBE,SAAU,iBAAM,YAChBh8B,KAAM,iBAAM,QACZ4kB,UAAW,iBAAM,cAEnB2X,eAAgB2C,IAElBnE,QAASoE,IAEXrE,OAAQV,+BAAqB9H,GAAOwI,SC7dvB1C,sBAAQ,YAAa,CAClCiH,UAAWjH,mBAAQ,aAAc,CAC/BqC,KAAM,KAERA,KAAM,KCHO6E,GAAA,CACbD,UAAWjF,+BAAqB9H,GAAO+M,UAAU5E,MACjDA,KAAML,+BAAqB9H,GAAOmI,OCGrB8E,GAAA,CACblJ,uBACAniC,eACA8iC,aACA7xC,QACA0xC,cACA9T,gBACAyT,sBCSWgJ,GAAb,SAAAvN,GAQE,SAAAuN,EAAYjwD,GAA2C,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA4vD,IACrDhmB,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAotD,GAAArN,KAAAviD,KAAML,KALDwH,MAAQ,CACb8H,QAAQ,GAKR26B,EAAKimB,aAAejmB,EAAKimB,aAAa5vD,KAAlBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAFiCA,EARzD,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAotD,EAAAvN,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAotD,EAAA,EAAA/nD,IAAA,eAAAyH,MAAA,WAcItP,KAAKsI,SAAS,CACZ2G,QAASjP,KAAKmH,MAAM8H,WAf1B,CAAApH,IAAA,SAAAyH,MAAA,WAoBI,OACE0xC,EAAA,cAACI,EAAA,YAAD,CACEnyC,OAAQjP,KAAKmH,MAAM8H,OACnBC,UACE8xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9BtlB,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO,qBAETs8C,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9BtlB,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO,yBAETs8C,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9BtlB,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO,qBAIbyK,SACE6xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9B8O,OAAO,EACPp0B,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO,qBAETs8C,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9B8O,OAAO,EACPp0B,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO,yBAETs8C,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9B8O,OAAO,EACPp0B,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO,2BAxErBkrD,EAAA,CAAkDttD,aCCrCytD,GAAb,SAAA1N,GAAA,SAAA0N,IAAA,OAAAvtD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA+vD,GAAAvtD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAutD,GAAAhQ,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAutD,EAAA1N,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAutD,EAAA,EAAAloD,IAAA,SAAAyH,MAAA,WACkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAACkB,EAAU5U,SAAX,KACG,SAAAuU,GAA0B,IAAvB8B,EAAuB9B,EAAvB8B,iBACF,OACE3C,EAAA,cAAC+C,EAAA,sBAAD,KACG,SAAAC,GAA0B,IAAvBpO,EAAuBoO,EAAvBpO,iBACIp9B,EAAQ,eAAAisC,EAAAjiD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EACfjX,EACArzB,GAFe,IAAAsvC,EAAA,OAAAlF,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKPnQ,EAAiBnH,GALV,OAMbkV,EACExC,EAAE,2BAA4B,CAAE/lC,mBAChC,WARWyqC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAWP6E,EAAU7E,EAAAK,GAAM7kD,QAAUwkD,EAAAK,GAAM7kD,QAAU,GAChDsiD,EACExC,EAAE,0BAA2B,CAC3B/lC,iBACAsvC,YAEF,SAjBW,yBAAA7E,EAAAM,SAAAT,EAAA,iBAAH,gBAAAsK,EAAAC,GAAA,OAAAxL,EAAA1E,MAAA//C,KAAAggD,YAAA,GAsBd,OACEgB,EAAA,cAACI,EAAA,gBAAD,KACEJ,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAO0kC,EAAKjqC,MAAMuF,MAClBqI,QAASq8B,EAAKjqC,MAAM4N,QACpBg5B,eACEya,EAAA,cAAAA,EAAA,cACG,IAAI5f,MAAM,GAAG8uB,KAAK,GAAGxoD,IAAI,SAACyoD,EAAGvoD,GAAJ,OACxBo5C,EAAA,cAACI,EAAA,oBAAD,CAAqBv5C,IAAKD,GACxBo5C,EAAA,cAACI,EAAA,mBAAD,UAKR9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCtgB,EAAKjqC,MAAM2kB,YAAY5c,IAAI,SAACsF,EAAGpF,GAC7B,IAIMiS,EACJ7M,EAAEojD,QACDpjD,EAAEojD,MAAOC,SACRrjD,EAAEojD,MAAOE,UACTtjD,EAAEojD,MAAO5/B,QAAW,EAElB+/B,KACJvjD,EAAE2mC,YAAc3mC,EAAE2mC,UAAWF,WAEzB,SADAzmC,EAAE2mC,UAAWF,SAAU,gBAI7B,OACEuN,EAAA,cAACI,EAAA,oBAAD,CAAqBv5C,IAAKD,GACxBo5C,EAAA,cAACI,EAAA,eAAD,CACEp8C,KAAMgI,EAAEhI,KACR6U,sBACEA,EAEFM,YAAanN,EAAEmN,aAAe,GAC9B5U,KAEEyH,EAAEzH,MACFyH,EAAEzH,KAAKqkD,SAAS5D,mDACZh5C,EAAEzH,KACF+uC,4BACE0R,kDACAh5C,GAGRZ,KAAMw9B,EAAKjqC,MAAM6wD,kBAAkBxjD,GACnCgN,iBAAkBmnC,EAAE,gBACpB9mC,0BAA2B8mC,EACzB,yBAEFloC,gBAAiBkoC,EAAE,eACnB7oC,UACEsxB,EAAKjqC,MAAM8wD,sBACP,CACE/2C,SAAUkwB,EAAKjqC,MACZ+wD,sBAAuB1jD,GAC1B2L,gBAAiBwoC,EAAE,iBACnBvoC,gBAAiBuoC,EAAE,iBACnBtoC,uBAAwBsoC,EACtB,qBACA,CAAE/lC,eAAgBpO,EAAEhI,OAEtB8T,qBAAsBqoC,EACpB,oBAEFxnC,cAAewnC,EAAE,eACjB7nC,cAAe6nC,EACb,2BAEF1nC,cAAe0nC,EAAE,eACjBvnC,gBACyB,IAAtB5M,EAAEs8C,KACL7wC,SA7DO,WACnBD,EAASxL,EAAEmJ,GAAKnJ,EAAEhI,aA8DRyB,EAENuS,YAAau3C,EACbI,uBACE3P,EAAA,sBACEt3C,wBAAyB,CACvBC,OAAQw3C,EAAE,+CAvHpD4O,EAAA,CAAiCztD,aCejC,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAAc,CAAC+1C,IAEfC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAQnB2H,GAAb,SAAAvO,GAAA,SAAAuO,IAAA,OAAApuD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA4wD,GAAApuD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAouD,GAAA7Q,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAouD,EAAAvO,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAouD,EAAA,EAAA/oD,IAAA,SAAAyH,MAAA,WAOkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMqH,EAhEpB,SACEvsC,EACAvQ,EACAT,EACAM,GAEA,IAAIi9C,EAA+BvsC,EAgBnC,OAfAvQ,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClC4W,EAA+BA,EAA6BnrB,OAC1D,SAAC14B,GAAD,OAAmBA,EAAEhI,KAAKi1C,cAAc2P,SAASD,OAIrDkH,EAA+BA,EAA6BhtB,KAC1D,SAACitB,EAAKC,GACJ,IACMxlD,EAAQqI,EAAkBm9C,EAAMD,EACtC,OAFal9C,EAAkBk9C,EAAMC,GAEzB/rD,KAAK+kD,cAAcx+C,EAAMvG,QA8CQgsD,CACnCpnB,EAAKjqC,MAAM2kB,YACXklC,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAACI,EAAA,oBAAD5+C,OAAAC,OAAA,CACE0Z,4BACEytB,EAAKjqC,MAAMwc,4BAEbD,uBAAwBouC,GAAU5B,OAAOiC,kBACzC13C,YAAaA,GACbI,UAAWA,GACXmU,aAAcqpC,EAA6BppD,QACvC+hD,EARN,CASEyH,yBAA0B9P,EAAE,+BAC5BntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAOmkD,EAA6BppD,WAGrCmiC,EAAKjqC,MAAM6D,SACZw9C,EAAA,cAACkQ,GAAD,CACEhsD,MAAO0kC,EAAKjqC,MAAMuF,MAClBurD,sBAAuB7mB,EAAKjqC,MAAM8wD,sBAClCljD,QAASq8B,EAAKjqC,MAAM4N,QACpB+W,YAAausC,EACbL,kBAAmB5mB,EAAKjqC,MAAM6wD,kBAC9BE,sBAAuB9mB,EAAKjqC,MAAM+wD,iCA7CtDE,EAAA,CAA4CtuD,aAA/BsuD,GAGGO,aAAe,CAC3BC,eAAe,gBC6BNC,GAAb,SAAAhP,GAAA,SAAAgP,IAAA,OAAA7uD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAqxD,GAAA7uD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA6uD,GAAAtR,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA6uD,EAAAhP,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6uD,EAAA,EAAAxpD,IAAA,SAAAyH,MAAA,WAOkB,IAAAs6B,EAAA5pC,KACRsjC,EAAa9gC,OAAOihC,KAAKzjC,KAAKL,MAAMg0C,UAAU3M,YAAatD,OAC/D,SAAC4tB,EAAKzpD,GACJ,IAAMo6B,EAAI2H,EAAKjqC,MAAMg0C,UAAU3M,WAAYn/B,GAK3C,OAJAypD,EAAIzpD,GAAJrF,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKy/B,EADL,CAEEp5B,SAAU+gC,EAAKjqC,MAAMkJ,WAEhByoD,GAET,IAEF,OACEtQ,EAAA,cAAC+C,EAAA,sBAAD,KACG,SAAAlC,GAA+B,IAA5BhM,EAA4BgM,EAA5BhM,sBACE0b,GAA+B,EAC/B92C,EAAmE,GACjE+2C,EAA0B,eAAAxN,EAAAxhD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAOnhB,GAAP,IAAA/T,EAAApB,EAAA,OAAAo2B,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGjCtrC,EAAoB,IAChB82C,EAJ6B,CAAA1L,EAAAE,KAAA,gBAKzBv1B,EAAoC,GALXq1B,EAAAE,KAAA,EAMVlQ,EACnBjM,EAAKjqC,MAAMg0C,UAAUx9B,GACrBouB,GAR6B,aAMzBnV,EANyBy2B,EAAAI,MAYpBwL,KAAK,SAAA1iD,GAAG,MAAkB,eAAdA,EAAI2iD,SAA2B,CAChDlhC,OAAQ,KAEVA,QAAU,IACZkoB,QAAQ,SAAA3pC,GACRA,EAAI4iD,WAAWjZ,QAAQ,SAAAr1C,GAAC,OAAKmtB,EAAOntB,GAAK0L,EAAIoL,gBAE/CM,IAEI2U,EAAOqiC,KAAK,SAAA1iD,GAAG,MAAkB,iBAAdA,EAAI2iD,SAA6B,CAClDlhC,OAAQ,KAEVA,QAAU,IACZ9oB,IACA,SAAAqH,GAAG,MACA,CACC1N,QAAS0N,EAAIoL,YACbpV,KAAM,YAGRvC,OAAOihC,KAAKjT,GAAQ/oB,OAhCO,CAAAo+C,EAAAE,KAAA,eAiCvBv1B,EAjCuB,QAmCE,IAA7B/V,EAAkBhT,SACpBgT,EAAoB,CAClB,CACEpZ,QAAO,GAAAoH,OACLmhC,EAAKjqC,MAAMg0C,UAAU3uC,KADhB,oCAGPD,KAAM,aAzCmB,yBAAA8gD,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAAhM,EAAAjE,MAAA//C,KAAAggD,YAAA,GAgDhC,OACEgB,EAAA,cAAC4Q,GAAA,SAAD,CACEzuB,qBAAsB,mBACtBG,WAAYuuB,2BAAiBvuB,GAC7Bb,aAAcmH,EAAKjqC,MAAM8iC,aACzBjxB,SAAUggD,EACVtrC,OAAQ0jB,EAAKjqC,MAAMumB,QAElB,SAAAu+B,GAWK,IAVJrhB,EAUIqhB,EAVJrhB,OACA5oB,EASIiqC,EATJjqC,aACAkoB,EAQI+hB,EARJ/hB,aACA+B,EAOIggB,EAPJhgB,MACA5pB,EAMI4pC,EANJ5pC,QACA6pB,EAKI+f,EALJ/f,aACAC,EAII8f,EAJJ9f,UACA7S,EAGI2yB,EAHJ3yB,WACA8S,EAEI6f,EAFJ7f,aACAL,EACIkgB,EADJlgB,OAEMutB,EAA8B,eAAA/G,EAAAvoD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAsM,IAAA,OAAAvM,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,cACrCwL,GAA+B,EADMS,EAAAjM,KAAA,EAE/BnhB,IAF+B,OAGrC2sB,GAA+B,EAHM,wBAAAS,EAAA7L,SAAA4L,MAAH,yBAAAhH,EAAAhL,MAAA//C,KAAAggD,YAAA,GAMpC,OAAOpW,EAAKjqC,MAAM6D,SAAS,CACzBihC,QACArB,SACA5oB,eACAkoB,eACA7nB,UACA6pB,eACAC,YACA7S,aACA8S,aAAcktB,EACdr3C,oBACA8pB,mBA7GlB8sB,EAAA,CAAuC/uD,aAA1B+uD,GAGGF,aAAe,CAC3B1uB,aAAc,IC7DX,IAAMwvB,GAAb,SAAA5P,GAAA,SAAA4P,IAAA,IAAA3P,EAAA1Y,EAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAiyD,GAAA,QAAA9R,EAAAH,UAAAv4C,OAAA24C,EAAA,IAAAhf,MAAA+e,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAL,UAAAK,GAAA,OAAAzW,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,MAAAsiD,EAAA9/C,OAAAk/C,EAAA,EAAAl/C,CAAAyvD,IAAA1P,KAAAxC,MAAAuC,EAAA,CAAAtiD,MAAAyI,OAAA23C,MAISj5C,MAAQ,CACbyT,WAAW,GALfgvB,EAAA,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAyvD,EAAA5P,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAyvD,EAAA,EAAApqD,IAAA,mBAAAyH,MAAA,SAQ0Bu/B,GAEtB,IAAMua,EAAYva,EAAWya,KAE7B,OAAkB,IAAdF,EACKhB,GAAKjH,EAAE,yBAGTiH,GAAKjH,EAAE,0BAA2B,CAAEz0C,MAAO08C,MAhBtD,CAAAvhD,IAAA,SAAAyH,MAAA,WAmBkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACkB,EAAU5U,SAAX,KACG,SAAAuU,GAA0B,IAAvB8B,EAAuB9B,EAAvB8B,iBACF,OACE3C,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAAR,EAAAS,EAAAsG,GAAA,IAAGtc,EAAHuV,EAAGvV,aAAkBI,EAArB4V,EAAqB5V,WAAgBgS,EAArCkK,EAAqClK,QAAShzC,EAA9Ck9C,EAA8Cl9C,SAA9C,OACCmzC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,sBAAD,KACG,SAAA4H,GAIK,IAHJvd,EAGIud,EAHJvd,iBACA0H,EAEI6V,EAFJ7V,eACAC,EACI4V,EADJ5V,aAEA,OACEiL,EAAA,cAAC+C,EAAA,eAAD,CACE5tC,GAAIs4B,EACJhM,aAAcoM,EACdhnC,IAAKgG,EAAShG,KAEb,SAAA+jD,GAA8B,IAA3Br2C,EAA2Bq2C,EAA3Br2C,KAAMw2B,EAAqB6f,EAArB7f,QAAS7mC,EAAY0mD,EAAZ1mD,MACX0jD,EAAI,eAAAsJ,EAAA1vD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAA8J,GAAA,IAAAxqD,EAAAmV,EAAAw0B,EAAAwjB,EAAA,OAAA3M,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACX/gD,EADWwqD,EACXxqD,KACAmV,EAFWq1C,EAEXr1C,YACAw0B,EAHW6gB,EAGX7gB,qBAQMwjB,EAAoB/jB,EACxB74B,EACAvQ,EACAmV,EACAw0B,GAfSkX,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAkBHjQ,EAAeqc,GAlBZ,cAmBTtR,EAAQZ,KACNqK,GAAUhmC,YAAYuqB,WAAW6b,QAAQ,CACvC7b,WAAYsjB,KArBPtM,EAAAuM,OAAA,UAwBF,GAxBE,cAAAvM,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SA0BTlC,EACExC,EAAE,yBACF,SA5BO0E,EAAAuM,OAAA,UA8BF,GA9BE,yBAAAvM,EAAAM,SAAAT,EAAA,iBAAH,gBAAAsK,GAAA,OAAAkC,EAAAnS,MAAA//C,KAAAggD,YAAA,GAkCJqS,EAAe,eAAAC,EAAA9vD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAsM,EACtB53C,GADsB,IAAAo4C,EAAA,OAAA/M,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,cAGtBhK,EAAKzzC,SAAS,CAAEsS,WAAW,IAHLo3C,EAAAjM,KAAA,EAIF6C,EAAK,CAAEzuC,gBAJL,cAIhBo4C,EAJgBP,EAAA/L,KAKtBlK,EAAKzzC,SAAS,CAAEsS,WAAW,IALLo3C,EAAAI,OAAA,SAMfG,GANe,wBAAAP,EAAA7L,SAAA4L,MAAH,gBAAA9B,GAAA,OAAAqC,EAAAvS,MAAA//C,KAAAggD,YAAA,GASfwS,EAAQ,eAAAC,EAAAjwD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAiN,EACf1tD,GADe,IAAAutD,EAAAI,EAAA,OAAAnN,EAAA15B,EAAA85B,KAAA,SAAAgN,GAAA,cAAAA,EAAA9M,KAAA8M,EAAA7M,MAAA,cAGXwM,GAAQ,EACZxW,EAAKzzC,SAAS,CAAEsS,WAAW,IAJZg4C,EAAA7M,KAAA,EAKU8M,EAAe7tD,GALzB,WAMI,KADb2tD,EALSC,EAAA3M,MAAA,CAAA2M,EAAA7M,KAAA,gBAAA6M,EAAA7M,KAAA,EAOC6C,EAAK,CAAE5jD,SAPR,OAObutD,EAPaK,EAAA3M,KAAA2M,EAAA7M,KAAA,iBASbpC,EAAiBgP,EAAY,SAThB,eAWf5W,EAAKzzC,SAAS,CAAEsS,WAAW,IAXZg4C,EAAAR,OAAA,SAYRG,GAZQ,yBAAAK,EAAAzM,SAAAuM,MAAH,gBAAAI,GAAA,OAAAL,EAAA1S,MAAA//C,KAAAggD,YAAA,GAeR+S,EAAa,eAAAC,EAAAxwD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAwN,EACpBtkB,EAGAxhC,GAJoB,OAAAq4C,EAAA15B,EAAA85B,KAAA,SAAAsN,GAAA,cAAAA,EAAApN,KAAAoN,EAAAnN,MAAA,cAMpBhK,EAAKzzC,SAAS,CAAEsS,WAAW,IANPs4C,EAAAnN,KAAA,EAOd6C,EAAK,CAAEja,yBAPO,OAQpBxhC,EAAQgmD,eAAc,GACtBpX,EAAKzzC,SAAS,CAAEsS,WAAW,IATP,wBAAAs4C,EAAA/M,SAAA8M,MAAH,gBAAAG,EAAAC,GAAA,OAAAL,EAAAjT,MAAA//C,KAAAggD,YAAA,GAgBb6S,EAAc,eAAAS,EAAA9wD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAA8N,EACrBtd,GADqB,IAAAhK,EAAA2X,EAAA,OAAA4B,EAAA15B,EAAA85B,KAAA,SAAA4N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAzN,MAAA,UAIA,KAAjB9P,EAJiB,CAAAud,EAAAzN,KAAA,eAAAyN,EAAApB,OAAA,SAKZjR,EACL,gCANiB,cAAAqS,EAAAzN,KAAA,EAUqBhQ,EACxClH,EACAoH,GAZmB,WAUfhK,EAVeunB,EAAAvN,MAeP/P,QAfO,CAAAsd,EAAAzN,KAAA,eAAAyN,EAAApB,OAAA,UAgBZ,GAhBY,UAmBE,mBAAnBnmB,EAAS/mC,MAnBQ,CAAAsuD,EAAAzN,KAAA,gBAoBbnC,EAAMzC,EAAE,sBApBKqS,EAAApB,OAAA,SAqBZxO,GAEH,kCAvBe,eAAA4P,EAAApB,OAAA,SA0BdnmB,EAAS5qC,QACZ4qC,EAAS5qC,QACT8/C,EAAE,uBACFA,EAAE,uBACF,mCA9BiB,yBAAAqS,EAAArN,SAAAoN,MAAH,gBAAAE,GAAA,OAAAH,EAAAvT,MAAA//C,KAAAggD,YAAA,GAiCd0T,EAAgB,WACpB7S,EAAQZ,KACNqK,GAAUhmC,YAAYuqB,WAAW6b,QAAQ,CACvC7b,WAAYt5B,MAKZo+C,EAAe,WACnB9S,EAAQZ,KACNqK,GAAUhmC,YAAYuqB,WAAW4b,KAAK,CACpC5b,WAAYt5B,MAKlB,OACEyrC,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,WACC,OACElJ,EAAA,cAAC4S,GAAD,CACEjgB,UAAWp+B,EAAKo+B,UAChBlR,aACEltB,EAAKo5B,qBAEP9lC,UAAWkzC,EAAKp8C,MAAM8qD,KACtBvkC,OAAQ6sC,GAEP,SAAAc,GAAA,IACCzwB,EADDywB,EACCzwB,OACA5oB,EAFDq5C,EAECr5C,aACAC,EAHDo5C,EAGCp5C,kBACAgqB,EAJDovB,EAICpvB,MACA/B,EALDmxB,EAKCnxB,aACA7nB,EANDg5C,EAMCh5C,QACA6pB,EAPDmvB,EAOCnvB,aACAE,EARDivB,EAQCjvB,aARD,OAUCoc,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CACE13C,GAAI89C,GAAUlD,UAAUyD,QAEvB1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CACE13C,GAAI89C,GAAUhmC,YAAYA,eAEzB68B,EAAE,uBAELH,EAAA,0BACGG,EACC,+BAINH,EAAA,cAACI,EAAA,wBAAD,CACE/xC,cAAc,EACdmM,sBACEjG,EAAK4E,YAEPgB,eAAgBm5B,4BACd0R,kDACAzwC,GAEF6F,eAAgB7F,EAAKvQ,KACrBuW,qBAAsB4lC,EACpB,sBAEF1lC,2BAA4B0lC,EAC1B,0BAEF9lC,oBAAqB8lC,EACnB,mBAEF2S,eAAgB3S,EACd,gBAEFxlC,iBAAkBogC,EAAKqO,iBACrB70C,GAEFqF,UAAWmhC,EAAK50C,MAAMyT,UACtBc,oBACE22C,EAEF/2C,aAAck3C,IAEhBxR,EAAA,cAACI,EAAA,sBAAD,CACEzoC,gBAAiBwoC,EACf,iBAEFxnC,cAAewnC,EAAE,eACjBlmC,cAAekmC,EAAE,eACjBv6C,UAAWu6C,EACT,sBACA,CACE/lC,eAAgB7F,EAAKvQ,OAGzB8V,kBAAmBqmC,EACjB,mBAEF3mC,aAAcA,EACdK,SAAU4pB,GAAS5pB,EACnBD,UACE8nB,GAAgBgC,EAElBjqB,kBACEA,EAEFzI,UAAW+pC,EAAKp8C,MAAM8qD,KACtBzvC,gBAAiB04C,EACjB34C,eAAgB44C,EAChB9iD,WAAY+zB,GAEXxB,uBAhRjD6uB,EAAA,CAA2C3vD,aC/B9ByxD,GAAb,SAAA1R,GAAA,SAAA0R,IAAA,OAAAvxD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA+zD,GAAAvxD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAuxD,GAAAhU,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAuxD,EAAA1R,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAuxD,EAAA,EAAAlsD,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,gBAAD,KACG,SAAAlC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAMw2B,EAAT8V,EAAS9V,QAAS7mC,EAAlB28C,EAAkB38C,MAAlB,OACC87C,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,gBAClBs8C,EAAA,cAACI,EAAA,iBAAD,CACEx6C,UAAWu6C,EAAE,sBACbrqC,gBAAiBqqC,EAAE,+BAErBH,EAAA,cAACiT,GAAD,CACE/uD,MAAOA,EACPurD,uBAAuB,EACvBljD,SAAUw+B,EACVznB,YAAa/O,EAAKw+B,sBAClByc,kBAAmB,SAAA3hB,GAAU,OAC3Byb,GAAUzb,WAAW6b,QAAQ,CAAE7b,gBAEjC6hB,sBAAuB,SAAA7hB,GAAU,OAC/Byb,GAAUzb,WAAW4b,KAAK,CAAE5b,2BAtBhDklB,EAAA,CAAqCzxD,aCJxBomD,GAAS,CACpBwL,mMCsBE,OACElT,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAA3C,EAAAmC,EAAAS,GAAA,IAAGzO,EAAH6L,EAAG7L,YAAiBrC,EAApBqQ,EAAoBrQ,UAAekN,EAAnC4D,EAAmC5D,QAAnC,OACCG,EAAA,cAAC+C,EAAA,cAAD,CAAe5tC,GAAI6/B,EAAavT,aAAckR,GAC3C,SAAAoX,GAAA,IAAGx1C,EAAHw1C,EAAGx1C,KAAMw2B,EAATgf,EAAShf,QAAS7mC,EAAlB6lD,EAAkB7lD,MAAlB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,WAWC,OACElJ,EAAA,cAAC4S,GAAD,CAAmBjgB,UAAWp+B,EAAM2Q,OAXvB,SAACyoB,GAGdkS,EAAQZ,KACNqK,GAAU5B,OAAOC,OAAO,CACtBha,uBACAgF,UAAWp+B,OAMZ,SAAAo2C,GASK,IARJvoB,EAQIuoB,EARJvoB,OACA5oB,EAOImxC,EAPJnxC,aACAC,EAMIkxC,EANJlxC,kBACAqX,EAKI65B,EALJ75B,WACA4Q,EAIIipB,EAJJjpB,aACA7nB,EAGI8wC,EAHJ9wC,QACA6pB,EAEIinB,EAFJjnB,aACAE,EACI+mB,EADJ/mB,aAEA,OACEoc,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,yBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE9+B,OAAQ0+B,EAAA,cAACmT,GAAD,CAA8B/jC,KAAM,IAC5CrW,QACEinC,EAAA,cAACI,EAAA,2BAAD,CACE/kC,cAAe9G,EAAKvQ,KACpBwV,aAAcA,EACdC,kBAAmBA,GAElB2oB,GAGL7G,SAAU+tB,GAAU5B,OAAOiC,kBAC3BruB,WAAYguB,GAAUhmC,cACtB+X,OAAQvK,EACR4K,eAAgBgG,EAChB/F,aACEqkB,EAAA,cAACI,EAAA,WAAD,CACEt2C,QAAS85B,EACT/7B,UAAWgS,GAAW6pB,GAFxB,WAKGA,GACCsc,EAAA,cAAAA,EAAA,qBAEEA,EAAA,cAACI,EAAA,OAAD,CAAQ90C,KAAM,KAAMe,QAAQ,wBAlEnB/K,aDnB7C8xD,gMEYE,OACEpT,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,eAAD,KACG,SAAAlC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAMw2B,EAAT8V,EAAS9V,QAAS7mC,EAAlB28C,EAAkB38C,MAAlB,OACC87C,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,qBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE9+B,OAAQ0+B,EAAA,cAACmT,GAAD,CAA8B/jC,KAAM,IAC5CrW,QACEinC,EAAA,cAACI,EAAA,gBAAD,KACEJ,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAAAA,EAAA,cACG,IAAI5f,MAAM,GAAG8uB,KAAK,GAAGxoD,IAAI,SAACyoD,EAAGvoD,GAAJ,OACxBo5C,EAAA,cAACI,EAAA,oBAAD,CAAqBv5C,IAAKD,GACxBo5C,EAAA,cAACI,EAAA,mBAAD,UAKR9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACC30C,EAAKihC,qBACF3S,KAAK,SAAC/X,EAAGqS,GAAJ,OAAUrS,EAAE9mB,KAAK+kD,cAAc5rB,EAAEn5B,QACtC0C,IAAI,SAACisC,EAAW/rC,GACf,IAAM2oD,EACJ5c,EAAWF,UAC8B,SAAzCE,EAAWF,SAAU,gBAEvB,OACEuN,EAAA,cAACI,EAAA,oBAAD,CAAqBv5C,IAAKD,GACxBo5C,EAAA,cAACI,EAAA,eAAD,CACEvnC,uBAAuB,EACvB7U,KAAM2uC,EAAU3uC,KAChBmV,YAAaw5B,EAAUx5B,aAAe,GACtCH,iBAAkBmnC,EAAE,gBACpB9mC,0BAA2B8mC,EACzB,yBAEFloC,gBAAiBkoC,EAAE,eACnB57C,KAAM+uC,4BACJ0R,kDACArS,GAEFvnC,KAAMk+C,GAAU5B,OAAOkC,mBAAmB,CACxCjX,cAEF36B,YAAau3C,EACbI,uBACE3P,EAAA,sBACEt3C,wBAAyB,CACvBC,OAAQw3C,EAAE,qCAYlC7kB,WAAYguB,GAAUhmC,4BArEIhiB,aFT1C+xD,4LGmBE,OACErT,EAAA,cAACkB,EAAU5U,SAAX,KACG,SAAAuU,GAAA,IAAG8B,EAAH9B,EAAG8B,iBAAH,OACC3C,EAAA,cAACwD,EAAA,cAAD,KACG,SAAC2L,EAADnM,EAAAS,GAAA,IAAM9Q,EAANqQ,EAAMrQ,UAAWhF,EAAjBqV,EAAiBrV,qBAA0BkS,EAA3C4D,EAA2C5D,QAA3C,OACCG,EAAA,cAAC+C,EAAA,sBAAD,KACG,SAAAgH,GAA0C,IAAvCpV,EAAuCoV,EAAvCpV,iBAAkBG,EAAqBiV,EAArBjV,eACd5vB,EAAM,eAAA0lC,EAAAppD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAAiG,EAEbx+C,GAFa,IAAAnI,EAAAmV,EAAA00B,EAAA,OAAA2W,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACX/gD,EADW2mD,EACX3mD,KAAMmV,EADKwxC,EACLxxC,YADK0rC,EAAAC,KAAA,EAKLjX,EAAa8G,EACjBhC,EACA3uC,EACAmV,GAAe,GACfw0B,GATSkX,EAAAE,KAAA,EAWLjQ,EAAejH,GAXV,OAYX1hC,EAAQgmD,eAAc,GACtBxP,EAAgB,0DAAAl7C,OAC4CzD,EAD5C,kCAEd,WAEF67C,EAAQZ,KAAKqK,GAAUhmC,eAjBZuhC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,kCAAAA,EAAAM,SAAAT,EAAA,kBAAH,gBAAAsK,EAAAC,GAAA,OAAArE,EAAA7L,MAAA//C,KAAAggD,YAAA,GAoCZ,OACEgB,EAAA,cAAC4Q,GAAA,SAAD,CACEzuB,qBAAsB,mBACtBG,WAjBgC,CAClCt+B,KAAM,CACJuhB,aAAc,GACdma,YAAa,OACbkD,UAAU,EACV7+B,KAAM,UAGRoV,YAAa,CACXoM,aAAc,GACdma,YAAa,cACb37B,KAAM,aAON09B,aAAc,CACZtoB,YAAa,GACbnV,KAAM,IAERkhB,OAAQA,GAEP,SAAAspC,GAAA,IACCpsB,EADDosB,EACCpsB,OACA5oB,EAFDg1C,EAECh1C,aACAkoB,EAHD8sB,EAGC9sB,aACA7nB,EAJD20C,EAIC30C,QACAiX,EALD09B,EAKC19B,WALD,OAOCkvB,EAAA,cAACI,EAAA,wBAAD,CACE9+B,OAAQ0+B,EAAA,cAACmT,GAAD,CAA8B/jC,KAAM,IAC5CrW,QACEinC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,oBAClBs8C,EAAA,cAACI,EAAA,2BAAD,CACE/kC,cAAe,kBACf7B,aAAcA,GAEb4oB,IAIP9G,WAAYguB,GAAUhmC,cACtBiY,SAAU+tB,GAAU5B,OAAOkC,mBAAmB,CAC5CjX,cAEFtX,OAAQvK,EACR4K,gBAAiB7hB,EACjB4hB,cAAeiG,EACf9F,YAAY,mBAlFEt6B,cCfnBgyD,oLAEjB,OACEtT,EAAA,cAACI,EAAA,YAAD,CAAanlC,WAAW,GACtB+kC,EAAA,cAACuT,EAAD,KACEvT,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUhmC,eAApB,eACA08B,EAAA,gDAEFA,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOgG,OAAOiC,gBACpBh9C,OAAO,EACP9C,UAAW69C,GAAO0L,iBAEpBpT,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOgG,OAAOkC,mBACpBj9C,OAAO,EACP9C,UAAW69C,GAAOwL,oBAEpBlT,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOgG,OAAOC,OACpBh7C,OAAO,EACP9C,UAAW69C,GAAO2L,uBAvBmB/xD,aCHtCkyD,GAAb,SAAAnS,GAAA,SAAAmS,IAAA,OAAAhyD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAw0D,GAAAhyD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAgyD,GAAAzU,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAgyD,EAAAnS,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAgyD,EAAA,EAAA3sD,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOgG,OAAOmC,KAAMhgD,UAAWypD,KAC5CtT,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOp+B,YACb3W,OAAO,EACP9C,UAAWkpD,KAEb/S,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO7T,WAAW4b,KACxB98C,OAAO,EACPnK,SAAUw9C,EAAA,cAACyT,GAAD,CAAuBhK,MAAM,MAEzCzJ,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO7T,WAAW6b,QACxB/8C,OAAO,EACPnK,SAAUw9C,EAAA,cAACyT,GAAD,CAAuBhK,MAAM,WAlBjD+J,EAAA,CAAuClyD,uBCmB1BoyD,GAAb,SAAArS,GAGE,SAAAqS,EAAmB/0D,GAA0C,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA00D,IAC3D9qB,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAkyD,GAAAnS,KAAAviD,KAAML,KACDwoB,WAAayhB,EAAKzhB,WAAWloB,KAAhBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAFyCA,EAH/D,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAkyD,EAAArS,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAkyD,EAAA,EAAA7sD,IAAA,aAAAyH,MAAA,SAOoBmb,GAChBzqB,KAAKL,MAAMumB,SACX,IAAMyuC,EAAkBlqC,EACrBib,OAAO,SAAAxxB,GAAI,OAAIA,EAAKyW,WACpBjjB,IAAI,SAAAwM,GAAI,OAAIA,EAAKlP,OACpBhF,KAAKL,MAAM2uC,eAAetuC,KAAKL,MAAMi1D,oBAAqBD,KAZ9D,CAAA9sD,IAAA,SAAAyH,MAAA,WAckB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,qBAAD,CACEx6C,UAAWu6C,EAAE,uCACb76C,qBAAsB66C,EAAE,iBACxBr4B,mBAAoBq4B,EAAE,eACtB17C,OAAQs2C,EAAKp8C,MAAM8F,OACnBygB,OAAQ61B,EAAK5zB,YAEZ,SAAA05B,GAAA,IAAG9vC,EAAH8vC,EAAG9vC,aAAH,OACCivC,EAAA,cAAC+C,EAAA,oBAAD,CACErhC,cAAeq5B,EAAKp8C,MAAMi1D,qBAEzB,SAAA5Q,GAAA,IAASrP,EAATqP,EAAGzuC,KAAqBs/C,EAAxB7Q,EAAejY,QAAyB+oB,EAAxC9Q,EAAiC9+C,MAAjC,OACC87C,EAAA,cAAC+C,EAAA,iBAAD,CAAkBpT,gBAAgB,GAC/B,SAAA8T,GAIK,IAHE5U,EAGF4U,EAHJlvC,KACSw/C,EAELtQ,EAFJ1Y,QACOipB,EACHvQ,EADJv/C,MAEA,OACE87C,EAAA,cAAAA,EAAA,cACEA,EAAA,uBACGG,EAAE,8CAELH,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAO4vD,GAAYE,EACnBznD,SAAUsnD,IAAYE,EACtBxuB,eACEya,EAAA,cAACI,EAAA,SAAD,KACEJ,EAAA,cAACI,EAAA,iBAAD,OAGJ9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,WACC,IAAM+K,EAAcplB,EAAanoC,IAAI,SAAAwM,GAAI,MAAK,CAC5ClP,KAAMkP,EACNyW,SAAgC,qBAAfgqB,EAAKzgC,MAExB,OACE8sC,EAAA,cAACI,EAAA,yBAAD,CACEv5C,IAAK4jC,KAAKypB,UAAUvgB,GACpBjqB,aAAcuqC,EACdplD,SAAUkC,EACV0Z,eAAgBswB,EAAKp8C,MAAM8rB,eAC3B3M,oBAAqBqiC,EACnB,wCAEFpiC,mBAAoBoiC,EAClB,4CAEFz1B,yBAA0By1B,EACxB,gDArEpCuT,EAAA,CAAiDpyD,aC6BpC6yD,GAAb,SAAA9S,GAIE,SAAA8S,EAAYx1D,GAAqC,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAm1D,IAC/CvrB,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA2yD,GAAA5S,KAAAviD,KAAML,KACDwH,MAAQ,CACXiuD,wBAAwB,EACxBC,sBAAsB,GAExBzrB,EAAK0rB,aAAe1rB,EAAK0rB,aAAar1D,KAAlBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IACpBA,EAAK2rB,mBAAqB3rB,EAAK2rB,mBAAmBt1D,KAAxBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAC1BA,EAAK4rB,gBAAkB5rB,EAAK4rB,gBAAgBv1D,KAArBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IACvBA,EAAK6rB,gBAAkB7rB,EAAK6rB,gBAAgBx1D,KAArBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IATwBA,EAJnD,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAA2yD,EAAA9S,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA2yD,EAAA,EAAAttD,IAAA,kBAAAyH,MAAA,WAgBItP,KAAKsI,SAAS,CACZ+sD,sBAAsB,MAjB5B,CAAAxtD,IAAA,qBAAAyH,MAAA,WAqBItP,KAAKsI,SAAS,CACZ8sD,wBAAwB,MAtB9B,CAAAvtD,IAAA,eAAAyH,MAAA,WA0BI,IAAM6R,EAASnhB,KAAKmH,MAAMmuD,aAI1B,GAHAt1D,KAAKsI,SAAS,CACZ8sD,wBAAwB,IAEJ,oBAAXj0C,EAGT,MAAMyM,MAAM,gDAFZzM,EAAO4+B,MAAM//C,QA/BnB,CAAA6H,IAAA,kBAAAyH,MAAA,SAoCyB+/B,GACrBrvC,KAAKsI,SAAS,CACZgtD,aAAcjmB,EAAQimB,aACtBI,uBAAwBrmB,EAAQqmB,uBAChCC,iBAAkBtmB,EAAQsmB,iBAC1BC,iBAAkBvmB,EAAQumB,iBAC1BC,kBAAmBxmB,EAAQwmB,kBAC3BT,wBAAwB,MA3C9B,CAAAvtD,IAAA,gBAAAyH,MAAA,SA8CuBslD,GACnB50D,KAAKsI,SAAS,CACZ+sD,sBAAsB,EACtBT,0BAjDN,CAAA/sD,IAAA,SAAAyH,MAAA,WAqDkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACkB,EAAU5U,SAAX,KACG,SAAAuU,GAAA,IAAG8B,EAAH9B,EAAG8B,iBAAH,OACC3C,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAC,GAMK,IALJpW,EAKIoW,EALJpW,kBACAC,EAIImW,EAJJnW,kBACAC,EAGIkW,EAHJlW,kBACAK,EAEI6V,EAFJ7V,oBACAG,EACI0V,EADJ1V,eAEMwnB,EAAiC,CACrC1pD,KAAMk+C,GAAU1b,YAAY6b,KAAK7iD,MAAM,CACrCknC,OAAQiN,EAAKp8C,MAAMivC,YAAYM,MAAO,GAAG/4B,GACzCy4B,YAAamN,EAAKp8C,MAAMivC,cAE1B5gC,MAAO,QAEH+nD,EAAkC,CACtC/nD,MAAO,QACPlD,QAAS,kBACPixC,EAAKyZ,gBAAgB,CACnBF,aAAY,eAAAU,EAAAxzD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAC,IAAA,OAAAF,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZpC,EACEyE,GAAKjH,EAAE,6CACP,QAHU0E,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMJlY,EACJkO,EAAKp8C,MAAMivC,YAAYz4B,GACvB4lC,EAAKp8C,MAAMivC,YAAYhgB,SACvB,GATQ,OAAAi3B,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAYVlC,EACEyE,GAAKjH,EACH,kDACA,CACEj8C,MAAO2gD,EAAAK,GAAIvZ,cAAgBkZ,EAAAK,GAAI7kD,SAAxBwkD,EAAAK,KAGX,WAnBQ,wBAAAL,EAAAM,SAAAT,EAAA,iBAAF,yBAAAsQ,EAAAjW,MAAA//C,KAAAggD,YAAA,GAuBZiW,wBAAyB9xD,0BAAwBglB,OACjDusC,uBAAwBvU,EAAE,gBAC1BwU,iBAAkBzxD,uBAAqBsB,KACvCowD,iBAAkBzU,EAChB,uCACA,CAAEn8C,KAAM+2C,EAAKp8C,MAAMivC,YAAY5pC,OAEjC6wD,kBAAmB1U,EACjB,iDAIF+U,EAAiC,CACrCloD,MAAO,OACPlD,QAAS,kBACPixC,EAAKyZ,gBAAgB,CACnBF,aAAY,eAAAa,EAAA3zD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAsM,IAAA,OAAAvM,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,OACZpC,EACEyE,GAAKjH,EACH,+CAEF,QAEF,IACEhT,EACE4N,EAAKp8C,MAAMivC,YAAYz4B,GACvB4lC,EAAKp8C,MAAMivC,YAAYhgB,SAEzB,MAAOwnC,GACPzS,EACEyE,GAAKjH,EACH,oDACA,CACEj8C,MAAOkxD,EAAIzpB,cAAgBypB,EAAI/0D,SAAW+0D,IAG9C,WApBQ,wBAAApE,EAAA7L,SAAA4L,MAAF,yBAAAoE,EAAApW,MAAA//C,KAAAggD,YAAA,GAwBZiW,wBAAyB9xD,0BAAwBglB,OACjDusC,uBAAwBvU,EAAE,eAC1BwU,iBAAkBzxD,uBAAqBsB,KACvCowD,iBAAkBzU,EAChB,yCACA,CAAEn8C,KAAM+2C,EAAKp8C,MAAMivC,YAAY5pC,OAEjC6wD,kBAAmB1U,EACjB,mDAIFkV,EAAmC,CACvCroD,MAAO,SACPlD,QAAS,kBACPixC,EAAKyZ,gBAAgB,CACnBF,aAAY,eAAAgB,EAAA9zD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAiN,IAAA,OAAAlN,EAAA15B,EAAA85B,KAAA,SAAAgN,GAAA,cAAAA,EAAA9M,KAAA8M,EAAA7M,MAAA,cACZpC,EACEyE,GAAKjH,EAAE,2CACP,QAHUyR,EAAA9M,KAAA,EAAA8M,EAAA7M,KAAA,EAMJnY,EAAkBmO,EAAKp8C,MAAMivC,YAAYz4B,IANrC,OAAAy8C,EAAA7M,KAAA,eAAA6M,EAAA9M,KAAA,EAAA8M,EAAA1M,GAAA0M,EAAA,SAQVjP,EACEyE,GAAKjH,EACH,gDACA,CACEj8C,MAAO0tD,EAAA1M,GAAIvZ,cAAgBimB,EAAA1M,GAAI7kD,SAAxBuxD,EAAA1M,KAGX,WAfQ,wBAAA0M,EAAAzM,SAAAuM,EAAA,iBAAF,yBAAA4D,EAAAvW,MAAA//C,KAAAggD,YAAA,GAmBZiW,wBAAyB9xD,0BAAwBuU,OACjDg9C,uBAAwBvU,EAAE,iBAC1BwU,iBAAkBzxD,uBAAqBwU,OACvCk9C,iBAAkBzU,EAChB,sCACA,CAAEn8C,KAAM+2C,EAAKp8C,MAAMivC,YAAY5pC,OAEjC6wD,kBAAmB1U,EACjB,gDAIFx0B,EAAmC,CACvC3e,MAAO,SACPlD,QAAS,kBACPgjC,EACEiO,EAAKp8C,MAAMivC,YAAYz4B,GADR,GAAA1N,OAEZszC,EAAKp8C,MAAMivC,YAAY5pC,KAFX,kBAKfuxD,EAAiC,CACrCvoD,MAAO,eACPlD,QAAS,WACPixC,EAAKya,cAAcza,EAAKp8C,MAAMivC,YAAYz4B,MAIxChJ,EAAgC,GAatC,OAZIspD,kBAAQ1a,EAAKp8C,MAAMivC,cACrBzhC,EAAQ8yC,KAAK6V,GAEXY,sBAAY3a,EAAKp8C,MAAMivC,cACzBzhC,EAAQ8yC,KAAK8V,GAEXY,wBAAc5a,EAAKp8C,MAAMivC,cAC3BzhC,EAAQ8yC,KAAKiW,GAEf/oD,EAAQ8yC,KAAKoW,GACblpD,EAAQ8yC,KAAKtzB,GACbxf,EAAQ8yC,KAAKsW,GAEXvV,EAAA,cAAAA,EAAA,cACGjF,EAAK50C,MAAMkuD,sBACVrU,EAAA,cAAC4V,GAAD,CACEnrC,eAAgB6+B,GAAUsC,WAAW/B,OACrCvc,eAAgBA,EAChBsmB,oBAAqB7Y,EAAK50C,MAAMytD,oBAChC1uC,OAAQ61B,EAAK0Z,gBACbhwD,OAAQs2C,EAAK0Z,kBAGhB1Z,EAAK50C,MAAMiuD,wBACVpU,EAAA,cAACI,EAAA,mBAAD,CACEp7C,YAAa7B,0BAAwBglB,OACrC7iB,qBAAsB66C,EAAE,iBACxBr7C,sBACEi2C,EAAK50C,MAAMuuD,uBAEbvvD,wBAAyB41C,EAAK50C,MAAMyuD,iBACpChvD,UAAWm1C,EAAK50C,MAAM0uD,kBACtBtwD,KAAMw2C,EAAK50C,MAAMwuD,iBACjBhvD,WAAYo1C,EAAK50C,MAAMiuD,uBACvB1vD,SAAUq2C,EAAKwZ,mBACf3vD,UAAWm2C,EAAKuZ,eAGnBvZ,EAAKp8C,MAAM6D,SAAS,CACnB2J,UACAopD,aACAF,eACAP,aACAnpC,eACAopC,cACAG,0BAzPxBf,EAAA,CAA4C7yD,aC/B/Bu0D,GAAb,SAAAxU,GAAA,SAAAwU,IAAA,OAAAr0D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA62D,GAAAr0D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAq0D,GAAA9W,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAq0D,EAAAxU,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAq0D,EAAA,EAAAhvD,IAAA,SAAAyH,MAAA,WACkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACF,EAAWxT,SAAZ,KACG,SAAAuU,GAAA,IAAGiD,EAAHjD,EAAGiD,aAAH,OACC9D,EAAA,cAACI,EAAA,iBAAD,KACEJ,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAO0kC,EAAKjqC,MAAMuF,MAClBqI,QAASq8B,EAAKjqC,MAAM4N,QACpBg5B,eAAgBya,EAAA,cAACI,EAAA,yBAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCtgB,EAAKjqC,MAAMwzC,aAAazrC,IACtB,SAACovD,GACC,IACE,OACE9V,EAAA,cAAC+V,GAAD,CACElvD,IAAKivD,EAAGloB,YAAYz4B,GACpBy4B,YAAakoB,EAAGloB,aAEf,SAAAoV,GAAA,IAAG72C,EAAH62C,EAAG72C,QAAH,OACC6zC,EAAA,cAACI,EAAA,qBAAD,CACE7vB,gBAAiBulC,EAAGloB,YAAY5pC,KAChC+oB,aAAc+oC,EAAGloB,YAAa7gB,aAC9BK,YAAa0oC,EAAGloB,YAAaxgB,YAC7BwG,2BAEIkiC,EAAGloB,YAAawhB,MAAOE,UACvBwG,EAAGloB,YAAawhB,MAAO5/B,QACvBsmC,EAAGloB,YAAawhB,MAAOC,SAG3B/hC,gBACEwoC,EAAG9jB,YACHmO,EACE,gBACE2V,EAAG9jB,WAAWgkB,cAAc1nD,OAGlCif,sBACEuoC,EAAG9jB,YACH8jB,EAAG9jB,WAAWgkB,cAAct/C,YAE9B8W,qBACEsoC,EAAG9jB,YACH8jB,EAAG9jB,WAAWgkB,cAAcr/C,WAE9B8W,iBAAkBq2B,EAAagS,EAAG9jB,YAClCjf,oBAAqBkjC,uBACnBjR,kDACA8Q,EAAGloB,aAEL9a,qBAAsBojC,wBACpBlR,kDACA8Q,EAAGloB,aAELzhC,QACE6zC,EAAA,cAACI,EAAA,mBAAD,CACE1+B,cAAeo0C,EAAGloB,YAAaz4B,GAC/BhJ,QAASA,EACT0e,YAAay+B,GAAU1b,YAAY8b,QACjC,CACEhoC,cAAeo0C,EAAGloB,YAAYz4B,OAKtCkE,0BAA2B8mC,EACzB,sCAEFpsB,UAAWosB,EAAE,gBACbtsB,cAAessB,EAAE,oBACjBrsB,gBAAiBqsB,EAAE,sBACnBhzB,oBAAqBgzB,EAAE,kBACvBzyB,qBAAsByyB,EACpB,iCAEFxyB,qBAAsBwyB,EACpB,iCAEFrpC,eAAgBqpC,EAAE,uBAK1B,MAAOvvC,GACP,OACEovC,EAAA,cAACI,EAAA,+BAAD,CACEv5C,IAAKivD,EAAGloB,YAAYz4B,GACpBob,gBACGulC,GAAMA,EAAGloB,aAAekoB,EAAGloB,YAAY5pC,MACxC,iBAEF8R,gBACE,6EAEFwmB,UAAWmO,KAAKypB,UACd4B,EAAGloB,YACH,KACA,mBAtGhCioB,EAAA,CAAkCv0D,aCGrB60D,ICEsC70D,YDFnD,SAAA+/C,GAAA,SAAA8U,IAAA,OAAA30D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAm3D,GAAA30D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA20D,GAAApX,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA20D,EAAA9U,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA20D,EAAA,EAAAtvD,IAAA,SAAAyH,MAAA,WAII,IAAMs/B,EAAc5uC,KAAKL,MAAMivC,YAC/B,OACEoS,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,UAAD,CACE1+C,MAAO,CACL0oB,WAAY,SAGd41B,EAAA,cAACI,EAAA,OAAD,KACEJ,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAO,UACPxB,GAAI89C,GAAU1b,YAAY8b,QAAQ,CAChC9b,cACAlsB,cAAeksB,EAAYz4B,OAG/B6qC,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAO,WACPxB,GAAI89C,GAAU1b,YAAYme,SAAS,CACjCne,cACAlsB,cAAeksB,EAAYz4B,OAG/B6qC,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAO,UACPxB,GAAI89C,GAAU1b,YAAYuc,QAAQ,CAChCvc,cACAlsB,cAAeksB,EAAYz4B,eAhC7CghD,EAAA,CAA6C70D,cEoFhC80D,GAAb,SAAA/U,GAAA,SAAA+U,IAAA,OAAA50D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAo3D,GAAA50D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA40D,GAAArX,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA40D,EAAA/U,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA40D,EAAA,EAAAvvD,IAAA,0BAAAyH,MAAA,SAOiC6R,GAAoC,IAAAyoB,EAAA5pC,KACjE,IACE,IAAM09C,EAAalP,8BAAoBrtB,GACjC6O,EAAQqnC,yBAAe3Z,GACvBttB,EAAOknC,wBAActnC,EAAOhwB,KAAKL,MAAM43D,mBACvCj0B,EAAak0B,kCAAwBpnC,GACrCqnC,EACJz3D,KAAKL,MAAM43D,kBAAoBvnC,EAAMvoB,OAAS,EAC1Cye,EAAM,eAAA27B,EAAAr/C,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EACbnhB,EACAp3B,GAFa,OAAAq4C,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIPnc,EAAKjqC,MAAM+3D,qBAAqB,CACpCv2C,SACAs2C,yBACAlzB,WAPW,OASbp3B,EAAQgmD,eAAc,GATT,wBAAAtN,EAAAM,SAAAT,MAAH,gBAAAsK,EAAAC,GAAA,OAAApO,EAAA9B,MAAA//C,KAAAggD,YAAA,GAWZ,OACEgB,EAAA,cAAC4Q,GAAA,SAAD,CACEzuB,qBAAsB,mBACtBG,WAAYuuB,2BAAiBvuB,GAC7Bb,aAAcziC,KAAKL,MAAM8iC,aACzBvc,OAAQA,EACRre,IAAK7H,KAAKL,MAAM43D,mBAEf,SAAAvT,GAAA,IAAG5gB,EAAH4gB,EAAG5gB,OAAQ5oB,EAAXwpC,EAAWxpC,aAAckoB,EAAzBshB,EAAyBthB,aAAc7nB,EAAvCmpC,EAAuCnpC,QAASiX,EAAhDkyB,EAAgDlyB,WAAhD,OACC8X,EAAKjqC,MAAM6D,SAAS,CAClB+8B,KACEygB,EAAA,cAACI,EAAA,sBAAD,CACE/kC,cAAa,GAAA5T,OAAK0Y,EAAOnc,KAAZ,OAAAyD,OAAsB0Y,EAAOhH,aAC1C0X,iBAAkB,gBAClBE,SAAU,OACVlX,QAASA,EACTiX,WAAYA,EACZtX,aAAcA,EACdoX,iBAAkBgY,EAAKjqC,MAAMiyB,kBAE5BwR,GAGLV,eACA7nB,UACAiX,iBAKR,MAAOlgB,GACP,OAAO,QAzDb,CAAA/J,IAAA,yBAAAyH,MAAA,SA6DgC6R,GAAgB,IAAA46B,EAAA/7C,KACtC8xB,EAAa,WACjBiqB,EAAKp8C,MAAM+3D,qBAAqB,CAC9Bv2C,SACAs2C,wBAAwB,EACxBlzB,OAAQ,QAGZ,OAAOvkC,KAAKL,MAAM6D,SAAS,CACzB+8B,KACEygB,EAAA,cAACI,EAAA,oCAAD,CACEnvB,UAAW,wDACXJ,iBAAkB,gBAClBE,SAAU,OACVD,WAAYA,EACZF,iBAAkB5xB,KAAKL,MAAMiyB,mBAGjC8Q,cAAc,EACd7nB,SAAS,EACTiX,iBAjFN,CAAAjqB,IAAA,SAAAyH,MAAA,WAsFI,IAAM6R,EAASw2C,wBACbC,8BAAoBC,iCAAuB73D,KAAKL,MAAMkvC,aACtD7uC,KAAKL,MAAM+uC,UAEb,OACE1uC,KAAK83D,wBAAwB32C,IAC7BnhB,KAAK+3D,uBAAuB52C,OA5FlCi2C,EAAA,CAA2C90D,aCxE3C,SAAS01D,GAAahsC,GACpB,OAAQA,GACN,IAAK,OACH,OAAOtC,aAAWuuC,KACpB,IAAK,QACH,OAAOvuC,aAAWwuC,MACpB,QACE,OAAOxuC,aAAWyuC,MDiEXf,GAGGjG,aAAe,CAC3B1uB,aAAc,ICjEX,IAAM21B,GAET,SAACz4D,GACH,IAAM04D,EAAwC,GAU9C,OATI3B,sBAAY/2D,EAAM4V,KAAKq5B,cACzBypB,EAAsBpY,KAAKtgD,EAAMo2D,aAE/BY,wBAAch3D,EAAM4V,KAAKq5B,cAC3BypB,EAAsBpY,KAAKtgD,EAAMu2D,YAEnCmC,EAAsBpY,KAAKtgD,EAAM02D,cACjCgC,EAAsBpY,KAAKtgD,EAAM42D,YAG/BvV,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GACC,IAAMmX,GACH34D,EAAM4V,KAAKq5B,YAAYwhB,OACtBzwD,EAAM4V,KAAKq5B,YAAYwhB,MAAM7/B,UAC/B,IACAmT,OAAO,SAAC9Y,EAAKC,EAASjjB,EAAO2wD,GAC7B,IACE,IAAK1tC,EACH,OAAOD,EAET,IAAM/iB,EAAMgjB,EAAQ2tC,MAAQ3tC,EAAQxpB,QACpC,IAAKwG,GAAe,KAARA,EACV,OAAO+iB,EAET,KAAM/iB,KAAO+iB,GAEX,OADAA,EAAI/iB,GAAOgjB,EACJD,EAETA,EAAI/iB,GAAKokB,SACPrB,EAAI/iB,GAAKokB,OACT,OACApB,EAAQoB,QACRwsC,UAAU,EAAG,KACf,MAAOrC,IAGT,OAAOxrC,GACN,IACG8tC,EAAiBl2D,OAAOihC,KAAK60B,GAAO5wD,IACxC,SAACG,GAAD,OAAiBywD,EAAMzwD,KAEzB,OACEm5C,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,4BAAD,CACE1nC,SAAU/Z,EAAMm2D,WAAW1pD,KAC3BygB,UAAWltB,EAAMm2D,WAAW9nD,MAC5B2e,aAAchtB,EAAMgtB,aAAa7hB,QACjC4hB,WAAY/sB,EAAMgtB,aAAavgB,KAC/BwgB,YAAajtB,EAAMgtB,aAAa3e,MAChC+e,SAAUu9B,GAAUlD,UAAUyD,OAC9B79B,SAAUm0B,EAAE,eACZt9B,iBAAkBs9B,EAAE,uBACpB14B,cAAe04B,EAAE,iCACjBz+B,cAAe/iB,EAAM4V,KAAKq5B,YAAYz4B,GACtC8W,iBAAkBq9B,GAAUnX,aAAa4V,OACzCj8B,YAAaurC,IAGfrX,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,SACpB8pC,EAAA,cAACI,EAAA,sBAAD,CACEp8C,KACEg8C,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAlC,GAAuB,IAApBtT,EAAoBsT,EAApBtT,cACIx8B,EAAY,eAAAiyC,EAAAxhD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAO1gD,GAAP,OAAAwgD,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEXxX,EAAc5uC,EAAM4V,KAAKq5B,YAAYz4B,GAAK,CAC9CnR,SAHe,cAAA6gD,EAAAuM,OAAA,UAKV,GALU,cAAAvM,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAuM,OAAA,UAOV,GAPU,wBAAAvM,EAAAM,SAAAT,EAAA,iBAAH,gBAAAsK,GAAA,OAAAhM,EAAAjE,MAAA//C,KAAAggD,YAAA,GAUlB,OACEgB,EAAA,cAACI,EAAA,8BAAD,CACEp8C,KACEg8C,EAAA,cAACI,EAAA,eAAD,CACE9xC,MAAO3P,EAAM4V,KAAKq5B,YAAY5pC,KAC9BqK,cAAc,EACduB,YAAY,EACZf,SAAUkC,QAQxB6c,QAASjvB,EAAM4V,KAAKq5B,YAAYhgB,QAChCb,aAAcpuB,EAAM4V,KAAKq5B,YAAY7gB,aACrCK,YAAazuB,EAAM4V,KAAKq5B,YAAYxgB,YACpCE,gBACE3uB,EAAM4V,KAAKy9B,YACXmO,EAAE,gBAAkBxhD,EAAM4V,KAAKy9B,WAAWgkB,cAAc1nD,OAE1Dif,sBACE5uB,EAAM4V,KAAKy9B,YACXrzC,EAAM4V,KAAKy9B,WAAWgkB,cAAct/C,YAEtC8W,qBACE7uB,EAAM4V,KAAKy9B,YACXrzC,EAAM4V,KAAKy9B,WAAWgkB,cAAcr/C,WAEtC8W,iBAAkB9uB,EAAMmlD,aAAanlD,EAAM4V,KAAKy9B,YAChD7kB,oBAAqBgzB,EAAE,kBACvBzyB,qBAAsByyB,EAAE,iCACxBxyB,qBAAsBwyB,EAAE,iCACxBrpC,eAAgBqpC,EAAE,sBAGtBH,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,SACnBwhD,EAAehxD,IAAI,SAACrG,EAAyBuG,GAA1B,OAClBo5C,EAAA,cAACI,EAAA,8BAAD,CACEv5C,IAAKD,EACLokB,MAAOgsC,GAAa32D,EAAQ2qB,OAAS,QACrC3qB,QACEA,EAAQA,QACJA,EAAQA,QACR8/C,EAAC,UAAA14C,OAAWpH,EAAQm3D,KAAMG,sBAEhC1sC,OAAQ5qB,EAAQ4qB,OAChBK,iBAAkB60B,EAAE,sBACpB30B,kBAAmB20B,EAAE,2BAI3BH,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,QAAS+E,WAAW,GACxC+kC,EAAA,cAAC4X,GAAD,CAAyBhqB,YAAajvC,EAAM4V,KAAKq5B,mBChJxD,SAASiqB,GAAYzoC,GAC1B,MAAiD,iBAA5CA,EAA4B4lB,YACxB,eAEF5lB,EAAK8kB,SAGP,SAAS4jB,GAAa1oC,GAC3B,IAAM2oC,EAAaF,GAAYzoC,GACzB1uB,EACJ0uB,EAAKjP,QACLiP,EAAKjP,OAAOu8B,YACZttB,EAAKjP,OAAOu8B,WAAWh8C,eACnBK,EACJquB,EAAKjP,QACLiP,EAAKjP,OAAOu8B,YACZttB,EAAKjP,OAAOu8B,WAAW37C,gBACzB,OAAQg3D,GACN,IAAK,YAEH,OAAOv2D,OAAAyqD,GAAA,EAAAzqD,CAAA,GACF4tB,EADL,CAEEjW,YACGiW,EAAkBjW,aAClBiW,EAAkB4kB,UAAW76B,aAC9B,GACF5U,KAAM8vC,sBAAY2Q,kDAAwB51B,GAC1C1uB,iBACA+xC,SAASjxC,OAAAyqD,GAAA,EAAAzqD,CAAA,GACH4tB,EAAK4kB,UAAWvB,UAAY,GAC5BrjB,EAAKqjB,UAAY,IAEvBzuC,KAAMorB,EAAKprB,MAAQorB,EAAK4kB,UAAWhwC,KACnCjD,kBACAilC,WAAY5W,EAAKjP,OAAQu8B,WAAYC,wBAAyB,GAC3D3W,WACHtiC,MAAO0rB,EAAKprB,KACZ+zD,eAEJ,IAAK,eACL,IAAK,WACL,IAAK,YAEH,OAAOv2D,OAAAyqD,GAAA,EAAAzqD,CAAA,GACF4tB,EADL,CAEEjW,YACGiW,EAA4BjW,aAC7BiW,EAAKye,WAAY10B,aACjB,GACF5U,KAAM8vC,sBAAY2Q,kDAAwB51B,GAC1C1uB,iBACA+xC,SAASjxC,OAAAyqD,GAAA,EAAAzqD,CAAA,GACH4tB,EAAKye,WAAY4E,UAAY,GAC7BrjB,EAAKqjB,UAAY,IAEvBzuC,KAAMorB,EAAKprB,MAAQorB,EAAKye,WAAY8E,UAAW3uC,KAC/CjD,kBACAilC,WACE5W,EAAKjP,QACLiP,EAAKjP,OAAOu8B,YACZttB,EAAKjP,OAAOu8B,WAAWC,yBACvBvtB,EAAKjP,OAAOu8B,WAAWC,wBAAwBl2C,QAC/C2oB,EAAKjP,OAAOu8B,WAAWC,wBAAwB,GAAG3W,WACpDtiC,MACE,GAAA+D,OAAI2nB,EAAKye,YAAcze,EAAKye,WAAW7pC,MAAS,aAChDorB,EAAKjP,OADL,MAAA1Y,OAEW2nB,EAAKjP,QAAUiP,EAAKjP,OAAOnc,MAAS,aAC3C,GACN+zD,eAEJ,QAEE,IAAM/zD,EAAOorB,EAAKprB,MAAQorB,EAAK8kB,UAAY,OAC3C,OAAO1yC,OAAAyqD,GAAA,EAAAzqD,CAAA,GACD4tB,EADN,CAEE7qB,KAAM8vC,sBAAY2Q,kDAAwB51B,GAC1C1uB,iBACA+xC,SAAUrjB,EAAKqjB,UAAY,GAC3BzuC,OACAjD,kBACA2C,MAAOM,EACP+zD,gBAKD,SAASC,GAAuBhpC,GACrC,OAAOA,EAAMtoB,IAAIoxD,IAGZ,SAASG,GAAiB/jB,EAAkBgkB,GACjD,GAAKA,EAAL,CAGA,IAAMC,EACJD,EAAUzlB,UAA2C,eAA/BylB,EAAUzlB,SAASv8B,QACvC+vB,EAA6BiyB,EAAUl0D,KAc3C,OAbIk0D,EAAUE,OACRF,EAAUE,OAAU1wB,iBAAegR,IACrCzS,EAAS,MACAiyB,EAAUE,OAAU1wB,iBAAeljC,KAC5CyhC,OAASxgC,EACCyyD,EAAUn0D,OACpBkiC,EAASiyB,EAAUE,OAInBnyB,GAAUkyB,GAAgBjkB,IAAanM,UACzC9B,GAAkB,iBAEbA,GAYF,IAAMoyB,GAAc,SACzBjpC,EACAwW,EACAz/B,EACAmyD,GAEA,OAAQT,GAAYzoC,IAClB,IAAK,WACL,IAAK,YACH,OAAOkpC,EAAMC,eAC6B,qBAAhCnpC,EAAiB2oC,WACpB3oC,EAAiBye,WACjBze,EACLwW,EACAz/B,GAEJ,IAAK,eACH,OAAOmyD,EAAME,gBAAgBppC,EAAMwW,EAAQz/B,GAC7C,IAAK,aACH,OAAOmyD,EAAMG,WAAWrpC,EAAMwW,EAAQz/B,GACxC,IAAK,YACH,OAAOmyD,EAAMI,cAActpC,EAAMwW,EAAQz/B,GAC3C,IAAK,SACH,OAAOmyD,EAAMK,WAAWvpC,EAAMwW,EAAQz/B,GACxC,IAAK,WACH,OAAOmyD,EAAMM,aAAaxpC,EAAMwW,EAAQz/B,GAC1C,QACE,OAAOmyD,EAAMO,SAASzpC,EAAMwW,EAAQz/B,KA6InC,SAAS2yD,GACd9pC,EACA3kB,EACA0uD,GAEA,IAAM3gB,EAAgB2gB,EAAUvb,MAAM,EAAGnzC,GACnCguC,EAAkB0gB,EAAUvb,MAAMnzC,EAAW,GACnD,OApFK,SAA+B2kB,EAAmB3kB,GACvD,GAAwB,qBAAbA,IAA6B2kB,EAEtC,OAAOA,EAET,IAAMgqC,EAAuB,IAAb3uD,EACV4uD,EAAQ3kB,+BAAqBtlB,KAAW3kB,EAC9C,OAAO2kB,EAAM0V,OAAO,SAAAtV,GAElB,GAC8B,qBAApBA,EAAKye,YACyB,qBAA7Bze,EAAKye,WAAW4E,UACvBrjB,EAAKye,WAAW4E,SAASymB,0BACD,qBAAlB9pC,EAAKqjB,UACXrjB,EAAKqjB,SAASymB,0BAC0C,SAAzD9pC,EAAKye,YAAeze,GAAqB4lB,YAE1C,OAAO,EAGT,GAAIgkB,EAEF,MAAsB,aAAlB5pC,EAAK8kB,aAGJ9kB,EAAKye,YAAeze,GAAqBujB,YAE1CvjB,EAAKye,YAAeze,GACpBujB,UAAWxmC,QAAQymC,KAAK,SAACzyB,GACzB,MAA0B,SAAnBA,EAAOg5C,WAOpB,GAAIF,EAEF,OAAS7pC,EAAc8kB,UACrB,KAAKklB,cACL,KAAKC,eACL,KAAKC,kBACL,KAAKvxB,QACL,KAAKC,YACL,KAAKuxB,WACH,OAAO,EAIb,MAC4D,kBAAzDnqC,EAAKye,YAAeze,GAAqB4lB,cAMxC5lB,EAAK8kB,WAAaslB,cAIjBpqC,EAAKye,YAAeze,GAAqBujB,YACpCvjB,EAAKye,YAAeze,GAAqBujB,UAAWxmC,QAAQymC,KAClE,SAACzyB,GACC,MAA0B,OAAnBA,EAAOg5C,aAqBfM,CAAsBzqC,EAAO3kB,GAAUq6B,OAAO,SAAAtG,GACnD,MAAyB,oBAAdA,EAAEs7B,SACJt7B,EAAEs7B,QAAQrvD,EAAU+tC,EAAeC,KC3TzC,IAAMshB,GAAb,SAAAtY,GAAA,SAAAsY,IAAA,OAAAn4D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA26D,GAAAn4D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAm4D,GAAA5a,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAm4D,EAAAtY,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAm4D,EAAA,EAAA9yD,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACR8uC,EAAS9uC,KAAKL,MAAMivC,YAAYM,MAAO,GAAG/4B,GAC1C6Z,EAAQ4qC,mBAAS56D,KAAKL,MAAMivC,YAAaE,GAE/C,OACEkS,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,SACpB8pC,EAAA,cAACI,EAAA,+BAAD,KACG4X,GAAuBhpC,GAAOtoB,IAAI,SAAC03B,EAAYh3B,GAC9C,IAAMisB,EAAkB,IAARjsB,EACVyyD,EACJz7B,EAAE8V,WAAaslB,YAAap7B,EAAEqU,SAASqnB,mCAInCr0D,EAHA6jD,GAAUhmC,YAAYuqB,WAAW6b,QAAQ,CACvC7b,WAAYzP,EAAEyP,aACb1gC,SAGT,OACE6yC,EAAA,cAACA,EAAA,SAAD,CAAgBn5C,IAAKu3B,EAAEjpB,IACrB6qC,EAAA,cAACI,EAAA,+BAAD,CACEp8C,KAAMo6B,EAAEp6B,KACRN,MAAO06B,EAAE16B,MACTa,KAAM4vC,iCACJ6Q,kDACApc,EAAKjqC,MAAMivC,YACXE,EACA1mC,GAEFgE,KAAMyuD,EACNxmC,QAASA,aA/B3BsmC,EAAA,CAA4Cr4D,aC6C/By4D,IC3CqCz4D,YD2ClD,SAAA+/C,GAAA,SAAA0Y,IAAA,OAAAv4D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA+6D,GAAAv4D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAu4D,GAAAhb,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAu4D,EAAA1Y,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAu4D,EAAA,EAAAlzD,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACI,EAAA,wBAAD,KACG,SAAAS,GAAA,IAAGz1B,EAAHy1B,EAAGz1B,SAAH,OACCwd,EAAKjqC,MAAMqwB,MAAMtoB,IAAI,SAAC03B,EAAGh3B,GACvB,IAAM8E,EAAW9E,IAAQwhC,EAAKjqC,MAAMq7D,YAC9BC,EAAarxB,EAAKjqC,MAAMu7D,aAAe9yD,EAAM,EAE7CiD,EADuBu+B,EAAKjqC,MAAMu7D,WAAc,EAAI9yD,EAClBA,EAAM,EAAIA,EAAM,EAElD+yD,EACJna,EAAA,cAACI,EAAA,2BAAD,CACE77C,KAAMqkC,EAAKjqC,MAAMy7D,SAAWpa,EAAA,mBAAG96C,UAAW,eAC1CU,UAAWgjC,EAAKjqC,MAAM07D,aACtBloC,YAAayW,EAAKjqC,MAAM27D,eACxBrsD,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAayvB,EAAKjqC,MAAM47D,qBAG5B,OACEva,EAAA,cAACA,EAAA,SAAD,CAAgBn5C,IAAKO,GACnB44C,EAAA,cAACI,EAAA,gCAAD,CACE77C,KACEy7C,EAAA,qBAAK9mC,IAAK,OAAQD,IAAKmlB,EAAE75B,KAAM5C,MAAO,GAAIC,OAAQ,KAEpDgE,UAAS,GAAA6B,OAAK4C,EAAL,MAAA5C,OAAkB22B,EAAEp6B,MAC7BmuB,YAAW,GAAA1qB,OAAK4C,EAAL,MAAA5C,OAAkB22B,EAAE16B,OAC/BuK,OAAQ/B,EACR+lB,YAAa7G,EACbpnB,KAAMo6B,EAAEp6B,KACRmc,OAAQie,EAAEje,QAAUie,EAAEje,OAAOnc,KAC7B0uB,SAEMulC,GAAiB75B,EAAE8V,SADf,IAAR9sC,EACkCg3B,EAAEr9B,gBACFq9B,EAAE19B,kBAGvCu5D,EAAaE,EAAgB,cAzC9CJ,EAAA,CAA8Cz4D,cErBjCk5D,GAAb,SAAAnZ,GAAA,SAAAmZ,IAAA,OAAAh5D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAw7D,GAAAh5D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAg5D,GAAAzb,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAg5D,EAAAnZ,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAg5D,EAAA,EAAA3zD,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACI,EAAA,YAAD,KACEJ,EAAA,cAACI,EAAA,2BAAD,KACGphD,KAAKL,MAAMqwB,MAAMtoB,IAAI,SAAC03B,EAAGh3B,GACxB,OACE44C,EAAA,cAACA,EAAA,SAAD,CAAgBn5C,IAAKO,GACnB44C,EAAA,cAACI,EAAA,+BAAD,CACEhvB,SAAUgN,EAAEp6B,KACZqtB,gBAAiB+M,EAAEje,OAASie,EAAEje,OAAOnc,KAAO,GAC5CO,KACEy7C,EAAA,qBACE9mC,IAAK,OACLD,IAAKo7B,sBAAY2Q,kDAAwB5mB,GACzCz8B,MAAO,GACPC,OAAQ,KAGZuK,QACE6zC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,CAAYh1C,KAAMw9B,EAAKjqC,MAAM87D,kBAAkBrzD,EAAKg3B,IAApD,aAGA4hB,EAAA,cAACI,EAAA,WAAD,CAAYh1C,KAAM,IAAKC,GAAI,UACzB20C,EAAA,mBAAG96C,UAAU,oBAKpBkC,EAAMwhC,EAAKjqC,MAAMqwB,MAAMvoB,OAAS,GAC/Bu5C,EAAA,cAACI,EAAA,uBAAD,CACEnyC,QAAQ,EACRgkB,aAAa,EACbF,YAAa6W,EAAKjqC,MAAMozB,YAAY3qB,EAAM,GAC1C4qB,YAAa,wBArCjCwoC,EAAA,CAAgDl5D,aCOzC,SAASo5D,GAAa9sB,GAC3B,OAAiC,IAA1BA,EAAY+sB,UACf/sB,EAAY+sB,UACZ/sB,EAAYgtB,UAGX,SAASC,GAAY/vC,EAAwBqS,GAClD,IAAM29B,EAAaJ,GAAa5vC,IAAM,EAEtC,OADmB4vC,GAAav9B,IAAM,GAClB29B,EAuCP,ICrFHC,GAKAC,GDgFGC,GAAA,kBACbjb,EAAA,cAAC+C,EAAA,0BAAD,KACG,SAAAlC,GAAA,IACOqa,EADPra,EACCtsC,KACS4mD,EAFVta,EAEC9V,QACOqwB,EAHRva,EAGC38C,MAHD,OAKC87C,EAAA,cAAC+C,EAAA,wBAAD,KACG,SAAAC,GAAA,IAASqY,EAATrY,EAAGzuC,KAAH,OACCyrC,EAAA,cAAC+C,EAAA,gBAAD,KACG,SAAAU,GAIK,IAHE6X,EAGF7X,EAHJlvC,KACSgnD,EAEL9X,EAFJ1Y,QACOywB,EACH/X,EADJv/C,MAEMu3D,EACJP,EAAiBzxC,MAjFXiZ,OAClB,SAACg5B,EAAQ5F,GACP,IAAM6F,EAAaD,EAAO5F,EAAGloB,YAAY7gB,eAAkB,EAC3D,OAAOvrB,OAAAyqD,GAAA,EAAAzqD,CAAA,GACFk6D,EADLl6D,OAAAo6D,GAAA,EAAAp6D,CAAA,GAEGs0D,EAAGloB,YAAY7gB,aAAgB4uC,EAAa,KAGjD,CACE/uC,MAAO,EACPnJ,QAAS,EACTG,UAAW,EACXiJ,YAAa,IAuECgvC,EAtDb,SACL1pB,GAEA,OAAOA,EACJzrC,IAAI,SAAAovD,GAAE,OAAIA,EAAGloB,cACb/K,KAAKg4B,IACLrd,MAAM,EAAG,GAgDoCse,CAClCZ,EAAiBzxC,OAEbzG,EAhDb,SACLmvB,GAE2B,IAD3BnvB,EAC2Bg8B,UAAAv4C,OAAA,QAAAhB,IAAAu5C,UAAA,GAAAA,UAAA,GADmB,GAExC+c,EAAuBv6D,OAAOihC,KAAKzf,GACtCtc,IAAI,SAAAG,GACH,MAAO,CACL6E,MAAOsX,EAAgBnc,GACvBsO,GAAItO,KAGPg8B,KAAK,SAAC/X,EAAGqS,GACR,OAAOA,EAAEzxB,MAAQof,EAAEpf,QAGvB,OAAOymC,EACJtP,KAAK,SAACitB,EAAKC,GAAN,OAAc8K,GAAY/K,EAAIliB,YAAamiB,EAAIniB,eACpD/K,KAAK,SAAC/X,EAAGqS,GACR,IAAMv2B,EAAQm1D,EAAqBC,UACjC,SAAAxuD,GAAC,OAAIA,EAAE2H,KAAOgoB,EAAEyQ,YAAYz4B,KAE9B,OAAkB,IAAXvO,EAAem1D,EAAqBt1D,OAAS,EAAIG,IAEzDygC,UACAmW,MAAM,EAAG,GAwBwBye,CACtBf,EAAiBzxC,MACjB4xC,EAAYr4C,iBAEd,OACEg9B,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,YAAa,eAAgB,WAC5C,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,UAAD,CACEt9B,mBAAoBwmC,GAAUnX,aAAa4V,OAC3ChlC,0BAA2BumC,GAAUnX,aAAauV,OAAO/3B,MAAMq7B,aAC/D5nC,kBAAmBkmC,GAAUhmC,YAAYA,cACzCD,yBAA0BimC,GAAUhmC,YAAYokC,OAAOiC,kBACvDuS,qBACElc,EAAA,qBAAKsD,cAAY,sBACftD,EAAA,cAACI,EAAA,qBAAD,CACE18C,MAAOy8C,EAAE,yBAA0B,CACjCz0C,MAAOwvD,EAAiBnsB,aAE1B9qC,GACEi3D,EAAiBnsB,WACjB0sB,EAAuB7uC,MAEzB1oB,MAAOu3D,EAAuB7uC,SAIpCuvC,oBACEnc,EAAA,qBAAKsD,cAAY,qBACftD,EAAA,cAACI,EAAA,kBAAD,CACEx6C,UAAWu6C,EAAE,wBAAyB,CACpCz0C,MACE4vD,EAAgBvoB,sBAAsBtsC,YAKhD21D,iBACEpc,EAAA,qBAAKsD,cAAY,kBACftD,EAAA,cAACI,EAAA,qBAAD,CACE18C,MAAOy8C,EAAE,qBAAsB,CAC7Bz0C,MAAO2vD,EAAY9rC,WAErBtrB,GAAIo3D,EAAY9rC,SAAY8rC,EAAY7rC,OACxCtrB,MAAOm3D,EAAY7rC,UAIzB6sC,eACErc,EAAA,cAACI,EAAA,aAAD,CACEzwB,MAAOuT,SAASm4B,EAAY1rC,MAAQ,IACpCU,mBAAoBisC,qCAClBp5B,SAASm4B,EAAY1rC,MAAQ,KAE/B/pB,UAAWu6C,EAAE,uBAGjBn9B,gBACEg9B,EAAA,cAACI,EAAA,oBAAD,CACEx6C,UAAWu6C,EAAE,uBAAwB,CACnCz0C,MAAO,IAETmpB,eAAgBsrB,EAAE,mBAAoB,CACpCoc,aAAc,KAEhBvnC,eAAgBmrB,EAAE,mBAAoB,CACpCoc,aAAc,KAEhBC,eAAgBrc,EAAE,mBAAoB,CACpCoc,aAAc,MAGhBvc,EAAA,cAACyc,GAAD,CACEv4D,MAAOk3D,EACP7uD,SAAU4uD,EACVhpB,aAAcnvB,KAIpBC,iBACE+8B,EAAA,cAACI,EAAA,iBAAD,CACEn8B,oBAAqBw3C,EAAuB73C,UAC5CS,oBAAqBo3C,EAAuBh4C,QAC5CU,oBACEs3C,EAAuB5uC,YAEzBjnB,UAAWu6C,EAAE,yBACb/7B,4BAA6B+7B,EAC3B,2BAEFn8B,4BAA6Bm8B,EAC3B,2BAEFj8B,4BAA6Bi8B,EAC3B,2BAEFt9B,iBAAkBs9B,EAAE,uBACpBx7B,UAAWw7B,EAAE,kBAGjBj9B,mBACE88B,EAAA,cAACI,EAAA,kBAAD,CACEx6C,UAAWu6C,EAAE,4BAEbH,EAAA,cAACwD,EAAA,WAAD,CACEt/C,OAAO,EACPqI,SAAU4uD,EACV51B,eAAgBya,EAAA,cAACI,EAAA,sBAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACC2S,EAA4Bn1D,IAAI,SAAA8G,GAAC,OAC/BwyC,EAAA,cAACI,EAAA,kBAAD,CACEv5C,IAAK2G,EAAE2H,GACPob,gBAAiB/iB,EAAExJ,KACnB63B,wBAAyBruB,EAAEuf,aAC3B+O,gBAAiBtuB,EAAEmtD,WAAcntD,EAAEotD,UACnC7mC,UAAWosB,EAAE,gBACbtsB,cAAessB,EAAE,oBACjBrsB,gBAAiBqsB,EAAE,6BAO/B78B,YACE08B,EAAA,cAACkQ,GAAD,CACEhsD,MAAOs3D,EACP/L,uBAAuB,EACvBljD,SAAUgvD,EACVj4C,YAAag4C,EAAgBvoB,sBAC7Byc,kBAAmB,SAAA3hB,GAAU,OAC3Byb,GAAUhmC,YAAYuqB,WAAW6b,QAAQ,CACvC7b,gBAGJ6hB,sBAAuB,SAAA7hB,GAAU,OAC/Byb,GAAUhmC,YAAYuqB,WAAW4b,KAAK,CACpC5b,kBAKRhrB,iBAAkBs9B,EAAE,uBACpBh9B,gBAAiBg9B,EAAE,sBACnB8P,yBAA0B9P,EACxB,+BAEFuc,0BAA2Bvc,EACzB,gCAEFwc,sBAAuBxc,EAAE,qBACzByc,uBAAwBzc,EAAE,sBAC1Bv6C,UAAWu6C,EAAE,SACbrqC,gBAAiBqqC,EAAE,0BEhR5B0c,GAAb,SAAAxb,GAAA,SAAAwb,IAAA,OAAAr7D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA69D,GAAAr7D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAq7D,GAAA9d,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAq7D,EAAAxb,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAq7D,EAAA,EAAAh2D,IAAA,SAAAyH,MAAA,WAEI,OAAO0xC,EAAA,cAACib,GAAD,UAFX4B,EAAA,CAAqCv7D,aCKtBw7D,GAAA,CACbrX,uBACAniC,eACA8iC,aACA7xC,QACA0xC,cACA9T,gBACAyT,aCSWmX,GAAb,SAAA1b,GAAA,SAAA0b,IAAA,OAAAv7D,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA+9D,GAAAv7D,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAu7D,GAAAhe,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAu7D,EAAA1b,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAu7D,EAAA,EAAAl2D,IAAA,SAAAyH,MAAA,WAII,IAAMssC,EAAiB57C,KAAKL,MAAMi8C,eAClC,OACEoF,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,UAAD,CACE1+C,MAAO,CACL0oB,WAAY,SAGd41B,EAAA,cAACI,EAAA,OAAD,KACEJ,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAOmzC,EAAE,6BACT30C,GAAI89C,GAAUW,gBAAgBK,MAAMT,KAAK,CACvCjP,qBAGJoF,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAOmzC,EAAE,oCACT30C,GAAI89C,GAAUW,gBAAgBG,aAAa,CACzCxP,qBAGJoF,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAOmzC,EAAE,iCACT30C,GAAI89C,GAAUW,gBAAgBI,UAAU,CACtCzP,qBAGJoF,EAAA,cAACI,EAAA,WAAD,CACEpzC,MAAOmzC,EAAE,+BACT30C,GAAI89C,GAAUW,gBAAgBE,QAAQ,CACpCvP,6BAnClBmiB,EAAA,CAA0Cz7D,aCC7B07D,GAAb,SAAA3b,GAQE,SAAA2b,EAAYr+D,GAA+B,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAg+D,IACzCp0B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAw7D,GAAAzb,KAAAviD,KAAML,KALDwH,MAAQ,CACb8H,QAAQ,GAKR26B,EAAKimB,aAAejmB,EAAKimB,aAAa5vD,KAAlBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAFqBA,EAR7C,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAw7D,EAAA3b,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAw7D,EAAA,EAAAn2D,IAAA,eAAAyH,MAAA,WAcItP,KAAKsI,SAAS,CACZ2G,QAASjP,KAAKmH,MAAM8H,WAf1B,CAAApH,IAAA,SAAAyH,MAAA,WAoBI,OACE0xC,EAAA,cAACI,EAAA,YAAD,CACEnyC,OAAQjP,KAAKmH,MAAM8H,OACnBC,UACE8xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9BtlB,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO0jD,GAAKjH,EAAE,qDAEhBH,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9BtlB,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO0jD,GAAKjH,EAAE,sDAIpBhyC,SACE6xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9B8O,OAAO,EACPp0B,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO0jD,GAAKjH,EAAE,qDAEhBH,EAAA,cAACI,EAAA,WAAD,CACEl0C,SAA8B,IAApBlN,KAAKL,MAAMywB,KACrB6O,WAAYj/B,KAAKL,MAAMywB,KAAO,EAC9B8O,OAAO,EACPp0B,QAAS9K,KAAK6vD,aACdz/B,KAAM,EACN1rB,MAAO0jD,GAAKjH,EAAE,4DAzD5B6c,EAAA,CAAsC17D,aJbhC27D,GAAmB,aACnBC,GAAsB,cAwFrB,SAASC,GACdlkC,EACAmkC,GAEA,IAAMC,EAAkC,GADrBC,GAAA,EAAAC,GAAA,EAAAC,OAAA/3D,EAAA,IAEnB,QAAAg4D,EAAAC,EAAuBN,EAAvBxzB,OAAA+zB,cAAAL,GAAAG,EAAAC,EAAA3Y,QAAArb,MAAA4zB,GAAA,EAAkC,KAAvBM,EAAuBH,EAAAnvD,MAC1BuvD,EAAqB,GACrB3wD,EACJ,cACA0wD,EAASxjD,eACT,IACAwjD,EAASE,eAAe5wD,KAC1B2wD,EAAS5e,KAAK/xC,GAGd,IAAM6wD,EAA8B,GAMpCA,EAAS9e,KALwB,CAC/Bj7C,KAAM,MACN2lB,UAAU,EACV5lB,KAAM,QAMR,IAAMi6D,EAA2B,CAC/BC,aAAc,GACdC,YAAY,EACZC,kBAAmBP,EAASxoC,SAAW,eACvCgpC,iBAAkBL,EAClBM,YAAaR,EACbzoC,SAAUwoC,EAASxoC,UAIfkpC,EAA+B,CACnCnpD,GAAI8jB,EAAiB,IAAM2kC,EAASxoC,SACpCmpC,eAAgBP,GAElBX,EAAape,KAAKqf,IApCD,MAAAlJ,GAAAmI,GAAA,EAAAC,EAAApI,EAAA,YAAAkI,GAAA,MAAAI,EAAAc,QAAAd,EAAAc,SAAA,WAAAjB,EAAA,MAAAC,GAsCnB,OAAOH,EA2CF,SAASoB,GAAsBC,GACpC,IAAIC,EAAkB5D,GAAmB6D,SAIzC,OAHIF,EAAKrwB,SAAWqwB,EAAKrwB,QAAQxX,WAC/B8nC,EAAUD,EAAKrwB,QAAQxX,UAElB8nC,EAOF,SAASE,GAAuBH,GACrC,IAAI/nC,GAAa,EAQjB,OANE+nC,EAAKrwB,SACLqwB,EAAKrwB,QAAQywB,YACbJ,EAAKrwB,QAAQywB,aAAe9D,GAAsB+D,WAElDpoC,GAAa,GAERA,EA+CF,SAASqoC,GAAcT,GAE5B,IAAMU,EAAaV,EAAeF,YAAY,GAC9C,OAAIY,EACK,iBAUX,SAA6BA,GAE3B,OAaF,SAA2BA,GAEzB,OAAOA,EAAWC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAdzCC,CAAkBF,GAAYhmB,cAC9BikB,GACA,IAoBJ,SAAqB+B,GACnB,IAAMG,EAAWH,EAAWC,MAAM,KAElC,OAAOE,EAASA,EAAS34D,OAAS,GAAGy4D,MAAM,KAAK,GAtB9CG,CAAYJ,GAhBcK,CAAoBL,GAAc,IAEvD,GKlPT,SAASM,GACPC,EACAzsD,EACAT,EACAM,EACA6sD,EACAC,GAEA,IAAMtC,EAAwB,GAC1BoC,GAAeA,EAAY/4D,OAAS,GLenC,SAASk5D,EACdvC,EACAwC,EACApoC,EACAioC,EACAC,GAEA,GAAIE,EAAY,CAEd,IAAMX,EAAuB,GAFfY,GAAA,EAAAC,GAAA,EAAAC,OAAAt6D,EAAA,IAGd,QAAAu6D,EAAAC,EAAkBzoC,EAAlBoS,OAAA+zB,cAAAkC,GAAAG,EAAAC,EAAAlb,QAAArb,MAAAm2B,GAAA,EAA4B,KAAjBK,EAAiBF,EAAA1xD,MAC1B2wD,EAAWhgB,KAAKihB,IAJJ,MAAA9K,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAQd,IAA6B,IAAzBH,EAAWO,UAAoB,CACjC,IAAMC,EAASR,EAAWxlD,eAAiB,IAAMwlD,EAAW57D,KAEtDq8D,GAC8D,IAAlEZ,EAAkBzD,UAAU,SAAA5mC,GAAQ,OAAIA,IAAagrC,IAIjDE,GAC8D,IAAlEZ,EAAkB1D,UAAU,SAAA5mC,GAAQ,OAAIA,IAAagrC,IAIjDG,EAAiB,CACrBnmD,eAAgBwlD,EAAWxlD,eAC3BomD,SAAUF,EACV9oC,SAAUynC,EACVt1C,SAAU02C,EACVjrC,SAAUgrC,EACVtC,eAAgB8B,GAElBxC,EAAUne,KAAKshB,GAKjB,GAFAtB,EAAWhgB,KAAK2gB,EAAW57D,MAEvB47D,EAAWp9D,UAAYo9D,EAAWp9D,SAASiE,OAAS,EAAG,KAAAg6D,GAAA,EAAAC,GAAA,EAAAC,OAAAl7D,EAAA,IACzD,QAAAm7D,EAAAC,EAAwBjB,EAAWp9D,SAAnConC,OAAA+zB,cAAA8C,GAAAG,EAAAC,EAAA9b,QAAArb,MAAA+2B,GAAA,EACEd,EACEvC,EAFyCwD,EAAAtyD,MAIzC2wD,EACAQ,EACAC,GAPqD,MAAAtK,GAAAsL,GAAA,EAAAC,EAAAvL,EAAA,YAAAqL,GAAA,MAAAI,EAAArC,QAAAqC,EAAArC,SAAA,WAAAkC,EAAA,MAAAC,MKvD3DhB,CACEvC,EACAoC,EAAY,GACZ,GACAC,EACAC,GAIJ,IAAIjX,EAAoB2U,EAiBxB,OAhBArqD,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClCwP,EAAoBA,EAAkB/jB,OAAO,SAACk5B,GAAD,OAC3CA,EAASxoC,SAAS6jB,cAAc2P,SAASD,OAI7CF,EAAoBA,EAAkB5lB,KAAK,SAACi+B,EAAcC,GACxD,OAAInuD,EACKkuD,EAAa1rC,SAAS2zB,cAAcgY,EAAa3rC,UAInD2rC,EAAa3rC,SAAS2zB,cAAc+X,EAAa1rC,sBLnChD2lC,kEAKAC,mEK2CZ,IAAMhT,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAA6B,CAAC+1C,IAE9BC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAEnB+Y,GAAb,SAAA3f,GAIE,SAAA2f,EAAmBriE,GAA+B,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAgiE,IAChDp4B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAw/D,GAAAzf,KAAAviD,KAAML,KAJDsiE,eAA6B,GAGcr4B,EAF3C62B,kBAA8B,GAInC72B,EAAKs4B,0BAA4Bt4B,EAAKs4B,0BAA0BjiE,KAA/BuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAFeA,EAJpD,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAw/D,EAAA3f,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAw/D,EAAA,EAAAn6D,IAAA,4BAAAyH,MAAA,SASmCtK,EAAc2lB,GAC7C,GAAIA,EAAU,KAAAk2C,GAAA,EAAAC,GAAA,EAAAC,OAAAt6D,EAAA,IACZ,QAAAu6D,EAAAC,EAAuBjhE,KAAKiiE,eAA5Br3B,OAAA+zB,cAAAkC,GAAAG,EAAAC,EAAAlb,QAAArb,MAAAm2B,GAAA,EAA4C,KAAjCjC,EAAiCoC,EAAA1xD,MACtCsvD,EAASxoC,WAAapxB,GACxBhF,KAAKL,MAAMwiE,eAAevD,IAHlB,MAAAxI,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,SAOZ/gE,KAAKL,MAAMyiE,iBAAiBp9D,KAjBlC,CAAA6C,IAAA,SAAAyH,MAAA,WAqBkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAAC+C,EAAA,mCAAD,CACEtV,aAAczuC,KAAKL,MAAMyb,gBAExB,SAAAymC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAMw2B,EAAT8V,EAAS9V,QAAS7mC,EAAlB28C,EAAkB38C,MAAlB,OACC87C,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMC,EAAoB8W,GACxBhrD,EACAi0C,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,gBACRmoC,EAAK0kB,kBACL1kB,EAAKp8C,MAAM+gE,mBAIb,OAFA3kB,EAAKkmB,eAAiBxY,EAGpBzI,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,aAAD5+C,OAAAC,OAAA,CACEwQ,YAAaA,GACbI,UAAWA,IACP0oC,EAAK50C,MAHX,CAIEqgB,aAAciiC,EAAkBhiD,QAC5B+hD,EALN,CAMEzqC,mBAAoBoiC,EAClB,wCAEFriC,oBAAqBqiC,EAAE,kCACvB5+B,SAAU4+B,EAAE,eACZkhB,0BAA2BlhB,EACzB,gCAEFntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAO+8C,EAAkBhiD,WAG3Bu5C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAACI,EAAA,qBAAD,CACEz+C,MAAO,IACPD,MAAO,CACLunD,gBAAiB,OACjBn5B,UAAW,MAIjBwV,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCT,EAAkB/hD,IAChB,SAACk3D,EAAoBh3D,GAArB,OACEo5C,EAAA,cAACI,EAAA,iBAAD,CACEv5C,IAAKD,EACLwT,eAAgBwjD,EAASxjD,eACzBpW,KAAM45D,EAASxoC,SACfoC,SAAUomC,EAASpmC,SACnB7N,SAAUi0C,EAASj0C,SACnBtL,WAAY8hC,EAAE,iBACdzoB,aAAckmC,EAAS4C,SACvB5pC,mBACEmkB,EAAKmmB,2CAzFvCF,EAAA,CAAsC1/D,aCzDzBggE,GAAb,SAAAjgB,GACE,SAAAigB,EAAmB3iE,GAA4B,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAsiE,IAC7C14B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA8/D,GAAA/f,KAAAviD,KAAML,KACD4iE,iCAAmC34B,EAAK24B,iCAAiCtiE,KAAtCuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAFKA,EADjD,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAA8/D,EAAAjgB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA8/D,EAAA,EAAAz6D,IAAA,mCAAAyH,MAAA,SAQ0CtK,EAAc2yB,GACpD33B,KAAKL,MAAM6iE,6BAA6Bx9D,EAAM2yB,KATlD,CAAA9vB,IAAA,SAAAyH,MAAA,WAYkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACI,EAAA,kBAAD,KACEJ,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOlF,KAAKL,MAAMuF,MAClBqI,QAASvN,KAAKL,MAAM4N,QACpBg5B,eACEya,EAAA,cAAAA,EAAA,cACG,IAAI5f,MAAM,GAAG8uB,KAAK,GAAGxoD,IAAI,SAACyoD,EAAGvoD,GAAJ,OACxBo5C,EAAA,cAACI,EAAA,sBAAD,CAAuBv5C,IAAKD,GAC1Bo5C,EAAA,cAACI,EAAA,qBAAD,UAKR9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCnO,EAAKp8C,MAAM2kB,YAAY5c,IAAI,SAACsF,EAAGpF,GAAJ,OACzBo5C,EAAA,cAACI,EAAA,sBAAD,CAAuBv5C,IAAKD,GAC1Bo5C,EAAA,cAACI,EAAA,iBAAD,CACEp8C,KAAMgI,EAAEhI,KACRmV,YAAanN,EAAEmN,aAAe,GAC9B0d,SAAU4nC,GAAsBzyD,GAChCzH,KAAM+uC,4BAAkB0R,kDAAwBh5C,GAChD2d,SAAUk1C,GAAuB7yD,GACjC4qB,mBAAoBmkB,EAAKwmB,6CAtC3CD,EAAA,CAAmChgE,aCPnC,SAAS0uD,GACP1sC,EACAm+C,EACAC,EACA3uD,EACAT,EACAM,GAGA,IAAIi9C,EP+HC,SACL8R,EACAC,EACAF,GAEA,IAAMG,EAAwB,GADhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAv8D,EAAA,IAEd,IAFc,IAEdw8D,EAFcC,EAAA,eAEHxD,EAFGuD,EAAA3zD,MAGR6zD,EAAapH,GAAmB6D,SAC9BwD,EAAgBR,EAA8BnR,KAClD,SAAA4R,GAAU,OAAIA,EAAWC,aAAe5D,EAAK16D,OAG7Co+D,GAC2B,WAA3BA,EAAcG,UACgB,WAA9BH,EAAcI,cAEdL,EAAapH,GAAmBrkC,QAGlC,IAAI+rC,EAAiBzH,GAAsB0H,YACvChE,EAAK16D,OAAS09D,IAChBe,EAAiBzH,GAAsB+D,UAEzCL,EAAKrwB,QAAU,CAAExX,SAAUsrC,EAAYrD,WAAY2D,GACnDZ,EAAQ5iB,KAAKyf,IAlBfiE,EAAmBhB,EAAnB/3B,OAAA+zB,cAAAmE,GAAAG,EAAAU,EAAA5d,QAAArb,MAAAo4B,GAAA,EAA0BI,IAFZ,MAAA9M,GAAA2M,GAAA,EAAAC,EAAA5M,EAAA,YAAA0M,GAAA,MAAAa,EAAAnE,QAAAmE,EAAAnE,SAAA,WAAAuD,EAAA,MAAAC,GAsBd,OAAOH,EOzJ4Be,CACjCt/C,EACAm+C,EACAC,GAiBF,OAfA3uD,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClC4W,EAA+BA,EAA6BnrB,OAC1D,SAAC14B,GAAD,OAAmBA,EAAEhI,KAAKi1C,cAAc2P,SAASD,OAIrDkH,EAA+BA,EAA6BhtB,KAC1D,SAACitB,EAAKC,GACJ,IACMxlD,EAAQqI,EAAkBm9C,EAAMD,EACtC,OAFal9C,EAAkBk9C,EAAMC,GAEzB/rD,KAAK+kD,cAAcx+C,EAAMvG,QAO3C,IAAMgkD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAAc,CAAC+1C,IAEfC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAanB4a,GAAb,SAAAxhB,GAIE,SAAAwhB,EAAmBlkE,GAAuC,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA6jE,IACxDj6B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAqhE,GAAAthB,KAAAviD,KAAML,KACDwH,MAAQ,CACX28D,mBAAoB,IAEtBl6B,EAAKm6B,iCAAmCn6B,EAAKm6B,iCAAiC9jE,KAAtCuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IALgBA,EAJ5D,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAqhE,EAAAxhB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAqhE,EAAA,EAAAh8D,IAAA,mCAAAyH,MAAA,SAc0CtK,EAAc2lB,GACpD3qB,KAAKL,MAAM6iE,6BAA6Bx9D,EAAM2lB,KAflD,CAAA9iB,IAAA,SAAAyH,MAAA,WAkBkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,WACf,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,gBAAD,KACG,SAAAlC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAHssC,EAAS9V,QAAT8V,EAAkB38C,MAAlB,OACC87C,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMqH,EAA+BG,GACnCz7C,EAAKw+B,sBACLgI,EAAKp8C,MAAM8iE,iBACX1mB,EAAK50C,MAAM28D,mBACXta,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAACI,EAAA,sBAAD5+C,OAAAC,OAAA,CACEyZ,uBAAwBouC,GAAUhmC,YAAYokC,OAAOiC,kBACrD13C,YAAaA,GACbI,UAAWA,GACXmU,aAAcqpC,EAA6BppD,QACvC+hD,EALN,CAMEyH,yBAA0B9P,EACxB,+BAEFntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAOmkD,EAA6BppD,WAGrCs0C,EAAKp8C,MAAM6D,SACZw9C,EAAA,cAACgjB,GAAD,CACE9+D,MAAO62C,EAAKp8C,MAAMuF,MAClBqI,QAASwuC,EAAKp8C,MAAM4N,QACpB+W,YAAausC,EACb2R,6BACEzmB,EAAKgoB,8CA1D/BF,EAAA,CAA8CvhE,aCbjC2hE,GAAb,SAAA5hB,GASE,SAAA4hB,EAAYtkE,GAA8C,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAikE,IACxDr6B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAyhE,GAAA1hB,KAAAviD,KAAML,KACDwH,MAAQ,CACX+8D,aAAcD,EAAgCE,mBAGhDv6B,EAAKw6B,gBAAkBx6B,EAAKw6B,gBAAgBnkE,KAArBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IANiCA,EAT5D,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAyhE,EAAA5hB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAyhE,EAAA,EAAAp8D,IAAA,kBAAAyH,MAAA,SAkByB+0D,GACrBA,GAAWA,EAAQ95D,QAAQ9C,OAAS,EAChCzH,KAAKsI,SAAS,CACZ47D,aAAcG,IAEhBrkE,KAAKsI,SAAS,CACZ47D,aAAcD,EAAgCE,sBAxBxD,CAAAt8D,IAAA,aAAAyH,MAAA,WA6BI,IAAMg1D,EAAQ,GADIzD,GAAA,EAAAC,GAAA,EAAAC,OAAAt6D,EAAA,IAElB,QAAAu6D,EAAAC,EAAmBjhE,KAAKL,MAAM2rD,MAA9B1gB,OAAA+zB,cAAAkC,GAAAG,EAAAC,EAAAlb,QAAArb,MAAAm2B,GAAA,EAAqC,KAA1BU,EAA0BP,EAAA1xD,MACnCg1D,EAAMrkB,KAAK,CAAEjyC,MAAOuzD,EAAKnrC,SAAU9mB,MAAOiyD,EAAKnrC,YAH/B,MAAAggC,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAKlB,OAAOuD,IAjCX,CAAAz8D,IAAA,YAAAyH,MAAA,SAoCmB40D,GAAuC,IAAAnoB,EAAA/7C,KACtD,OAAOkkE,EAAal6D,KACjBtC,IAAI,SAAA68D,GAAG,OAAIA,EAAIA,MACf78D,IAAI,SAAA68D,GAAG,OACNA,EAAI7gC,OAEF,SAAC6gC,EAAKnvC,EAAGhtB,GAAT,OAAA5F,OAAAyqD,GAAA,EAAAzqD,CAAA,GACK+hE,EADL/hE,OAAAo6D,GAAA,EAAAp6D,CAAA,GAEGu5C,EAAK50C,MAAM+8D,aAAa35D,QAAQnC,GAAKpD,KAAOowB,KAE/C,QA9CV,CAAAvtB,IAAA,eAAAyH,MAAA,SAmDsB40D,GAClB,IAAM35D,EAAU,GADyCk3D,GAAA,EAAAC,GAAA,EAAAC,OAAAl7D,EAAA,IAEzD,QAAAm7D,EAAAC,EAAkBqC,EAAa35D,QAA/BqgC,OAAA+zB,cAAA8C,GAAAG,EAAAC,EAAA9b,QAAArb,MAAA+2B,GAAA,EAAwC,KAA7BvoC,EAA6B0oC,EAAAtyD,MACtC/E,EAAQ01C,KAAK,CAAE9pC,GAAI+iB,EAAIl0B,KAAMgJ,MAAOkrB,EAAIlrB,SAHe,MAAAooD,GAAAsL,GAAA,EAAAC,EAAAvL,EAAA,YAAAqL,GAAA,MAAAI,EAAArC,QAAAqC,EAAArC,SAAA,WAAAkC,EAAA,MAAAC,GAKzD,OAAOp3D,IAxDX,CAAA1C,IAAA,iBAAAyH,MAAA,WA4DI,OAAOtP,KAAKL,MAAM2rD,MAAM7jD,OAAS,EAAIzH,KAAKL,MAAM2rD,MAAM,GAAGl1B,SAAW,KA5DxE,CAAAvuB,IAAA,SAAAyH,MAAA,WA+DkB,IAAA48B,EAAAlsC,KACRwkE,EAAiB,CACrBC,SAAU,CACRC,mBAAmB,EACnBC,YAAY,EACZxqD,YAAaiuC,GAAKjH,EAChB,sDAEFzgB,YAAa0nB,GAAKjH,EAAE,2CACpByjB,SAAU,oBACVxL,KAAM,WACNyL,MAAO,EACPjhC,UAAU,EACVG,QAAQ,EACRh/B,KAAM,UAERo3C,UAAW,CACTuoB,mBAAmB,EACnBC,YAAY,EACZxqD,YAAaiuC,GAAKjH,EAChB,uDAEFzgB,YAAa0nB,GAAKjH,EAAE,4CACpByjB,SAAU,oBACVxL,KAAM,WACNyL,MAAO,EACPjhC,UAAU,EACVG,QAAQ,EACRh/B,KAAM,UAERw8D,KAAM,CACJpnD,YAAa,oBACbumB,YAAa,OACba,KAAMvhC,KAAK8kE,aACX1L,KAAM,YACNyL,MAAO,EACPjhC,UAAU,EACVG,QAAQ,EACRh/B,KAAM,WAqBJ09B,EAAe,CACnBgiC,SAAU,KACVtoB,UAAW,IACXolB,KAAMvhE,KAAK+kE,kBAGb,OAEE/jB,EAAA,cAAC+C,EAAA,0BAAD,CAA2B73C,SAAS,aACjC,SAAA21C,GAA6B,IAA1B1G,EAA0B0G,EAA1B1G,oBACI6pB,EAAQ,eAAAhhB,EAAAxhD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAOp2C,GAAP,IAAA0vD,EAAAiG,EAAAZ,EAAA,OAAA7e,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTiZ,EAAW9yB,EAAKvsC,MAAM2rD,MAAMmG,KAChC,SAAA8P,GAAI,OAAIA,EAAKnrC,WAAa9mB,EAAMiyD,OAE9B0D,EAAe,GACfjG,IACFiG,EAAejF,GAAchB,IANhBnZ,EAAAE,KAAA,EAQqB5K,EAClCjP,EAAKvsC,MAAMulE,UACXD,EACA31D,EAAMm1D,SACNn1D,EAAM6sC,WAZO,OAQTkoB,EARSxe,EAAAI,KAcf/Z,EAAKk4B,gBAAgBC,GAdN,wBAAAxe,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAAhM,EAAAjE,MAAA//C,KAAAggD,YAAA,GAgBd,OACEgB,EAAA,cAAC4Q,GAAA,SAAD,CACEzuB,qBAAsB,mBACtBG,WAAYkhC,EACZ/hC,aAAcA,EACdvc,OAAQ8+C,GAEP,SAAAvgB,GAAA,IACCrhB,EADDqhB,EACCrhB,OACA5oB,EAFDiqC,EAECjqC,aAFDiqC,EAGC/hB,aAHD+hB,EAIC5pC,QAJD4pC,EAKC3yB,WALD,OAOCkvB,EAAA,cAACI,EAAA,iBAAD,CACEroB,YACEioB,EAAA,cAACI,EAAA,cAAD,CAAe5mC,aAAcA,GAC1B4oB,GAGLtK,UAAWoT,EAAKvsC,MAAM2rD,MAAM5jD,IAC1B,SAACs3D,GAAD,OAA8BA,EAAS5oC,WAEzC4C,gBAAiBkT,EAAKi5B,UAAUj5B,EAAK/kC,MAAM+8D,cAC3CjrC,gBAAiBiT,EAAKk5B,aAAal5B,EAAK/kC,MAAM+8D,cAC9CgB,UAAW,OACXnmD,mBAAoBqpC,GAAKjH,EACvB,0CAEFriC,oBAAqBspC,GAAKjH,EACxB,2CAEFpqB,gBAAiBqxB,GAAKjH,EACpB,wCAEF/pB,mBAAoBgxB,GAAKjH,EACvB,2CAEFjqB,eAAgBkxB,GAAKjH,EAAE,kCACvBhqB,kBAAmBixB,GAAKjH,EACtB,qCAEFlqB,mBAAoBiV,EAAKvsC,MAAM0lE,eAC/BvuC,oBAAqBoV,EAAKvsC,MAAM2lE,gBAChCC,sBAAuBnd,GAAKjH,EAC1B,wDAEFhoB,oBAAqBivB,GAAKjH,EACxB,iEApMpB8iB,EAAA,CAAqD3hE,aAAxC2hE,GAIGE,kBAAkC,CAC9C55D,QAAS,GACTP,KAAM,IC3CH,IAAMw7D,GAAb,SAAAnjB,GAIE,SAAAmjB,EAAmB7lE,GAAW,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAwlE,IAC5B57B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAgjE,GAAAjjB,KAAAviD,KAAML,KACDwH,MAAQ,CACX28D,mBAAoB,IAEtBl6B,EAAKm6B,iCAAmCn6B,EAAKm6B,iCAAiC9jE,KAAtCuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IALZA,EAJhC,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAgjE,EAAAnjB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAgjE,EAAA,EAAA39D,IAAA,mCAAAyH,MAAA,SAc0CtK,EAAc2lB,GACpD,IAAM86C,EAAU96C,EAAW3lB,EAAO,GAClChF,KAAKsI,SAAS,CACZw7D,mBAAoB2B,MAjB1B,CAAA59D,IAAA,SAAAyH,MAAA,WAqBkB,IAAAysC,EAAA/7C,KACRyuC,EAAuBzuC,KAAKmH,MAAM28D,mBACxC,OACE9iB,EAAA,cAACwD,EAAA,cAAD,KACG,SAAA3C,EAAAmC,EAAAS,GAAA5C,EAAGjF,iBAAH,IAAyBhB,EAAzBoI,EAAyBpI,eAAzB6I,EAA6C5D,QAA7C,OACCG,EAAA,cAACI,EAAA,kBAAD,CACE9+B,OAAQ0+B,EAAA,cAAC0kB,GAAD,CAAkBt1C,KAAM,IAChCrW,QACEinC,EAAA,cAAC+C,EAAA,qCAAD,KACG,SAAAgH,GAAA,IAAGx1C,EAAHw1C,EAAGx1C,KAAMw2B,EAATgf,EAAShf,QAAS7mC,EAAlB6lD,EAAkB7lD,MAAlB,OACC87C,EAAA,cAAC2kB,GAAD,CACEzgE,MAAOA,EACPqI,SAAUw+B,EACV02B,iBAAkBltD,EAClBitD,6BACEzmB,EAAKgoB,qCAMfznC,WAAYguB,GAAU/0C,KAAK01C,gBAAgBK,MAAMT,KAAK,CACpDjP,mBAEFpf,SAAU8tB,GAAU/0C,KAAK01C,gBAAgBK,MAAMC,aAAaE,YAC1D,CACEhd,eACAmN,mBAGJlf,eAAgBqf,EAAK50C,MAAM28D,mBAAmBr8D,OAAS,EACvDg1B,eAAe,EACfG,YAAY,UArDxB4oC,EAAA,CAA0CljE,aCG7BsjE,GAAb,SAAAvjB,GAME,SAAAujB,EAAmBjmE,GAAW,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA4lE,IAC5Bh8B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAojE,GAAArjB,KAAAviD,KAAML,KAHDkmE,cAA4B,GAIjCj8B,EAAKziC,MAAQ,CACX2+D,mBAAmB,GAErBl8B,EAAKm8B,cAAgBn8B,EAAKm8B,cAAc9lE,KAAnBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IACrBA,EAAKo8B,iBAAmBp8B,EAAKo8B,iBAAiB/lE,KAAtBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IANIA,EANhC,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAojE,EAAAvjB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAojE,EAAA,EAAA/9D,IAAA,uBAAAyH,MAAA,SAe8B+uD,GAC1B,IAAMvlC,EAAsB,GAD+B+nC,GAAA,EAAAC,GAAA,EAAAC,OAAAt6D,EAAA,IAE3D,QAAAu6D,EAAAC,EAA0B5C,EAA1BzzB,OAAA+zB,cAAAkC,GAAAG,EAAAC,EAAAlb,QAAArb,MAAAm2B,GAAA,EAAwC,KAA7BvB,EAA6B0B,EAAA1xD,MACtCwpB,EAAUmnB,KAAKqf,EAAYC,eAAenpC,WAHe,MAAAggC,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAK3D,OAAOjoC,IApBX,CAAAjxB,IAAA,gBAAAyH,MAAA,SAuBuBiyD,GACnBvhE,KAAK6lE,cAAc5lB,KAAKshB,GACxBvhE,KAAKsI,SAAS,CACZw9D,kBAAmB9lE,KAAK6lE,cAAcp+D,OAAS,MA1BrD,CAAAI,IAAA,mBAAAyH,MAAA,SA8B0B8mB,GACtB,IAAMxuB,EAAQ5H,KAAK6lE,cAAc7I,UAC/B,SAAAuE,GAAI,OAAIA,EAAKnrC,WAAaA,KAGb,IAAXxuB,GACF5H,KAAK6lE,cAAcI,OAAOr+D,EAAO,GAEnC5H,KAAKsI,SAAS,CACZw9D,kBAAmB9lE,KAAK6lE,cAAcp+D,OAAS,MAvCrD,CAAAI,IAAA,SAAAyH,MAAA,WA2CkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KACG,SAAA3C,EAAAmC,EAAAS,GAAA5C,EACGjF,iBADH,IAEGhB,EAFHoI,EAEGpI,eAAgBnN,EAFnBuV,EAEmBvV,aAChBoS,EAHH4D,EAGG5D,QAHH,OAMCG,EAAA,cAAC+C,EAAA,0BAAD,CAA2B73C,SAAS,aACjC,SAAA6+C,GAAoC,IAAjC3P,EAAiC2P,EAAjC3P,2BACI8qB,EAAiB,eAAAva,EAAAnpD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,IAAA,IAAAjJ,EAAA,OAAA+I,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAClBtJ,EAAmB0hB,GACvBviB,EAAe3hB,eACf8hB,EAAK8pB,eAHiBhgB,EAAAE,KAAA,EAKlB3K,EACJQ,EAAeF,SACfe,GAPsB,OAUxBoE,EAAQZ,KACNqK,GAAU/0C,KAAK01C,gBAAgBK,MAAMT,KAAK,CAAEjP,oBAXtB,wBAAAiK,EAAAM,SAAAT,MAAH,yBAAAiG,EAAA5L,MAAA//C,KAAAggD,YAAA,GAcvB,OACEgB,EAAA,cAAC+C,EAAA,qBAAD,CACEpJ,UAAWiB,EAAe3hB,eAAiB,KAE1C,SAAA2xB,GAAA,IAAGr2C,EAAHq2C,EAAGr2C,KAAHq2C,EAAS7f,QAAT6f,EAAkB1mD,MAAlB,OACC87C,EAAA,cAACI,EAAA,kBAAD,CACE9+B,OAAQ0+B,EAAA,cAAC0kB,GAAD,CAAkBt1C,KAAM,IAChCrW,QACEinC,EAAA,cAACmlB,GAAD,CACE/qD,eAAgBqzB,EAChBiyB,kBAAmB3kB,EAAKqqB,qBAAqB7wD,GAC7C4sD,eAAgBpmB,EAAKgqB,cACrB3D,iBAAkBrmB,EAAKiqB,mBAG3B1pC,WAAYguB,GAAU/0C,KAAK01C,gBAAgBK,MAAMT,KAAK,CACpDjP,mBAEFrf,SAAU+tB,GAAU/0C,KAAK01C,gBAAgBK,MAAMC,aAAaC,iBAC1D,CAAE5P,mBAEJ7e,cAAempC,EACfxpC,gBAAiBqf,EAAK50C,MAAM2+D,kBAC5BrpC,eAAe,EACfG,YAAY,cA5FlCgpC,EAAA,CAAqCtjE,aCbhB+jE,oLAEjB,OACErlB,EAAA,cAACwD,EAAA,cAAD,KACG,SAAC2L,EAADtO,GAAA,IAAMjG,EAANiG,EAAMjG,eAAN,OACCoF,EAAA,cAACuT,EAAD,KACEvT,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3BzC,GAAKjH,EAAE,gBAEVH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAU/0C,KAAKs1C,QACtBzC,GAAKjH,EAAE,+BAEVH,EAAA,cAACkD,EAAA,KAAD,CACE13C,GAAI89C,GAAU/0C,KAAK01C,gBAAgBK,MAAMT,KAAK,CAC5CjP,oBAGDA,EAAeF,UAElBsF,EAAA,0BAAOoH,GAAKjH,EAAE,0CAEhBH,EAAA,cAAC2D,EAAA,OAAD,KAEE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KACEw0C,GAAOntC,KAAK01C,gBAAgBrP,eAAe0P,MAAMC,aAC9CC,iBAEL79C,OAAO,EACP9C,UAAW26D,KAGbxkB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KACEw0C,GAAOntC,KAAK01C,gBAAgBrP,eAAe0P,MAAMC,aAC9CE,YAEL99C,OAAO,EACP9C,UAAW+6D,gBAvCiBtjE,aCN/BgkE,GAAb,SAAAjkB,GAAA,SAAAikB,IAAA,OAAA9jE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAsmE,GAAA9jE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA8jE,GAAAvmB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA8jE,EAAAjkB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA8jE,EAAA,EAAAz+D,IAAA,SAAAyH,MAAA,WAEI,IAAMk1D,EAAiB,CACrB+B,gBAAiB,CACf7B,mBAAmB,EACnBC,YAAY,EACZjkC,YAAa0nB,GAAKjH,EAChB,wDAEFyjB,SAAU,mBACVxL,KAAM,WACNyL,MAAO,EACPjhC,UAAU,EACVG,QAAQ,EACRh/B,KAAM,YAERu2C,SAAU,CACRopB,mBAAmB,EACnBC,YAAY,EACZjkC,YAAa0nB,GAAKjH,EAAE,iDACpByjB,SAAU,mBACVxL,KAAM,WACNyL,MAAO,EACPjhC,UAAU,EACVG,QAAQ,EACRh/B,KAAM,WAGJyM,EAAW,SAACU,GAChB,IAAMse,EAAc,GAKpB,OAHIte,EAAEopC,SAASsO,SAAS,OACtBp5B,EAAO8qB,SAAW,qDAEb9qB,GAGT,OACEwwB,EAAA,cAACwD,EAAA,cAAD,KACG,SAACnhD,EAAG+7B,EAAJyiB,GAAA,IAAShB,EAATgB,EAAShB,QAAT,OAECG,EAAA,cAAC+C,EAAA,0BAAD,CAA2B73C,SAAS,aACjC,SAAA83C,GAA8B,IAA3BnJ,EAA2BmJ,EAA3BnJ,qBACI2rB,EAAY,eAAA/hB,EAAAjiD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAOp2C,GAAP,IAAAssC,EAAA,OAAA4J,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUlL,EAC3BvrC,EAAMgsC,SACNhsC,EAAMi3D,iBAHW,OACb3qB,EADaiK,EAAAI,KAMnBpF,EAAQZ,KACNqK,GAAU/0C,KAAK01C,gBAAgBK,MAAMT,KAAK,CAAEjP,oBAP3B,wBAAAiK,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAAvL,EAAA1E,MAAA//C,KAAAggD,YAAA,GAUlB,OACEgB,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAU/0C,KAAKs1C,QACtB1J,EAAE,+BAELH,EAAA,0BACGG,EACC,uDAINH,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,SACpB8pC,EAAA,oBAAI96C,UAAU,sBACXi7C,EACC,uDAINH,EAAA,cAACI,EAAA,YAAD,KACEJ,EAAA,cAAC4Q,GAAA,SAAD,CACEtuB,WAAYkhC,EACZ/hC,aAAc,GACdU,qBAAsBge,EACpB,4CAEF3vC,SAAUA,EACV0U,OAAQsgD,GAEP,SAAAzb,GAAA,IAAG3nB,EAAH2nB,EAAG3nB,OAAQ5oB,EAAXuwC,EAAWvwC,aAAX,OACCwmC,EAAA,cAACA,EAAA,SAAD,KACG5d,EACD4d,EAAA,wBACEj8C,KAAK,SACLmB,UAAU,kBACV4E,QAAS0P,GAER2mC,EAAE,iCA/FnCmlB,EAAA,CAA8ChkE,aCgBjCmkE,GAAb,SAAApkB,GAAA,SAAAokB,IAAA,OAAAjkE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAymE,GAAAjkE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAikE,GAAA1mB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAikE,EAAApkB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAikE,EAAA,EAAA5+D,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAA3C,EAAAmC,EAAAS,GAA2D,IAAxD7H,EAAwDiF,EAAxDjF,iBAAsBhB,EAAkCoI,EAAlCpI,eAAkC6I,EAAd5D,QAC5C,OACEG,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAU/0C,KAAKs1C,QACtB1J,EAAE,+BAELH,EAAA,0BACGpE,EAAmB,IACnBuE,EAAE,iCAGPH,EAAA,cAACI,EAAA,WAAD,CACEx6C,UAAWg1C,EAAeF,SAC1B5kC,gBAAiB8kC,EAAeD,mBAElCqF,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,QAAS+E,WAAW,GACxC+kC,EAAA,cAAC0lB,GAAD,CAAsB9qB,eAAgBA,KAExCoF,EAAA,cAACI,EAAA,YAAD,KACEJ,EAAA,qEAhCpBylB,EAAA,CAA+CnkE,aCAlCqkE,GAAb,SAAAtkB,GAAA,SAAAskB,IAAA,OAAAnkE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA2mE,GAAAnkE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAmkE,GAAA5mB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAmkE,EAAAtkB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAmkE,EAAA,EAAA9+D,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAA3C,EAAAmC,EAAAS,GAA2D,IAAxD7H,EAAwDiF,EAAxDjF,iBAAsBhB,EAAkCoI,EAAlCpI,eAAkC6I,EAAd5D,QAC5C,OACEG,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAU/0C,KAAKs1C,QACtB1J,EAAE,+BAELH,EAAA,0BACGpE,EAAmB,IACnBuE,EAAE,sCAGPH,EAAA,cAACI,EAAA,WAAD,CACEx6C,UAAWg1C,EAAeF,SAC1B5kC,gBAAiB8kC,EAAeD,mBAElCqF,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,QAAS+E,WAAW,GACxC+kC,EAAA,cAAC0lB,GAAD,CAAsB9qB,eAAgBA,KAExCoF,EAAA,cAACI,EAAA,YAAD,KACEJ,EAAA,2EAhCpB2lB,EAAA,CAAoDrkE,aCyBpD,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAA6B,CAAC+1C,IAE9BC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAMzB,IAAM2d,GAAb,SAAAvkB,GAAA,SAAAukB,IAAA,OAAApkE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA4mE,GAAApkE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAokE,GAAA7mB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAokE,EAAAvkB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAokE,EAAA,EAAA/+D,IAAA,oBAAAyH,MAAA,SAC2BssC,GACvB,YAAmCn1C,IAA5Bm1C,EAAeF,WAF1B,CAAA7zC,IAAA,mBAAAyH,MAAA,SAK0BwqB,GAEtByvB,MAAM,yBAA2BzvB,KAPrC,CAAAjyB,IAAA,6BAAAyH,MAAA,WAYIi6C,MAAM,4BAZV,CAAA1hD,IAAA,SAAAyH,MAAA,WAekB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAAC+C,EAAA,oBAAD,KACG,SAAAlC,GAAoC,IAAjCtsC,EAAiCssC,EAAjCtsC,KAAMw2B,EAA2B8V,EAA3B9V,QAAS7mC,EAAkB28C,EAAlB38C,MAAO4mC,EAAW+V,EAAX/V,KACxB,OAEEkV,EAAA,cAAC+C,EAAA,0BAAD,CAA2B73C,SAAS,aACjC,SAAA83C,GAIK,IAHJ/I,EAGI+I,EAHJ/I,qBACAC,EAEI8I,EAFJ9I,sBACAG,EACI2I,EADJ3I,oBAEMt+B,EAAY,eAAA0nC,EAAAjiD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAO5rB,GAAP,OAAA0rB,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACb9K,EAAqBnhB,GAAoBpoB,KAAKo6B,GADjC,wBAAA+Z,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAAvL,EAAA1E,MAAA//C,KAAAggD,YAAA,GAIZnmB,EAAa,eAAAkxB,EAAAvoD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAsM,EAAOj4B,GAAP,OAAA0rB,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,cAAAiM,EAAAjM,KAAA,EACd7K,EAAsBphB,GADR,wBAAAk4B,EAAA7L,SAAA4L,MAAH,gBAAA9B,GAAA,OAAAlF,EAAAhL,MAAA//C,KAAAggD,YAAA,GAIbpmB,EAAe,eAAA+xB,EAAAnpD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAiN,EAAOz4B,GAAP,OAAAurB,EAAA15B,EAAA85B,KAAA,SAAAgN,GAAA,cAAAA,EAAA9M,KAAA8M,EAAA7M,MAAA,cAAA6M,EAAA7M,KAAA,EAChB1K,EAAoBphB,GADJ,wBAAA24B,EAAAzM,SAAAuM,MAAH,gBAAAI,GAAA,OAAAnH,EAAA5L,MAAA//C,KAAAggD,YAAA,GAIrB,OACEgB,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMC,EAnG5B,SACEwB,EACAl3C,EACAT,EACAM,GAEA,IAAI61C,EAAoBwB,EAwBxB,OAvBAl3C,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClCwP,EAAoBA,EAAkB/jB,OACpC,SAACkW,GAAD,OACEA,EAAeF,SAASzB,cAAc2P,SAASD,OAIrDF,EAAoBA,EAAkB5lB,KACpC,SAACgjC,EAAoBC,GACnB,OAAIlzD,EACKizD,EAAmBnrB,SAASqO,cACjC+c,EAAmBprB,UAKhBorB,EAAmBprB,SAASqO,cACjC8c,EAAmBnrB,YA0EqBqrB,CACxBxxD,EACAi0C,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,mBAAD5+C,OAAAC,OAAA,CACEwQ,YAAaA,GACbI,UAAWA,GACXmU,aAAciiC,EAAkBhiD,QAC5B+hD,EAJN,CAKEwd,6BAA8B7lB,EAC5B,2CAEF8lB,gCAAiC9lB,EAC/B,8CAEFrqC,gBAAiBqqC,EACf,iDAEFpiC,mBAAoBoiC,EAClB,wCAEFriC,oBAAqBqiC,EACnB,kCAEFt/B,WAAYs/B,EAAE,iBACd1lB,cAAe0lB,EACb,0CAEF5lB,6BAA8B4lB,EAC5B,2CAEF5+B,SAAU4+B,EAAE,eACZkhB,0BAA2BlhB,EACzB,gCAEFntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAO+8C,EAAkBhiD,SAE3Bb,UAAWu6C,EACT,2CAEFzlB,eAAgB4uB,GAAUW,gBAAgBvC,SAC1CtnC,SAAUwoB,EAAKs9B,iBACf5vC,YAAa/hB,EAAK9N,OAAS,IAE3Bu5C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAACI,EAAA,2BAAD,CACEz+C,MAAO,IACPD,MAAO,CACLunD,gBAAiB,OACjBn5B,UAAW,MAIjBwV,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCT,EAAkB/hD,IAChB,SACEk0C,EACAh0C,GAEA,IAAMu/D,EfyBrC,SACLvrB,GAGA,IAAMwrB,EAAsD,CAC1DjgE,MAAOy0C,EAAesB,eACtBmqB,WAAY,EACZ9tC,SAAU,GACV+tC,UAAW,GAEb,OAAQ1rB,EAAesB,gBACrB,IAAK,cACHkqB,EAAmBC,WAAa,EAChCD,EAAmB7tC,SAAW,cAC9B,MACF,IAAK,WACH6tC,EAAmBC,WAAa,EAChCD,EAAmB7tC,SAAW,WAC9B,MACF,IAAK,YACH6tC,EAAmBC,WAAa,EAChCD,EAAmB7tC,SAAW,YAC9B,MACF,IAAK,UACH6tC,EAAmBC,WAAa,EAChCD,EAAmB7tC,SAAW,YAQlC,OAHIqiB,EAAe2rB,gBACjBH,EAAmBxvD,OAASgkC,EAAe2rB,eAEtCH,Ee1DuDI,CACxB5rB,GAEF,OACEoF,EAAA,cAACI,EAAA,uBAAD,CACEv5C,IAAKD,EACLib,gBAAiBynC,GAAUW,gBAAgBK,MAAMT,KAC/C,CAAEjP,mBAEJ9hB,mBACE8hB,EAAeF,SAEjBvgB,0BACEygB,EAAeD,iBACXC,EAAeD,iBACf,GAEN1hB,eACE2hB,EAAe3hB,eAEjB3a,eAAgB6hC,EAAE,iBAClBhkC,WAAYgkC,EAAE,iBACdtoC,uBAAwBsoC,EACtB,oCACA,CAAEn8C,KAAM42C,EAAeF,WAEzB5iC,qBAAsBqoC,EACpB,mCAEFnmB,UAAWmmB,EAAE,gBACb5qB,SAAU4qB,EAAE,eACZxqB,YAAawqB,EACX,4CAEFpsB,UAAWosB,EAAE,gBACblmB,WAAYkmB,EAAE,iBACdjmB,YAAaimB,EAAE,kBACftsB,cAAessB,EACb,8CAEF3mB,cAAe2mB,EAAE,oBACjB1mB,0BAA2B0mB,EACzB,uCACA,CAAEn8C,KAAM42C,EAAeF,WAEzBhhB,wBAAyBymB,EACvB,sCAEF1oC,SAAUsE,EACVgd,SACE6P,EAAK69B,2BAEPvtC,YAAaN,EACbI,UAAWH,EACXO,sBACE+sC,EAAkBhgE,MAEpBwzB,iBACEwsC,EAAkBvvD,OAEpBijB,sBACEssC,EAAkBE,WAEpBvsC,qBACEqsC,EAAkBG,UAEpB1sC,mBACEusC,EAAkB5tC,SAEpBC,sBAAuB2nB,EACrB,oCAEFpmB,sBAAuBomB,EACrB,sCA7L5CylB,EAAA,CAAyCtkE,aCvC5BolE,GAAb,SAAArlB,GAAA,SAAAqlB,IAAA,OAAAllE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA0nE,GAAAllE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAklE,GAAA3nB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAklE,EAAArlB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAklE,EAAA,EAAA7/D,IAAA,eAAAyH,MAAA,eAAAzH,IAAA,SAAAyH,MAAA,WAQI,OACE0xC,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAA3C,EAAAmC,EAAAS,GAAA,IAAG7H,EAAHiF,EAAGjF,iBAAsBhB,EAAzBoI,EAAyBpI,eAAzB6I,EAA6C5D,QAA7C,OACCG,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAU/0C,KAAKs1C,QACtB1J,EAAE,+BAELH,EAAA,0BACGpE,EAAmB,IACnBuE,EAAE,mCAGPH,EAAA,cAACI,EAAA,WAAD,CACEx6C,UAAWg1C,EAAeF,SAC1B5kC,gBAAiB8kC,EAAeD,mBAElCqF,EAAA,cAACI,EAAA,YAAD,CAAalqC,QAAS,QAAS+E,WAAW,GACxC+kC,EAAA,cAAC0lB,GAAD,CAAsB9qB,eAAgBA,KAExCoF,EAAA,cAAC+C,EAAA,qBAAD,CACEpJ,UAAWiB,EAAe3hB,eAAiB,KAE1C,SAAA8wB,GAAA,IAAGx1C,EAAHw1C,EAAGx1C,KAAHw1C,EAAShf,QAATgf,EAAkB7lD,MAAlB,OACC87C,EAAA,cAAC2mB,GAAD,CACErc,MAAO/1C,EAAK7N,IACV,SAAC43D,GAAD,OACEA,EAAYC,iBAEhB2F,UhBjDbjH,GgBkDaoH,eAAgB/a,GAAU/0C,KAAK01C,gBAAgBvC,SAC/C4c,gBAAiBhb,GAAU/0C,KAAK01C,gBAAgBK,MAAMC,aAAaC,iBACjE,CAAE5P,oBAGH,SAAA+P,KAAGprB,KAAHorB,EAAS75B,WAAT65B,EAAqBjpB,aAArB,OAAwCse,EAAA,cAAAA,EAAA,4BAnD/D0mB,EAAA,CAAiDplE,aCoCjD,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAA6B,CAAC+1C,IAE9BC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAEnB2e,GAAb,SAAAvlB,GAAA,SAAAulB,IAAA,OAAAplE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA4nE,GAAAplE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAolE,GAAA7nB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAolE,EAAAvlB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAolE,EAAA,EAAA//D,IAAA,oBAAAyH,MAAA,SAI2BiyD,GACvB,YAAyB96D,IAAlB86D,EAAKnrC,WALhB,CAAAvuB,IAAA,mBAAAyH,MAAA,SAQ0B8mB,GAEtBmzB,MAAM,eAAiBnzB,KAV3B,CAAAvuB,IAAA,iBAAAyH,MAAA,WAeIi6C,MAAM,gBAfV,CAAA1hD,IAAA,SAAAyH,MAAA,WAkBkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAA3C,EAAAmC,EAAAS,GAA2D,IAAxD7H,EAAwDiF,EAAxDjF,iBAAsBhB,EAAkCoI,EAAlCpI,eAAkC6I,EAAd5D,QAC5C,OACEG,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,OAAQ,WACvB,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAU/0C,KAAKs1C,QACtB1J,EAAE,+BAELH,EAAA,0BACGpE,EAAmB,IACnBuE,EAAE,+BAGPH,EAAA,cAACI,EAAA,WAAD,CACEx6C,UAAWg1C,EAAeF,SAC1B5kC,gBAAiB8kC,EAAeD,mBAElCqF,EAAA,cAAC+C,EAAA,qBAAD,CACEpJ,UAAWiB,EAAe3hB,eAAiB,KAE1C,SAAA8wB,GAAoC,IAAjCx1C,EAAiCw1C,EAAjCx1C,KAAMw2B,EAA2Bgf,EAA3Bhf,QAAS7mC,EAAkB6lD,EAAlB7lD,MAAO4mC,EAAWif,EAAXjf,KACxB,OAEEkV,EAAA,cAAC+C,EAAA,0BAAD,CAA2B73C,SAAS,aACjC,SAAAy/C,GAAoB,IAAjB5Q,EAAiB4Q,EAAjB5Q,WACI8sB,EAAgB,eAAAjc,EAAAppD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EACvBtvB,GADuB,OAAAovB,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGjBhL,EAAWa,EAAgBxlB,GAAU1kB,KACzCo6B,GAJqB,wBAAA+Z,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAApE,EAAA7L,MAAA//C,KAAAggD,YAAA,GAQtB,OACEgB,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAIMC,EAlHxC,SACEqe,EACA/zD,EACAT,EACAM,GAEA,IAAI61C,EAAoBqe,EAiBxB,OAhBA/zD,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClCwP,EAAoBA,EAAkB/jB,OAAO,SAAC67B,GAAD,OAC3CA,EAAKnrC,SAAS6jB,cAAc2P,SAASD,OAIzCF,EAAoBA,EAAkB5lB,KAAK,SAACkkC,EAAUC,GACpD,OAAIp0D,EACKm0D,EAAS3xC,SAAS2zB,cAAcie,EAAS5xC,UAI3C4xC,EAAS5xC,SAAS2zB,cAAcge,EAAS3xC,YA8FQ6xC,CAJR1yD,EAAK7N,IACrB,SAAC43D,GAAD,OACEA,EAAYC,iBAId/V,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAEV,OACEotC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,YAAD,CACElqC,QAAS,QACT+E,WAAW,GAEX+kC,EAAA,cAAC0lB,GAAD,CACE9qB,eAAgBA,KAGpBoF,EAAA,cAACI,EAAA,SAAD5+C,OAAAC,OAAA,CACEwQ,YAAaA,GACbI,UAAWA,IACPu2B,EAAKziC,MAHX,CAIEqgB,aAAciiC,EAAkBhiD,QAC5B+hD,EALN,CAME1yC,gBAAiBqqC,EACf,4CAEFpiC,mBAAoBoiC,EAClB,0CAEFriC,oBAAqBqiC,EACnB,2CAEFpqB,gBAAiBoqB,EACf,wCAEF/pB,mBAAoB+pB,EAClB,2CAEFjqB,eAAgBiqB,EACd,kCAEFhqB,kBAAmBgqB,EACjB,qCAEF5+B,SAAU4+B,EAAE,eACZkhB,0BAA2BlhB,EACzB,gCAEFntC,iBAAkBmtC,EAChB,sBACA,CACEz0C,MAAO+8C,EAAkBhiD,SAI7BwvB,mBAAoBqzB,GAAU/0C,KAAK01C,gBAAgBvC,SACnD5xB,oBAAqBwzB,GAAU/0C,KAAK01C,gBAAgBK,MAAMC,aAAaC,iBACrE,CAAE5P,mBAEJssB,aAAct+B,EAAKu+B,iBACnB7wC,YAAa/hB,EAAK9N,OAAS,KAE7Bu5C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAACI,EAAA,iBAAD,CACEz+C,MAAO,IACPD,MAAO,CACLunD,gBAAiB,OACjBn5B,UAAW,MAIjBwV,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCT,EACG/jB,OAAO,SAAC67B,GAAD,OACN33B,EAAKugB,kBAAkBoX,KAExB75D,IACC,SACE65D,EACA35D,GAFF,OAIEo5C,EAAA,cAACI,EAAA,aAAD,CACEv5C,IAAKD,EACLwuB,SAAUmrC,EAAKnrC,SACfI,gBACE+qC,EAAKpC,kBAEP7/C,eAAgB6hC,EACd,iBAEFhkC,WAAYgkC,EACV,iBAEFtoC,uBAAwBsoC,EACtB,wCACA,CACEn8C,KAAMu8D,EAAKnrC,WAGftd,qBAAsBqoC,EACpB,mCAEF5qB,SAAU4qB,EAAE,eACZxqB,YAAawqB,EACX,oBAEF1oC,SAAUovD,EACVt4D,OAAQq6B,EAAKw+B,qCAtL/DR,EAAA,CAA6CtlE,aCzEhC+lE,GAAb,SAAAhmB,GAAA,SAAAgmB,IAAA,OAAA7lE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAqoE,GAAA7lE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA6lE,GAAAtoB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA6lE,EAAAhmB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6lE,EAAA,EAAAxgE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,SAAD,CACEz2C,KAAMw0C,GAAOmI,KACbl9C,OAAO,EACPnB,GAAIk2C,GAAOuI,gBAAgBlC,OAE7B/H,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBrP,eAAe0P,MAAMC,aAAaV,KAC/DhgD,UAAWw7D,KAEbrlB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBvC,OAC7B/6C,OAAO,EACP9C,UAAWy7D,KAEbtlB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBlC,KAC7Bp7C,OAAO,EACP9C,UAAW+7D,KAEb5lB,EAAA,cAAC2D,EAAA,SAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBrP,eAAeiP,KAC5Cl9C,OAAO,EACPnB,GAAIk2C,GAAOuI,gBAAgBrP,eAAe0P,MAAMT,OAElD7J,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBrP,eAAe0P,MAAMT,KAClDl9C,OAAO,EACP9C,UAAW+8D,KAEb5mB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBrP,eAAewP,aAC5Cz9C,OAAO,EACP9C,UAAW87D,KAEb3lB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBrP,eAAeyP,UAC5C19C,OAAO,EACP9C,UAAW68D,KAEb1mB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOuI,gBAAgBrP,eAAeuP,QAC5Cx9C,OAAO,EACP9C,UAAW47D,WA/CvB4B,EAAA,CAAgC/lE,aCQXgmE,2LAGIhf,GACrB,OAAa,IAATA,EACKlB,GAAKjH,EAAE,wBAGTiH,GAAKjH,EAAE,yBAA0B,CACtCz0C,MAAO48C,qCAIK,IAAA1f,EAAA5pC,KACd,OACEghD,EAAA,cAAC+C,EAAA,0BAAD,CAA2BziC,YAAathB,KAAKL,MAAM2hB,aAChD,SAAAugC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAMw2B,EAAT8V,EAAS9V,QAAS7mC,EAAlB28C,EAAkB38C,MAAlB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,aAAc,WAC7B,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,2BAAD,CACEtqC,gBAAiBqqC,EAAE,sBACnB5+B,SAAU4+B,EAAE,eACZxlC,iBAAkBiuB,EAAK2+B,gBAAgB3+B,EAAKjqC,MAAM2pD,MAClD3mC,oBAAqBinB,EAAKjqC,MAAMgjB,oBAChCpN,KAAMA,iBA/ByBjT,aCiB9BkmE,0LACGzjE,GACpB,MAAI,UAAYA,EACPqjD,GAAKjH,EAAE,0CAGZ,eAAiBp8C,EACZqjD,GAAKjH,EAAE,+CAGZ,cAAgBp8C,EACXqjD,GAAKjH,EAAE,6CAGTiH,GAAKjH,EAAE,kFAGA,IAAAvX,EAAA5pC,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KACG,SAAA3C,EAAAmC,EAAAS,GAAiD,IAA9CnjC,EAA8CugC,EAA9CvgC,YAAiB0zB,EAA6BgP,EAA7BhP,UAAe6L,EAAc4D,EAAd5D,QAC5B4nB,EAA0B,SAACC,GAE/B7nB,EAAQZ,KACNqK,GAAUnX,aAAavE,YAAY8b,QAAQ,CACzChoC,cAAegmD,MAIrB,OACE1nB,EAAA,cAAC+C,EAAA,qBAAD,KACG,SAAAgH,GAAyB,IAAtB1Y,EAAsB0Y,EAAtB1Y,gBACIt1B,EAAY,eAAA4uC,EAAAnpD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,IAAA,OAAAF,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACb1T,EAAgB/wB,GADH,OAInBu/B,EAAQZ,KAAKqK,GAAUrD,WAAW8B,QAJf,wBAAAlD,EAAAM,SAAAT,MAAH,yBAAAiG,EAAA5L,MAAA//C,KAAAggD,YAAA,GAMlB,OACEgB,EAAA,cAAC+C,EAAA,cAAD,CACEziC,YAAaA,EACbmhB,aAAcuS,GAEb,SAAA4W,GAAA,IAAGr2C,EAAHq2C,EAAGr2C,KAAMw2B,EAAT6f,EAAS7f,QAAS7mC,EAAlB0mD,EAAkB1mD,MAAlB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,aAAc,WAC7B,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUrD,WAAW8B,QAC5B5H,EAAE,sBAELH,EAAA,0BACGG,EAAE,wCAGPH,EAAA,cAACI,EAAA,gBAAD,CACE7hC,cAAehK,EAAKvQ,KAEpB0a,cAAenK,EAAK+zC,KACpBhqC,eAAgB6hC,EAAE,iBAClBhkC,WAAYgkC,EAAE,iBACdtoC,uBAAwBsoC,EACtB,+BACA,CAAEn8C,KAAMuQ,EAAKvQ,OAEf8T,qBAAsBqoC,EACpB,8BAEFjkC,cAAeikC,EACb,gCAEF3hC,cAAe2hC,EAAE,sBAAuB,CACtChrC,GAAIZ,EAAK+L,cAEX1B,yBAA0BuhC,EACxB,kCAEFrhC,yBACyB,UAAvBvK,EAAK28B,cACDiP,EACE,wCAEqB,eAAvB5rC,EAAK28B,cACLiP,EACE,6CAEFA,EACE,4CAGR9hC,WAAY8hC,EAAE,iBACd/hC,cAAe+hC,EACb,gCAEFnhC,sBAAuBmhC,EACrB,+BAEFlhC,oBACE+gC,EAAA,cAAC2nB,GAAD,CACErnD,YAAa/L,EAAKY,GAClBmzC,KAEE/zC,EAAK+zC,KAEP3mC,oBACE8lD,IAINhpD,oBAAqB6qC,GAAUrD,WAAWjS,UAAU6W,OAClD,CAAE7W,UAAWz/B,IAEfkD,SAAUsE,EACV8C,gBACEmhC,EAAA,cAACI,EAAA,kBAAD,CACE5/B,qBAAsBjM,EAAK4E,YAC3BoF,cAAehK,EAAKvQ,KACpB8R,gBAAiBqqC,EAAE,sBACnB59B,eAAgB49B,EAAE,wBAClB39B,mBACEjO,EAAKqzD,YACD,IAAIl4C,KACFnb,EAAKqzD,aACLh4C,iBACF,GAENrO,SAAU4+B,EAAE,eACZ79B,SAAU69B,EAAE,eACZ0nB,gBAAiBj/B,EAAKk/B,eACpBvzD,EAAK28B,iBAIXnyB,gBACEihC,EAAA,cAACI,EAAA,kBAAD,CACE19B,iBAAkBnO,EAAKpI,QAAQzF,IAC7B,SAACyZ,GAAD,MACG,CACChH,YAAagH,EAAOhH,YACpBnV,KAAMmc,EAAOnc,8BArJP1C,aC/B3C,SAASymE,GAAqB/zB,GACnC,IAAMjwC,EAAOiwC,EAAU9C,cAEvB,MAAI,UAAYntC,EACPqjD,GAAKjH,EAAE,sCAGZ,eAAiBp8C,EACZqjD,GAAKjH,EAAE,2CAGZ,cAAgBp8C,EACXqjD,GAAKjH,EAAE,yCAGTiH,GAAKjH,EAAE,iDCmCK6nB,eAInB,SAAAA,EAAmBrpE,GAAmC,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAgpE,IACpDp/B,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAwmE,GAAAzmB,KAAAviD,KAAML,KACDwH,MAAQ,CAAE2B,iBAAiB,EAAOyE,SAAS,GAFIq8B,iFASpD,GAAI5pC,KAAKmH,MAAM6tC,UACb,OAAQh1C,KAAKmH,MAAM6tC,UAAU9C,eAC3B,IAAK,QACH,OAAOkW,GAAKjH,EAAE,gBAMpB,OAAOiH,GAAKjH,EAAE,wDAQKn8C,EAAcmV,GACjC,OAAOiuC,GAAKjH,EAAE,wBAAyB,CACrC8nB,kBAAmB9uD,EACnB+uD,WAAYlkE,qCAIA,IAAA+2C,EAAA/7C,KACd,OACEghD,EAAA,cAACkB,EAAU5U,SAAX,KACG,SAAAuU,GAA0B,IAAvB8B,EAAuB9B,EAAvB8B,iBACIwlB,EAA6B,SAACC,GAClC,IAAM98B,EAAO8b,GAAKjH,EAChB,0DACA,CACE3R,SAAU45B,IAId,OADAzlB,EAAiBrX,EAAM,SAChBA,GAET,OACE0U,EAAA,cAACwD,EAAA,cAAD,KACG,SAAAR,EAAkBmM,EAAlB1L,GAAA,IAAGnjC,EAAH0iC,EAAG1iC,YAAoBu/B,EAAvB4D,EAAuB5D,QAAvB,OACCG,EAAA,cAAC+C,EAAA,qBAAD,KACG,SAAAgH,GAA0C,IAAvCzY,EAAuCyY,EAAvCzY,gBAAiBC,EAAsBwY,EAAtBxY,gBACb82B,EAA0B,eAAA1d,EAAAnpD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EACjCt+C,GADiC,IAAAkiE,EAAA,OAAA9jB,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAK/B/J,EAAKzzC,SAAL9F,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKu5C,EAAK50C,MADV,CAEE2B,iBAAiB,EACjBygE,4BAAwB9iE,EACxB+iE,6BAAyB/iE,EACzB2Z,sBAAkB3Z,EAClB8G,SAAS,MAIM+T,EAfc,CAAAukC,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAgBrBxT,EAAgBnrC,EAAM,GAAIka,GAhBL,OAAAukC,EAAAK,GAAAL,EAAAI,KAAAJ,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAiBrBxT,EAAgBnrC,EAAM,IAjBD,QAAAy+C,EAAAK,GAAAL,EAAAI,KAAA,QAezBqjB,EAfyBzjB,EAAAK,GAmB/BvC,EAAgB,GAAAl7C,OACX6gE,EAASnzD,GADE,iBAEd,WAIF4lC,EAAKzzC,SAAL9F,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKu5C,EAAK50C,MADV,CAEEqiE,wBAAyBphB,GAAKjH,EAC5B,uDAEFnM,UAAWs0B,EACX/7D,SAAS,KA/BoBs4C,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA4jB,GAAA5jB,EAAA,SAmC/B9J,EAAKzzC,SAAL9F,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKu5C,EAAK50C,MADV,CAEE2B,iBAAiB,EACjBygE,uBAAwBnhB,GAAKjH,EAC3B,sDAEF/gC,iBAAkBgoC,GAAKjH,EACrB,qDAEF5zC,SAAS,KA5CoB,yBAAAs4C,EAAAM,SAAAT,EAAA,kBAAH,gBAAAsK,GAAA,OAAArE,EAAA5L,MAAA//C,KAAAggD,YAAA,GAgD1B/+B,EAAY,eAAA2qC,EAAAppD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAsM,EAAO2X,GAAP,OAAAlkB,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,cAAAiM,EAAAlM,KAAA,EAAAkM,EAAAjM,KAAA,EAEXzT,EAAgBo3B,GAFL,OAGjB7oB,EAAQZ,KAAKqK,GAAUrD,WAAW8B,QAHjBiJ,EAAAjM,KAAA,eAAAiM,EAAAlM,KAAA,EAAAkM,EAAA9L,GAAA8L,EAAA,iCAAAA,EAAA7L,SAAA4L,EAAA,iBAAH,gBAAA9B,GAAA,OAAArE,EAAA7L,MAAA//C,KAAAggD,YAAA,GAQlB,OACEgB,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,aAAc,WAC7B,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,WAAD,CACEj0C,QACE6zC,EAAA,cAACI,EAAA,WAAD,CACEl7C,UAAW,gCACXkG,KAAMk+C,GAAUrD,WAAW8B,OAC3B18C,GAAI,WAEH80C,EAAE,mBAIPH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUlD,UAAUyD,QAC3B1J,EAAE,gBAELH,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUrD,WAAW8B,QAC5B5H,EAAE,sBAELH,EAAA,0BACGG,EAAE,wCAGPH,EAAA,cAACI,EAAA,YAAD,KACGrF,EAAK50C,MAAMoG,QAAUyzC,EAAA,cAACI,EAAA,OAAD,MAAa,KACnCJ,EAAA,cAACI,EAAA,oBAAD,CACE/gC,YAAa07B,EAAK50C,MAAM2B,gBACxBsX,iBAAkB27B,EAAK50C,MAAMiZ,iBAC7BG,mBAAoB4gC,EAClB,+BAEF3gC,oBAAqB2gC,EACnB,mCAEF1gC,6BAA8B0gC,EAC5B,yCAEFzgC,yBAA0BygC,EACxB,qCAEFxgC,2BACEo7B,EAAK50C,MAAMoiE,uBAEb3oD,4BACEm7B,EAAK50C,MAAMqiE,wBAEbrpD,uBAAwBghC,EACtB,iCAEFv6C,UAAWu6C,EAAE,6BACbtgC,oBAAqBwoD,EACrBtoD,oBAAqBooD,IAEtBptB,EAAK50C,MAAM6tC,WACZ+G,EAAK50C,MAAM6tC,UAAU7+B,IACrB4lC,EAAK50C,MAAM6tC,UAAU1zB,YACnB0/B,EAAA,cAACI,EAAA,sBAAD,CACEj0C,QAAS4uC,EAAK50C,MAAM6tC,UAAU7nC,QAAQzF,IACpC,SAACyZ,GAAD,MACG,CACChH,YAAagH,EAAOhH,YACpBnV,KAAMmc,EAAOnc,QAGnB8c,WAAYwoC,GAAUrD,WAAW8B,OACjCvnC,qBACEu6B,EAAK50C,MAAM6tC,UAAU76B,YAEvBmH,YAAay6B,EAAK50C,MAAM6tC,UAAU1zB,YAClC/B,cAAew8B,EAAK50C,MAAM6tC,UAAUhwC,KACpCqc,aAAc06B,EAAK50C,MAAM6tC,UAAU7+B,GACnCwL,iBAAkBo6B,EAAK4tB,kBACvB5nD,WAAYqmC,GAAKjH,EAAE,iBACnB5lC,qBAAsB6sC,GAAKjH,EACzB,sBAEFz/B,yBAA0BqnD,GACxBhtB,EAAK50C,MAAM6tC,WAEb40B,YAAaxhB,GAAKjH,EAAE,aACpBt/B,WAAYumC,GAAKjH,EACf,4CAEF5/B,cAAe6mC,GAAKjH,EAAE,eACtBv6C,UAAWwhD,GAAKjH,EACd,yCAEF1/B,cAAe2mC,GAAKjH,EAAE,eACtB0oB,eAAgB9tB,EAAK+tB,cACrB1oD,SAAUH,IAEV,sBA7Me3e,aCZjD,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAA6B,CAAC+1C,IAE9BC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAEX8gB,6LACM/0B,GACvB,YAAwBvuC,IAAjBuuC,EAAU7+B,4CAGK6+B,GAEtB,IAAMoU,EAAYpU,EAAUsU,KAE5B,OAAkB,IAAdF,EACKhB,GAAKjH,EAAE,4BAGTiH,GAAKjH,EAAE,6BAA8B,CAAEz0C,MAAO08C,qCAGvC,IAAAxf,EAAA5pC,KACd,OACEghD,EAAA,cAAC+C,EAAA,qBAAD,KACG,SAAAlC,GAAyB,IAAtBxP,EAAsBwP,EAAtBxP,gBACIt1B,EAAY,eAAAinC,EAAAxhD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAOpkC,GAAP,OAAAkkC,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACb1T,EAAgB/wB,GADH,wBAAAukC,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAAhM,EAAAjE,MAAA//C,KAAAggD,YAAA,GAIlB,OACEgB,EAAA,cAAC+C,EAAA,eAAD,KACG,SAAAU,GAAA,IAAGlvC,EAAHkvC,EAAGlvC,KAAMw2B,EAAT0Y,EAAS1Y,QAAS7mC,EAAlBu/C,EAAkBv/C,MAAlB,OACC87C,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMC,EA3E1B,SACExC,EACAlzC,EACAT,EACAM,GAEA,IAAI61C,EAAoBxC,EAiBxB,OAhBAlzC,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClCwP,EAAoBA,EAAkB/jB,OAAO,SAACsP,GAAD,OAC3CA,EAAUhwC,KAAKi1C,cAAc2P,SAASD,OAI1CF,EAAoBA,EAAkB5lB,KAAK,SAACmmC,EAAeC,GACzD,OAAIr2D,EACKo2D,EAAchlE,KAAK+kD,cAAckgB,EAAcjlE,MAIjDilE,EAAcjlE,KAAK+kD,cAAcigB,EAAchlE,QAuDZklE,CACxB30D,EAAKkV,MACL++B,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,aAAc,WAC7B,SAAAC,GAAC,OACAH,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,iBAAD,CACEx6C,UAAWu6C,EAAE,iCACbrqC,gBAAiBqqC,EACf,yCAGJH,EAAA,cAACI,EAAA,kBAAD5+C,OAAAC,OAAA,CACEwQ,YAAaA,GACbI,UAAWA,GACX+P,oBAAqBknC,GAAUY,SAC/B1jC,aAAciiC,EAAkBhiD,QAC5B+hD,EALN,CAME5iD,UAAW,GACXkQ,gBAAiB,GACjBiI,mBAAoBoiC,EAClB,mCAEFriC,oBAAqBqiC,EACnB,6BAEFh+B,wBAAyBg+B,EACvB,6BAEFj+B,2BAA4Bi+B,EAC1B,gCAEF5+B,SAAU4+B,EAAE,eACZkhB,0BAA2BlhB,EACzB,gCAEFntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAO+8C,EAAkBhiD,WAG3Bu5C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAACI,EAAA,sBAAD,CACEz+C,MAAO,IACPD,MAAO,CACLunD,gBAAiB,OACjBn5B,UAAW,MAIjBwV,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACCT,EACG/jB,OAAO,SAACsP,GAAD,OACNpL,EAAKugB,kBAAkBnV,KAExBttC,IACC,SAACstC,EAAsBptC,GAAvB,OACEo5C,EAAA,cAACI,EAAA,kBAAD,CACEv5C,IAAKD,EACLib,gBAAiBynC,GAAUtV,UAAU0V,QACnC,CAAE1V,cAEJxzB,qBACEwzB,EAAU76B,YAEZ4I,cAAeiyB,EAAUzvC,KACzB+b,YAAa0zB,EAAU7+B,GACvBoJ,cAAey1B,EAAUhwC,KACzBsa,eAAgB6hC,EAAE,iBAClBhkC,WAAYgkC,EAAE,iBACdtoC,uBAAwBsoC,EACtB,+BACA,CAAEn8C,KAAMgwC,EAAUhwC,OAEpB8T,qBAAsBqoC,EACpB,8BAEFjkC,cAAeikC,EACb,gCAEF7jC,YAAa6jC,EAAE,kBACf9jC,eAAgB8jC,EACd,iCAEFr+B,kBAAmBimD,GACjB/zB,GAEF31B,WAAY8hC,EAAE,iBACd/hC,cAAe+hC,EACb,gCAEFnjC,kBAAmB4rB,EAAKwgB,iBACtBpV,GAEFv1B,oBAAqB6qC,GAAUtV,UAAU6W,OACvC,CAAE7W,cAEJv8B,SAAUsE,EACVc,OAEEm3B,EAAUsU,4BA7IVhnD,aCvD/B6nE,GAAb,SAAA9nB,GAAA,SAAA8nB,IAAA,OAAA3nE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAmqE,GAAA3nE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA2nE,GAAApqB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA2nE,EAAA9nB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA2nE,EAAA,EAAAtiE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOqG,KAAMp7C,OAAO,EAAM9C,UAAWk/D,KAClD/oB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOwI,OACbv9C,OAAO,EACP9C,UAAWm+D,KAEbhoB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO1N,UAAU0V,QACvB/8C,OAAO,EACP9C,UAAW29D,KAEbxnB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO1N,UAAU6W,OACvBl+C,OAAO,EACP9C,UAAWm+D,UAlBrBmB,EAAA,CAAsC7nE,aC2BzB8nE,GAAb,SAAA/nB,GAAA,SAAA+nB,IAAA,OAAA5nE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAoqE,GAAA5nE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA4nE,GAAArqB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA4nE,EAAA/nB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA4nE,EAAA,EAAAviE,IAAA,SAAAyH,MAAA,WACkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KACG,SAAA3C,EAAAmC,GAAA,IAAGlV,EAAH+S,EAAG/S,OAAYF,EAAfoV,EAAepV,YAAf,OACCoS,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,qBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE18C,MAAO,qBACPyV,YACE,6EAEFJ,QACEinC,EAAA,cAACqpB,GAAD,CACEr6C,MAAO4qC,mBAAShsB,EAAaE,GAC7B/b,YAAa,SAAA1nB,GAAQ,OACnBu+B,EAAKjqC,MAAM2qE,mBACTj/D,EACA,CAAEyjC,UACF,CAAEF,iBAGN6sB,kBAAmB,SAACpwD,EAAkB+kB,GAAnB,OACjBipC,GACEjpC,EACA,CAAE0e,SAAQzjC,SAAQ,GAAA5C,OAAK4C,IACvB,CAAEujC,eACFhF,EAAKjqC,UAKb28B,WAAYsN,EAAKjqC,MAAM28B,WAAW,CAAEwS,UAAU,CAAEF,gBAChD3R,SAAU2M,EAAKjqC,MAAMs9B,SAAS,CAAE6R,UAAU,CAAEF,gBAC5CrhB,YAAaqc,EAAKjqC,MAAMs9B,SAAS,CAAE6R,UAAU,CAAEF,yBAlC7Dw7B,EAAA,CAAiC9nE,aC/BpB+xD,GAAb,SAAAhS,GAAA,SAAAgS,IAAA,OAAA7xD,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAq0D,GAAA7xD,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA6xD,GAAAtU,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA6xD,EAAAhS,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6xD,EAAA,EAAAxsD,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,mBAClBs8C,EAAA,yPALRqT,EAAA,CAAgC/xD,aCAnBioE,GAAb,SAAAloB,GAAA,SAAAkoB,IAAA,OAAA/nE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAuqE,GAAA/nE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA+nE,GAAAxqB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA+nE,EAAAloB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA+nE,EAAA,EAAA1iE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,2BAClBs8C,EAAA,yPALRupB,EAAA,CAA8BjoE,aCAjBkoE,GAAb,SAAAnoB,GAAA,SAAAmoB,IAAA,OAAAhoE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAwqE,GAAAhoE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAgoE,GAAAzqB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAgoE,EAAAnoB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAgoE,EAAA,EAAA3iE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,uCAClBs8C,EAAA,yPALRwpB,EAAA,CAAgCloE,aCanBmoE,GAET,SAAA9qE,GACF,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAM+qE,iBACZ/8D,OAAO,EACPnK,SAAU7D,EAAMgrE,uBAElB3pB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMirE,oBACZj9D,OAAO,EACPnK,SAAU7D,EAAMkrE,0BAElB7pB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMmrE,iBACZn9D,OAAO,EACPnK,SAAU7D,EAAMorE,yBAcXC,GAET,SAAArrE,GACF,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMsrE,WACZt9D,OAAO,EACPnK,SAAU7D,EAAMurE,iBAElBlqB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMwrE,WACZx9D,OAAO,EACPnK,SAAU7D,EAAMyrE,iBAElBpqB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAM0rE,SAAU19D,OAAO,EAAMnK,SAAU7D,EAAM2rE,iBASnDC,GAET,SAAA5rE,GACF,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAM6rE,aACZ79D,OAAO,EACPnK,SAAU7D,EAAM8rE,qBAUXC,GAET,SAAA/rE,GACF,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMgsE,WACZh+D,OAAO,EACPnK,SAAU7D,EAAMisE,mBAUXC,GAET,SAAAlsE,GACF,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMmsE,WACZn+D,OAAO,EACPnK,SAAU7D,EAAMosE,mBAUXC,GAAkD,SAAArsE,GAC7D,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMssE,cACZt+D,OAAO,EACPnK,SAAU7D,EAAMusE,sBAUXC,GAET,SAAAxsE,GACF,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAMssE,cACZt+D,OAAO,EACPnK,SAAU7D,EAAMusE,sBAiBXE,GAAsD,SAAAzsE,GACjE,OACEqhD,EAAA,cAAC2D,EAAA,OAAD,KACGhlD,EAAM0sE,gBAAkB1sE,EAAM2sE,mBAC7BtrB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMvO,EAAM0sE,eACZ1+D,OAAO,EACPnK,SAAU7D,EAAM2sE,qBAEhB,KAEJtrB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAM4sE,eAAe7B,kBAChC1pB,EAAA,cAACwrB,GAAD,CACE9B,iBAAkB/qE,EAAM4sE,eAAe7B,iBACvCC,qBAAsBhrE,EAAM4sE,eAAe5B,qBAC3CC,oBAAqBjrE,EAAM4sE,eAAe3B,oBAC1CC,wBAAyBlrE,EAAM4sE,eAAe1B,wBAC9CC,iBAAkBnrE,EAAM4sE,eAAezB,iBACvCC,qBAAsBprE,EAAM4sE,eAAexB,wBAG/C/pB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAMssD,YAAYgf,YAC7BjqB,EAAA,cAACyrB,GAAD,CACExB,WAAYtrE,EAAMssD,YAAYgf,WAC9BC,eAAgBvrE,EAAMssD,YAAYif,eAClCC,WAAYxrE,EAAMssD,YAAYkf,WAC9BC,eAAgBzrE,EAAMssD,YAAYmf,eAClCC,SAAU1rE,EAAMssD,YAAYof,SAC5BC,aAAc3rE,EAAMssD,YAAYqf,gBAGpCtqB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAMysD,SAASof,cAC1BxqB,EAAA,cAAC0rB,GAAD,CACElB,aAAc7rE,EAAMysD,SAASof,aAC7BC,iBAAkB9rE,EAAMysD,SAASqf,oBAGrCzqB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAMusD,WAAW4f,YAC5B9qB,EAAA,cAAC2rB,GAAD,CACEb,WAAYnsE,EAAMusD,WAAW4f,WAC7BC,eAAgBpsE,EAAMusD,WAAW6f,kBAGrC/qB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAMwsD,YAAYwf,YAC7B3qB,EAAA,cAAC4rB,GAAD,CACEjB,WAAYhsE,EAAMwsD,YAAYwf,WAC9BC,eAAgBjsE,EAAMwsD,YAAYyf,kBAGtC5qB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAMywB,KAAK67C,eACtBjrB,EAAA,cAAC6rB,GAAD,CACEZ,cAAetsE,EAAMywB,KAAK67C,cAC1BC,kBAAmBvsE,EAAMywB,KAAK87C,qBAGlClrB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMvO,EAAMq1C,UAAUi3B,eAC3BjrB,EAAA,cAAC8rB,GAAD,CACEb,cAAetsE,EAAMq1C,UAAUi3B,cAC/BC,kBAAmBvsE,EAAMq1C,UAAUk3B,uBCvKhCa,GAAb,SAAA1qB,GAAA,SAAA0qB,IAAA,OAAAvqE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA+sE,GAAAvqE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAuqE,GAAAhtB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAuqE,EAAA1qB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAuqE,EAAA,EAAAllE,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAlC,GAAA,IAAGlU,EAAHkU,EAAGlU,cAAeS,EAAlByT,EAAkBzT,iBAAlB,OACC4S,EAAA,cAACwD,EAAA,cAAD,KAIG,SAAAR,EAAAS,EAAAsG,GASI,IARDrc,EAQCsV,EARDtV,SAAUI,EAQTkV,EARSlV,OAQTk+B,EAAAhpB,EARiB5zB,YAQjB,IAAA48C,EARwB,IAQxBA,EAR6B3hE,EAQ7B24C,EAR6B34C,SAE9BsjC,EAMC8V,EAND9V,qBACAE,EAKC4V,EALD5V,WACAD,EAIC6V,EAJD7V,YACA4e,EAGC/I,EAHD+I,mBAEA3M,EACCkK,EADDlK,QAEIosB,EAAe/oC,SAAS9T,EAAM,IAC9Bs9B,EAAmBxpB,SAAS74B,EAAU,IACtCqsD,EAAoB,eAAA9L,EAAAppD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAAiG,GAAA,IAAAxqC,EAAAs2C,EAAAlzB,EAAA,OAAAihB,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3B5kC,EAD2BwqC,EAC3BxqC,OACAs2C,EAF2B9L,EAE3B8L,uBACAlzB,EAH2BonB,EAG3BpnB,OAH2BshB,EAAAE,KAAA,GAKqB,WAApBnc,EAAKjqC,MAAMgsC,MACpB,IAAjBshC,EACEt/B,EACAS,GACFof,GAAsB5e,EACtBC,EACA1tB,EACA2tB,EACA4e,EACAnpB,GAdyB,OAK3BipB,EAL2B3H,EAAAI,KAgBvBwR,EACF5W,EAAQZ,KACNrW,EAAKjqC,MAAMutE,aACT,CACEx+B,WACAI,SACAzjC,WACA+kB,KAAI,GAAA3nB,OAAKwkE,EAAe,IAE1B,CACEt+B,uBACAE,aACAD,cACA4e,wBAKN3M,EAAQZ,KACNrW,EAAKjqC,MAAMwtE,kBACT3f,EACA,CAAE9e,WAAUI,SAAQ1e,OAAM/kB,YAC1B,CACEsjC,uBACAE,aACAD,cACA4e,wBA1CmB,wBAAA3H,EAAAM,SAAAT,MAAH,gBAAAsK,GAAA,OAAApE,EAAA7L,MAAA//C,KAAAggD,YAAA,GAiD1B,OACEgB,EAAA,cAACosB,GAAD,CACEv+B,WAAYA,EACZH,SAAUA,EACV6oB,kBAAmB0V,EACnBxqC,aAAckM,EACd+oB,qBAAsBA,EACtB9lC,iBAAkBgY,EAAKjqC,MAAM48B,SAC3B,CAAEmS,WAAUI,SAAQ1e,OAAM/kB,YAC1B,CACEsjC,uBACAE,aACAD,cACA4e,wBAIH,SAAAgC,GAAA,IAAGjvB,EAAHivB,EAAGjvB,KAAH,OACCygB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,yBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE18C,MAAO,uBACPyV,YACE,4DAEF6iB,QAAS4M,EAAKjqC,MAAMq9B,QAAQ,CAC1Bg+B,YAAatN,EACb7e,aACA7e,MAAOgpC,GACL4B,mBAASpN,GAAsB5e,EAAaE,MAGhD/0B,QAASwmB,EACTjE,WAAYsN,EAAKjqC,MAAM28B,WACrB,CAAEoS,WAAUI,SAAQ1e,OAAM/kB,YAC1B,CACEsjC,uBACAE,aACAD,cACA4e,oCA/G5Buf,EAAA,CAAyCzqE,aCV5B+qE,GAAb,SAAAhrB,GAAA,SAAAgrB,IAAA,OAAA7qE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAqtE,GAAA7qE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA6qE,GAAAttB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA6qE,EAAAhrB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6qE,EAAA,EAAAxlE,IAAA,SAAAyH,MAAA,WACkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KACG,SAAA3C,EAAAmC,GAAqE,IAAlEvV,EAAkEoT,EAAlEpT,aAAcK,EAAoD+S,EAApD/S,OAAQzjC,EAA4Cw2C,EAA5Cx2C,SAAcwjC,EAA8BmV,EAA9BnV,WAAYD,EAAkBoV,EAAlBpV,YAC5C8e,EAAmBxpB,SAAS74B,EAAU,IAC5C,OACE21C,EAAA,cAAC+C,EAAA,eAAD,CAAgB5tC,GAAIs4B,EAAchM,aAAcoM,GAC7C,SAAA4V,GAAA,IAAGlvC,EAAHkvC,EAAGlvC,KAAMw2B,EAAT0Y,EAAS1Y,QAAS7mC,EAAlBu/C,EAAkBv/C,MAAlB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,qBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE18C,MAAO,mBACPyV,YACE,gDAEF6iB,QAAS4M,EAAKjqC,MAAMq9B,QAAQ,CAC1Bg+B,YAAatN,EACb7e,WAAYA,EACZ7e,MAAOgpC,GACL4B,mBAAShsB,EAAaE,MAG1B/0B,QACEinC,EAAA,cAACI,EAAA,8BAAD,MACIsM,EAAmB,EACjBn4C,EAAKkgC,cACLlgC,EAAKigC,iBAEN3R,KAAK,SAAC/X,EAAGqS,GAAJ,OAAUrS,EAAE9mB,KAAK+kD,cAAc5rB,EAAEn5B,QACtC0C,IAAI,SAACokB,EAAG1jB,GAAJ,OACH44C,EAAA,cAACI,EAAA,iCAAD,CACEv5C,IAAKO,EACLmpB,gBAAiBzF,EAAE9mB,KACnBwsB,uBACE1F,EAAE3R,aAAe,4BAEnBhN,QACE6zC,EAAA,cAACI,EAAA,WAAD,CACEh1C,KAAMw9B,EAAKjqC,MAAM2tE,WACfxhD,EAAE3V,GACF,CAAEs4B,eAAcK,SAAQzjC,YACxB,CAAEwjC,aAAYD,iBAJlB,eAcZtS,WAAYsN,EAAKjqC,MAAM28B,WACrB,CAAEmS,eAAcK,SAAQzjC,YACxB,CAAEwjC,aAAYD,6BA7DxCy+B,EAAA,CAAsC/qE,aCdzBirE,GAAb,SAAAlrB,GAAA,SAAAkrB,IAAA,OAAA/qE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAutE,GAAA/qE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA+qE,GAAAxtB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA+qE,EAAAlrB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA+qE,EAAA,EAAA1lE,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KACG,SAAA3C,EAAAmC,EAAAS,GAAA,IAAG3V,EAAH+S,EAAG/S,OAAYF,EAAfoV,EAAepV,YAAiBiS,EAAhC4D,EAAgC5D,QAAhC,OACCG,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAgH,GAAyB,IAAtB7c,EAAsB6c,EAAtB7c,gBACEs/B,GAAgB,EACdtnD,EAAM,eAAA0lC,EAAAppD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAAiG,EAEbx+C,GAFa,IAAAnI,EAAAwoD,EAAA,OAAAhI,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACX/gD,EADW2mD,EACX3mD,KADW2mD,EACLxxC,YAGFqzC,EAAqBigB,6BACzB7+B,EACA5pC,GANW6gD,EAAAE,KAAA,EASP7X,EAAgBsf,GATT,OAUbrgD,EAAQgmD,eAAc,GAElBqa,IACFjkB,MAAM,iBACNikB,GAAgB,GAIlB3sB,EAAQZ,KAAKrW,EAAKjqC,MAAM+tE,aAAalgB,IAlBxB,wBAAA3H,EAAAM,SAAAT,MAAH,gBAAAsK,EAAAC,GAAA,OAAArE,EAAA7L,MAAA//C,KAAAggD,YAAA,GAoCZ,OACEgB,EAAA,cAAC4Q,GAAA,SAAD,CACEzuB,qBAAsB,mBACtBG,WAnBgC,CAClCt+B,KAAM,CACJuhB,aAAc,GACdma,YAAa,OACbmkC,MAAO,EACPjhC,UAAU,EACV7+B,KAAM,UAGRoV,YAAa,CACXoM,aAAc,GACdma,YAAa,cACbmkC,MAAO,EACP9/D,KAAM,aAON09B,aAAc,CACZtoB,YAAay0B,EAAYz0B,YACzBnV,KAAM4pC,EAAY5pC,MAEpBkhB,OAAQA,GAEP,SAAAspC,GAAA,IACCpsB,EADDosB,EACCpsB,OACAqB,EAFD+qB,EAEC/qB,MACAjqB,EAHDg1C,EAGCh1C,aACAkoB,EAJD8sB,EAIC9sB,aACA7nB,EALD20C,EAKC30C,QACAiX,EAND09B,EAMC19B,WAND,OAQCkvB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,yBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE18C,MAAO,uBACPyV,YAAa,yCACbJ,QACEinC,EAAA,cAACI,EAAA,oBAAD,CAAqB5mC,aAAcA,GAChC4oB,GAGL9G,WAAYsN,EAAKjqC,MAAM28B,WACrB,CAAEwS,UACF,CAAEF,gBAEJ1oB,OAAQ4L,EACRqL,eAAgBsH,IAAU5pB,EAC1BqiB,cAAewF,EACf1I,UAASx3B,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAsM,IAAA,OAAAvM,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,cACTynB,GAAgB,EADPxb,EAAAjM,KAAA,EAEHj0B,IAFG,wBAAAkgC,EAAA7L,SAAA4L,MAIX10B,kBAAmBoH,IAAU5pB,EAC7BuiB,iBAAkBsF,eAtF1C6qC,EAAA,CAAyCjrE,aCgB5BkjE,GAAb,SAAAnjB,GAAA,SAAAmjB,IAAA,OAAAhjE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAwlE,GAAAhjE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAgjE,GAAAzlB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAgjE,EAAAnjB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAgjE,EAAA,EAAA39D,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACwD,EAAA,cAAD,KACG,SAAC5d,EAAQz/B,GAAU,IACV2nC,EAAqBlI,EAArBkI,OAAQzjC,EAAau7B,EAAbv7B,SADEsiE,EAE8BxmE,EAAxCynC,mBAFU,IAAA++B,EAEI1f,gCAFJ0f,EAGZjgB,EAAmBxpB,SAAS74B,EAAU,KAAO,EAC7CuiE,EAAmBhT,mBAAShsB,EAAaE,GAC/C,OACEkS,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAO,wBAClBs8C,EAAA,cAACI,EAAA,wBAAD,CACE18C,MAAO,sBACPyV,YACE,6HAEF6iB,QAAS4M,EAAKjqC,MAAMq9B,QAAQ,CAC1Bg+B,YAAatN,EACb19B,MAAOgpC,GAAuB4U,KAEhC7zD,QACEinC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,cAAe,WAC9B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,gBAAD,KACG,SAAAlC,GAAA,IACOya,EADPza,EACCtsC,KACSs4D,EAFVhsB,EAEC9V,QACOywB,EAHR3a,EAGC38C,MAHD,OAKC87C,EAAA,cAAC+C,EAAA,eAAD,KACG,SAAAC,GAAA,IACO8pB,EADP9pB,EACCzuC,KACSw4D,EAFV/pB,EAECjY,QACOiiC,EAHRhqB,EAGC9+C,MAHD,OAKC87C,EAAA,cAAC+C,EAAA,UAAD,KACG,SAAAU,GAAsB,IAAZz0B,EAAYy0B,EAAnBh6B,MAMIwjD,EAAenU,GvC+FhD,SACLx1C,EACA2iC,EACAj3B,GAEA,MAAO,GAAAvnB,OAAAjG,OAAAqhD,EAAA,EAAArhD,CACF8hB,EAAY5c,IAAI,SAAAmnC,GAAU,OAC3BiqB,GAAa,CACXjqB,aACA7pC,KAAM6pC,EAAW7pC,KACjBkwC,SAAUslB,gBALTh4D,OAAAqhD,EAAA,EAAArhD,CAQFykD,EAAWvjB,OACZ,SAACwqC,EAAoBl5B,GA+BnB,OA9BAA,EAAU7nC,QAAQurC,QAAQ,SAAA5sB,GACxB,IAAIkb,EAAa,GAEflb,EAAE4xB,YACFtc,MAAM+sC,QAAQriD,EAAE4xB,WAAWC,2BAE3B3W,EAAalb,EAAE4xB,WAAWC,wBAAwBja,OAChD,SAAC9Y,EAAKC,GACJ,OAAOroB,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAKooB,EAAQC,EAAQmc,aAE9B,KAGiB,SAAjBlb,EAAEsiD,YACJF,EAAmBjuB,KACjB6Y,GAAa,CACX33C,OAAQ2K,EACR6iB,0BAAsBloC,EACtB0T,YAAa2R,EAAE3R,aAAe,GAC9B66B,YACAzvC,KAAI,GAAAkD,OAAKu9C,mDAALv9C,OAA8BssC,2BAAiBC,IACnDvB,SAAWuB,EAAUvB,UAAwC,GAC7DzuC,KAAM8mB,EAAE9mB,KACRgiC,aACAkO,SAAU,YACVxwC,MAAOonB,EAAE9mB,UAKVkpE,GAET,KA1CG1rE,OAAAqhD,EAAA,EAAArhD,CA4CFwtB,EAAMtoB,IAAI,SAAA03B,GAAC,OAAI05B,GAAa15B,OAE9BsG,OAAO,SAAAtG,GAAC,QAAMA,EAAE25B,aAChBl1B,KAAK,SAAC/X,EAAGqS,GAAJ,OAAUrS,EAAE9mB,KAAK+kD,cAAc5rB,EAAEn5B,QuCxJSqpE,CAChB/R,EAAgBpoB,iCAChB45B,EAAerjD,MACfuF,GAIA09B,EACAkgB,GAEF,OACE5sB,EAAA,cAACiT,GAAD,CACE1mD,SACGsgE,IACAE,EAEH7oE,MACEs3D,GAAoBwR,EAEtBvd,uBAAuB,EACvBD,kBAAmB,SAAApgC,GAAI,OACrBipC,GACEjpC,EACAwW,EACAz/B,EACAyiC,EAAKjqC,QAGT2kB,YAAa2pD,EACb9xD,4BAA6B,oBAYnDmgB,WAAYsN,EAAKjqC,MAAM28B,WAAWsK,EAAQz/B,YAjF1Dq+D,EAAA,CAA0CljE,aCxBpCgsE,GACJttB,EAAA,cAACutB,GAAD,CACEjyC,WAAYguB,GAAUvB,KACtBuhB,mBAAoB,SAACj/D,EAAUhI,EAAG+7B,GAAd,OAClBkrB,GAAU5B,OAAOoE,UAAUL,QAAQT,WAAnCxpD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACE6I,SAAQ,GAAA5C,OAAK4C,IACVhI,EACA+7B,KAGPo6B,gBAAiBlP,GAAU5B,OAAOoE,UAAUJ,SAAST,YAAYtD,OACjE4Q,eAAgB,SAACnpC,EAAMwW,EAAQz/B,GAAf,OACdmjD,GAAU5B,OAAOoE,UAAUJ,SAAS7d,WAAWyd,gBAA/C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,SAAUte,EAAKjP,OAAQhL,GACvB04B,WAAYze,EAAKye,YACdjI,EACAz/B,KAGPsyD,WAAYnP,GAAU5B,OAAOoE,UAAUJ,SAASP,YAChDuN,cAAepP,GAAU5B,OAAOoE,UAAUJ,SAAS1X,UACnD2kB,WAAYrP,GAAU5B,OAAOoE,UAAUJ,SAASR,WAChD0N,aAActP,GAAU5B,OAAOoE,UAAUJ,SAASN,SAClDyN,SAAUvP,GAAU5B,OAAOoE,UAAUJ,SAASt8B,KAC9C6M,SAAU,SAAC55B,EAAG+7B,GAAJ,OACRkrB,GAAU5B,OAAOoE,UAAUH,eAA3BnqD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,OAMLovC,GACJxtB,EAAA,cAACytB,GAAD,CACEnyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEsuC,aAAcpjB,GAAUvB,OAItB2lB,GACJ1tB,EAAA,cAAC2tB,GAAD,CACEryC,WAAYguB,GAAUvB,KACtByQ,gBAAiBlP,GAAU5B,OAAO/3B,MAAMs7B,YAAYnD,OACpDyQ,eAAgB,SAAC1qB,EAAYjI,EAAQz/B,GAArB,OACdmjD,GAAU5B,OAAO/3B,MAAMke,WAAWwd,aAAlC7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEqsC,cACGjI,EACAz/B,KAGPsyD,WAAYnP,GAAU5B,OAAO/3B,MAAMw7B,YACnCuN,cAAepP,GAAU5B,OAAO/3B,MAAMqkB,UACtC2kB,WAAYrP,GAAU5B,OAAO/3B,MAAMu7B,WACnC0N,aAActP,GAAU5B,OAAO/3B,MAAMy7B,SACrCyN,SAAUvP,GAAU5B,OAAO/3B,MAAMP,KACjC4M,QAAS,kBACPgkB,EAAA,cAACI,EAAA,wBAAD,KACG,SAAAS,GAAA,IAAGz1B,EAAHy1B,EAAGz1B,SAAH,OACC40B,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,2BAAD,CACE77C,KAAMy7C,EAAA,mBAAG96C,UAAW,eACpBU,UAAW,WACXusB,YAAa,QACblkB,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAa,wBAEf6mC,EAAA,cAACI,EAAA,gCAAD,CACE77C,KAAMy7C,EAAA,mBAAG96C,UAAW,eACpBU,UAAW,YACXusB,YAAa,SACblkB,QAAQ,EACRgkB,YAAa7G,EACbpnB,KAAM,MACNmc,OAAQ,MACRuS,SAAU,cASlBk7C,GACJ5tB,EAAA,cAAC6tB,GAAD,CACEvyC,WAAYguB,GAAU5B,OAAO/3B,MAAMq7B,WACnChvB,QAAS,SAAAgnB,GAAA,IAAGnV,EAAHmV,EAAGnV,WAAH,OACPmS,EAAA,cAACI,EAAA,wBAAD,KACG,SAAAqD,GAAA,IAAGr4B,EAAHq4B,EAAGr4B,SAAH,OACC40B,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,2BAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/ClsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAASomC,EAAuBnqC,OACzCyuB,YAAW,MAAA1qB,OAAQomC,EAAW7pC,MAC9BiK,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAa,qBAEf6mC,EAAA,cAACI,EAAA,gCAAD,CACE77C,KAAMy7C,EAAA,mBAAG96C,UAAW,eACpBU,UAAW,YACXusB,YAAa,SACblkB,QAAQ,EACRgkB,YAAa7G,EACbpnB,KAAM,MACNmc,OAAQ,MACRuS,SAAU,YAMpB45C,WAAY,SAAC5+B,EAAUrrC,EAAG+7B,GAAd,OACVkrB,GAAU5B,OAAO/3B,MAAMke,WAAWyd,gBAAlC9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,YACGrrC,EACA+7B,OAML0vC,GACJ9tB,EAAA,cAAC+tB,GAAD,CACExyC,SAAU,SAACl5B,EAAG+7B,GAAJ,OACRkrB,GAAU5B,OAAO/3B,MAAMke,WAAWwd,aAAlC7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAoDa,EAAM+7B,KAE5D9C,WAAYguB,GAAUvB,KACtBpd,KAAM,SACNuhC,aAAc,SAAC7pE,EAAG+7B,GAAJ,OACZkrB,GAAU5B,OAAO/3B,MAAMke,WAAWyd,gBAAlC9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGPpC,QAAS,SAAA+tB,GAAA,IAAGlc,EAAHkc,EAAGlc,WAAH,OACPmS,EAAA,cAACI,EAAA,wBAAD,KACG,SAAAuK,GAAA,IAAGv/B,EAAHu/B,EAAGv/B,SAAH,OACC40B,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,2BAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/ClsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAAQomC,EAAW8E,UAAW3uC,MACvCmuB,YAAW,MAAA1qB,OAAQomC,EAAW7pC,MAC9BiK,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAa,yBAEf6mC,EAAA,cAACI,EAAA,gCAAD,CACE77C,KAAMy7C,EAAA,mBAAG96C,UAAW,eACpBU,UAAW,YACXusB,YAAa,SACblkB,QAAQ,EACRgkB,YAAa7G,EACbpnB,KAAM,MACNmc,OAAQ,MACRuS,SAAU,YAMpBy5C,kBAAmB,SAACv+B,EAAahI,EAAQz/B,GACvC,OAAOmjD,GAAU5B,OAAOmE,OAAOb,WAAxBxpD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACLosC,eACGhI,EAFE,CAGLv7B,SAAU,UAMZ2jE,GACJhuB,EAAA,cAAC2tB,GAAD,CACEryC,WAAYguB,GAAUvB,KACtByQ,gBAAiBlP,GAAU5B,OAAOmE,OAAOZ,YAAYnD,OACrDyQ,eAAgB,SAAC1qB,EAAYjI,EAAQz/B,GAArB,OACdmjD,GAAU5B,OAAOmE,OAAOhe,WAAWwd,aAAnC7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEqsC,cACGjI,EACAz/B,KAGPsyD,WAAYnP,GAAU5B,OAAOmE,OAAOV,YACpCuN,cAAepP,GAAU5B,OAAOmE,OAAO7X,UACvC2kB,WAAYrP,GAAU5B,OAAOmE,OAAOX,WACpC0N,aAActP,GAAU5B,OAAOmE,OAAOT,SACtCyN,SAAUvP,GAAU5B,OAAOmE,OAAOz8B,KAClC4M,QAAS,SAAA4uB,GAAA,IAAG57B,EAAH47B,EAAG57B,MAAH,OACPgxB,EAAA,cAACI,EAAA,wBAAD,KACG,SAAAoO,GAAkB,IAAfpjC,EAAeojC,EAAfpjC,SACI2pC,EAAc/lC,EAAM,GAC1B,OACEgxB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,gCAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BACH0R,kDACA+P,EAAYlnB,YAEdlsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAAQstD,EAAYlnB,WAAY7pC,MACzCmuB,YAAW,MAAA1qB,OAAQstD,EAAYlnB,WAAY7pC,MAC3CiK,QAAQ,EACRgkB,YAAa7G,EACbpnB,KAAM+wD,EAAYlnB,WAAY8E,UAAW3uC,KACzCmc,OAAQ40C,EAAYlnB,WAAY7pC,KAChC0uB,SAAU,SAEZstB,EAAA,cAACI,EAAA,2BAAD,CACE77C,KAAMy7C,EAAA,mBAAG96C,UAAW,eACpBU,UAAW,YACXusB,YAAa,SACblkB,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAa,8BAUvB80D,GACJjuB,EAAA,cAAC6tB,GAAD,CACEvyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOmE,OAAOb,WAAxBxpD,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAwCa,EAAM+7B,KACpEpC,QAAS,SAAAk1B,GAAA,IAAGrjB,EAAHqjB,EAAGrjB,WAAY7e,EAAfkiC,EAAeliC,MAAf,OACPgxB,EAAA,cAACI,EAAA,wBAAD,KACG,SAAAkR,GAAkB,IAAflmC,EAAekmC,EAAflmC,SACI2pC,EAAc/lC,EAAM,GAC1B,OACEgxB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,gCAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BACH0R,kDACA+P,EAAYlnB,YAEdlsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAAQstD,EAAYlnB,WAAY7pC,MACzCmuB,YAAW,MAAA1qB,OAAQstD,EAAYlnB,WAAY7pC,MAC3CiK,QAAQ,EACRgkB,YAAa7G,EACbpnB,KAAM+wD,EAAYlnB,WAAY8E,UAAW3uC,KACzCmc,OAAQ40C,EAAYlnB,WAAY7pC,KAChC0uB,SAAU,SAEZstB,EAAA,cAACI,EAAA,2BAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/ClsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAAQomC,EAAW8E,UAAW3uC,MACvCmuB,YAAW,MAAA1qB,OAAQomC,EAAW7pC,MAC9BiK,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAa,yBAOzBmzD,WAAY,SAAC5+B,EAAUrrC,EAAG+7B,GAAd,OACVkrB,GAAU5B,OAAOmE,OAAOhe,WAAWyd,gBAAnC9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,YACGrrC,EACA+7B,OAML8vC,GACJluB,EAAA,cAAC+tB,GAAD,CACExyC,SAAU,SAACl5B,EAAG+7B,GAAJ,OACRkrB,GAAU5B,OAAOmE,OAAOhe,WAAWwd,aAAnC7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAqDa,EAAM+7B,KAE7D9C,WAAYguB,GAAUvB,KACtBpd,KAAM,SACNuhC,aAAc,SAAC7pE,EAAG+7B,GAAJ,OACZkrB,GAAU5B,OAAOmE,OAAOhe,WAAWyd,gBAAnC9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGPpC,QAAS,SAAAy1B,GAAA,IAAG5jB,EAAH4jB,EAAG5jB,WAAY7e,EAAfyiC,EAAeziC,MAAf,OACPgxB,EAAA,cAACI,EAAA,wBAAD,KACG,SAAA4R,GAAkB,IAAf5mC,EAAe4mC,EAAf5mC,SACI2pC,EAAc/lC,EAAM,GAC1B,OACEgxB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,gCAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BACH0R,kDACA+P,EAAYlnB,YAEdlsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAAQstD,EAAYlnB,WAAY7pC,MACzCmuB,YAAW,MAAA1qB,OAAQstD,EAAYlnB,WAAY7pC,MAC3CiK,QAAQ,EACRgkB,YAAa7G,EACbpnB,KAAM+wD,EAAYlnB,WAAY8E,UAAW3uC,KACzCmc,OAAQ40C,EAAYlnB,WAAY7pC,KAChC0uB,SAAU,SAEZstB,EAAA,cAACI,EAAA,2BAAD,CACE77C,KACEy7C,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/ClsC,MAAO,GACPC,OAAQ,KAGZgE,UAAS,MAAA6B,OAAQomC,EAAW8E,UAAW3uC,MACvCmuB,YAAW,MAAA1qB,OAAQomC,EAAW7pC,MAC9BiK,QAAQ,EACRgkB,YAAa7G,EACbjS,YAAa,6BAOzBgzD,kBAAmB,SAACv+B,EAAahI,GAAd,OACjB0jB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEosC,eACGhI,OAMLuoC,GACJnuB,EAAA,cAAC2tB,GAAD,CACEryC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEo6B,gBAAiBlP,GAAU5B,OAAOoE,UAAUL,QAAQR,YAAYnD,OAChEyQ,eAAgB,SAAC1qB,EAAYxrC,EAAG+7B,GAAhB,OACdkrB,GAAU5B,OAAOoE,UAAUL,QAAQ5d,WAAWwd,aAA9C7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEqsC,cACGxrC,EACA+7B,KAGPq6B,WAAYnP,GAAU5B,OAAOoE,UAAUL,QAAQN,YAC/CuN,cAAepP,GAAU5B,OAAOoE,UAAUL,QAAQzX,UAClD2kB,WAAYrP,GAAU5B,OAAOoE,UAAUL,QAAQP,WAC/C0N,aAActP,GAAU5B,OAAOoE,UAAUL,QAAQL,SACjDyN,SAAUvP,GAAU5B,OAAOoE,UAAUL,QAAQr8B,KAC7C4M,QAAS,SAAAs2B,GAAA,IAAGtjC,EAAHsjC,EAAGtjC,MAAOgrC,EAAV1H,EAAU0H,YAAV,OACPha,EAAA,cAACouB,GAAD,CACEp/C,MAAOA,EACPkrC,WAAYF,EACZK,aAAY,GAAA5yD,OAAKuyD,EAAc,EAAnB,WACZM,eAAgB,QAChBC,mBAAoB,2BAMtB8T,GACJruB,EAAA,cAAC6tB,GAAD,CACEvyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEpC,QAAS,SAAA62B,GAAA,IAAGhlB,EAAHglB,EAAGhlB,WAAY7e,EAAf6jC,EAAe7jC,MAAOgrC,EAAtBnH,EAAsBmH,YAAtB,OACPha,EAAA,cAACouB,GAAD,CACEp/C,MAAOA,EACPkrC,WAAYF,EACZI,QACEpa,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/CjsC,OAAQ,GACRD,MAAO,KAGX04D,aAAY,GAAA5yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW8E,UAAW3uC,MAC3Ds2D,eAAc,GAAA7yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW7pC,MAClDu2D,mBAAoB,sBAGxB+R,WAAY,SAAC5+B,EAAUrrC,EAAG+7B,GAAd,OACVkrB,GAAU5B,OAAOoE,UAAUL,QAAQ5d,WAAWyd,gBAA9C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,YACGrrC,EACA+7B,OAMLkwC,GACJtuB,EAAA,cAAC+tB,GAAD,CACExyC,SAAU,SAACl5B,EAAG+7B,GAAJ,OACRkrB,GAAU5B,OAAOoE,UAAUL,QAAQ5d,WAAWwd,aAA9C7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAgEa,EAAM+7B,KAExE9C,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEuM,KAAM,SACNuhC,aAAc,SAAC7pE,EAAG+7B,GAAJ,OACZkrB,GAAU5B,OAAOoE,UAAUL,QAAQ5d,WAAWyd,gBAA9C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGPpC,QAAS,SAAAuyC,GAAA,IAAG1gC,EAAH0gC,EAAG1gC,WAAY7e,EAAfu/C,EAAev/C,MAAOgrC,EAAtBuU,EAAsBvU,YAAtB,OACPha,EAAA,cAACouB,GAAD,CACEp/C,MAAOA,EACPkrC,WAAYF,EACZI,QACEpa,EAAA,qBACE9mC,IAAK,YACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/CjsC,OAAQ,GACRD,MAAO,KAGX04D,aAAY,GAAA5yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW8E,UAAW3uC,MAC3Ds2D,eAAc,GAAA7yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW7pC,MAClDu2D,mBAAoB,0BAGxB4R,kBAAmB,SAACv+B,EAAahI,GAAd,OACjB0jB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEosC,eACGhI,OAML4oC,GACJxuB,EAAA,cAAC6tB,GAAD,CACEvyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEpC,QAAS,SAAAyyC,GAAA,IAAGz/C,EAAHy/C,EAAGz/C,MAAOgrC,EAAVyU,EAAUzU,YAAV,OACPha,EAAA,cAACouB,GAAD,CAA0Bp/C,MAAOA,EAAOgrC,YAAaA,KAEvDsS,WAAY,SAAC5+B,EAAUrrC,EAAG+7B,GAAd,OACVkrB,GAAU5B,OAAOoE,UAAUJ,SAAS7d,WAAWyd,gBAA/C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,YACGrrC,EACA+7B,OAMLswC,GACJ1uB,EAAA,cAAC+tB,GAAD,CACExyC,SAAU,SAACl5B,EAAG+7B,GAAJ,OACRkrB,GAAU5B,OAAOoE,UAAUJ,SAAS7d,WAAWwd,aAA/C7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGP9C,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEuM,KAAM,UACNuhC,aAAc,SAAC7pE,EAAG+7B,GAAJ,OACZkrB,GAAU5B,OAAOoE,UAAUJ,SAAS7d,WAAWyd,gBAA/C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGPpC,QAAS,SAAA2yC,GAAA,IAAG3/C,EAAH2/C,EAAG3/C,MAAOgrC,EAAV2U,EAAU3U,YAAV,OACPha,EAAA,cAACouB,GAAD,CAA0Bp/C,MAAOA,EAAOgrC,YAAaA,KAEvDmS,kBAAmB,SAACv+B,EAAahI,GAAd,OACjB0jB,GAAU5B,OAAOoE,UAAUllD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEosC,eACGhI,OAMLgpC,GAAgC,kBAAM5uB,EAAA,cAAAA,EAAA,uBAsB/B6uB,GAAiD,WAC5D,OACE7uB,EAAA,cAACuT,EAAD,KACEvT,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUvB,QAApB,gBACA/H,EAAA,8CAEFA,EAAA,cAAC2D,EAAA,OAAD,KAEE3D,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOgG,OAAO/3B,MAAMq7B,YAC/BhL,EAAA,cAAC8uB,GAAD,CACEzD,eAAgB3pB,GAAOgG,OAAO/3B,MAAMq7B,WACpCsgB,mBAAoBoC,GACpBnC,eAAgB,CACd7B,iBAAkBhoB,GAAOgG,OAAO/3B,MAAMke,WAAWwd,aACjDse,qBAAsBiE,GACtBhE,oBACEloB,GAAOgG,OAAO/3B,MAAMke,WAAWyd,gBACjCue,wBAAyBiE,GACzBhE,iBAAkBpoB,GAAOgG,OAAO/3B,MAAMke,WAAW0d,aACjDwe,qBAAsB6E,IAExB3jB,YAAa,CACXgf,WAAYvoB,GAAOgG,OAAO/3B,MAAMs7B,YAAYnD,OAC5CoiB,eAAgBlqB,EAAA,cAAC+uB,GAAD,MAChB5E,WAAYzoB,GAAOgG,OAAO/3B,MAAMs7B,YAAYtD,OAC5CyiB,eAAgBpqB,EAAA,cAACgvB,GAAD,MAChB3E,SAAU3oB,GAAOgG,OAAO/3B,MAAMs7B,YAAYxB,KAC1C6gB,aAActqB,EAAA,cAACivB,GAAD,OAEhB7jB,SAAU,CACRof,aAAc9oB,GAAOgG,OAAO/3B,MAAMy7B,SAClCqf,iBAAkBmE,IAEpB1jB,WAAY,CACV4f,WAAYppB,GAAOgG,OAAO/3B,MAAMu7B,WAChC6f,eAAgB6D,IAElBzjB,YAAa,CACXwf,WAAYjpB,GAAOgG,OAAO/3B,MAAMw7B,YAChCyf,eAAgBgE,IAElBx/C,KAAM,CACJ67C,cAAevpB,GAAOgG,OAAO/3B,MAAMP,KACnC87C,kBAAmB0D,IAErB56B,UAAW,CACTi3B,cAAevpB,GAAOgG,OAAO/3B,MAAMqkB,UACnCk3B,kBAAmB0D,OAMzB5uB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOgG,OAAOmE,OAAOb,YAChChL,EAAA,cAAC8uB,GAAD,CACEzD,eAAgB3pB,GAAOgG,OAAOmE,OAAOb,WACrCsgB,mBAAoB0C,GACpBzC,eAAgB,CACd7B,iBAAkBhoB,GAAOgG,OAAOmE,OAAOhe,WAAWwd,aAClDse,qBAAsBsE,GACtBrE,oBACEloB,GAAOgG,OAAOmE,OAAOhe,WAAWyd,gBAClCue,wBAAyBqE,GACzBpE,iBAAkBpoB,GAAOgG,OAAOmE,OAAOhe,WAAW0d,aAClDwe,qBAAsB6E,IAExB3jB,YAAa,CACXgf,WAAYvoB,GAAOgG,OAAOmE,OAAOZ,YAAYnD,OAC7CoiB,eAAgBlqB,EAAA,cAAC+uB,GAAD,MAChB5E,WAAYzoB,GAAOgG,OAAOmE,OAAOZ,YAAYtD,OAC7CyiB,eAAgBpqB,EAAA,cAACgvB,GAAD,MAChB3E,SAAU3oB,GAAOgG,OAAOmE,OAAOZ,YAAYxB,KAC3C6gB,aAActqB,EAAA,cAACivB,GAAD,OAEhB7jB,SAAU,CACRof,aAAc9oB,GAAOgG,OAAOmE,OAAOT,SACnCqf,iBAAkBmE,IAEpB1jB,WAAY,CACV4f,WAAYppB,GAAOgG,OAAOmE,OAAOX,WACjC6f,eAAgB6D,IAElBzjB,YAAa,CACXwf,WAAYjpB,GAAOgG,OAAOmE,OAAOV,YACjCyf,eAAgBgE,IAElBx/C,KAAM,CACJ67C,cAAevpB,GAAOgG,OAAOmE,OAAOz8B,KACpC87C,kBAAmB0D,IAErB56B,UAAW,CACTi3B,cAAevpB,GAAOgG,OAAOmE,OAAO7X,UACpCk3B,kBAAmB0D,OAKzB5uB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOgG,OAAOoE,UAAUllD,MAC9B+F,OAAO,EACPnK,SAAU8qE,KAIZttB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOgG,OAAOoE,UAAUL,QAAQT,YAC3ChL,EAAA,cAAC8uB,GAAD,CACEzD,eAAgB3pB,GAAOgG,OAAOoE,UAAUL,QAAQT,WAChDsgB,mBAAoB6C,GACpB5C,eAAgB,CACd7B,iBACEhoB,GAAOgG,OAAOoE,UAAUL,QAAQ5d,WAAWwd,aAC7Cse,qBAAsB0E,GACtBzE,oBACEloB,GAAOgG,OAAOoE,UAAUL,QAAQ5d,WAAWyd,gBAC7Cue,wBAAyByE,GACzBxE,iBACEpoB,GAAOgG,OAAOoE,UAAUL,QAAQ5d,WAAW0d,aAC7Cwe,qBAAsB6E,IAExB3jB,YAAa,CACXgf,WAAYvoB,GAAOgG,OAAOoE,UAAUL,QAAQR,YAAYnD,OACxDoiB,eAAgBlqB,EAAA,cAAC+uB,GAAD,MAChB5E,WAAYzoB,GAAOgG,OAAOoE,UAAUL,QAAQR,YAAYtD,OACxDyiB,eAAgBpqB,EAAA,cAACgvB,GAAD,MAChB3E,SAAU3oB,GAAOgG,OAAOoE,UAAUL,QAAQR,YAAYxB,KACtD6gB,aAActqB,EAAA,cAACivB,GAAD,OAEhB7jB,SAAU,CACRof,aAAc9oB,GAAOgG,OAAOoE,UAAUL,QAAQL,SAC9Cqf,iBAAkBmE,IAEpB1jB,WAAY,CACV4f,WAAYppB,GAAOgG,OAAOoE,UAAUL,QAAQP,WAC5C6f,eAAgB6D,IAElBzjB,YAAa,CACXwf,WAAYjpB,GAAOgG,OAAOoE,UAAUL,QAAQN,YAC5Cyf,eAAgBgE,IAElBx/C,KAAM,CACJ67C,cAAevpB,GAAOgG,OAAOoE,UAAUL,QAAQr8B,KAC/C87C,kBAAmB0D,IAErB56B,UAAW,CACTi3B,cAAevpB,GAAOgG,OAAOoE,UAAUL,QAAQzX,UAC/Ck3B,kBAAmB0D,OAMzB5uB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOgG,OAAOoE,UAAUJ,SAASV,YAC5ChL,EAAA,cAAC8uB,GAAD,CACEvD,eAAgB,CACd7B,iBACEhoB,GAAOgG,OAAOoE,UAAUJ,SAAS7d,WAAWwd,aAC9Cse,qBAAsB6E,GACtB5E,oBACEloB,GAAOgG,OAAOoE,UAAUJ,SAAS7d,WAAWyd,gBAC9Cue,wBAAyB6E,GACzB5E,iBACEpoB,GAAOgG,OAAOoE,UAAUJ,SAAS7d,WAAW0d,aAC9Cwe,qBAAsB6E,IAExB3jB,YAAa,CACXgf,WAAYvoB,GAAOgG,OAAOoE,UAAUJ,SAAST,YAAYnD,OACzDoiB,eAAgBlqB,EAAA,cAAC+uB,GAAD,MAChB5E,WAAYzoB,GAAOgG,OAAOoE,UAAUJ,SAAST,YAAYtD,OACzDyiB,eAAgBpqB,EAAA,cAACgvB,GAAD,MAChB3E,SAAU3oB,GAAOgG,OAAOoE,UAAUJ,SAAST,YAAYxB,KACvD6gB,aAActqB,EAAA,cAACivB,GAAD,OAEhB7jB,SAAU,CACRof,aAAc9oB,GAAOgG,OAAOoE,UAAUJ,SAASN,SAC/Cqf,iBAAkBmE,IAEpB1jB,WAAY,CACV4f,WAAYppB,GAAOgG,OAAOoE,UAAUJ,SAASR,WAC7C6f,eAAgB6D,IAElBzjB,YAAa,CACXwf,WAAYjpB,GAAOgG,OAAOoE,UAAUJ,SAASP,YAC7Cyf,eAAgBgE,IAElBx/C,KAAM,CACJ67C,cAAevpB,GAAOgG,OAAOoE,UAAUJ,SAASt8B,KAChD87C,kBAAmB0D,IAErB56B,UAAW,CACTi3B,cAAevpB,GAAOgG,OAAOoE,UAAUJ,SAAS1X,UAChDk3B,kBAAmB0D,OAKzB5uB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOgG,OAAOoE,UAAUH,eAC9Bh/C,OAAO,EACPnK,SAAUgrE,QCluBdF,GACJttB,EAAA,cAACutB,GAAD,CACEjyC,WAAYguB,GAAUvB,KACtBuhB,mBAAoB,SAACj/D,EAAUhI,EAAG+7B,GAAd,OAClBkrB,GAAU1b,YAAY6b,KAAKgC,QAAQT,WAAnCxpD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACE6I,SAAQ,GAAA5C,OAAK4C,IACVhI,EACA+7B,KAGPo6B,gBAAiBlP,GAAU1b,YAAY6b,KAAKiC,SAAST,YAAYtD,OACjE4Q,eAAgB,SAACnpC,EAAMwW,EAAQz/B,GAAf,OACdmjD,GAAU1b,YAAY6b,KAAKiC,SAAS7d,WAAWyd,gBAA/C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,SAAUte,EAAKjP,OAAQhL,GACvB04B,WAAYze,EAAKye,YACdjI,EACAz/B,KAGPsyD,WAAYnP,GAAU1b,YAAY6b,KAAKiC,SAASP,YAChDuN,cAAepP,GAAU1b,YAAY6b,KAAKiC,SAAS1X,UACnD2kB,WAAYrP,GAAU1b,YAAY6b,KAAKiC,SAASR,WAChD0N,aAActP,GAAU1b,YAAY6b,KAAKiC,SAASN,SAClDyN,SAAUvP,GAAU1b,YAAY6b,KAAKiC,SAASt8B,KAC9C6M,SAAU,SAAC55B,EAAG+7B,GAAJ,OACRkrB,GAAU1b,YAAY6b,KAAKkC,eAA3BnqD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,OAML8wC,GACJlvB,EAAA,cAAC2tB,GAAD,CACEryC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEo6B,gBAAiB,SAACn2D,EAAG+7B,GAAJ,MAAW,CAAEjxB,SAAU,SACxCorD,eAAgB,SAAC1qB,EAAYxrC,EAAG+7B,GAAhB,OACdkrB,GAAU1b,YAAY6b,KAAKgC,QAAQ5d,WAAWwd,aAA9C7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEqsC,cACGxrC,EACA+7B,KAGPq6B,WAAYnP,GAAU1b,YAAY6b,KAAKgC,QAAQN,YAC/CuN,cAAepP,GAAU1b,YAAY6b,KAAKgC,QAAQzX,UAClD2kB,WAAYrP,GAAU1b,YAAY6b,KAAKgC,QAAQP,WAC/C0N,aAActP,GAAU1b,YAAY6b,KAAKgC,QAAQL,SACjDyN,SAAUvP,GAAU1b,YAAY6b,KAAKgC,QAAQr8B,KAC7C4M,QAAS,SAAA6kB,GAAA,IAAG7xB,EAAH6xB,EAAG7xB,MAAOgrC,EAAVnZ,EAAUmZ,YAAV,OACPha,EAAA,cAACouB,GAAD,CACEp/C,MAAOA,EACPkrC,WAAYF,EACZK,aAAY,GAAA5yD,OAAKuyD,EAAc,EAAnB,WACZM,eAAgB,QAChBC,mBAAoB,2BAMtBiT,GACJxtB,EAAA,cAACytB,GAAD,CACEnyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEsuC,aAAcpjB,GAAUvB,OAItBsmB,GACJruB,EAAA,cAAC6tB,GAAD,CACEvyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEpC,QAAS,SAAAgnB,GAAA,IAAGnV,EAAHmV,EAAGnV,WAAY7e,EAAfg0B,EAAeh0B,MAAOgrC,EAAtBhX,EAAsBgX,YAAtB,OACPha,EAAA,cAACouB,GAAD,CACEp/C,MAAOA,EACPkrC,WAAYF,EACZI,QACEpa,EAAA,qBACE9mC,IAAK,WACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/CjsC,OAAQ,GACRD,MAAO,KAGX04D,aAAY,GAAA5yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW7pC,MAChDs2D,eAAc,GAAA7yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW7pC,MAClDu2D,mBAAoB,sBAGxB+R,WAAY,SAAC5+B,EAAUrrC,EAAG+7B,GAAd,OACVkrB,GAAU1b,YAAY6b,KAAKgC,QAAQ5d,WAAWyd,gBAA9C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,YACGrrC,EACA+7B,OAMLkwC,GACJtuB,EAAA,cAAC+tB,GAAD,CACExyC,SAAU,SAACl5B,EAAG+7B,GAAJ,OACRkrB,GAAU1b,YAAY6b,KAAKgC,QAAQ5d,WAAWwd,aAA9C7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAgEa,EAAM+7B,KAExE9C,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClE8tC,aAAc,SAAC7pE,EAAG+7B,GAAJ,OACZkrB,GAAU1b,YAAY6b,KAAKgC,QAAQ5d,WAAWyd,gBAA9C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGPuM,KAAM,SACN3O,QAAS,SAAAynB,GAAA,IAAG5V,EAAH4V,EAAG5V,WAAY7e,EAAfy0B,EAAez0B,MAAOgrC,EAAtBvW,EAAsBuW,YAAtB,OACPha,EAAA,cAACouB,GAAD,CACEp/C,MAAOA,EACPkrC,WAAYF,EACZI,QACEpa,EAAA,qBACE9mC,IAAK,WACLD,IAAKq6B,4BAAkB0R,kDAAwBnX,GAC/CjsC,OAAQ,GACRD,MAAO,KAGX04D,aAAY,GAAA5yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW8E,UAAW3uC,MAC3Ds2D,eAAc,GAAA7yD,OAAKuyD,EAAc,EAAnB,MAAAvyD,OAAyBomC,EAAW7pC,MAClDu2D,mBAAoB,0BAGxB4R,kBAAmB,SAACv+B,EAAahI,GAAd,OACjB0jB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEosC,eACGhI,OAML4oC,GACJxuB,EAAA,cAAC6tB,GAAD,CACEvyC,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEpC,QAAS,SAAA+tB,GAAA,IAAG/6B,EAAH+6B,EAAG/6B,MAAOgrC,EAAVjQ,EAAUiQ,YAAV,OACPha,EAAA,cAACouB,GAAD,CAA0Bp/C,MAAOA,EAAOgrC,YAAaA,KAEvDsS,WAAY,SAAC5+B,EAAUrrC,EAAG+7B,GAAd,OACVkrB,GAAU1b,YAAY6b,KAAKiC,SAAS7d,WAAWyd,gBAA/C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEksC,YACGrrC,EACA+7B,OAMLswC,GACJ1uB,EAAA,cAAC+tB,GAAD,CACExyC,SAAU,SAACl5B,EAAG+7B,GAAJ,OACRkrB,GAAU1b,YAAY6b,KAAKiC,SAAS7d,WAAWwd,aAA/C7pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGP9C,WAAY,SAACj5B,EAAG+7B,GAAJ,OAAUkrB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,GAAsCa,EAAM+7B,KAClEuM,KAAM,UACNuhC,aAAc,SAAC7pE,EAAG+7B,GAAJ,OACZkrB,GAAU1b,YAAY6b,KAAKiC,SAAS7d,WAAWyd,gBAA/C9pD,OAAAyqD,GAAA,EAAAzqD,CAAA,GACKa,EACA+7B,KAGPpC,QAAS,SAAA2uB,GAAA,IAAG37B,EAAH27B,EAAG37B,MAAOgrC,EAAVrP,EAAUqP,YAAV,OACPha,EAAA,cAACouB,GAAD,CAA0Bp/C,MAAOA,EAAOgrC,YAAaA,KAEvDmS,kBAAmB,SAACv+B,EAAahI,GAAd,OACjB0jB,GAAU1b,YAAY6b,KAAK7iD,MAA3BpF,OAAAyqD,GAAA,EAAAzqD,CAAA,CACEosC,eACGhI,OAULgpC,GAAgC,kBAAM5uB,EAAA,cAAAA,EAAA,uBAsB/BmvB,GAAgD,WAC3D,OACEnvB,EAAA,cAACwD,EAAA,cAAD,KACG,SAAC2L,EAADvE,GAAA,IAAMhd,EAANgd,EAAMhd,YAAN,OACCoS,EAAA,cAACuT,EAAD,KACEvT,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUvB,QAApB,gBACA/H,EAAA,cAACkD,EAAA,KAAD,CACE13C,GAAI89C,GAAU1b,YAAY8b,QAAQ,CAChChoC,cAAeksB,EAAYz4B,MAG5By4B,EAAY5pC,MAEfg8C,EAAA,iDAEFA,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO9T,YAAY6b,KAAK7iD,MAC9B+F,OAAO,EACPnK,SAAU8qE,KAIZttB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAO9T,YAAY6b,KAAKgC,QAAQT,YAC3ChL,EAAA,cAAC8uB,GAAD,CACEzD,eAAgB3pB,GAAO9T,YAAY6b,KAAKgC,QAAQT,WAChDsgB,mBAAoB4D,GACpB3D,eAAgB,CACd7B,iBACEhoB,GAAO9T,YAAY6b,KAAKgC,QAAQ5d,WAAWwd,aAC7Cse,qBAAsB0E,GACtBzE,oBACEloB,GAAO9T,YAAY6b,KAAKgC,QAAQ5d,WAAWyd,gBAC7Cue,wBAAyByE,GACzBxE,iBACEpoB,GAAO9T,YAAY6b,KAAKgC,QAAQ5d,WAAW0d,aAC7Cwe,qBAAsB6E,IAExB3jB,YAAa,CACXgf,WACEvoB,GAAO9T,YAAY6b,KAAKgC,QAAQR,YAAYnD,OAC9CoiB,eAAgBlqB,EAAA,cAAC+uB,GAAD,MAChB5E,WACEzoB,GAAO9T,YAAY6b,KAAKgC,QAAQR,YAAYtD,OAC9CyiB,eAAgBpqB,EAAA,cAACgvB,GAAD,MAChB3E,SAAU3oB,GAAO9T,YAAY6b,KAAKgC,QAAQR,YAAYxB,KACtD6gB,aAActqB,EAAA,cAACivB,GAAD,OAEhB7jB,SAAU,CACRof,aAAc9oB,GAAO9T,YAAY6b,KAAKgC,QAAQL,SAC9Cqf,iBAAkBmE,IAEpB1jB,WAAY,CACV4f,WAAYppB,GAAO9T,YAAY6b,KAAKgC,QAAQP,WAC5C6f,eAAgB6D,IAElBzjB,YAAa,CACXwf,WAAYjpB,GAAO9T,YAAY6b,KAAKgC,QAAQN,YAC5Cyf,eAAgBgE,IAElBx/C,KAAM,CACJ67C,cAAevpB,GAAO9T,YAAY6b,KAAKgC,QAAQr8B,KAC/C87C,kBAAmB0D,IAErB56B,UAAW,CACTi3B,cAAevpB,GAAO9T,YAAY6b,KAAKgC,QAAQr8B,KAC/C87C,kBAAmB0D,OAMzB5uB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAO9T,YAAY6b,KAAKiC,SAASV,YAC5ChL,EAAA,cAAC8uB,GAAD,CACEvD,eAAgB,CACd7B,iBACEhoB,GAAO9T,YAAY6b,KAAKiC,SAAS7d,WAAWwd,aAC9Cse,qBAAsB6E,GACtB5E,oBACEloB,GAAO9T,YAAY6b,KAAKiC,SAAS7d,WAAWyd,gBAC9Cue,wBAAyB6E,GACzB5E,iBACEpoB,GAAO9T,YAAY6b,KAAKiC,SAAS7d,WAAW0d,aAC9Cwe,qBAAsB6E,IAExB3jB,YAAa,CACXgf,WACEvoB,GAAO9T,YAAY6b,KAAKiC,SAAST,YAAYnD,OAC/CoiB,eAAgBlqB,EAAA,cAAC+uB,GAAD,MAChB5E,WACEzoB,GAAO9T,YAAY6b,KAAKiC,SAAST,YAAYtD,OAC/CyiB,eAAgBpqB,EAAA,cAACgvB,GAAD,MAChB3E,SAAU3oB,GAAO9T,YAAY6b,KAAKiC,SAAST,YAAYxB,KACvD6gB,aAActqB,EAAA,cAACivB,GAAD,OAEhB7jB,SAAU,CACRof,aAAc9oB,GAAO9T,YAAY6b,KAAKiC,SAASN,SAC/Cqf,iBAAkBmE,IAEpB1jB,WAAY,CACV4f,WAAYppB,GAAO9T,YAAY6b,KAAKiC,SAASR,WAC7C6f,eAAgB6D,IAElBzjB,YAAa,CACXwf,WAAYjpB,GAAO9T,YAAY6b,KAAKiC,SAASP,YAC7Cyf,eAAgBgE,IAElBx/C,KAAM,CACJ67C,cAAevpB,GAAO9T,YAAY6b,KAAKiC,SAASt8B,KAChD87C,kBAAmB0D,IAErB56B,UAAW,CACTi3B,cAAevpB,GAAO9T,YAAY6b,KAAKiC,SAAS1X,UAChDk3B,kBAAmB0D,OAKzB5uB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO9T,YAAY6b,KAAKkC,eAC9Bh/C,OAAO,EACPnK,SAAUgrE,UC9TxB,SAAS4B,GAAchgD,GACrB,IAAIgC,EAAW,MAEf,GAAIhC,EAAM,KACAprB,EAAiBorB,EAAjBprB,KAAMmc,EAAWiP,EAAXjP,OACdiR,EAAWptB,IAASmc,GAAUA,EAAOnc,KAAOmc,EAAOnc,KAAOotB,GAG5D,OAAOA,EAGF,IAAMi+C,GAAb,SAAAhuB,GAAA,SAAAguB,IAAA,OAAA7tE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAqwE,GAAA7tE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA6tE,GAAAtwB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA6tE,EAAAhuB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA6tE,EAAA,EAAAxoE,IAAA,SAAAyH,MAAA,WAGkB,IAAAs6B,EAAA5pC,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,eAAD,CAAgBrhC,cAAeknB,EAAKjqC,MAAM+iB,eACvC,SAAAm/B,GAKK,IAJQyuB,EAIRzuB,EAJJ5R,WACasgC,EAGT1uB,EAHJ7R,YACAE,EAEI2R,EAFJ3R,gBACAC,EACI0R,EADJ1R,iBAEMF,EAAaqgC,EACbE,EAA0BD,GAC9B,GAEIE,EAAO,eAAAzsB,EAAAxhD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,IAAA,OAAAF,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACR7V,IADQ,cAAA2V,EAAAE,KAAA,EAER5V,IAFQ,wBAAA0V,EAAAM,SAAAT,MAAH,yBAAA1B,EAAAjE,MAAA//C,KAAAggD,YAAA,GAKb/P,EAAWyI,QAAQ,SAACqU,GACdA,EAAS/8B,OAASoR,MAAM+sC,QAAQphB,EAAS/8B,QAC3C+8B,EAAS/8B,MAAM0oB,QAAQ,SAACtoB,GACtBA,EAAKprB,KAAO,MACZorB,EAAKsgD,SACqB,qBAAjBtgD,EAAKugD,SACZvgD,EAAKugD,QAAQlpE,OAAS,EAExB,IAAMmpE,EAAsBJ,EAAuB/e,KACjD,SAAAliB,GAAU,OAAIA,EAAW3gB,WAAam+B,EAAS8jB,MAEjD,GAAKD,EAAL,CATsD,IAAA/P,GAAA,EAAAC,GAAA,EAAAC,OAAAt6D,EAAA,IAatD,QAAAu6D,EAAAC,EAA8B2P,EAAqBE,KAChD5hC,MADHtE,OAAA+zB,cAAAkC,GAAAG,EAAAC,EAAAlb,QAAArb,MAAAm2B,GAAA,EACW,KACHkQ,EADG/P,EAAA1xD,MACgC0gB,MAAOyhC,KAC9C,SAAAuf,GAAE,OAAIA,EAAG76D,KAAOia,EAAKja,KAEvB,GAAI46D,EAAiB,CACnB3gD,EAAKprB,KAAOorE,GAAcW,GAC1B,QApBkD,MAAA3a,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAwBtD,IAAMkQ,EAAgB,CACpB,MADoBxoE,OAAAjG,OAAAqhD,EAAA,EAAArhD,CAEjB4tB,EAAKG,UAFY,CAGpBH,EAAKugD,UACLjrC,OAAO,SAAAnV,GAAQ,QAAMA,IACvBH,EAAKb,OACH0hD,EAAcxpE,OAAS,EAAIwpE,EAAcC,KAAK,MAAQ,QAI9D,IAAMC,GAAgB,IAAIzgD,MAAOE,iBAEjC,OACEowB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,0BAAD,CACEgwB,eAAgBjwB,EAAE,kBAClBnyB,gBAAiBmyB,EAAE,2BAA4B,CAC7CkwB,GAAIF,IAENpiD,qBAAsBoyB,EACpB,sCAEFryB,mBAAoB8a,EAAKjqC,MAAMmvB,mBAC/BG,UAAWwhD,EACXjtE,SAAUysC,EAAWvoC,IACnB,SAACqlD,EAA6BukB,GAC5B,IAAMzhD,EAAO,IAAIa,KACfq8B,EAASskB,IACTE,qBACI9hD,EAAO,IAAIiB,KACfq8B,EAASskB,IACTG,qBAEF,OACExwB,EAAA,cAACI,EAAA,8BAAD,CACEv5C,IAAKypE,EACLzhD,KAAMA,EACNH,WAAYq9B,EAAS0kB,OAAS,EAAI,EAClC9hD,gBAAiBwxB,EAAE,4BACnBvxB,aAAcuxB,EAAE,yBAChBlxB,YAAakxB,EAAE,wBACfpxB,YAAaoxB,EAAE,kBACfnxB,OAAQ+8B,EAAS/8B,OAAS,IAAItoB,IAC5B,SACE0oB,EACAglB,GAFF,OAIE4L,EAAA,cAACI,EAAA,mCAAD,CACEv5C,IAAKutC,EACLjlB,SAAUuhD,2BACRthD,EAAKD,SACL,MAEFnrB,KAAMorB,EAAKprB,MAAQ,GACnBuqB,OAAQa,EAAKb,OACbE,KAAM,IAAIiB,KAAKN,EAAKihD,IAAKzgD,iBACzBxB,OACEgB,EAAKsgD,SACDvvB,EAAE,gBACFA,EAAE,sBAKd1xB,KAAMA,EACNb,QAASm+B,EAAS8jB,mBAlH9CR,EAAA,CAAuC/tE,aCvB1BqvE,GAAb,SAAAtvB,GAAA,SAAAsvB,IAAA,OAAAnvE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA2xE,GAAAnvE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAmvE,GAAA5xB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAmvE,EAAAtvB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAmvE,EAAA,EAAA9pE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACF,EAAWxT,SAAZ,KACG,SAAAuU,GAAA,IAAGiD,EAAHjD,EAAGiD,aAAH,OACC9D,EAAA,cAACwD,EAAA,cAAD,KACG,SAAAR,EAAAS,EAAAsG,GAAqD,IAAlDroC,EAAkDshC,EAAlDthC,cAAmBksB,EAA+B6V,EAA/B7V,YAA+Bmc,EAAdlK,QACtC,OACEG,EAAA,cAAAA,EAAA,cACEA,EAAA,cAAC+C,EAAA,yBAAD,CACErhC,cAAeA,EACf+f,aAAcmM,GAEb,SAAA+c,GAAA,IAAGp2C,EAAHo2C,EAAGp2C,KAAMw2B,EAAT4f,EAAS5f,QAAS7mC,EAAlBymD,EAAkBzmD,MAAlB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAAC+V,GAAD,CACEnoB,YAAar5B,EAAKq5B,aAEjB,SAAAgd,GAOK,IANJ2K,EAMI3K,EANJ2K,WACAT,EAKIlK,EALJkK,WACAO,EAIIzK,EAJJyK,aACA1pC,EAGIi/B,EAHJj/B,aACAopC,EAEInK,EAFJmK,YACAG,EACItK,EADJsK,WAEA,OACElV,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CACEtvD,MAAOy8C,EACL,mCAGJH,EAAA,cAAC4wB,GAAD,CACEr8D,KAAMA,EACNwgD,YAAaA,EACbG,WAAYA,EACZG,aAAcA,EACdE,WAAYA,EACZT,WAAYA,EACZnpC,aAAcA,EACdm4B,aAAcA,IAEhB9D,EAAA,cAAC6wB,GAAD,CACEnvD,cAAenN,EAAKq5B,YAAYz4B,GAChC2Y,mBACEg2B,EAAavvC,EAAKy9B,aAAe,wBAvD7E2+B,EAAA,CAAkCrvE,aCiBrBwvE,GAAb,SAAAzvB,GAIE,SAAAyvB,EAAYnyE,GAAoC,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA8xE,IAC9CloC,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAsvE,GAAAvvB,KAAAviD,KAAML,KACDwH,MAAQ,CACXiuD,wBAAwB,GAE1BxrB,EAAK0rB,aAAe1rB,EAAK0rB,aAAar1D,KAAlBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IACpBA,EAAK2rB,mBAAqB3rB,EAAK2rB,mBAAmBt1D,KAAxBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAC1BA,EAAK4rB,gBAAkB5rB,EAAK4rB,gBAAgBv1D,KAArBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAPuBA,EAJlD,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAsvE,EAAAzvB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAsvE,EAAA,EAAAjqE,IAAA,qBAAAyH,MAAA,WAeItP,KAAKsI,SAAS,CACZ8sD,wBAAwB,MAhB9B,CAAAvtD,IAAA,eAAAyH,MAAA,WAqBI,IAAM6R,EAASnhB,KAAKmH,MAAMmuD,aAI1B,GAHAt1D,KAAKsI,SAAS,CACZ8sD,wBAAwB,IAEJ,oBAAXj0C,EAGT,MAAMyM,MAAM,gDAFZzM,EAAO4+B,MAAM//C,QA1BnB,CAAA6H,IAAA,kBAAAyH,MAAA,SAgCyB+/B,GACrBrvC,KAAKsI,SAAS,CACZgtD,aAAcjmB,EAAQimB,aACtBI,uBAAwBrmB,EAAQqmB,uBAChCC,iBAAkBtmB,EAAQsmB,iBAC1BC,iBAAkBvmB,EAAQumB,iBAC1BC,kBAAmBxmB,EAAQwmB,kBAC3BT,wBAAwB,MAvC9B,CAAAvtD,IAAA,SAAAyH,MAAA,WA2CkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACkB,EAAU5U,SAAX,KACG,SAAAuU,GAAA,IAAG8B,EAAH9B,EAAG8B,iBAAH,OACC3C,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAC,GAA8D,IAA3DnW,EAA2DmW,EAA3DnW,kBAAmBM,EAAwC6V,EAAxC7V,oBAAqBF,EAAmB+V,EAAnB/V,aACpC8jC,EAAsC,CAC1C/jE,MAAOmzC,EAAE,gBACTr2C,QAAS,kBACPixC,EAAKyZ,gBAAgB,CACnBF,aAAY,eAAAU,EAAAxzD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAC,IAAA,OAAAF,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZpC,EACEyE,GAAKjH,EAAE,6CACP,QAHU0E,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMJlY,EACJkO,EAAKp8C,MAAM+iB,cACXq5B,EAAKp8C,MAAM4vC,WAAW3gB,SACtB,GATQ,OAAAi3B,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAYVlC,EACEyE,GAAKjH,EACH,kDACA,CACEj8C,MAAO2gD,EAAAK,GAAIvZ,cAAgBkZ,EAAAK,GAAI7kD,SAAxBwkD,EAAAK,KAGX,WAnBQ,wBAAAL,EAAAM,SAAAT,EAAA,iBAAF,yBAAAsQ,EAAAjW,MAAA//C,KAAAggD,YAAA,GAuBZiW,wBAAyB9xD,0BAAwBglB,OACjDusC,uBAAwBvU,EAAE,gBAC1BwU,iBAAkBzxD,uBAAqBsB,KACvCowD,iBAAkBzU,EAChB,sCACA,CACEn8C,KAAM+2C,EAAKp8C,MAAM4xB,gBACjB3C,QAASmtB,EAAKp8C,MAAM4vC,WAAW3gB,UAGnCinC,kBAAmB1U,EACjB,gDAIF6wB,EAAqC,CACzChkE,MAAOmzC,EAAE,eACTr2C,QAAS,kBACPixC,EAAKyZ,gBAAgB,CACnBF,aAAY,eAAAa,EAAA3zD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAsM,IAAA,OAAAvM,EAAA15B,EAAA85B,KAAA,SAAAoM,GAAA,cAAAA,EAAAlM,KAAAkM,EAAAjM,MAAA,OACZpC,EACEyE,GAAKjH,EACH,+CAEF,QAEF,IACEhT,EACE4N,EAAKp8C,MAAM+iB,cACXq5B,EAAKp8C,MAAM4vC,WAAW3gB,SAExB,MAAOwnC,GACPzS,EACEyE,GAAKjH,EACH,oDACA,CACEj8C,MAAOkxD,EAAIzpB,cAAgBypB,EAAI/0D,SAAW+0D,IAG9C,WApBQ,wBAAApE,EAAA7L,SAAA4L,MAAF,yBAAAoE,EAAApW,MAAA//C,KAAAggD,YAAA,GAwBZiW,wBAAyB9xD,0BAAwBglB,OACjDusC,uBAAwBvU,EAAE,eAC1BwU,iBAAkBzxD,uBAAqBsB,KACvCowD,iBAAkBzU,EAChB,yCACA,CAAEn8C,KAAM+2C,EAAKp8C,MAAM4xB,kBAErBskC,kBAAmB1U,EACjB,mDAKF8wB,EAAmC,CACvCjkE,MAAOmzC,EAAE,6BACTr2C,QAAS,kBACPixC,EAAKyZ,gBAAgB,CACnBF,aAAY,eAAAgB,EAAA9zD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAE,SAAAiN,IAAA,OAAAlN,EAAA15B,EAAA85B,KAAA,SAAAgN,GAAA,cAAAA,EAAA9M,KAAA8M,EAAA7M,MAAA,cACZpC,EACEyE,GAAKjH,EAAE,qCACP,QAHUyR,EAAA9M,KAAA,EAAA8M,EAAA7M,KAAA,EAMJ9X,EACJ8N,EAAKp8C,MAAM+iB,cACXq5B,EAAKp8C,MAAM4vC,WAAW3gB,SARd,OAAAgkC,EAAA7M,KAAA,eAAA6M,EAAA9M,KAAA,EAAA8M,EAAA1M,GAAA0M,EAAA,SAWVjP,EACEyE,GAAKjH,EAAE,yCAA0C,CAC/Cj8C,MAAO0tD,EAAA1M,GAAIvZ,cAAgBimB,EAAA1M,GAAI7kD,SAAxBuxD,EAAA1M,KAET,WAfQ,wBAAA0M,EAAAzM,SAAAuM,EAAA,iBAAF,yBAAA4D,EAAAvW,MAAA//C,KAAAggD,YAAA,GAmBZiW,wBAAyB9xD,0BAAwBglB,OACjDusC,uBAAwBvU,EAAE,uBAC1BwU,iBAAkBzxD,uBAAqBsB,KACvCowD,iBAAkBzU,EAChB,wCACA,CAAEn8C,KAAM+2C,EAAKp8C,MAAM4xB,kBAErBskC,kBAAmB1U,EACjB,2CAKR,OACEH,EAAA,cAAAA,EAAA,cACGjF,EAAK50C,MAAMiuD,wBACVpU,EAAA,cAACI,EAAA,mBAAD,CACEp7C,YAAa7B,0BAAwBglB,OACrC7iB,qBAAsB66C,EAAE,iBACxBr7C,sBACEi2C,EAAK50C,MAAMuuD,uBAEbvvD,wBAAyB41C,EAAK50C,MAAMyuD,iBACpChvD,UAAWm1C,EAAK50C,MAAM0uD,kBACtBtwD,KAAMw2C,EAAK50C,MAAMwuD,iBACjBhvD,WAAYo1C,EAAK50C,MAAMiuD,uBACvB1vD,SAAUq2C,EAAKwZ,mBACf3vD,UAAWm2C,EAAKuZ,eAGnBvZ,EAAKp8C,MAAM6D,SAAS,CACnByuE,qBACAF,wBACAC,oCA9LxBF,EAAA,CAA2CxvE,aCL9B4vE,GAAb,SAAA7vB,GAAA,SAAA6vB,IAAA,OAAA1vE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAkyE,GAAA1vE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA0vE,GAAAnyB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA0vE,EAAA7vB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA0vE,EAAA,EAAArqE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACF,EAAWxT,SAAZ,KACG,SAAAuU,GAAA,IAAGiD,EAAHjD,EAAGiD,aAAH,OACC9D,EAAA,cAACwD,EAAA,cAAD,KACG,SAAAR,EAAAS,GAAA,IAAG/hC,EAAHshC,EAAGthC,cAAmBksB,EAAtB6V,EAAsB7V,YAAtB,OACCoS,EAAA,cAAC+C,EAAA,yBAAD,CACErhC,cAAeA,EACf+f,aAAcmM,GAEb,SAAAmc,GAAA,IAAGx1C,EAAHw1C,EAAGx1C,KAAMw2B,EAATgf,EAAShf,QAAS7mC,EAAlB6lD,EAAkB7lD,MAAlB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAAC+V,GAAD,CACEnoB,YAAar5B,EAAKq5B,aAEjB,SAAA+c,GAOK,IANJ4K,EAMI5K,EANJ4K,WACAT,EAKInK,EALJmK,WACAO,EAII1K,EAJJ0K,aACA1pC,EAGIg/B,EAHJh/B,aACAopC,EAEIpK,EAFJoK,YACAG,EACIvK,EADJuK,WAEA,OACElV,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CACEtvD,MAAOy8C,EAAE,mCAEXH,EAAA,cAAC4wB,GAAD,CACEr8D,KAAMA,EACNwgD,YAAaA,EACbG,WAAYA,EACZG,aAAcA,EACdE,WAAYA,EACZT,WAAYA,EACZnpC,aAAcA,EACdm4B,aAAcA,IAEhB9D,EAAA,cAACmxB,GAAD,CACEvjC,YAAar5B,EAAKq5B,cAEpBoS,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAA6H,GAAuB,IAApBrd,EAAoBqd,EAApBrd,cACIx8B,EAAY,eAAAy9C,EAAAhtD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EACnBvrC,GADmB,OAAAqrC,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIXxX,EACJh5B,EAAKq5B,YAAYz4B,GACjB,CACEgE,gBAPa,cAAA0rC,EAAAuM,OAAA,UAUV,GAVU,cAAAvM,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAuM,OAAA,UAYV,GAZU,wBAAAvM,EAAAM,SAAAT,EAAA,iBAAH,gBAAAsK,GAAA,OAAAR,EAAAzP,MAAA//C,KAAAggD,YAAA,GAelB,OACEgB,EAAA,cAACI,EAAA,6BAAD,CACEjnC,YACE6mC,EAAA,cAACI,EAAA,eAAD,CACE9xC,MACEiG,EAAKq5B,YACFz0B,aACHgnC,EACE,qCAGJ9xC,cAAc,EACduB,YAAY,EACZf,SAAUkC,QAOtBivC,EAAA,cAACI,EAAA,iCAAD,CACE1nC,SAAUo8C,EAAW1pD,KACrBygB,UAAWipC,EAAW9nD,MACtB0f,YACGnY,EAAKq5B,YAAYoB,aAAe,IAC9BvoC,OAAS,EAEd4lB,QACG9X,EAAKq5B,YACHvhB,QAELC,cAAe6zB,EAAE,gBACjBixB,gBAAiBjxB,EACf,+BAEF3zB,cAAeuoC,EAAYjrD,QAC3B2iB,aAAc0zB,EAAE,kBAChB39C,UACE+R,EAAKq5B,YAAYoB,aAAe,IAE/BnM,KAAK,SAAC/X,EAAGqS,GACR,IAAMk0C,GACHvmD,GAAK,IAAI8C,SAAW,EAGvB,QADGuP,GAAK,IAAIvP,SAAW,GACLyjD,IAEnB3qE,IAAI,SAAC6nC,EAAYnnC,GAChB,IAAMuzD,EAAYpsB,EAAWosB,UACzB,IAAIjrC,KACF6e,EAAWosB,WACX/qC,iBACF,GACJ,OACEowB,EAAA,cAACsxB,GAAD,CACEzqE,IAAK0nC,EAAWp5B,GAChBuM,cACEnN,EAAKq5B,YAAYz4B,GAEnBob,gBACEhc,EAAKq5B,YAAY5pC,KAEnBuqC,WAAYA,GAEX,SAAA2iB,GAIK,IAHJ6f,EAGI7f,EAHJ6f,sBACAC,EAEI9f,EAFJ8f,qBACAC,EACI/f,EADJ+f,mBAEM9kE,EAAU,GAwBhB,OAtBEoI,EAAKq5B,YAAYhgB,UACjB2gB,EAAW3gB,SAEXzhB,EAAQ8yC,KACNgyB,GAIF18D,EAAKq5B,YAAYhgB,UACf2gB,EAAW3gB,SAGX,cAFFrZ,EAAKq5B,YACF7gB,aAGH5gB,EAAQ8yC,KACN+xB,GAGF7kE,EAAQ8yC,KACN8xB,GAIF/wB,EAAA,cAACI,EAAA,qCAAD,CACEv5C,IAAK0nC,EAAWp5B,GAChBhJ,QACE6zC,EAAA,cAACI,EAAA,4CAAD,CACEj0C,QAASA,EACTuV,cACEnN,EAAKq5B,YAAYz4B,KAIvB4X,aACEwhB,EAAWxhB,aAEbwkD,sBAAuBpxB,EACrB,qCAEFqxB,gBAAiBrxB,EACf,kBAEFwa,UAAWA,EACX/sC,QAAS2gB,EAAW3gB,kCAtLxEsjD,EAAA,CAAiC5vE,aCNpBmwE,GAAb,SAAApwB,GAAA,SAAAowB,IAAA,OAAAjwE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAyyE,GAAAjwE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAiwE,GAAA1yB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAiwE,EAAApwB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAiwE,EAAA,EAAA5qE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACF,EAAWxT,SAAZ,KACG,SAAAuU,GAAA,IAAGiD,EAAHjD,EAAGiD,aAAH,OACC9D,EAAA,cAACwD,EAAA,cAAD,KACG,SAAAR,EAAAS,GAAwC,IAArC/hC,EAAqCshC,EAArCthC,cAAmBksB,EAAkB6V,EAAlB7V,YACrB,OACEoS,EAAA,cAAC+C,EAAA,yBAAD,CACErhC,cAAeA,EACf+f,aAAcmM,GAEb,SAAAmc,GAAA,IAAGx1C,EAAHw1C,EAAGx1C,KAAMw2B,EAATgf,EAAShf,QAAS7mC,EAAlB6lD,EAAkB7lD,MAAlB,OACC87C,EAAA,cAAC+C,EAAA,uBAAD,CAAwBrhC,cAAeA,GACpC,SAAAipC,GAAA,IAAS0Q,EAAT1Q,EAAGp2C,KAAH,OACCyrC,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAAC+V,GAAD,CACEnoB,YAAar5B,EAAKq5B,aAEjB,SAAAgd,GAOK,IANJ2K,EAMI3K,EANJ2K,WACAT,EAKIlK,EALJkK,WACAO,EAIIzK,EAJJyK,aACA1pC,EAGIi/B,EAHJj/B,aACAopC,EAEInK,EAFJmK,YACAG,EACItK,EADJsK,WAEA,OACElV,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CACEtvD,MAAOy8C,EACL,mCAGJH,EAAA,cAAC4wB,GAAD,CACEr8D,KAAMA,EACNwgD,YAAaA,EACbG,WAAYA,EACZG,aAAcA,EACdE,WAAYA,EACZT,WAAYA,EACZnpC,aAAcA,EACdm4B,aAAcA,IAEhB9D,EAAA,cAACI,EAAA,yBAAD,CACEhwB,WAAY+vB,EACV,+BAEFjwB,kBAAmBiwB,EACjB,sCAEFpwB,gBAAiBowB,EACf,oCAEFhwB,UAAWgwB,EACT,8BAEFnwB,kBAAmBmwB,EACjB,sCAEF3wB,OAAQ6rC,EAAY7rC,OACpBS,cAEE,qBADOorC,EAAYprC,cAEf,IAAIP,KACF2rC,EAAYprC,eACZL,iBACFuwB,EAAE,aAER5wB,SAAU8rC,EAAY9rC,SACtBI,MAAOuT,SACLm4B,EAAY1rC,MACZ,IAEFU,mBAAoBisC,qCAClBp5B,SAASm4B,EAAY1rC,MAAQ,2BApF3E8hD,EAAA,CAAiCnwE,aCbpBowE,GAAb,SAAArwB,GACE,SAAAqwB,EAAY/yE,GAAW,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA0yE,IACrB9oC,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAkwE,GAAAnwB,KAAAviD,KAAML,KACDwH,MAAQ,CACX2B,iBAAiB,GAHE8gC,EADzB,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAkwE,EAAArwB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAkwE,EAAA,EAAA7qE,IAAA,SAAAyH,MAAA,WAOkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAlC,GAA2B,IAAxB7T,EAAwB6T,EAAxB7T,kBACI2kC,EAAoB,eAAA3uB,EAAAxhD,OAAA+iD,EAAA,EAAA/iD,CAAAgjD,EAAA15B,EAAA25B,KAAG,SAAAC,EAAOt+C,GAAP,IAAAwrE,EAAAC,EAAAhS,EAAAC,EAAAC,EAAAE,EAAAD,EAAAr5D,EAAA,OAAA69C,EAAA15B,EAAA85B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACvB6sB,EAAwB,GACxBC,EAAuB,GAC3B92B,EAAKzzC,SAAS,CACZQ,iBAAiB,EACjBgqE,qBAAsBF,EACtBG,sBAAuBF,IANEhS,GAAA,EAAAC,GAAA,EAAAC,OAAAt6D,EAAAo/C,EAAAC,KAAA,EAAAmb,EAQR75D,EARQwjC,OAAA+zB,YAAA,UAAAkC,GAAAG,EAAAC,EAAAlb,QAAArb,KAAA,CAAAmb,EAAAE,KAAA,gBAQhBp+C,EARgBq5D,EAAA1xD,MAAAu2C,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAUjB/X,EAAkBrmC,GAVD,QAWvBkrE,EAAaA,EAAWpqE,OAAO,CAC7B2/C,GAAKjH,EAAE,0CAA2C,CAChD3R,SAAU7nC,EAAK3C,SAbI6gD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,UAiBvB+sB,EAAcA,EAAYnqE,OAAO,CAC/B2/C,GAAKjH,EAAE,yCAA0C,CAC/C3R,SAAU7nC,EAAK3C,SAnBI,QAuBzB+2C,EAAKzzC,SAAS,CACZwqE,qBAAsBF,EACtBG,sBAAuBF,IAzBA,QAAAhS,GAAA,EAAAhb,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA4jB,GAAA5jB,EAAA,SAAAib,GAAA,EAAAC,EAAAlb,EAAA4jB,GAAA,QAAA5jB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA+a,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAA3Z,EAAAC,KAAA,IAAAgb,EAAA,CAAAjb,EAAAE,KAAA,eAAAgb,EAAA,eAAAlb,EAAAgH,OAAA,mBAAAhH,EAAAgH,OAAA,YA4B3B9Q,EAAKzzC,SAAS,CACZQ,iBAAiB,IA7BQ,yBAAA+8C,EAAAM,SAAAT,EAAA,4CAAH,gBAAAsK,GAAA,OAAAhM,EAAAjE,MAAA//C,KAAAggD,YAAA,GAqC1B,OACEgB,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAOy8C,EAAE,mBACpBH,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUvB,QACjB5H,EAAE,wBAELH,EAAA,0BAAOG,EAAE,oCAEXH,EAAA,cAACI,EAAA,aAAD,CACE34B,cAAe04B,EAAE,kCACjBz4B,oBAAqBy4B,EACnB,6CAEFr5C,0BAA2Bq5C,EACzB,4CAEFr3C,sBAAuBq3C,EACrB,wCAEFv3C,iBAAkBu3C,EAChB,8CAEF7gC,gBAAiB6gC,EAAE,kCACnBj5C,0BAA2B6zC,EAAK50C,MAAM4rE,sBACtC5qE,yBAA0B4zC,EAAK50C,MAAM2rE,qBACrChyD,iBA/BuB,SAAC2wD,GAC5B,OAAOrpB,GAAKjH,EAAE,8CAA+C,CAC3D3R,SAAUiiC,KA8BRlpE,iBAAkBoqE,aA7EtCD,EAAA,CAAgCpwE,aCoDhC,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGV6xB,GAAqB,CACzBrgE,WAAY,SACZF,aAAc,GACd0D,GAAI,aACJ1G,YAAa24C,GAAKjH,EAAE,iCACpBz8C,MAAO0jD,GAAKjH,EAAE,sBAgBhB,IAAM8H,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV8xB,GAAe,CACnB98D,GAAI,SACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,kBAGV9tC,GAAyB,CAAC41C,GAAYgqB,IAE/BC,GAAb,SAAA7wB,GAAA,SAAA6wB,IAAA,OAAA1wE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAkzE,GAAA1wE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA0wE,GAAAnzB,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA0wE,EAAA7wB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA0wE,EAAA,EAAArrE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAC+C,EAAA,0BAAD,KACG,SAAAlC,GAAA,IAASqa,EAATra,EAAGtsC,KAAwBw2B,EAA3B8V,EAA2B9V,QAAS7mC,EAApC28C,EAAoC38C,MAApC,OACC87C,EAAA,cAAC+C,EAAA,gBAAD,KACG,SAAAC,GAAA,IAASsY,EAATtY,EAAGzuC,KAAH,OACCyrC,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAzCEllC,EAyCI6uD,EA1G5B,SACEhgC,EACAp/B,EACAT,EACAM,GAEA,IAAIu/D,EAAgChgC,EAyCpC,OAxCAp/B,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClCk5B,EAAgCA,EAA8BztC,OAC5D,SAACoxB,GACC,MAAqB,SAAjBpxB,EAAOhhC,MACFoyD,EAAGloB,YAAY5pC,KAAKi1C,cAAc2P,SAASD,GAE/B,eAAjBjkB,EAAOhhC,OACeoyD,EAAGloB,YAAaM,MAAOxL,OAC7C,SAAC9Y,EAAKkqB,GAAN,SAAArsC,OAAAjG,OAAAqhD,EAAA,EAAArhD,CACKooB,GADLpoB,OAAAqhD,EAAA,EAAArhD,CAEKsyC,EACA9kB,MAAO0V,OAAO,SAAAtG,GAAC,OAAIA,EAAEyP,aACrBnnC,IAAI,SAAA03B,GAAC,OAAIA,EAAEyP,WAAY7pC,KAAKi1C,mBAEjC,IAEqBvW,OACrB,SAAC0vC,EAAO1vB,GAAR,OAAc0vB,GAAS1vB,EAAEkG,SAASD,KAClC,OAQVwpB,EAAgCA,EAA8BtvC,KAC5D,SAACitB,EAAKC,GACJ,IAAMsiB,EAAOz/D,EAAkBk9C,EAAMC,EAC/BxlD,EAAQqI,EAAkBm9C,EAAMD,EACtC,MAAwB,SAApBx9C,EACK+/D,EAAKzkC,YAAY5pC,KAAK+kD,cAAcx+C,EAAMqjC,YAAY5pC,MAExDquE,EAAKzkC,YAAa7gB,aAAcg8B,cACrCx+C,EAAMqjC,YAAa7gB,gBAgEiCulD,CACpCpX,EAAiBzxC,MACjB++B,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAOy8C,EAAE,yBACpBH,EAAA,cAACI,EAAA,qBAAD5+C,OAAAC,OAAA,CACEizB,wBAAyB40B,GAAUY,SACnC11B,iBAAkB80B,GAAUsC,WAAW/B,OACvC9mC,0BAA2BumC,GAAU5B,OAAO/3B,MAAMq7B,aAClD/4C,aAvDJqR,EAwDMg4C,EAAgBvoB,sBAvDrC,CACLiV,GADKxmD,OAAAyqD,GAAA,EAAAzqD,CAAA,GAGAwwE,GAHA,CAIHvgE,aAAc6R,EAAY5c,IAAI,SAAAsF,GAAC,MAAK,CAClCmJ,GAAInJ,EAAEmJ,GACNzR,MAAOsI,EAAEhI,YAmDWqO,UAAWA,GACXmU,aAAc2rD,EAA8B1rE,QACxC+hD,EATN,CAUE5iD,UAAWu6C,EAAE,uBACbrqC,gBAAiBqqC,EAAE,8BACnBt/B,WAAYs/B,EAAE,iBACd1rB,eAAgB0rB,EAAE,2BAClB8P,yBAA0B9P,EACxB,gCAEFntC,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAOymE,EAA8B1rE,WAGvCu5C,EAAA,cAACyc,GAAD,CACEv4D,MAAOA,EACPqI,SAAUw+B,EACVoH,aAAcggC,kBAhD5CD,EAAA,CAAsC5wE,uBChGzBixE,GAAb,SAAAlxB,GAME,SAAAkxB,EAAY5zE,GAAW,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAuzE,IACrB3pC,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA+wE,GAAAhxB,KAAAviD,KAAML,KAHDwH,MAAgC,GAIrCyiC,EAAK4pC,QAAU5pC,EAAK4pC,QAAQvzE,KAAbuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IACfA,EAAKroC,WAAaqoC,EAAKroC,WAAWtB,KAAhBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IAHGA,EANzB,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAA+wE,EAAAlxB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA+wE,EAAA,EAAA1rE,IAAA,UAAAyH,MAAA,WAaItP,KAAKsI,SAAS,CACZ9G,cAAUiF,MAdhB,CAAAoB,IAAA,aAAAyH,MAAA,SAkBoB9N,GAChBxB,KAAKsI,SAAS,CACZ9G,eApBN,CAAAqG,IAAA,SAAAyH,MAAA,WAyBI,OACE0xC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,UAAD,KACEJ,EAAA,qBAAK96C,UAAU,kBACb86C,EAAA,qBAAK96C,UAAU,aACb86C,EAAA,qBAAK96C,UAAU,sBACb86C,EAAA,qBAAK96C,UAAU,cACb86C,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,kCACAA,EAAA,qCACAA,EAAA,oCAGJA,EAAA,qBAAK96C,UAAU,2BACb86C,EAAA,qBAAK96C,UAAU,aAAaxD,MAAO,CAAEouB,UAAW,QAC9CkwB,EAAA,cAACI,EAAA,WAAD,eACAJ,EAAA,cAACI,EAAA,WAAD,CACEv4C,UAAW7I,KAAKmH,MAAM3F,SACtBsJ,QAAS9K,KAAKwzE,SAFhB,SAMAxyB,EAAA,cAACI,EAAA,WAAD,CAAY/0C,GAAI,UAAWxD,UAAW7I,KAAKmH,MAAM3F,UAAjD,cASZw/C,EAAA,qBACEt+C,MAAO,CACL+wE,QAAS,OACTC,SAAU,SACV9wE,OAAQ,sBAGVo+C,EAAA,cAAC2yB,GAAA,kBAAD,CACElyE,WAAY,uBACZK,UAAW,aACXH,iBAAkB,qCAClBC,kBAAmB5C,gBAAaysC,KAChC5pC,oBAAqB5C,kBAAe20E,OACpClyE,eACE,sOAEFS,WAAY,qBACZH,kBAAmB,4CACnBC,mBAAoBjD,gBAAaysC,KACjCvpC,qBAAsBjD,kBAAe20E,OACrC7xE,gBACE,uaAEFP,SAAUxB,KAAKmH,MAAM3F,SACrBD,WAAYvB,KAAKuB,mBAhF7BgyE,EAAA,CAAsCjxE,aC+BtC,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAAc,CAAC+1C,IAEfC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IAEhC,SAAS4qB,GAA0B7uE,GACjC,OAAOojD,GAAKjH,EAAE,gCAAiC,CAAE2yB,IAAK9uE,IAOjD,IAAM+uE,GAAb,SAAA1xB,GACE,SAAA0xB,EAAYp0E,GAAY,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAA+zE,IACtBnqC,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAuxE,GAAAxxB,KAAAviD,KAAML,KACDwH,MAAQ,CACX4hB,oBAAqBzM,yBAAuB8J,UAHxBwjB,EAD1B,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAAuxE,EAAA1xB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAuxE,EAAA,EAAAlsE,IAAA,SAAAyH,MAAA,WAOkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,eAAgB,WAC/B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,iBAAD,KACG,SAAAlC,GAAA,IAAGtsC,EAAHssC,EAAGtsC,KAAMw2B,EAAT8V,EAAS9V,QAAS7mC,EAAlB28C,EAAkB38C,MAAO4mC,EAAzB+V,EAAyB/V,KAAzB,OACCkV,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMwqB,EAjExB,SACEnkC,EACA97B,EACAT,EACAM,GAEA,IAAIqzB,EAAS4I,EAUb,OATA97B,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClChT,EAASA,EAAOvB,OAAO,SAAA1gC,GAAI,OAAIA,EAAKi1C,cAAc2P,SAASD,QAE7D1iB,EAASA,EAAOpD,KAAK,SAAC/X,EAAGqS,GACvB,IACM5yB,EAAQqI,EAAkBuqB,EAAIrS,EACpC,OAFalY,EAAkBkY,EAAIqS,GAEvB4rB,cAAcx+C,MAEd7D,IAAI,SAAA1C,GAAI,MAAK,CACzBsiB,aAAc,GACdtiB,UA+CoDivE,CACpC1+D,EACAi0C,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAEJsgE,EAAqB,SAAClvE,GACrBA,GAAiB,KAATA,GAIsB,IAAxBuQ,EAAK82B,QAAQrnC,GACtB+2C,EAAKzzC,SAAS,CACZygB,oBAAqBzM,yBAAuBoK,YAG9Cq1B,EAAKzzC,SAAS,CACZygB,oBAAqBzM,yBAAuB8J,WAT9C21B,EAAKzzC,SAAS,CACZygB,oBAAqBzM,yBAAuBkK,UAYlD,OACEw6B,EAAA,cAAC+C,EAAA,uBAAD,KACG,SAAAC,GAAA,IACCpS,EADDoS,EACCpS,kBACAC,EAFDmS,EAECnS,kBACAC,EAHDkS,EAGClS,kBAHD,OAKCkP,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CAAWtvD,MAAOy8C,EAAE,6BACpBH,EAAA,cAACI,EAAA,WAAD,KACEJ,EAAA,cAACkD,EAAA,KAAD,CAAM13C,GAAI89C,GAAUvB,QACjB5H,EAAE,wBAELH,EAAA,0BAAOG,EAAE,6BAEXH,EAAA,cAACI,EAAA,iBAAD5+C,OAAAC,OAAA,CACE4lB,WAAY,SAACrjB,EAAcgtC,GAAf,OACVF,EAAkB9sC,EAAMgtC,GAASmiC,QAAQroC,IAE3CvjB,UAAW,SAACvjB,GAAD,OACT4sC,EAAkB5sC,GAAMmvE,QAAQroC,IAElCtjB,aAAc,SAACxjB,GAAD,OACZ6sC,EAAkB7sC,GAAMmvE,QAAQroC,IAElC9iB,eAAgBkrD,EAChBjhE,YAAaA,GACbI,UAAWA,IACPm2C,EAbN,CAcEhiC,aAAcwsD,EAA8BvsE,OAC5CuM,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAOsnE,EAA8BvsE,SAEvCuf,qBAAsBm6B,EAAE,iBACxB14B,cAAe04B,EAAE,2BACjB76C,qBAAsB66C,EAAE,iBACxBr4B,mBAAoBq4B,EAAE,eACtB93B,4BAA6B83B,EAAE,cAC/B/3B,4BAA6B+3B,EAAE,aAC/B73B,8BACEuqD,GAEFtqD,4BAA6B43B,EAC3B,wBAEF33B,oCAAqC23B,EACnC,uCAEFx4B,sBAAuBw4B,EACrB,kCAEFv4B,4BAA6Bu4B,EAC3B,wCAEFl4B,uBAAwBk4B,EACtB,mCAEFj4B,6BAA8Bi4B,EAC5B,yCAEFt4B,kBAAmBs4B,EAAE,wBACrBz4B,oBAAqBy4B,EACnB,sCAEFp4B,oBAAqBgzB,EAAK50C,MAAM4hB,oBAChCtC,gBAAiB06B,EACf,oCAEFx6B,mBAAoBw6B,EAClB,qCAGD,SAAAsD,GAAA,IACC58B,EADD48B,EACC58B,cACAE,EAFD08B,EAEC18B,eACAE,EAHDw8B,EAGCx8B,iBAHD,OAKC+4B,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eACEya,EAAA,cAACI,EAAA,SAAD,CAAU59C,SAAUw9C,EAAA,cAACI,EAAA,iBAAD,QAEtB9a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAAAA,EAAA,cAEI,IADDgzB,EAA8BvsE,QAE7Bu5C,EAAA,cAACI,EAAA,SAAD,CACE59C,SAAUwwE,EAA8BtsE,IACtC,SAAC0sE,EAAUxsE,GAAX,OACEo5C,EAAA,cAACI,EAAA,aAAD,CACEv5C,IAAKD,EACLwf,cAAeW,EACfV,gBAAiBY,EACjBosD,mBAAoBlzB,EAClB,eAEFplB,qBAAsBolB,EACpB,iBAEFn8C,KAAMovE,EAASpvE,KACfsiB,aACE8sD,EAAS9sD,mBAQnB,IADD0sD,EAA8BvsE,QAE7Bu5C,EAAA,cAACI,EAAA,mBAAD,CACEr6B,SAAUc,EACVjhB,UAAWu6C,EACT,wCAEFn6B,qBAAsBm6B,EACpB,iBAEF71B,SAAU61B,EACR,gEAjK1C4yB,EAAA,CAAoCzxE,aCpCvBgyE,GAAb,SAAAjyB,GAAA,SAAAiyB,IAAA,OAAA9xE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAs0E,GAAA9xE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA8xE,GAAAv0B,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAA8xE,EAAAjyB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA8xE,EAAA,EAAAzsE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAOkK,WAAW/B,KACxBl9C,OAAO,EACP9C,UAAWkpE,KAEb/yB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOwI,OAAQv9C,OAAO,EAAM9C,UAAW6nE,KACpD1xB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOgG,OAAOmC,KAAMhgD,UAAWglE,KAC5C7uB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO9T,YAAY6b,KAAKI,KAC9BhgD,UAAWslE,KAEbnvB,EAAA,cAAC2D,EAAA,MAAD,CAAOz2C,KAAMw0C,GAAOqG,KAAMp7C,OAAO,EAAM9C,UAAWqoE,KAClDlyB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAM,yBACNP,OAAO,EACP9C,UAAW0oE,KAEbvyB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO9T,YAAY8b,QACzB/8C,OAAO,EACP9C,UAAWqnE,KAEblxB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO9T,YAAYme,SACzBp/C,OAAO,EACP9C,UAAW8mE,KAEb3wB,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO9T,YAAYuc,QACzBx9C,OAAO,EACP9C,UAAW4nE,UAlCrB6B,EAAA,CAAwChyE,aCexC,IAAM0mD,GAAe,CACnBr2C,WAAY,OACZwD,GAAI,OACJ1G,YAAa24C,GAAKjH,EAAE,kCACpBz8C,MAAO0jD,GAAKjH,EAAE,gBAGVluC,GAAc,CAAC+1C,IAEfC,GAAa,CACjB9yC,GAAI,OACJzC,WAAW,EACXhP,MAAO0jD,GAAKjH,EAAE,gBAGV9tC,GAAyB,CAAC41C,IASnBsrB,GAAb,SAAAlyB,GACE,SAAAkyB,EAAY50E,GAAW,IAAAiqC,EAAA,OAAApnC,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAu0E,IACrB3qC,EAAApnC,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAA+xE,GAAAhyB,KAAAviD,KAAML,KACDwH,MAAQ,CACXygB,kBAAkB,GAEpBgiB,EAAK1hB,kBAAoB0hB,EAAK1hB,kBAAkBjoB,KAAvBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IACzBA,EAAKxhB,oBAAsBwhB,EAAKxhB,oBAAoBnoB,KAAzBuC,OAAAstD,GAAA,EAAAttD,CAAAonC,IANNA,EADzB,OAAApnC,OAAAm/C,EAAA,EAAAn/C,CAAA+xE,EAAAlyB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAA+xE,EAAA,EAAA1sE,IAAA,oBAAAyH,MAAA,WAUItP,KAAKsI,SAAS,CAAEsf,kBAAkB,MAVtC,CAAA/f,IAAA,sBAAAyH,MAAA,SAY6BtK,EAAcmR,GACvCnW,KAAKsI,SAAS,CACZksE,cAAer+D,EACfmS,gBAAiBtjB,EACjB4iB,kBAAkB,MAhBxB,CAAA/f,IAAA,sBAAAyH,MAAA,SAoBIsnC,EACA9K,GAEA,IAAM31B,EAAKnW,KAAKmH,MAAMqtE,cACtBx0E,KAAKkoB,oBACL0uB,EAAezgC,GAAKzE,KAAKo6B,KAzB7B,CAAAjkC,IAAA,aAAAyH,MAAA,SA2BoB6G,EAAY2b,GAC5B9xB,KAAKsI,SAAS,CAAEksE,cAAer+D,IAC/B2b,MA7BJ,CAAAjqB,IAAA,SAAAyH,MAAA,WA+BkB,IAAAysC,EAAA/7C,KACd,OACEghD,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,WAAY,WAC3B,SAAAC,GAAC,OACAH,EAAA,cAAC+C,EAAA,WAAWzW,SAAZ,KACG,SAAAuU,GAAA,IAAG3Y,EAAH2Y,EAAG3Y,OAAH,OACC8X,EAAA,cAAC+C,EAAA,oBAAD,KACG,SAAAC,GAAA,IAAGrN,EAAHqN,EAAGrN,eAAgBC,EAAnBoN,EAAmBpN,eAAnB,OACCoK,EAAA,cAAC+C,EAAA,cAAD,CAAepT,gBAAgB,GAC5B,SAAA8T,GAAA,IAAGlvC,EAAHkvC,EAAGlvC,KAAMw2B,EAAT0Y,EAAS1Y,QAAS7mC,EAAlBu/C,EAAkBv/C,MAAO4mC,EAAzB2Y,EAAyB3Y,KAAzB,OACCkV,EAAA,cAACwD,EAAA,2BAAD,CACE3e,kBAAmBmjB,GACnBljB,gBAAiBmjB,IAEhB,SAAAO,GACC,IAAMirB,EA3FhC,SACEhlB,EACA17C,EACAT,EACAM,GAEA,IAAIqzB,EAASwoB,EAYb,OAXA17C,EAAc2kC,QAAQ,SAAChT,GACrB,IAAMikB,EAAejkB,EAAOp2B,MAAM2qC,cAClChT,EAASA,EAAOvB,OAAO,SAAAgvC,GAAQ,OAC7BA,EAAS1vE,KAAKi1C,cAAc2P,SAASD,OAGzC1iB,EAASA,EAAOpD,KAAK,SAAC/X,EAAGqS,GACvB,IACM5yB,EAAQqI,EAAkBuqB,EAAIrS,EACpC,OAFalY,EAAkBkY,EAAIqS,GAEvBn5B,KAAK+kD,cAAcx+C,EAAMvG,QA2EoB2vE,CACjCp/D,EAAKkV,MACL++B,EAAQz1C,cACRy1C,EAAQl2C,gBACRk2C,EAAQ51C,iBAGV,OACEotC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACgT,EAAD,CACEtvD,MAAOy8C,EAAE,yCAEXH,EAAA,cAACI,EAAA,eAAD,CACE34B,cAAe04B,EACb,uCAEFrqC,gBAAiBqqC,EACf,qDACA,CACEyzB,QAASxsB,GAAKjH,EACZ,+BAIN9hB,wBAAyB8hB,EACvB,qCAEF7hB,YAAW,GAAA72B,OAAKygC,EAAL,2BAEZ6S,EAAK50C,MAAMygB,kBACVo5B,EAAA,cAACI,EAAA,mBAAD,CACEp7C,YAAa7B,0BAAwBuU,OACrCnT,KAAMrB,uBAAqBwU,OAC3BpS,qBAAsB66C,EAAE,iBACxBr7C,sBAAuBq7C,EAAE,iBACzBh7C,wBAAyBg7C,EACvB,qCACA,CACEn8C,KAAM+2C,EAAK50C,MAAMmhB,kBAGrB1hB,UAAWu6C,EAAE,gCACbx6C,WAAYo1C,EAAK50C,MAAMygB,iBACvBliB,SAAUq2C,EAAK7zB,kBACftiB,UAAW,kBACTm2C,EAAK3zB,oBACHwuB,EACA9K,MAKRkV,EAAA,cAACI,EAAA,qBAAD5+C,OAAAC,OAAA,CACEwQ,YAAaA,GACbI,UAAWA,IACPm2C,EAHN,CAIEhiC,aAAcitD,EAA2BhtE,OACzCuM,iBAAkBmtC,EAAE,sBAAuB,CACzCz0C,MAAO+nE,EAA2BhtE,WAGpCu5C,EAAA,cAACwD,EAAA,WAAD,CACEt/C,MAAOA,EACPqI,SAAUw+B,EACVxF,eAAgBya,EAAA,iCAChB1a,cAAe0a,EAAA,cAACkJ,EAAD,OAEd,kBACClJ,EAAA,cAACI,EAAA,aAAD,KACGqzB,EAA2B/sE,IAC1B,SAACgtE,EAAU9sE,GACT,IAAMs0B,EAEJ,qBADOw4C,EAAS/lC,qBAEZkmC,EACJH,EAAS/lC,sBAAwB,GAC7B9mC,EAAM4jC,KAAKypB,UACf2f,GAEF,OACE7zB,EAAA,cAACI,EAAA,iBAAD,CACEv5C,IAAKD,EACLs0B,WAAYA,EACZ9P,SACE2vB,EAAK50C,MAAMqtE,gBACXE,EAASv+D,GAEX5Q,KAAMmvE,EAASnvE,KACf42B,sBAAuBglB,EACrB,kCAEFhrC,GAAIu+D,EAASv+D,GACbnR,KAAM0vE,EAAS1vE,MAEfg8C,EAAA,cAAC4Q,GAAA,SAAD,CACE/pD,IAAKD,EAAQ,IAAMC,EACnBy7B,WAAYuuB,2BACV6iB,EAAS1tC,YAEX7D,qBAAsBge,EACpB,+BAEF1e,aAAcoyC,EACd3uD,OAAQ,SACNyoB,EACAxhC,GAEAwpC,EAAen0C,OAAAyqD,GAAA,EAAAzqD,CAAA,GACVkyE,EADS,CAEZ/lC,0BAECj9B,KAAK,WACJqqC,EAAKzzC,SAAS,CACZwsE,cACEJ,EAASv+D,OAGdg+D,QAAQ,WACPhnE,EAAQgmD,eACN,GAEFrnB,QAIL,SAAAif,GAAA,IACCtmB,EADDsmB,EACCtmB,MACArB,EAFD2nB,EAEC3nB,OACAvoB,EAHDkwC,EAGClwC,QACAiX,EAJDi5B,EAICj5B,WAJD,OAMCkvB,EAAA,cAACI,EAAA,qBAAD,CACE52B,aACGia,IAAU5pB,EAEbihB,eAAgBI,EAChBN,YACE84C,EAASv+D,KACT4lC,EAAK50C,MAAM2tE,cAEb5uD,OAAQ,WACN61B,EAAK5zB,WACHusD,EAASv+D,GACT2b,IAGJ1d,SAAU,WACR2nC,EAAK50B,oBACHutD,EAAS1vE,KACT0vE,EAASv+D,KAGb0lB,eAAgBslB,EACd,mCAEF4zB,gBAAiB5zB,EACf,0CACA,CACEn8C,KAAM0vE,EAAS1vE,OAGnB+2B,qBAAsBolB,EACpB,iBAEFr4B,mBAAoBq4B,EAClB,gBAGFH,EAAA,0BAAO5d,4BAtN3DmxC,EAAA,CAAmCjyE,aClEtB0yE,GAAb,SAAA3yB,GAAA,SAAA2yB,IAAA,OAAAxyE,OAAAg/C,EAAA,EAAAh/C,CAAAxC,KAAAg1E,GAAAxyE,OAAAi/C,EAAA,EAAAj/C,CAAAxC,KAAAwC,OAAAk/C,EAAA,EAAAl/C,CAAAwyE,GAAAj1B,MAAA//C,KAAAggD,YAAA,OAAAx9C,OAAAm/C,EAAA,EAAAn/C,CAAAwyE,EAAA3yB,GAAA7/C,OAAAo/C,EAAA,EAAAp/C,CAAAwyE,EAAA,EAAAntE,IAAA,SAAAyH,MAAA,WAEI,OACE0xC,EAAA,cAAC2D,EAAA,OAAD,KACE3D,EAAA,cAAC2D,EAAA,SAAD,CAAUz2C,KAAMw0C,GAAOmI,KAAMl9C,OAAO,EAAMnB,GAAIk2C,GAAO+M,UAAU5E,OAC/D7J,EAAA,cAAC2D,EAAA,MAAD,CACEz2C,KAAMw0C,GAAO+M,UAAU5E,KACvBl9C,OAAO,EACP9C,UAAW0pE,UARrBS,EAAA,CAAoC1yE,aCM9B2yE,GAAcC,QACW,cAA7B33C,OAAO1vB,SAASsnE,UAEe,UAA7B53C,OAAO1vB,SAASsnE,UAEhB53C,OAAO1vB,SAASsnE,SAAS7mE,MACvB,2DAyCN,SAAS8mE,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT3jE,KAAK,SAAA+jE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxuE,QACfmuE,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAOvBC,MAAM,SAAA/wE,GACL6wE,QAAQ7wE,MAAM,4CAA6CA,KC3DjEgxE,SACEl1B,EAAA,cAAC2D,EAAA,OAAD,CAAQ9D,QzGgNV,SAA8BlhD,QACd,IAAVA,IACFA,EAAQ,IAGT2gD,GAAsG61B,aAAU,GACjH,IAAIC,EAAgB74C,OAAOsjB,QACvBw1B,EAvDN,WACE,IAAIC,EAAK/4C,OAAO+3C,UAAUiB,UAC1B,QAAmC,IAA9BD,EAAGjqC,QAAQ,gBAAuD,IAA/BiqC,EAAGjqC,QAAQ,iBAA2D,IAAjCiqC,EAAGjqC,QAAQ,mBAAqD,IAA1BiqC,EAAGjqC,QAAQ,YAAqD,IAAjCiqC,EAAGjqC,QAAQ,mBACtJ9O,OAAOsjB,SAAW,cAAetjB,OAAOsjB,QAoD3B21B,GAChBC,KA7CsD,IAAnDl5C,OAAO+3C,UAAUiB,UAAUlqC,QAAQ,YA8CtCqqC,EAAS/2E,EACTg3E,EAAsBD,EAAOE,aAC7BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAwBH,EAAO92B,oBAC/BA,OAAgD,IAA1Bi3B,EAAmCr2B,EAAkBq2B,EAC3EC,EAAmBJ,EAAOK,UAC1BA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,EAAWr3E,EAAMq3E,SAAWz4B,EAAmBN,EAAgBt+C,EAAMq3E,WAAa,GAEtF,SAASC,EAAeC,GACtB,IAAIr1B,EAAOq1B,GAAgB,GACvBrvE,EAAMg6C,EAAKh6C,IACXV,EAAQ06C,EAAK16C,MAEbgwE,EAAmB55C,OAAO1vB,SAI1BK,EAHWipE,EAAiBhpE,SACnBgpE,EAAiBz4B,OACnBy4B,EAAiBx4B,KAI5B,OADIq4B,IAAU9oE,EAAOiwC,EAAcjwC,EAAM8oE,IAClCp4B,EAAe1wC,EAAM/G,EAAOU,GAGrC,SAASuvE,IACP,OAAO/sD,KAAKgtD,SAASvzB,SAAS,IAAIxF,OAAO,EAAGy4B,GAG9C,IAAIO,EAAoBh4B,IAExB,SAASh3C,EAAS0jC,GAChBiT,YAAS4B,EAAS7U,GAElB6U,EAAQp5C,OAAS2uE,EAAc3uE,OAC/B6vE,EAAkBp3B,gBAAgBW,EAAQhzC,SAAUgzC,EAAQ1/B,QAG9D,SAASo2D,EAAen2E,IApE1B,SAAmCA,GACjC,YAAuBqF,IAAhBrF,EAAM+F,QAAiE,IAA1CmuE,UAAUiB,UAAUlqC,QAAQ,UAqE1DmrC,CAA0Bp2E,IAC9Bq2E,EAAUR,EAAe71E,EAAM+F,QAGjC,SAASuwE,IACPD,EAAUR,EAAer2B,MAG3B,IAAI+2B,GAAe,EAEnB,SAASF,EAAU5pE,GACb8pE,GACFA,GAAe,EACfrvE,KAGAgvE,EAAkB33B,oBAAoB9xC,EADzB,MAC2C+xC,EAAqB,SAAU36C,GACjFA,EACFqD,EAAS,CACP6Y,OAJO,MAKPtT,SAAUA,IASpB,SAAmB+pE,GACjB,IAAIC,EAAah3B,EAAQhzC,SAIrBiqE,EAAUC,EAAQ1rC,QAAQwrC,EAAWhwE,MACxB,IAAbiwE,IAAgBA,EAAU,GAC9B,IAAIE,EAAYD,EAAQ1rC,QAAQurC,EAAa/vE,MAC1B,IAAfmwE,IAAkBA,EAAY,GAClC,IAAIC,EAAQH,EAAUE,EAElBC,IACFN,GAAe,EACfO,EAAGD,IAnBCE,CAAUtqE,KAuBlB,IAAIuqE,EAAkBnB,EAAer2B,KACjCm3B,EAAU,CAACK,EAAgBvwE,KAE/B,SAASwwE,EAAWxqE,GAClB,OAAOmpE,EAAWv4B,EAAW5wC,GA8E/B,SAASqqE,EAAGx0B,GACV0yB,EAAc8B,GAAGx0B,GAWnB,IAAI40B,EAAgB,EAEpB,SAASC,EAAkBN,GAGH,KAFtBK,GAAiBL,IAEoB,IAAVA,GACzB16C,OAAOn9B,iBAAiBsgD,EAAe62B,GACnCd,GAAyBl5C,OAAOn9B,iBAAiBugD,EAAiB+2B,IAC3C,IAAlBY,IACT/6C,OAAO18B,oBAAoB6/C,EAAe62B,GACtCd,GAAyBl5C,OAAO18B,oBAAoB8/C,EAAiB+2B,IAI7E,IAAIc,GAAY,EAiCZ33B,EAAU,CACZp5C,OAAQ2uE,EAAc3uE,OACtB0Z,OAAQ,MACRtT,SAAUuqE,EACVC,WAAYA,EACZp4B,KA3IF,SAAc/xC,EAAM/G,GAElB,IACI0G,EAAW+wC,EAAe1wC,EAAM/G,EAAOiwE,IAAav2B,EAAQhzC,UAChEypE,EAAkB33B,oBAAoB9xC,EAFzB,OAE2C+xC,EAAqB,SAAU36C,GACrF,GAAKA,EAAL,CACA,IAAImH,EAAOisE,EAAWxqE,GAClBhG,EAAMgG,EAAShG,IACfV,EAAQ0G,EAAS1G,MAErB,GAAIkvE,EAAe,CACjBD,EAAcqC,UAAU,CACtB5wE,IAAKA,GACJ,KAAMuE,GAET,IACEgzC,eAAes5B,QAAQ7wE,EAAK4jC,KAAKypB,UAAU/tD,IAC3C,MAAOyK,GAEPwtC,eAAeu5B,QACfv5B,eAAes5B,QAAQ7wE,EAAK4jC,KAAKypB,UAAU/tD,IAG7C,GAAIyvE,EACFr5C,OAAO1vB,SAASzB,KAAOA,MAClB,CACL,IAAIwsE,EAAYb,EAAQ1rC,QAAQwU,EAAQhzC,SAAShG,KAC7CgxE,EAAWd,EAAQv5B,MAAM,GAAkB,IAAfo6B,EAAmB,EAAIA,EAAY,GACnEC,EAAS54B,KAAKpyC,EAAShG,KACvBkwE,EAAUc,EACVvwE,EAAS,CACP6Y,OA7BK,OA8BLtT,SAAUA,UAKd0vB,OAAO1vB,SAASzB,KAAOA,MAuG3BisC,QAlGF,SAAiBnqC,EAAM/G,GAErB,IACI0G,EAAW+wC,EAAe1wC,EAAM/G,EAAOiwE,IAAav2B,EAAQhzC,UAChEypE,EAAkB33B,oBAAoB9xC,EAFzB,UAE2C+xC,EAAqB,SAAU36C,GACrF,GAAKA,EAAL,CACA,IAAImH,EAAOisE,EAAWxqE,GAClBhG,EAAMgG,EAAShG,IACfV,EAAQ0G,EAAS1G,MAErB,GAAIkvE,EAMF,GALAD,EAAc0C,aAAa,CACzBjxE,IAAKA,EACLV,MAAOA,GACN,KAAMiF,GAELwqE,EACFr5C,OAAO1vB,SAASwqC,QAAQjsC,OACnB,CACL,IAAIwsE,EAAYb,EAAQ1rC,QAAQwU,EAAQhzC,SAAShG,MAC9B,IAAf+wE,IAAkBb,EAAQa,GAAa/qE,EAAShG,KACpDS,EAAS,CACP6Y,OApBK,UAqBLtT,SAAUA,SAKd0vB,OAAO1vB,SAASwqC,QAAQjsC,OAuE5B8rE,GAAIA,EACJa,OA/DF,WACEb,GAAI,IA+DJc,UA5DF,WACEd,EAAG,IA4DHe,MAzCF,SAAe15B,QACE,IAAXA,IACFA,GAAS,GAGX,IAAI25B,EAAU5B,EAAkB73B,UAAUF,GAO1C,OALKi5B,IACHD,EAAkB,GAClBC,GAAY,GAGP,WAML,OALIA,IACFA,GAAY,EACZD,GAAmB,IAGdW,MAwBTC,OApBF,SAAgB1hC,GACd,IAAI2hC,EAAW9B,EAAkBz3B,eAAepI,GAEhD,OADA8gC,EAAkB,GACX,WACLA,GAAmB,GACnBa,OAiBJ,OAAOv4B,EyGxcUw4B,IACfr4B,EAAA,cAACC,EAAA,EAAD,CAAiBmH,KAAMA,IACrBpH,EAAA,cAACs4B,EAAD,KACG,SAAAz3B,GAAA,IAAGC,EAAHD,EAAGC,OAAQv0C,EAAXs0C,EAAWt0C,QAASrI,EAApB28C,EAAoB38C,MAApB,OACC87C,EAAA,cAACwD,EAAA,WAAD,CACEj3C,QAASA,EACTrI,MAAOA,EACPqhC,eAAgBya,EAAA,cAACI,EAAA,OAAD,MAChB9a,cACE0a,EAAA,cAACC,EAAA,EAAD,CAAaC,GAAI,CAAC,WACf,SAAAC,GAAC,OACAH,EAAA,cAACI,EAAA,mBAAD,CACEx6C,UAAWu6C,EAAE,sBACb71B,SAAU61B,EAAE,qBACZxhB,SAAUwhB,EAAE,qBACZvhB,iBAAkBuhB,EAAE,8BACpBthB,gBAAiBshB,EAAE,kCACnBrhB,uBAAwBqhB,EACtB,wCAMV1a,QAAS,KAER,kBACCua,EAAA,cAAC+C,EAAA,WAAW7lB,SAAZ,CACE5uB,MAAO,CACL45B,OAAM,GAAAzgC,OAAKq5C,EAAQy3B,SAAb9wE,OAAuBq5C,EAAQ03B,aACrCrwC,SAAQ,GAAA1gC,OAAKq5C,EAAQy3B,SAAb9wE,OAAuBq5C,EAAQ23B,SAASC,OAChDtwC,QAAS,CAAEuwC,sBAAuB,aAGpC34B,EAAA,cAAC+C,EAAA,WAAWzW,SAAZ,KACG,SAAA0W,GAAA,IAAG9a,EAAH8a,EAAG9a,OAAQE,EAAX4a,EAAW5a,QAAX,OACC4X,EAAA,cAAC+C,EAAA,iBAAD,CAAkB7a,OAAQA,EAAQE,QAASA,GACxC,SAAAwwC,GAAS,OACR54B,EAAA,cAAC+C,EAAA,oBAAoB7lB,SAArB,CAA8B5uB,MAAOsqE,GACnC54B,EAAA,cAAC64B,EAAD,CACE/3B,OAAQA,EACRY,OAAQ,CACN,CACE73C,UAAWgzD,GACXlwD,OAAO,EACPK,MAAO,OACPxB,GAAIk2C,GAAO0E,UAAUyD,MAEvB,CACEhgD,UAAWypE,GACXtmE,MAAO,eACPxB,GAAIk2C,GAAOvP,aAAa4V,MAE1B,CACEl+C,UAAW2pD,GACXxmD,MAAO,cACPxB,GAAIk2C,GAAOp+B,YAAYA,aAEzB,CACE6/B,UAAW,CACT,CACEt5C,UAAWw/C,GACXr8C,MAAO,wBACPxB,GAAIk2C,GAAO+D,oBAAoBsC,MAEjC,CACEl+C,UAAWs/D,GACXn8D,MAAO,aACPxB,GAAIk2C,GAAOuE,WAAW8B,OAG1B/6C,MAAO,kBAET,CACEnD,UAAWw9D,GACXr6D,MAAO,OACPxB,GAAIk2C,GAAOntC,KAAKs1C,MAElB,CACEhgD,UAAWmqE,GACXhnE,MAAO,WACPxB,GAAIk2C,GAAOkE,SAASiE,qBAgBlDtK,SAASu5B,eAAe,SDvGX,WACb,GAA6C,kBAAmBxE,UAAW,CAMzE,GAJkB,IAAI7gC,IACpBuR,kDACAzoB,OAAO1vB,SAASi2C,YAEJi2B,SAAWx8C,OAAO1vB,SAASksE,OAIvC,OAGFx8C,OAAOn9B,iBAAiB,OAAQ,WAC9B,IAAMi1E,EAAK,GAAA5sE,OAAMu9C,kDAAN,sBAEPivB,IAmDV,SAAiCI,GAE/B/pC,MAAM+pC,GACH3jE,KAAK,SAAAu6B,GAGkB,MAApBA,EAAS7c,SACwD,IAAjE6c,EAAS7C,QAAQ4wC,IAAI,gBAAiB3tC,QAAQ,cAG9CipC,UAAUC,cAAc0E,MAAMvoE,KAAK,SAAA+jE,GACjCA,EAAayE,aAAaxoE,KAAK,WAC7B6rB,OAAO1vB,SAASssE,aAKpB/E,GAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEAvEAoE,CAAwB/E,GAIxBC,UAAUC,cAAc0E,MAAMvoE,KAAK,WACjCqkE,QAAQC,IACN,+GAMJZ,GAAgBC,MC0ExBgF","file":"static/js/main.c675b8d9.chunk.js","sourcesContent":["import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { AboutModal as PfAboutModal } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModal {\n  brandImg: any;\n  handleModalToggle: any;\n  isModalOpen: boolean;\n  trademark: string;\n  productName: string;\n  children: React.ReactNode;\n}\n\nexport class AboutModal extends React.Component<IAboutModal> {\n  constructor(props: IAboutModal) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      brandImg,\n      children,\n      isModalOpen,\n      handleModalToggle,\n      productName,\n      trademark,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <PfAboutModal\n          isOpen={isModalOpen}\n          onClose={handleModalToggle}\n          trademark={trademark}\n          brandImageSrc={brandImg}\n          brandImageAlt=\"Brand Image\"\n          productName={productName}\n        >\n          {children}\n        </PfAboutModal>\n      </React.Fragment>\n    );\n  }\n}\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import {\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n} from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nexport interface IHelpDropdownProps {\n  className?: string;\n  isOpen: boolean;\n  launchAboutModal: any;\n}\n\nexport interface IHelpDropdownState {\n  isOpen: boolean;\n}\n\nexport class HelpDropdown extends React.Component<\n  IHelpDropdownProps,\n  IHelpDropdownState\n> {\n  public onToggle: any;\n  public onSelect: any;\n\n  constructor(props: IHelpDropdownProps) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.onToggle = (isOpen: boolean) => {\n      this.setState({\n        isOpen,\n      });\n    };\n    this.onSelect = (event: MouseEvent) => {\n      this.setState({\n        isOpen: !this.state.isOpen,\n      });\n    };\n  }\n\n  public render() {\n    const { isOpen } = this.state;\n    const dropdownItems = [\n      <DropdownItem\n        key=\"action\"\n        component=\"span\"\n        onClick={() => {\n          this.props.launchAboutModal();\n        }}\n      >\n        About\n      </DropdownItem>,\n    ];\n    return (\n      <>\n        <Dropdown\n          direction={DropdownDirection.down}\n          position={DropdownPosition.right}\n          onSelect={this.onSelect}\n          toggle={\n            <DropdownToggle\n              className={classNames('', this.props.className)}\n              iconComponent={null}\n              onToggle={this.onToggle}\n            >\n              <HelpIcon />\n            </DropdownToggle>\n          }\n          isOpen={isOpen}\n          isPlain={true}\n          dropdownItems={dropdownItems}\n        />\n      </>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IAppLayoutContext {\n  showBreadcrumb: (breadcrumb: any) => void;\n}\n\nexport const AppLayoutContextDefaultValue = {} as IAppLayoutContext;\n\nexport const AppLayoutContext = React.createContext<IAppLayoutContext>(\n  AppLayoutContextDefaultValue\n);\n","import * as React from 'react';\nimport { AppLayoutContext } from './AppLayoutContext';\n\nexport const AppBreadcrumb: React.FunctionComponent = ({ children }) => {\n  const appLayoutContext = React.useContext(AppLayoutContext);\n\n  React.useEffect(function setupElement() {\n    appLayoutContext.showBreadcrumb(children);\n\n    return function removeElement() {\n      appLayoutContext.showBreadcrumb(null);\n    };\n  }, []);\n  return null;\n};\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport {\n  Breadcrumb as PFBreadcrumb,\n  BreadcrumbItem,\n  Level,\n  LevelItem,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { AppBreadcrumb } from './AppBreadcrumb';\n\nexport interface IBreadcrumbProps {\n  actions?: React.ReactNode;\n}\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent<IBreadcrumbProps> = ({\n  actions,\n  children,\n}) => {\n  const count = React.Children.count(children);\n  return (\n    <AppBreadcrumb>\n      <Level gutter={'md'}>\n        <LevelItem>\n          <PFBreadcrumb>\n            {React.Children.map(children, (c, idx) => (\n              <BreadcrumbItem key={idx} isActive={idx === count - 1}>\n                {c}\n              </BreadcrumbItem>\n            ))}\n          </PFBreadcrumb>\n        </LevelItem>\n        {actions && <LevelItem>{actions}</LevelItem>}\n      </Level>\n    </AppBreadcrumb>\n  );\n};\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import { NavExpandable } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return children ? (\n      <NavExpandable title={label} isActive={isActive} isExpanded={isActive}>\n        {children}\n      </NavExpandable>\n    ) : (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <span\n    className={classnames('inline-text-readwidget', className)}\n    onClick={allowEditing ? onEdit : undefined}\n  >\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </span>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import {\n  PageSectionProps,\n  Text,\n  TextContent,\n  Title,\n  TitleLevel,\n  TitleProps,\n} from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { PageSection } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription?: string;\n  variant?: PageSectionProps['variant'];\n  titleSize?: TitleProps['size'];\n  titleHeadingLevel?: keyof typeof TitleLevel;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  variant = 'light',\n  titleSize = '2xl',\n  titleHeadingLevel = TitleLevel.h1,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <PageSection\n      variant={variant}\n      className={classnames('', className)}\n      {...rest}\n    >\n      <TextContent>\n        <Title size={titleSize} headingLevel={TitleLevel[titleHeadingLevel]}>\n          {i18nTitle}\n        </Title>\n        {i18nDescription && (\n          <Text\n            dangerouslySetInnerHTML={{\n              __html: i18nDescription,\n            }}\n          />\n        )}\n      </TextContent>\n    </PageSection>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import {\n  Level,\n  LevelItem,\n  Popover,\n  Text,\n  Title,\n  Tooltip,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { Card, DropdownKebab, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  configurationRequired?: boolean;\n  description: string;\n  href: H.LocationDescriptor;\n  i18nCannotDelete?: string;\n  i18nConfigurationRequired?: string;\n  i18nTechPreview?: string;\n  icon: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  techPreview?: boolean;\n  techPreviewPopoverHtml?: React.ReactNode;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          <Card.Heading\n            className={\n              this.props.techPreview\n                ? 'connection-card__heading--tech-preview'\n                : 'connection-card__heading--no-border'\n            }\n          >\n            {this.props.techPreview ? (\n              <Level gutter={'md'}>\n                <LevelItem>&nbsp;</LevelItem>\n                <LevelItem>\n                  {this.props.i18nTechPreview!}\n                  {'  '}\n                  <Popover\n                    bodyContent={\n                      <React.Fragment>\n                        {this.props.techPreviewPopoverHtml}\n                      </React.Fragment>\n                    }\n                    aria-label={this.props.i18nTechPreview!}\n                    position={'left'}\n                  >\n                    <Icon type={'pf'} name={'info'} />\n                  </Popover>\n                </LevelItem>\n              </Level>\n            ) : (\n              <Level gutter={'md'}>&nbsp;</Level>\n            )}\n            {this.props.menuProps && (\n              <div className=\"pull-right\">\n                <DropdownKebab\n                  id={`connection-${this.props.name}-menu`}\n                  pullRight={true}\n                  title={this.props.menuProps.i18nMenuTitle}\n                >\n                  <li role={'presentation'} key={0}>\n                    <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                      {this.props.menuProps.i18nViewLabel}\n                    </Link>\n                  </li>\n                  <li role={'presentation'} key={1}>\n                    <Link\n                      to={this.props.menuProps.editHref}\n                      role={'menuitem'}\n                      tabIndex={2}\n                    >\n                      {this.props.menuProps.i18nEditLabel}\n                    </Link>\n                  </li>\n                  <li\n                    className={\n                      !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                    }\n                    role={'presentation'}\n                    key={2}\n                  >\n                    {this.props.configurationRequired ? (\n                      <Tooltip\n                        content={this.props.i18nCannotDelete!}\n                        position={'bottom'}\n                      >\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={this.showDeleteDialog}\n                          role={'menuitem'}\n                          tabIndex={3}\n                        >\n                          {this.props.menuProps.i18nDeleteLabel}\n                        </a>\n                      </Tooltip>\n                    ) : (\n                      <a\n                        href={'javascript:void(0)'}\n                        onClick={this.showDeleteDialog}\n                        role={'menuitem'}\n                        tabIndex={3}\n                      >\n                        {this.props.menuProps.i18nDeleteLabel}\n                      </a>\n                    )}\n                  </li>\n                </DropdownKebab>\n              </div>\n            )}\n          </Card.Heading>\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n            {this.props.configurationRequired ? (\n              <Card.Footer\n                className={\n                  this.props.techPreview &&\n                  'connection-card__footer--tech-preview alert alert-warning'\n                }\n              >\n                <Icon type={'pf'} name={'warning-triangle-o'} size={'2x'} />\n                {this.props.i18nConfigurationRequired}\n              </Card.Footer>\n            ) : null}\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader, PageSection } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <PageSection>\n        <Card>\n          <Card.Heading>\n            <Card.Title>{this.props.i18nTitle}</Card.Title>\n          </Card.Heading>\n          <Card.Body>\n            <Container>\n              <form\n                className=\"form-horizontal required-pf\"\n                role=\"form\"\n                onSubmit={this.props.handleSubmit}\n              >\n                {this.props.validationResults.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                {this.props.children}\n                {this.props.isEditing ? (\n                  <Button\n                    bsStyle=\"default\"\n                    disabled={this.props.isWorking || !this.props.isValid}\n                    onClick={this.props.onValidate}\n                  >\n                    {this.props.isWorking ? (\n                      <Loader size={'sm'} inline={true} />\n                    ) : null}\n                    {this.props.i18nValidateLabel}\n                  </Button>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </form>\n            </Container>\n          </Card.Body>\n          <Card.Footer>\n            <Button\n              bsStyle=\"default\"\n              className=\"connection-details-form__editButton\"\n              disabled={this.props.isWorking}\n              onClick={this.props.onCancelEditing}\n            >\n              {this.props.i18nCancelLabel}\n            </Button>\n            <Button\n              bsStyle=\"primary\"\n              className=\"connection-details-form__editButton\"\n              disabled={this.props.isWorking || !this.props.isValid}\n              onClick={this.props.handleSubmit}\n            >\n              {this.props.i18nSaveLabel}\n            </Button>\n          </Card.Footer>\n        </Card>\n      </PageSection>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, PageSection } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <PageSection variant={'light'}>\n        <Grid fluid={true}>\n          <Grid.Row className={'connection-details-header__row'}>\n            {this.props.connectionIcon ? (\n              <Grid.Col xs={1}>\n                <Container className=\"blank-slate-pf-icon\">\n                  <img\n                    className=\"connection-details-header__connectionIcon\"\n                    src={this.props.connectionIcon}\n                    alt={this.props.connectionName}\n                    width={46}\n                  />\n                </Container>\n              </Grid.Col>\n            ) : null}\n            <Grid.Col xs={11}>\n              <InlineTextEdit\n                className=\"connection-details-header__connectionName\"\n                value={this.props.connectionName}\n                allowEditing={this.props.allowEditing && !this.props.isWorking}\n                placeholder={this.props.i18nNamePlaceholder}\n                isTextArea={false}\n                onChange={this.props.onChangeName}\n              />\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row className={'connection-details-header__row'}>\n            <Grid.Col\n              xs={2}\n              className=\"connection-details-header__propertyLabel\"\n            >\n              {this.props.i18nDescriptionLabel}\n            </Grid.Col>\n            <Grid.Col xs={10}>\n              <InlineTextEdit\n                value={this.props.connectionDescription || ''}\n                allowEditing={this.props.allowEditing && !this.props.isWorking}\n                i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n                isTextArea={true}\n                onChange={this.props.onChangeDescription}\n              />\n            </Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col\n              xs={2}\n              className=\"connection-details-header__propertyLabel\"\n            >\n              {this.props.i18nUsageLabel}\n            </Grid.Col>\n            <Grid.Col\n              xs={10}\n              className=\"connection-details-header__propertyValue\"\n            >\n              {this.props.i18nUsageMessage}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n      </PageSection>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import { PageSection } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  createConnectionButtonStyle?: 'primary' | 'default';\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <ButtonLink\n                href={this.props.linkToConnectionCreate}\n                as={this.props.createConnectionButtonStyle || 'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>{this.props.children}</PageSection>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.i18nTitle !== '' && (\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n        )}\n        {this.props.i18nDescription !== '' && (\n          <Text\n            dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n          />\n        )}\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateConnectorTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkCreateApiConnector}\n                  as={'primary'}\n                >\n                  {this.props.i18nLinkCreateApiConnector}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </PageSection>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import {\n  Level,\n  LevelItem,\n  PageSection,\n  Text,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <PageSection variant={'light'}>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <TextContent>\n                <Title size=\"xl\" headingLevel={TitleLevel.h1}>\n                  {this.props.extensionName}\n                </Title>\n                <Text>{this.props.i18nIdMessage}</Text>\n              </TextContent>\n            </LevelItem>\n            <LevelItem>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'primary'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.extensionUses !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </LevelItem>\n          </Level>\n        </PageSection>\n        <PageSection>\n          <Card>\n            <CardBody>\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nOverviewSectionTitle}\n              </Title>\n              {this.props.overviewSection}\n\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nSupportsSectionTitle}\n              </Title>\n              {this.props.supportsSection}\n\n              <Title\n                size=\"md\"\n                headingLevel={TitleLevel.h3}\n                className=\"extension-detail__sectionHeading\"\n              >\n                {this.props.i18nUsageSectionTitle}\n              </Title>\n              {this.props.integrationsSection}\n            </CardBody>\n          </Card>\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <PageSection>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.i18nTitle !== '' && (\n          <Title size=\"lg\">{this.props.i18nTitle}</Title>\n        )}\n        {this.props.i18nDescription !== '' && (\n          <Text\n            dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n          />\n        )}\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkImportExtension}\n                  as={'primary'}\n                >\n                  {this.props.i18nLinkImportExtension}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </PageSection>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Level, LevelItem, PageSection, Title } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\nimport { SimplePageHeader } from '../Shared';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nIntegrations: string;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n  i18nDescription: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <PageSection>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <Title size={'lg'}>{this.props.i18nIntegrations}</Title>\n            </LevelItem>\n            <LevelItem>\n              <Link to={this.props.linkToIntegrations}>\n                {this.props.i18nLinkToIntegrations}\n              </Link>\n              <ButtonLink\n                href={this.props.linkToIntegrationCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateIntegration}\n              </ButtonLink>\n            </LevelItem>\n          </Level>\n          <CardGrid fluid={true} matchHeight={true}>\n            <CardGrid.Row>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.integrationsOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.connectionsOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.messagesOverview}\n              </CardGrid.Col>\n              <CardGrid.Col sm={6} md={3}>\n                {this.props.uptimeOverview}\n              </CardGrid.Col>\n            </CardGrid.Row>\n          </CardGrid>\n          <Grid fluid={true}>\n            <Grid.Row>\n              <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col sm={12} md={6}>\n                {this.props.integrationBoard}\n              </Grid.Col>\n              <Grid.Col sm={12} md={6}>\n                {this.props.integrationUpdates}\n              </Grid.Col>\n            </Grid.Row>\n          </Grid>\n        </PageSection>\n\n        <PageSection>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <Title size={'lg'}>{this.props.i18nConnections}</Title>\n            </LevelItem>\n            <LevelItem>\n              <Link to={this.props.linkToConnections}>\n                {this.props.i18nLinkToConnections}\n              </Link>\n              <ButtonLink\n                href={this.props.linkToConnectionCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </LevelItem>\n          </Level>\n          <CardGrid fluid={true} matchHeight={true}>\n            <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n          </CardGrid>\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <PageSection>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        {this.props.children}\n      </PageSection>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Alert, ExpandCollapse } from 'patternfly-react';\nimport * as React from 'react';\n\nexport enum AlertLevel {\n  ERROR = 'error',\n  WARN = 'warning',\n  INFO = 'info',\n}\n\nexport interface IIntegrationBulletinBoardAlertProps {\n  level: AlertLevel;\n  message: string;\n  detail?: string;\n  i18nTextExpanded: string;\n  i18nTextCollapsed: string;\n}\n\nexport class IntegrationBulletinBoardAlert extends React.Component<\n  IIntegrationBulletinBoardAlertProps\n> {\n  public render() {\n    return (\n      <Alert type={this.props.level}>\n        <span\n          dangerouslySetInnerHTML={{\n            __html: this.props.message,\n          }}\n        />\n        {this.props.detail && (\n          <ExpandCollapse\n            align=\"left\"\n            bordered={false}\n            expanded={false}\n            textExpanded={this.props.i18nTextExpanded}\n            textCollapsed={this.props.i18nTextCollapsed}\n          >\n            <pre>{this.props.detail}</pre>\n          </ExpandCollapse>\n        )}\n      </Alert>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <PageSection>\n          <DndFileChooser\n            allowMultiple={true}\n            fileExtensions={'.zip'}\n            onUploadRejected={this.props.onUploadRejected}\n            disableDropzone={false}\n            onUploadAccepted={this.props.onUploadAccepted}\n            i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n            i18nInstructions={this.props.i18nInstructions}\n            i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n            i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n            i18nHelpMessage={this.props.i18nHelpMessage}\n          />\n        </PageSection>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, ButtonLink } from '../../Layout';\nimport { IMenuActions } from '../../Shared';\nimport './IntegrationDetailBreadcrumb.css';\n\nexport interface IIntegrationDetailBreadcrumbProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  exportAction?: (e: React.MouseEvent<any>) => any;\n  exportHref?: H.LocationDescriptor;\n  exportLabel?: string | JSX.Element;\n  homeHref?: H.LocationDescriptor;\n  i18nHome?: string;\n  i18nIntegrations?: string;\n  i18nPageTitle?: string;\n  integrationId?: string;\n  integrationsHref?: H.LocationDescriptor;\n  menuActions?: IMenuActions[];\n}\n\nexport class IntegrationDetailBreadcrumb extends React.Component<\n  IIntegrationDetailBreadcrumbProps\n> {\n  public render() {\n    return (\n      <Breadcrumb\n        actions={\n          <>\n            <ButtonLink\n              to={this.props.exportHref}\n              onClick={this.props.exportAction}\n              children={this.props.exportLabel}\n            />\n            <ButtonLink\n              href={this.props.editHref}\n              children={this.props.editLabel}\n            />\n            <DropdownKebab\n              id={`integration-${this.props.integrationId}-action-menu`}\n              pullRight={true}\n            >\n              {this.props.menuActions\n                ? this.props.menuActions.map((a, idx) => (\n                    <li role={'presentation'} key={idx}>\n                      {a.href ? (\n                        <Link\n                          to={a.href}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </Link>\n                      ) : (\n                        <a\n                          href={'javascript:void(0)'}\n                          onClick={a.onClick}\n                          role={'menuitem'}\n                          tabIndex={idx + 1}\n                        >\n                          {a.label}\n                        </a>\n                      )}\n                    </li>\n                  ))\n                : null}\n            </DropdownKebab>\n          </>\n        }\n      >\n        <span>\n          <Link to={this.props.homeHref!}>{this.props.i18nHome}</Link>\n        </span>\n        <span>\n          <Link to={this.props.integrationsHref!}>\n            {this.props.i18nIntegrations}\n          </Link>\n        </span>\n        <span>{this.props.i18nPageTitle}</span>\n      </Breadcrumb>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description: React.ReactNode;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Text>{this.props.description}</Text>\n      </PageSection>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: React.ReactNode;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return <>{this.props.name && <Title size=\"lg\">{this.props.name}</Title>}</>;\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../Layout';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  editHref?: H.LocationDescriptor;\n  editLabel?: string | JSX.Element;\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n  publishAction?: (e: React.MouseEvent<any>) => any;\n  publishHref?: H.LocationDescriptor;\n  publishLabel?: string | JSX.Element;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Grid\n          fluid={true}\n          key={1}\n          className=\"integration-detail-history-list-view\"\n        >\n          {this.props.isDraft ? (\n            <Grid.Row className=\"show-grid\">\n              <Grid.Col\n                xs={2}\n                md={2}\n                className=\"integration-detail-history-list-view__description\"\n              >\n                {this.props.i18nTextDraft}:\n              </Grid.Col>\n              <Grid.Col xs={10} md={10}>\n                <ListViewItem\n                  key={1}\n                  heading={this.props.i18nTextDraft}\n                  actions={\n                    <>\n                      <ButtonLink\n                        to={this.props.publishHref}\n                        onClick={this.props.publishAction}\n                        children={this.props.publishLabel}\n                      />\n                      <ButtonLink\n                        href={this.props.editHref}\n                        children={this.props.editLabel}\n                      />\n                    </>\n                  }\n                  stacked={false}\n                />\n              </Grid.Col>\n            </Grid.Row>\n          ) : null}\n\n          {this.props.children && this.props.hasHistory ? (\n            <Grid.Row className=\"show-grid\">\n              <Grid.Col\n                xs={2}\n                md={2}\n                className=\"integration-detail-history-list-view__description\"\n              >\n                {<span>{this.props.i18nTextHistory}:</span>}\n              </Grid.Col>\n              <Grid.Col xs={10} md={10}>\n                {this.props.children ? (\n                  <ListView>{this.props.children}</ListView>\n                ) : null}\n              </Grid.Col>\n            </Grid.Row>\n          ) : null}\n        </Grid>\n      </PageSection>\n    );\n  }\n}\n","import { ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: string;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nconst states = {\n  Error: <ListView.Icon type=\"pf\" name=\"error-circle-o\" />,\n  Pending: <ListView.Icon name=\"blank\" />,\n  Published: <ListView.Icon type=\"pf\" name=\"ok\" />,\n  Unpublished: <ListView.Icon name=\"blank\" />,\n};\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      return states[currentState] || null;\n    }\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <>\n            {this.props.i18nTextVersion}: {this.props.version}\n          </>\n        }\n        description={\n          <>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </>\n        }\n        additionalInfo={[]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IMenuActions } from '../../Shared';\n\nexport interface IIntegrationDetailHistoryListViewItemActionsProps {\n  actions: IMenuActions[];\n  integrationId: string;\n}\n\nexport class IntegrationDetailHistoryListViewItemActions extends React.Component<\n  IIntegrationDetailHistoryListViewItemActionsProps\n> {\n  public render() {\n    return (\n      <DropdownKebab\n        id={`integration-${this.props.integrationId}-action-menu`}\n        pullRight={true}\n      >\n        {this.props.actions.map((a, index) => {\n          return (\n            <li role={'presentation'} key={index}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={index + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          );\n        })}\n      </DropdownKebab>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import * as React from 'react';\nimport { IntegrationStatusDetail } from '../IntegrationStatusDetail';\nimport { IntegrationState } from '../models';\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: React.ReactNode;\n  version?: number;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        {this.props.name}\n        <>\n          {this.props.currentState === 'Pending' && (\n            <IntegrationStatusDetail\n              targetState={this.props.targetState}\n              value={this.props.monitoringValue}\n              currentStep={this.props.monitoringCurrentStep}\n              totalSteps={this.props.monitoringTotalSteps}\n              logUrl={this.props.monitoringLogUrl}\n              i18nProgressPending={this.props.i18nProgressPending}\n              i18nProgressStarting={this.props.i18nProgressStarting}\n              i18nProgressStopping={this.props.i18nProgressStopping}\n              i18nLogUrlText={this.props.i18nLogUrlText}\n            />\n          )}\n          {this.props.currentState === 'Published' && this.props.version && (\n            <>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <span className=\"pficon pficon-ok\" />\n              &nbsp;Published version {this.props.version}\n            </>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, PageSection } from '../../Layout';\n\nimport './IntegrationDetailActivity.css';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog?: string;\n  onRefresh: () => void;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Container>\n          <div className=\"integration-detail-activity-toolbar pull-right\">\n            {this.props.linkToOpenShiftLog && (\n              <>\n                <Link to={this.props.linkToOpenShiftLog}>\n                  {this.props.i18nViewLogOpenShift}\n                </Link>\n                &nbsp;|&nbsp;\n              </>\n            )}\n            <span className=\"integration-detail-activity-toolbar-last-refresh\">\n              {this.props.i18nLastRefresh}\n            </span>\n            &nbsp;&nbsp;\n            <Button onClick={this.props.onRefresh}>\n              {this.props.i18nBtnRefresh}\n            </Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </PageSection>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationDetailActivityItem.css';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: string;\n}\n\nconst headerFormat = (value: string) => <Table.Heading>{value}</Table.Heading>;\nconst cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\nconst statusCellFormat = (status: string) => (\n  <Table.Cell>\n    {status === 'Success' ? (\n      <>\n        <Icon type=\"pf\" name=\"ok\" /> Success\n      </>\n    ) : (\n      <>\n        <Icon type=\"pf\" name=\"error-circle-o\" /> Error\n      </>\n    )}\n  </Table.Cell>\n);\nconst outputCellFormat = (output: string) => (\n  <Table.Cell>\n    <pre className=\"integration-detail-activity-item-step-output\">{output}</pre>\n  </Table.Cell>\n);\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        className=\"integration-detail-activity-item\"\n        key={this.props.time}\n        actions={\n          <div className=\"integration-detail-activity-item__status-item\">\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </div>\n        }\n        leftContent={this.props.date}\n        heading={<></>}\n        description={this.props.time}\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.i18nVersion}\n            &nbsp;\n            {this.props.version}\n          </ListView.InfoItem>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [statusCellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [outputCellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: string;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IIntegrationDetailMetricsProps {\n  i18nLastProcessed: string;\n  i18nSince: string;\n  i18nTotalErrors: string;\n  i18nTotalMessages: string;\n  i18nUptime: string;\n  errors?: number;\n  lastProcessed?: string;\n  messages?: number;\n  start?: number;\n  durationDifference?: string;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const okMessagesCount = this.props.messages! - this.props.errors!;\n    const startAsDate = new Date(this.props.start!);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <PageSection>\n        <CardGrid fluid={true} matchHeight={true}>\n          <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <Icon type=\"pf\" name=\"error-circle-o\" />\n                  {this.props.errors}\n                </CardTitle>\n                <CardBody>{this.props.i18nTotalErrors}</CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <Icon name=\"shield\" />\n                  {this.props.i18nLastProcessed}\n                </CardTitle>\n                <CardBody>\n                  <h2>{this.props.lastProcessed}</h2>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <CardTitle>\n                  <AggregateStatusCount>\n                    {this.props.messages}&nbsp;\n                  </AggregateStatusCount>\n                  {this.props.i18nTotalMessages}\n                </CardTitle>\n                <CardBody>\n                  <AggregateStatusNotifications>\n                    <AggregateStatusNotification>\n                      <Icon type=\"pf\" name=\"ok\" />\n                      {okMessagesCount}&nbsp;\n                    </AggregateStatusNotification>\n                    <AggregateStatusNotification>\n                      <Icon type=\"pf\" name=\"error-circle-o\" />\n                      {this.props.errors}\n                    </AggregateStatusNotification>\n                  </AggregateStatusNotifications>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col xs={6} sm={3} md={3}>\n              <Card accented={true} aggregated={true} matchHeight={true}>\n                <Card.Title className={'text-left'}>\n                  <small className={'pull-right'}>\n                    {this.props.i18nSince}\n                    {startAsHuman}\n                  </small>\n                  <div>{this.props.i18nUptime}</div>\n                </Card.Title>\n                <Card.Body>\n                  <h4>{this.props.durationDifference}</h4>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </CardGrid>\n      </PageSection>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { PageSection } from '../Layout';\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n */\nexport class IntegrationEditorChooseAction extends React.Component {\n  public render() {\n    return (\n      <PageSection>\n        <ListView>{this.props.children}</ListView>\n      </PageSection>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container, PageSection } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n\n  i18nNext: string;\n  i18nChooseAction: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  isValid: boolean;\n  chooseActionHref: H.LocationDescriptor;\n  handleSubmit: (e?: any) => void;\n  submitForm: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n                <div className=\"card-pf-footer\">\n                  <ButtonLink href={this.props.chooseActionHref}>\n                    <i className={'fa fa-chevron-left'} />{' '}\n                    {this.props.i18nChooseAction}\n                  </ButtonLink>\n                  <ButtonLink\n                    onClick={this.props.submitForm}\n                    disabled={!this.props.isValid}\n                    as={'primary'}\n                  >\n                    {this.props.i18nNext}\n                  </ButtonLink>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </PageSection>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container, PageSection } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n  i18nNext: string;\n  i18nChooseAction: string;\n  chooseActionHref: H.LocationDescriptor;\n  submitForm: (e?: any) => void;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n              <div className=\"card-pf-footer\">\n                <ButtonLink href={this.props.chooseActionHref}>\n                  <i className={'fa fa-chevron-left'} />{' '}\n                  {this.props.i18nChooseAction}\n                </ButtonLink>\n                <ButtonLink onClick={this.props.submitForm} as={'primary'}>\n                  {this.props.i18nNext}\n                </ButtonLink>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </PageSection>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action?: string;\n  dataTypeI18nLabel: string;\n  dataType?: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    {action && (\n      <dl className={'integration-flow-step-details__overview'}>\n        <dt>{actionI18nLabel}</dt>\n        <dd>{action}</dd>\n      </dl>\n    )}\n    {dataType && (\n      <dl className={'integration-flow-step-details__overview'}>\n        <dt>{dataTypeI18nLabel}</dt>\n        <dd>{dataType}</dd>\n      </dl>\n    )}\n  </div>\n);\n\nexport interface IIntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IIntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IIntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IIntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import * as React from 'react';\nimport { Container, PageSection } from '../Layout';\n\nexport interface IIntegrationSaveFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationSaveFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationSaveFormProps#i18nSubtitle}\n */\nexport class IntegrationSaveForm extends React.Component<\n  IIntegrationSaveFormProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </PageSection>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","import * as H from '@syndesis/history';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: H.LocationDescriptor;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  title?: string;\n  href?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Icon name={'angle-right'} className=\"step-arrow\" />\n        ) : null}\n        {!this.props.href && (\n          <div>\n            <div className={'step-icon'} title={this.props.title}>\n              <img src={this.props.icon} />\n            </div>\n            <p>{this.props.name}</p>\n          </div>\n        )}\n        {this.props.href && (\n          <Link to={this.props.href}>\n            <div>\n              <div className={'step-icon'} title={this.props.title}>\n                <img src={this.props.icon} />\n              </div>\n              <p>{this.props.name}</p>\n            </div>\n          </Link>\n        )}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return <div className=\"show-grid\">{this.props.children}</div>;\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded:\n      (localStorage.getItem('iec-vertical-flow-expanded') || 'y') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} as={'link'} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nDescription: string;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <PageSection>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <ButtonLink href={this.props.linkToManageCiCd}>\n                {this.props.i18nManageCiCd}\n              </ButtonLink>\n              <ButtonLink href={this.props.linkToIntegrationImport}>\n                {this.props.i18nImport}\n              </ButtonLink>\n              <ButtonLink\n                href={this.props.linkToIntegrationCreation}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateConnection}\n              </ButtonLink>\n            </div>\n          </ListViewToolbar>\n          {this.props.children}\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  durationDifference: string;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>\n          <h4>{this.props.durationDifference}</h4>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState, OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport './EmptyViewsState.css';\n\nexport interface IEmptyViewsStateProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n}\n\nexport class EmptyViewsState extends React.Component<IEmptyViewsStateProps> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nEmptyStateTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <OverlayTrigger\n            overlay={this.getImportViewsTooltip()}\n            placement=\"top\"\n          >\n            <ButtonLink\n              href={this.props.linkImportViewsHRef}\n              as={'default'}\n              className={'empty-views-import'}\n            >\n              {this.props.i18nImportViews}\n            </ButtonLink>\n          </OverlayTrigger>\n          <OverlayTrigger overlay={this.getCreateViewTooltip()} placement=\"top\">\n            <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n              {this.props.i18nCreateView}\n            </ButtonLink>\n          </OverlayTrigger>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { ListView, OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport { EmptyViewsState } from './EmptyViewsState';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <PageSection noPadding={true} variant={'light'}>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n        </PageSection>\n        <PageSection>\n          {this.props.hasListData ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyViewsState\n              i18nEmptyStateTitle={this.props.i18nEmptyStateTitle}\n              i18nEmptyStateInfo={this.props.i18nEmptyStateInfo}\n              i18nCreateView={this.props.i18nCreateView}\n              i18nCreateViewTip={this.props.i18nCreateViewTip}\n              i18nImportViews={this.props.i18nImportViews}\n              i18nImportViewsTip={this.props.i18nImportViewsTip}\n              linkCreateViewHRef={this.props.linkCreateViewHRef}\n              linkImportViewsHRef={this.props.linkImportViewsHRef}\n            />\n          )}\n        </PageSection>\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../../Layout';\n\nexport interface IViewHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n}\n\nexport class ViewHeader extends React.Component<IViewHeaderProps> {\n  public render() {\n    return (\n      <PageSection variant={'light'}>\n        <TextContent>\n          <Title size=\"2xl\" headingLevel={TitleLevel.h1}>\n            {this.props.i18nTitle}\n          </Title>\n          {this.props.i18nDescription && (\n            <Text>{this.props.i18nDescription}</Text>\n          )}\n        </TextContent>\n      </PageSection>\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, PageSection } from '../../../src/Layout';\nimport { GenericTable } from '../../Shared/GenericTable';\nimport { EmptyViewsState } from '../Virtualizations/Views/EmptyViewsState';\n\nexport interface ISqlClientContentProps {\n  /**\n   * The SQL selector form content\n   */\n  formContent: React.ReactNode;\n  /**\n   * ViewNames for selector\n   */\n  viewNames: string[];\n  /**\n   * TargetVdb to run query\n   */\n  targetVdb: string;\n  /**\n   * Array of column info for the query results.  (The column id and display label)\n   * Example:\n   * [ { id: 'fName', label: 'First Name'},\n   *   { id: 'lName', label: 'Last Name'},\n   *   { id: 'country', label: 'Country' }\n   * ]\n   */\n  queryResultCols: IColumn[];\n  /**\n   * Array of query result rows - must match up with column ids\n   * Example:\n   * [ { fName: 'Jean', lName: 'Frissilla', country: 'Italy' },\n   *   { fName: 'John', lName: 'Johnson', country: 'US' },\n   *   { fName: 'Juan', lName: 'Bautista', country: 'Brazil' },\n   *   { fName: 'Jordan', lName: 'Dristol', country: 'Ontario' }\n   * ]\n   */\n  queryResultRows: Array<{}>;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nEmptyResultsTitle: string;\n  i18nEmptyResultsMsg: string;\n}\n\ninterface IColumn {\n  id: string;\n  label: string;\n}\n\nconst defaultCellFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nconst defaultHeaderFormat = (value: any) => <Table.Cell>{value}</Table.Cell>;\n\n/**\n * The SQL client content.  This component includes:\n * - SqlClientForm - for selection of the view and query params\n * - GenericTable - for display of the query results\n * - EmptyStates - displayed when no views available or no results available.\n */\nexport class SqlClientContent extends React.Component<ISqlClientContentProps> {\n  public render() {\n    return (\n      <PageSection>\n        {this.props.viewNames.length > 0 ? (\n          <Grid.Row>\n            <Grid.Col md={6}>\n              <Container>{this.props.formContent}</Container>\n            </Grid.Col>\n            <Grid.Col md={6}>\n              <Container>\n                {this.props.queryResultRows.length > 0 ? (\n                  <GenericTable\n                    columns={this.props.queryResultCols.map(col => ({\n                      cell: {\n                        formatters: [defaultCellFormat],\n                      },\n                      header: {\n                        formatters: [defaultHeaderFormat],\n                        label: col.label,\n                      },\n                      property: col.id,\n                    }))}\n                    rows={this.props.queryResultRows}\n                    rowKey={\n                      this.props.queryResultCols.length > 0\n                        ? this.props.queryResultCols[0].id\n                        : ''\n                    }\n                    {...this.props}\n                  />\n                ) : (\n                  <EmptyState>\n                    <EmptyState.Title>\n                      {this.props.i18nEmptyResultsTitle}\n                    </EmptyState.Title>\n                    <EmptyState.Info>\n                      {this.props.i18nEmptyResultsMsg}\n                    </EmptyState.Info>\n                  </EmptyState>\n                )}\n              </Container>\n            </Grid.Col>\n          </Grid.Row>\n        ) : (\n          <EmptyViewsState\n            i18nEmptyStateTitle={this.props.i18nEmptyStateTitle}\n            i18nEmptyStateInfo={this.props.i18nEmptyStateInfo}\n            i18nCreateView={this.props.i18nCreateView}\n            i18nCreateViewTip={this.props.i18nCreateViewTip}\n            i18nImportViews={this.props.i18nImportViews}\n            i18nImportViewsTip={this.props.i18nImportViewsTip}\n            linkCreateViewHRef={this.props.linkCreateViewHRef}\n            linkImportViewsHRef={this.props.linkImportViewsHRef}\n          />\n        )}\n      </PageSection>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface ISqlClientFormProps {\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render the SqlClient entry form, to be used on the Virtualization SQL client page.\n * This does *not* build the form itself, form fields should be passed as the `children` value.\n */\nexport class SqlClientForm extends React.Component<ISqlClientFormProps> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={this.props.handleSubmit}\n          >\n            Submit\n          </button>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport { VirtualizationPublishStatus } from './VirtualizationPublishStatus';\nimport { VirtualizationPublishStatusDetail } from './VirtualizationPublishStatusDetail';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","import * as H from '@syndesis/history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, PageSection } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <PageSection>\n          <ListViewToolbar {...this.props}>\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getImportVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <Button\n                  bsStyle=\"default\"\n                  to={this.props.i18nImport}\n                  onClick={this.handleImport}\n                >\n                  {this.props.i18nImport}\n                </Button>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </div>\n          </ListViewToolbar>\n          {this.props.hasListData ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateVirtualizationTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                    {this.props.i18nLinkCreateVirtualization}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </PageSection>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport {\n  Level,\n  LevelItem,\n  Text,\n  TextContent,\n  Title,\n  TitleLevel,\n} from '@patternfly/react-core';\nimport * as H from '@syndesis/history';\nimport * as React from 'react';\nimport { ButtonLink, Loader, PageSection } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onPublish - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCancel - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onSave - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * using this as its `to` parameter.\n * @param isSaveLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isSaveDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  title: string;\n  description?: string;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onPublish?: (e: React.MouseEvent<any>) => void;\n  onSave?: (e: React.MouseEvent<any>) => void;\n  saveHref?: H.LocationDescriptor;\n  cancelHref?: H.LocationDescriptor;\n  publishHref?: H.LocationDescriptor;\n  isSaveDisabled?: boolean;\n  isSaveLoading?: boolean;\n  isPublishDisabled?: boolean;\n  isPublishLoading?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  title,\n  description,\n  sidebar,\n  content,\n  onPublish,\n  onCancel,\n  onSave,\n  saveHref,\n  cancelHref,\n  publishHref,\n  isSaveLoading,\n  isSaveDisabled,\n  isPublishLoading,\n  isPublishDisabled,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div className={'integration-editor-layout'}>\n      <div className={'integration-editor-layout__header'}>\n        <PageSection variant={'light'}>\n          <Level gutter={'sm'}>\n            <LevelItem>\n              <TextContent>\n                <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n                  {title}\n                </Title>\n                <Text>{description}</Text>\n              </TextContent>\n            </LevelItem>\n            <LevelItem>\n              {(cancelHref || onCancel) && (\n                <ButtonLink onClick={onCancel} href={cancelHref}>\n                  <i className={'fa fa-angle-left'} /> Cancel\n                </ButtonLink>\n              )}\n              {(saveHref || onSave) && (\n                <ButtonLink\n                  onClick={onSave}\n                  href={saveHref}\n                  disabled={isSaveLoading || isSaveDisabled}\n                >\n                  {isSaveLoading ? <Loader size={'xs'} inline={true} /> : null}\n                  Save\n                </ButtonLink>\n              )}\n              {(publishHref || onPublish) && (\n                <ButtonLink\n                  onClick={onPublish}\n                  href={publishHref}\n                  as={'primary'}\n                  disabled={isPublishLoading || isPublishDisabled}\n                >\n                  Publish\n                </ButtonLink>\n              )}\n            </LevelItem>\n          </Level>\n        </PageSection>\n      </div>\n      <div className={'integration-editor-layout__body'}>\n        <div className={'integration-editor-layout__sidebarOuter'}>\n          <div className={'integration-editor-layout__sidebarInner'}>\n            {sidebar}\n          </div>\n        </div>\n        <div className={'integration-editor-layout__contentOuter'}>\n          <div className={'integration-editor-layout__contentInner'}>\n            {content}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from '@syndesis/history';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorWizard.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorWizardProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorWizard: React.FunctionComponent<\n  IIntegrationEditorWizardProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorWizardProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-wizard syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-wizard__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-wizard__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-wizard__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-wizard__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action?: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType?: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\nimport { HelpDropdown } from '../Shared/HelpDropdown';\nimport { AppLayoutContext } from './AppLayoutContext';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n  onShowAboutModal(): void;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  onShowAboutModal,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n\n  const [breadcrumb, setHasBreadcrumb] = React.useState(null);\n  const showBreadcrumb = (b: any) => setHasBreadcrumb(b);\n\n  return (\n    <AppLayoutContext.Provider\n      value={{\n        showBreadcrumb,\n      }}\n    >\n      <Page\n        header={\n          <PageHeader\n            logo={pictograph}\n            logoProps={{ href: logoHref }}\n            toolbar={\n              <>\n                {\n                  <HelpDropdown\n                    className=\"syn-help-dropdown\"\n                    isOpen={false}\n                    launchAboutModal={() => {\n                      onShowAboutModal();\n                    }}\n                  />\n                }\n                {appNav}\n              </>\n            }\n            showNavToggle={true}\n            isNavOpen={showNavigation}\n            onNavToggle={onNavToggle}\n          />\n        }\n        sidebar={\n          <PageSidebar\n            nav={\n              <Nav>\n                <NavList>{verticalNav}</NavList>\n              </Nav>\n            }\n            isNavOpen={showNavigation}\n          />\n        }\n        breadcrumb={breadcrumb}\n      >\n        {children}\n      </Page>\n    </AppLayoutContext.Provider>\n  );\n};\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, TextContent, Title, TitleLevel } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { PageSection } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n}) => (\n  <PageSection variant={'light'}>\n    <TextContent>\n      <Title size={'2xl'} headingLevel={TitleLevel.h1}>\n        {i18nPageTitle}\n      </Title>\n      <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n      <Text>\n        {i18nCallbackDescription} : {callbackURI}\n      </Text>\n    </TextContent>\n  </PageSection>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { PageSection } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <PageSection>\n    <ListViewToolbar {...rest} />\n    {children}\n  </PageSection>\n);\n","import { TextContent, TextList, TextListItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAboutModalContent {\n  version: string;\n  productName: string;\n  buildId: string;\n  commitId: string;\n}\n\nfunction AboutModalContent({\n  productName,\n  version,\n  buildId,\n  commitId,\n}: IAboutModalContent) {\n  return (\n    <TextContent>\n      <TextList component=\"dl\">\n        <TextListItem component=\"dt\">{productName}:</TextListItem>\n        <TextListItem component=\"dd\">{version}</TextListItem>\n        <TextListItem component=\"dt\">Build ID:</TextListItem>\n        <TextListItem component=\"dd\">{buildId}</TextListItem>\n        <TextListItem component=\"dt\">Commit ID:</TextListItem>\n        <TextListItem component=\"dd\">{commitId}</TextListItem>\n      </TextList>\n    </TextContent>\n  );\n}\n\nexport { AboutModalContent };\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import moment from 'moment';\n\nexport function toDurationDifferenceString(\n  timestamp: number,\n  defaultValue = 'n/a'\n): string {\n  if (!timestamp) {\n    return defaultValue;\n  }\n  const startDate = moment(timestamp);\n  const uptimeDuration = moment.duration(moment().diff(startDate));\n  const duration = {\n    days: uptimeDuration.days(),\n    hours: uptimeDuration.hours(),\n    minutes: uptimeDuration.minutes(),\n  };\n  const durationString = Object.keys(duration).reduce(\n    (timeSpan: string, key: string) => {\n      return duration[key] > 0\n        ? timeSpan + `${duration[key]} ${key} `\n        : timeSpan;\n    },\n    ''\n  );\n  return durationString && durationString.length > 0\n    ? durationString\n    : defaultValue;\n}\n\nexport function toDurationString(\n  timeDuration: number,\n  unit: 'ms' | 'ns'\n): string {\n  if (!timeDuration) {\n    return 'NaN';\n  }\n  if (unit === 'ns') {\n    timeDuration = timeDuration / 1000000;\n  }\n  const durationMoment = moment.duration(timeDuration);\n  const days = Math.floor(durationMoment.days());\n  const hours = Math.floor(durationMoment.hours());\n  const minutes = Math.floor(durationMoment.minutes());\n  const seconds = Math.floor(durationMoment.seconds());\n  const milliseconds = Math.floor(durationMoment.milliseconds());\n  const durationStrings: string[] = [];\n  if (days > 0) {\n    durationStrings.push(`${days} days`);\n  }\n  if (hours > 0) {\n    durationStrings.push(`${hours} hours`);\n  }\n  if (minutes > 0) {\n    durationStrings.push(`${minutes} minutes`);\n  }\n  if (seconds > 0) {\n    durationStrings.push(`${seconds} seconds`);\n  }\n  if (durationStrings.length === 0) {\n    if (milliseconds > 0) {\n      durationStrings.push(`${milliseconds} ms`);\n    } else if (timeDuration !== 0) {\n      durationStrings.push(`${timeDuration.toFixed(2)} ms`);\n    }\n  }\n  return durationStrings.join(', ').trim();\n}\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PATCH' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept && !('Accept' in headers)) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  headers?: { [name: string]: string };\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={{\n              ...(props.headers || headers),\n            }}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Replaces the current draft to the one at the specified version\n   * @param id\n   * @param version\n   */\n  replaceDraft(id: string, version: string | number): Promise<void>;\n  /**\n   * Fetches the deployment of the given integration id at the given version\n   * @param id\n   * @param version\n   */\n  getDeployment(\n    id: string,\n    version: string | number\n  ): Promise<IntegrationDeployment>;\n\n  /**\n   * Patches an integration using the supplied attributes\n   *\n   * @param id\n   * @param options\n   */\n  setAttributes(id: string, options: any): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.getDeployment = this.getDeployment.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.replaceDraft = this.replaceDraft.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n    this.setAttributes = this.setAttributes.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async getDeployment(id: string, version: string | number) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integrations/${id}/deployments/${version}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json() as IntegrationDeployment;\n  }\n\n  public async setAttributes(id: string, options: any) {\n    const response = await callFetch({\n      body: options,\n      headers: this.props.headers,\n      method: 'PATCH',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async replaceDraft(id: string, version: string | number) {\n    const deployment = await this.getDeployment(id, version);\n    await this.setAttributes(id, {\n      flows: deployment.spec!.flows,\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      getDeployment: this.getDeployment,\n      importIntegration: this.importIntegration,\n      replaceDraft: this.replaceDraft,\n      saveIntegration: this.saveIntegration,\n      setAttributes: this.setAttributes,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Activity, IntegrationDeployment } from '@syndesis/models';\nimport * as React from 'react';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IIntegrationDeploymentResponse {\n  items: IntegrationDeployment[];\n  totalCount: number;\n}\n\nexport interface IActivitiesAndDeploymentsChildrenProps {\n  activities: Activity[];\n  deployments: IntegrationDeployment[];\n  fetchDeployments: () => Promise<void>;\n  fetchActivities: () => Promise<void>;\n}\n\nexport interface IWithActivitiesProps {\n  integrationId: string;\n  children(props: IActivitiesAndDeploymentsChildrenProps): any;\n}\n\nexport class WithActivities extends React.Component<IWithActivitiesProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationDeploymentResponse>\n        url={`/integrations/${this.props.integrationId}/deployments`}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read: fetchDeployments, response: deployments }) => (\n          <SyndesisFetch<Activity[]>\n            url={`/activity/integrations/${this.props.integrationId}`}\n            defaultValue={[]}\n          >\n            {({ read: fetchActivities, response: activities }) => {\n              return this.props.children({\n                activities: activities.data,\n                deployments: deployments.data.items,\n                fetchActivities,\n                fetchDeployments,\n              });\n            }}\n          </SyndesisFetch>\n        )}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IApiVersion } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithApiVersionProps {\n  children(props: IFetchState<IApiVersion>): any;\n}\n\nexport class WithApiVersion extends React.Component<IWithApiVersionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IApiVersion>\n        url={`/version`}\n        headers={{\n          Accept: 'application/json',\n        }}\n        defaultValue={{\n          'build-id': '',\n          camelkruntimeversion: '',\n          camelversion: '',\n          'commit-id': '',\n          version: '',\n        }}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public constructor(props: IWithIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  IIntegrationOverviewWithDraft,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { WithIntegration } from './WithIntegration';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithMonitoredIntegrationProps {\n  integrationId: string;\n  disableUpdates?: boolean;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IntegrationWithMonitoring>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithMonitoredIntegration extends React.Component<\n  IWithMonitoredIntegrationProps\n> {\n  public constructor(props: IWithMonitoredIntegrationProps) {\n    super(props);\n    this.changeFilter = this.changeFilter.bind(this);\n  }\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind.startsWith('integration') &&\n      change.id.startsWith(this.props.integrationId)\n    );\n  }\n  public getMonitoredIntegration(\n    integration: IIntegrationOverviewWithDraft,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      integration,\n      monitoring: response.data.find(\n        (o: IntegrationMonitoring) => o.integrationId === integration.id\n      ),\n    };\n  }\n  public render() {\n    return (\n      <WithIntegration\n        integrationId={this.props.integrationId}\n        initialValue={this.props.initialValue}\n        disableUpdates={this.props.disableUpdates}\n      >\n        {({ data: integration, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegration(\n                  integration,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegration(\n                          integration,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegration>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationMetricsProps {\n  disableUpdates?: boolean;\n  integrationId: string;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationMetrics extends React.Component<\n  IWithIntegrationMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={`/metrics/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          errors: 0, // int64\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  Connection,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionMetadataValue(\n  connection: Connection,\n  key: string\n) {\n  const metadata = connection.metadata || {};\n  return metadata[key];\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  location.state = location.state || JSON.parse(sessionStorage.getItem(key));\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in localStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key\n        }, null, href);\n\n        try {\n          sessionStorage.setItem(key, JSON.stringify(state));\n        } catch (e) {\n          // storage full, retry after a clean. Old history entries will be nuked, so if the user will go back pages will raise exceptions. Nothing we can do about that I guess?\n          sessionStorage.clear();\n          sessionStorage.setItem(key, JSON.stringify(state));\n        }\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { PageSection, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <PageSection>\n    <Translation ns={['shared']}>\n      {t => (\n        <UnrecoverableError\n          i18nTitle={t('404.title')}\n          i18nInfo={t('404.info')}\n          i18nHelp={t('404.help')}\n          i18nRefreshLabel={t('404.refreshButton')}\n          i18nReportIssue={t('404.reportIssueButton')}\n        />\n      )}\n    </Translation>\n  </PageSection>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  // we want the effect to be run only once, so we pass the empty array to the\n  // useEffect and disable the eslint check\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []); // eslint-disable-line\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import { WithApiVersion } from '@syndesis/api';\nimport {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { AboutModal, AboutModalContent } from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute, IAppRoutes, IAppRouteWithChildrens } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoutes;\n}\n\nexport interface IAppUIState {\n  showAboutModal: boolean;\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [showAboutModal, setShowAboutModal] = useState(false);\n  const toggleAboutModal = () => {\n    setShowAboutModal(!showAboutModal);\n  };\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => {\n          const productName = 'Syndesis';\n          return (\n            <>\n              {showAboutModal && (\n                <AboutModal\n                  trademark={''}\n                  productName={productName}\n                  isModalOpen={showAboutModal}\n                  handleModalToggle={toggleAboutModal}\n                  brandImg={'https://avatars0.githubusercontent.com/u/23079786'}\n                >\n                  <WithApiVersion>\n                    {({ data }) => {\n                      const {\n                        'commit-id': commitId,\n                        'build-id': buildId,\n                        version,\n                      } = data;\n                      return (\n                        <AboutModalContent\n                          version={version}\n                          buildId={buildId}\n                          commitId={commitId}\n                          productName={productName}\n                        />\n                      );\n                    }}\n                  </WithApiVersion>\n                </AboutModal>\n              )}\n              <Notifications\n                notifications={notifications}\n                notificationTimerDelay={8000}\n                removeNotificationAction={onRemoveNotification}\n              />\n              <AppLayout\n                onShowAboutModal={toggleAboutModal}\n                appNav={\n                  <AppTopMenu username={'developer'}>\n                    <PfDropdownItem>\n                      <Link\n                        to={'/logout'}\n                        className=\"pf-c-dropdown__menu-item\"\n                        children={t('Logout')}\n                      />\n                    </PfDropdownItem>\n                  </AppTopMenu>\n                }\n                verticalNav={routes.map((route, index) =>\n                  !(route as IAppRouteWithChildrens).childrens ? (\n                    <PfVerticalNavItem\n                      exact={(route as IAppRoute).exact}\n                      label={t((route as IAppRoute).label)}\n                      to={(route as IAppRoute).to}\n                      key={index}\n                      data-testid={`navbar-link-${(route as IAppRoute).to}`}\n                    />\n                  ) : (\n                    <PfVerticalNavItem\n                      label={t(route.label)}\n                      key={index}\n                      to={'#'}\n                    >\n                      {(route as IAppRouteWithChildrens).childrens.map(\n                        (subRoute, subIndex) => (\n                          <PfVerticalNavItem\n                            exact={subRoute.exact}\n                            label={t(subRoute.label)}\n                            to={subRoute.to}\n                            key={subIndex}\n                            data-testid={`navbar-link-${subRoute.to}`}\n                          />\n                        )\n                      )}\n                    </PfVerticalNavItem>\n                  )\n                )}\n                pictograph={\n                  <img\n                    src={logo}\n                    alt=\"Syndesis\"\n                    style={{ minWidth: '164px' }}\n                  />\n                }\n                logoHref={'/'}\n                showNavigation={showNavigation}\n                onNavigationCollapse={onHideNavigation}\n                onNavigationExpand={onShowNavigation}\n              >\n                <WithRouter>\n                  {({ match }) => (\n                    <WithErrorBoundary key={match.url}>\n                      <Switch>\n                        {routes\n                          .reduce(\n                            (flattenedRoutes, route) => [\n                              ...flattenedRoutes,\n                              ...(!(route as IAppRouteWithChildrens).childrens\n                                ? [route as IAppRoute]\n                                : (route as IAppRouteWithChildrens).childrens),\n                            ],\n                            [] as IAppRoute[]\n                          )\n                          .map((route, index) => (\n                            <Route\n                              path={route.to}\n                              exact={route.exact}\n                              component={route.component}\n                              key={index}\n                            />\n                          ))}\n                        <Route component={PageNotFound} />\n                      </Switch>\n                    </WithErrorBoundary>\n                  )}\n                </WithRouter>\n              </AppLayout>\n            </>\n          );\n        }}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport type IAppRoutes = Array<IAppRoute | IAppRouteWithChildrens>;\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  label: string;\n  to: string;\n  kind: 'route';\n}\nexport interface IAppRouteWithChildrens {\n  label: string;\n  childrens: IAppRoute[];\n  kind: 'route-with-childrens';\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoutes;\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport apiClientConnectorsEn from '../../modules/apiClientConnectors/locales/api-client-connectors-translations.en.json';\nimport apiClientConnectorsIt from '../../modules/apiClientConnectors/locales/api-client-connectors-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport extensionsEn from '../../modules/extensions/locales/extensions-translations.en.json';\nimport extensionsIt from '../../modules/extensions/locales/extensions-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.apiClientConnectors = apiClientConnectorsEn;\nit.it.modules.apiClientConnectors = apiClientConnectorsIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// extensions\nen.en.modules.extensions = extensionsEn;\nit.it.modules.extensions = extensionsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      apiClientConnectors: en.en.modules.apiClientConnectors,\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      extensions: en.en.modules.extensions,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      apiClientConnectors: it.it.modules.apiClientConnectors,\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      extensions: it.it.modules.extensions,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'apiClientConnectors',\n    'connections',\n    'dashboard',\n    'extensions',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import { include } from 'named-urls';\n\nexport default include('/api-connector', {\n  apiConnector: ':apiConnectorId',\n  create: include('create/swagger-connector', {\n    review: 'review',\n    save: 'save',\n    security: 'security',\n    upload: 'upload',\n  }),\n  list: '',\n});\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  SimplePageHeader,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('apiClientConnectors:usedByOne');\n    }\n\n    return i18n.t('apiClientConnectors:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['apiClientConnectors', 'shared']}>\n                  {t => (\n                    <>\n                      <SimplePageHeader\n                        i18nTitle={t('apiConnector.apiConnectorsPageTitle')}\n                        i18nDescription={t(\n                          'apiConnector.apiConnectorsPageDescription'\n                        )}\n                      />\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        linkCreateApiConnector={routes.create.upload}\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport routes from './routes';\n\nexport class ApiClientConnectorsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.list} exact={true} component={ApiConnectorsPage} />\n      </Switch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnector: makeResolver<{ apiConnector: Connector }>(\n    routes.apiConnector,\n    ({ apiConnector }) => ({\n      params: {\n        apiConnectorId: apiConnector.id,\n      },\n      state: {\n        apiConnector,\n      },\n    })\n  ),\n  create: {\n    upload: makeResolverNoParams(routes.create.upload),\n    review: makeResolverNoParams(routes.create.review),\n    security: makeResolverNoParams(routes.create.security),\n    save: makeResolverNoParams(routes.create.save),\n  },\n  list: makeResolverNoParams(routes.list),\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n","import { include } from 'named-urls';\n\nexport default include('/extensions', {\n  extension: include(':extensionId', {\n    details: '',\n    update: 'update',\n  }),\n  import: 'import',\n  list: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  extension: {\n    details: makeResolver<{ extension: Extension }>(\n      routes.extension.details,\n      ({ extension }) => ({\n        params: {\n          extensionId: extension.id,\n        },\n        state: {\n          extension,\n        },\n      })\n    ),\n    update: makeResolver<{ extension: Extension }>(\n      routes.extension.update,\n      ({ extension }) => ({\n        params: {\n          extensionId: extension.id,\n        },\n        state: {\n          extension,\n        },\n      })\n    ),\n  },\n  import: makeResolverNoParams(routes.import),\n  list: makeResolverNoParams(routes.list),\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport {\n  ConnectionOverview,\n  IIntegrationOverviewWithDraft,\n  Integration,\n} from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IDetailsRouteParams,\n  IDetailsRouteState,\n} from './pages/detail/interfaces';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.activity, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.details, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integrationId: string; integration?: IIntegrationOverviewWithDraft },\n  IDetailsRouteParams,\n  IDetailsRouteState\n>(routes.integration.metrics, ({ integrationId, integration }) => ({\n  params: {\n    integrationId,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import apiClientConnectors from './apiClientConnectors/resolvers';\nimport connections from './connections/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport extensions from './extensions/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  apiClientConnectors,\n  connections,\n  dashboard,\n  data,\n  extensions,\n  integrations,\n  settings,\n};\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { ConnectionOverview } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: ConnectionOverview[];\n\n  getConnectionHref(connection: ConnectionOverview): H.LocationDescriptor;\n  getConnectionEditHref?(connection: ConnectionOverview): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <Translation ns={['connections', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => {\n              return (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              const configurationRequired =\n                                c.board &&\n                                (c.board!.notices ||\n                                  c.board!.warnings ||\n                                  c.board!.errors)! > 0;\n\n                              const isTechPreview =\n                                c.connector! && c.connector!.metadata!\n                                  ? c.connector!.metadata!['tech-preview'] ===\n                                    'true'\n                                  : false;\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    configurationRequired={\n                                      configurationRequired\n                                    }\n                                    description={c.description || ''}\n                                    icon={\n                                      // dirty hack to handle connection-like objects coming from the editor\n                                      c.icon &&\n                                      c.icon.includes(process.env.PUBLIC_URL)\n                                        ? c.icon\n                                        : getConnectionIcon(\n                                            process.env.PUBLIC_URL,\n                                            c\n                                          )\n                                    }\n                                    href={this.props.getConnectionHref(c)}\n                                    i18nCannotDelete={t('cannotDelete')}\n                                    i18nConfigurationRequired={t(\n                                      'configurationRequired'\n                                    )}\n                                    i18nTechPreview={t('techPreview')}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props\n                                              .getConnectionEditHref!(c),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                    techPreview={isTechPreview}\n                                    techPreviewPopoverHtml={\n                                      <span\n                                        dangerouslySetInnerHTML={{\n                                          __html: t('techPreviewPopoverHtml'),\n                                        }}\n                                      />\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              );\n            }}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IConnectionsListViewProps,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps\n  extends IConnectionsProps,\n    Pick<IConnectionsListViewProps, 'createConnectionButtonStyle'> {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['connections', 'shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  createConnectionButtonStyle={\n                    this.props.createConnectionButtonStyle\n                  }\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={this.props.includeConnectionMenu}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <>\n        <UIContext.Consumer>\n          {({ pushNotification }) => {\n            return (\n              <WithRouteData<\n                IConnectionDetailsRouteParams,\n                IConnectionDetailsRouteState\n              >>\n                {({ connectionId }, { connection }, { history, location }) => (\n                  <Translation ns={['connections', 'shared']}>\n                    {t => (\n                      <WithConnectionHelpers>\n                        {({\n                          updateConnection,\n                          saveConnection,\n                          validateName,\n                        }) => {\n                          return (\n                            <WithConnection\n                              id={connectionId}\n                              initialValue={connection}\n                              key={location.key}\n                            >\n                              {({ data, hasData, error }) => {\n                                const save = async ({\n                                  name,\n                                  description,\n                                  configuredProperties,\n                                }: {\n                                  name?: string;\n                                  description?: string;\n                                  configuredProperties?: {\n                                    [key: string]: string;\n                                  };\n                                }): Promise<boolean> => {\n                                  const updatedConnection = updateConnection(\n                                    data,\n                                    name,\n                                    description,\n                                    configuredProperties\n                                  );\n                                  try {\n                                    await saveConnection(updatedConnection);\n                                    history.push(\n                                      resolvers.connections.connection.details({\n                                        connection: updatedConnection,\n                                      })\n                                    );\n                                    return true;\n                                  } catch (error) {\n                                    pushNotification(\n                                      t('errorSavingConnection'),\n                                      'error'\n                                    );\n                                    return false;\n                                  }\n                                };\n\n                                const saveDescription = async (\n                                  description: string\n                                ): Promise<boolean> => {\n                                  this.setState({ isWorking: true });\n                                  const saved = await save({ description });\n                                  this.setState({ isWorking: false });\n                                  return saved;\n                                };\n\n                                const saveName = async (\n                                  name: string\n                                ): Promise<boolean> => {\n                                  let saved = false;\n                                  this.setState({ isWorking: true });\n                                  const validation = await doValidateName(name);\n                                  if (validation === true) {\n                                    saved = await save({ name });\n                                  } else {\n                                    pushNotification(validation, 'error');\n                                  }\n                                  this.setState({ isWorking: false });\n                                  return saved;\n                                };\n\n                                const saveConnector = async (\n                                  configuredProperties: {\n                                    [key: string]: string;\n                                  },\n                                  actions: any\n                                ): Promise<void> => {\n                                  this.setState({ isWorking: true });\n                                  await save({ configuredProperties });\n                                  actions.setSubmitting(false);\n                                  this.setState({ isWorking: false });\n                                };\n\n                                /**\n                                 * Backend validation only occurs when save has been called.\n                                 * @param proposedName the name to validate\n                                 */\n                                const doValidateName = async (\n                                  proposedName: string\n                                ): Promise<true | string> => {\n                                  // make sure name has a value\n                                  if (proposedName === '') {\n                                    return t(\n                                      'shared:requiredFieldMessage'\n                                    ) as string;\n                                  }\n\n                                  const response: IValidationResult = await validateName(\n                                    connection!,\n                                    proposedName\n                                  );\n\n                                  if (!response.isError) {\n                                    return true;\n                                  }\n\n                                  if (response.error === 'UniqueProperty') {\n                                    const msg = t('duplicateNameError');\n                                    return msg\n                                      ? msg\n                                      : 'connections:duplicateNameError';\n                                  }\n\n                                  return response.message\n                                    ? response.message\n                                    : t('errorValidatingName')\n                                    ? t('errorValidatingName')!\n                                    : 'connections:errorValidatingName'; // return missing i18n key\n                                };\n\n                                const cancelEditing = () => {\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: data,\n                                    })\n                                  );\n                                };\n\n                                const startEditing = () => {\n                                  history.push(\n                                    resolvers.connections.connection.edit({\n                                      connection: data,\n                                    })\n                                  );\n                                };\n\n                                return (\n                                  <WithLoader\n                                    error={error}\n                                    loading={!hasData}\n                                    loaderChildren={<Loader />}\n                                    errorChildren={<ApiError />}\n                                  >\n                                    {() => {\n                                      return (\n                                        <WithConnectorForm\n                                          connector={data.connector!}\n                                          initialValue={\n                                            data.configuredProperties\n                                          }\n                                          disabled={!this.props.edit}\n                                          onSave={saveConnector}\n                                        >\n                                          {({\n                                            fields,\n                                            handleSubmit,\n                                            validationResults,\n                                            dirty,\n                                            isSubmitting,\n                                            isValid,\n                                            isValidating,\n                                            validateForm,\n                                          }) => (\n                                            <>\n                                              <Breadcrumb>\n                                                <Link\n                                                  to={resolvers.dashboard.root()}\n                                                >\n                                                  {t('shared:Home')}\n                                                </Link>\n                                                <Link\n                                                  to={resolvers.connections.connections()}\n                                                >\n                                                  {t('shared:Connections')}\n                                                </Link>\n                                                <span>\n                                                  {t(\n                                                    'connectionDetailPageTitle'\n                                                  )}\n                                                </span>\n                                              </Breadcrumb>\n                                              <ConnectionDetailsHeader\n                                                allowEditing={true}\n                                                connectionDescription={\n                                                  data.description\n                                                }\n                                                connectionIcon={getConnectionIcon(\n                                                  process.env.PUBLIC_URL,\n                                                  data\n                                                )}\n                                                connectionName={data.name}\n                                                i18nDescriptionLabel={t(\n                                                  'shared:Description'\n                                                )}\n                                                i18nDescriptionPlaceholder={t(\n                                                  'descriptionPlaceholder'\n                                                )}\n                                                i18nNamePlaceholder={t(\n                                                  'namePlaceholder'\n                                                )}\n                                                i18nUsageLabel={t(\n                                                  'shared:Usage'\n                                                )}\n                                                i18nUsageMessage={this.getUsedByMessage(\n                                                  data\n                                                )}\n                                                isWorking={this.state.isWorking}\n                                                onChangeDescription={\n                                                  saveDescription\n                                                }\n                                                onChangeName={saveName}\n                                              />\n                                              <ConnectionDetailsForm\n                                                i18nCancelLabel={t(\n                                                  'shared:Cancel'\n                                                )}\n                                                i18nEditLabel={t('shared:Edit')}\n                                                i18nSaveLabel={t('shared:Save')}\n                                                i18nTitle={t(\n                                                  'detailsSectionTitle',\n                                                  {\n                                                    connectionName: data.name,\n                                                  }\n                                                )}\n                                                i18nValidateLabel={t(\n                                                  'shared:Validate'\n                                                )}\n                                                handleSubmit={handleSubmit}\n                                                isValid={!dirty || isValid}\n                                                isWorking={\n                                                  isSubmitting || isValidating\n                                                }\n                                                validationResults={\n                                                  validationResults\n                                                }\n                                                isEditing={this.props.edit}\n                                                onCancelEditing={cancelEditing}\n                                                onStartEditing={startEditing}\n                                                onValidate={validateForm}\n                                              >\n                                                {fields}\n                                              </ConnectionDetailsForm>\n                                            </>\n                                          )}\n                                        </WithConnectorForm>\n                                      );\n                                    }}\n                                  </WithLoader>\n                                );\n                              }}\n                            </WithConnection>\n                          );\n                        }}\n                      </WithConnectionHelpers>\n                    )}\n                  </Translation>\n                )}\n              </WithRouteData>\n            );\n          }}\n        </UIContext.Consumer>\n      </>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { SimplePageHeader } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['connections', 'shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <>\n                <PageTitle title={'Connections'} />\n                <SimplePageHeader\n                  i18nTitle={t('shared:Connections')}\n                  i18nDescription={t('connectionListDescription')}\n                />\n                <ConnectionsWithToolbar\n                  error={error}\n                  includeConnectionMenu={true}\n                  loading={!hasData}\n                  connections={data.connectionsForDisplay}\n                  getConnectionHref={connection =>\n                    resolvers.connection.details({ connection })\n                  }\n                  getConnectionEditHref={connection =>\n                    resolvers.connection.edit({ connection })\n                  }\n                />\n              </>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['connections', 'shared']}>\n        {t => (\n          <WithConnectors>\n            {({ data, hasData, error }) => (\n              <>\n                <PageTitle title={'Select connector'} />\n                <ConnectionCreatorLayout\n                  header={<ConnectionCreatorBreadcrumbs step={1} />}\n                  content={\n                    <ConnectionsGrid>\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <>\n                            {new Array(5).fill(0).map((_, index) => (\n                              <ConnectionsGridCell key={index}>\n                                <ConnectionSkeleton />\n                              </ConnectionsGridCell>\n                            ))}\n                          </>\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          data.connectorsForDisplay\n                            .sort((a, b) => a.name.localeCompare(b.name))\n                            .map((connector, index) => {\n                              const isTechPreview =\n                                connector!.metadata! &&\n                                connector!.metadata!['tech-preview'] === 'true';\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    configurationRequired={false}\n                                    name={connector.name}\n                                    description={connector.description || ''}\n                                    i18nCannotDelete={t('cannotDelete')}\n                                    i18nConfigurationRequired={t(\n                                      'configurationRequired'\n                                    )}\n                                    i18nTechPreview={t('techPreview')}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      connector as IConnectionWithIconFile\n                                    )}\n                                    href={resolvers.create.configureConnector({\n                                      connector,\n                                    })}\n                                    techPreview={isTechPreview}\n                                    techPreviewPopoverHtml={\n                                      <span\n                                        dangerouslySetInnerHTML={{\n                                          __html: t('techPreviewPopoverHtml'),\n                                        }}\n                                      />\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                        }\n                      </WithLoader>\n                    </ConnectionsGrid>\n                  }\n                  cancelHref={resolvers.connections()}\n                />\n              </>\n            )}\n          </WithConnectors>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb, PageSection } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <PageSection noPadding={true}>\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.connections()}>Connections</Link>\n            <span>Create connection</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.create.selectConnector}\n              exact={true}\n              component={create.ConnectorsPage}\n            />\n            <Route\n              path={routes.create.configureConnector}\n              exact={true}\n              component={create.ConfigurationPage}\n            />\n            <Route\n              path={routes.create.review}\n              exact={true}\n              component={create.ReviewPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      </PageSection>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationOverview } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IWithIntegrationActionsChildrenProps {\n  ciCdAction: IIntegrationAction;\n  deleteAction: IIntegrationAction;\n  editAction: IIntegrationAction;\n  exportAction: IIntegrationAction;\n  startAction: IIntegrationAction;\n  stopAction: IIntegrationAction;\n  actions: IIntegrationAction[];\n}\n\nexport interface IWithIntegrationActionsProps {\n  integration: IntegrationOverview;\n  children: (props: IWithIntegrationActionsChildrenProps) => any;\n}\n\nexport interface IWithIntegrationActionsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\nexport interface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class WithIntegrationActions extends React.Component<\n  IWithIntegrationActionsProps,\n  IWithIntegrationActionsState\n> {\n  constructor(props: IWithIntegrationActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({\n                  deleteIntegration,\n                  deployIntegration,\n                  exportIntegration,\n                  undeployIntegration,\n                  tagIntegration,\n                }) => {\n                  const editAction: IIntegrationAction = {\n                    href: resolvers.integration.edit.index({\n                      flowId: this.props.integration.flows![0].id!,\n                      integration: this.props.integration,\n                    }),\n                    label: 'Edit',\n                  };\n                  const startAction: IIntegrationAction = {\n                    label: 'Start',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!,\n                              false\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:PublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopAction: IIntegrationAction = {\n                    label: 'Stop',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integration.id!,\n                              this.props.integration.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:UnpublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const deleteAction: IIntegrationAction = {\n                    label: 'Delete',\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:DeletingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deleteIntegration(this.props.integration.id!);\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:DeletingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.DANGER,\n                        promptDialogButtonText: t('shared:Delete'),\n                        promptDialogIcon: ConfirmationIconType.DANGER,\n                        promptDialogText: t(\n                          'integrations:deleteIntegrationModal',\n                          { name: this.props.integration.name }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:deleteIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const exportAction: IIntegrationAction = {\n                    label: 'Export',\n                    onClick: () =>\n                      exportIntegration(\n                        this.props.integration.id!,\n                        `${this.props.integration.name}-export.zip`\n                      ),\n                  };\n                  const ciCdAction: IIntegrationAction = {\n                    label: 'Manage CI/CD',\n                    onClick: () => {\n                      this.promptForCiCd(this.props.integration.id!);\n                    },\n                  };\n\n                  const actions: IIntegrationAction[] = [];\n                  if (canEdit(this.props.integration)) {\n                    actions.push(editAction);\n                  }\n                  if (canActivate(this.props.integration)) {\n                    actions.push(startAction);\n                  }\n                  if (canDeactivate(this.props.integration)) {\n                    actions.push(stopAction);\n                  }\n                  actions.push(deleteAction);\n                  actions.push(exportAction);\n                  actions.push(ciCdAction);\n                  return (\n                    <>\n                      {this.state.showCiCdPromptDialog && (\n                        <TagIntegrationDialogWrapper\n                          manageCiCdHref={resolvers.manageCicd.root()}\n                          tagIntegration={tagIntegration}\n                          targetIntegrationId={this.state.targetIntegrationId!}\n                          onSave={this.closeCiCdDialog}\n                          onHide={this.closeCiCdDialog}\n                        />\n                      )}\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        actions,\n                        ciCdAction,\n                        deleteAction,\n                        editAction,\n                        exportAction,\n                        startAction,\n                        stopAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { getFinishIcon, getStartIcon } from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../app';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { WithIntegrationActions } from './WithIntegrationActions';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport class Integrations extends React.Component<IIntegrationsProps> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <IntegrationsList>\n                <WithLoader\n                  error={this.props.error}\n                  loading={this.props.loading}\n                  loaderChildren={<IntegrationsListSkeleton />}\n                  errorChildren={<ApiError />}\n                >\n                  {() =>\n                    this.props.integrations.map(\n                      (mi: IntegrationWithMonitoring) => {\n                        try {\n                          return (\n                            <WithIntegrationActions\n                              key={mi.integration.id}\n                              integration={mi.integration}\n                            >\n                              {({ actions }) => (\n                                <IntegrationsListItem\n                                  integrationName={mi.integration.name}\n                                  currentState={mi.integration!.currentState!}\n                                  targetState={mi.integration!.targetState!}\n                                  isConfigurationRequired={\n                                    !!(\n                                      mi.integration!.board!.warnings ||\n                                      mi.integration!.board!.errors ||\n                                      mi.integration!.board!.notices\n                                    )\n                                  }\n                                  monitoringValue={\n                                    mi.monitoring &&\n                                    t(\n                                      'integrations:' +\n                                        mi.monitoring.detailedState.value\n                                    )\n                                  }\n                                  monitoringCurrentStep={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.currentStep\n                                  }\n                                  monitoringTotalSteps={\n                                    mi.monitoring &&\n                                    mi.monitoring.detailedState.totalSteps\n                                  }\n                                  monitoringLogUrl={getPodLogUrl(mi.monitoring)}\n                                  startConnectionIcon={getStartIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  finishConnectionIcon={getFinishIcon(\n                                    process.env.PUBLIC_URL,\n                                    mi.integration\n                                  )}\n                                  actions={\n                                    <IntegrationActions\n                                      integrationId={mi.integration!.id!}\n                                      actions={actions}\n                                      detailsHref={resolvers.integration.details(\n                                        {\n                                          integrationId: mi.integration.id!,\n                                        }\n                                      )}\n                                    />\n                                  }\n                                  i18nConfigurationRequired={t(\n                                    'integrations:ConfigurationRequired'\n                                  )}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                  i18nProgressPending={t('shared:Pending')}\n                                  i18nProgressStarting={t(\n                                    'integrations:progressStarting'\n                                  )}\n                                  i18nProgressStopping={t(\n                                    'integrations:progressStopping'\n                                  )}\n                                  i18nLogUrlText={t('shared:viewLogs')}\n                                />\n                              )}\n                            </WithIntegrationActions>\n                          );\n                        } catch (e) {\n                          return (\n                            <IntegrationsListItemUnreadable\n                              key={mi.integration.id}\n                              integrationName={\n                                (mi && mi.integration && mi.integration.name) ||\n                                'An integration'\n                              }\n                              i18nDescription={\n                                \"Sorry, we can't display more information about this integration right now.\"\n                              }\n                              rawObject={JSON.stringify(\n                                mi.integration,\n                                null,\n                                2\n                              )}\n                            />\n                          );\n                        }\n                      }\n                    )\n                  }\n                </WithLoader>\n              </IntegrationsList>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                  integrationId: integration.id!,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  chooseActionHref: H.LocationDescriptor;\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  i18nChooseAction={'Choose Action'}\n                  i18nNext={'Next'}\n                  isValid={isValid}\n                  submitForm={submitForm}\n                  handleSubmit={handleSubmit}\n                  chooseActionHref={this.props.chooseActionHref}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nAlert={'There are no properties to configure for this action.'}\n          i18nChooseAction={'Choose Action'}\n          i18nNext={'Next'}\n          submitForm={submitForm}\n          chooseActionHref={this.props.chooseActionHref}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport {\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n  LeveledMessage,\n} from '@syndesis/models';\nimport {\n  AlertLevel,\n  IMenuActions,\n  InlineTextEdit,\n  IntegrationBulletinBoardAlert,\n  IntegrationDetailBreadcrumb,\n  IntegrationDetailEditableName,\n  IntegrationDetailInfo,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../shared';\n\nexport interface IIntegrationDetailHeaderProps {\n  data: IntegrationWithMonitoring;\n  startAction: IMenuActions;\n  stopAction: IMenuActions;\n  deleteAction: IMenuActions;\n  ciCdAction: IMenuActions;\n  editAction: IMenuActions;\n  exportAction: IMenuActions;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nfunction toAlertLevel(level: 'ERROR' | 'WARN' | 'INFO') {\n  switch (level) {\n    case 'WARN':\n      return AlertLevel.WARN;\n    case 'ERROR':\n      return AlertLevel.ERROR;\n    default:\n      return AlertLevel.INFO;\n  }\n}\n\nexport const IntegrationDetailHeader: React.FunctionComponent<\n  IIntegrationDetailHeaderProps\n> = (props: IIntegrationDetailHeaderProps) => {\n  const breadcrumbMenuActions: IMenuActions[] = [];\n  if (canActivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.startAction);\n  }\n  if (canDeactivate(props.data.integration)) {\n    breadcrumbMenuActions.push(props.stopAction);\n  }\n  breadcrumbMenuActions.push(props.deleteAction);\n  breadcrumbMenuActions.push(props.ciCdAction);\n\n  return (\n    <Translation ns={['integrations', 'shared']}>\n      {t => {\n        const bbMap = (\n          (props.data.integration.board &&\n            props.data.integration.board.messages) ||\n          []\n        ).reduce((acc, current, index, arr) => {\n          try {\n            if (!current) {\n              return acc;\n            }\n            const key = current.code || current.message;\n            if (!key || key === '') {\n              return acc;\n            }\n            if (!(key in acc)) {\n              acc[key] = current;\n              return acc;\n            }\n            acc[key].detail += (\n              acc[key].detail +\n              '\\n\\n' +\n              current.detail\n            ).substring(0, 256);\n          } catch (err) {\n            // skip that one and keep going\n          }\n          return acc;\n        }, {});\n        const bulletinBoards = Object.keys(bbMap).map(\n          (key: string) => bbMap[key]\n        );\n        return (\n          <>\n            <IntegrationDetailBreadcrumb\n              editHref={props.editAction.href}\n              editLabel={props.editAction.label}\n              exportAction={props.exportAction.onClick}\n              exportHref={props.exportAction.href}\n              exportLabel={props.exportAction.label}\n              homeHref={resolvers.dashboard.root()}\n              i18nHome={t('shared:Home')}\n              i18nIntegrations={t('shared:Integrations')}\n              i18nPageTitle={t('integrations:detail:pageTitle')}\n              integrationId={props.data.integration.id}\n              integrationsHref={resolvers.integrations.list()}\n              menuActions={breadcrumbMenuActions}\n            />\n\n            <PageSection variant={'light'}>\n              <IntegrationDetailInfo\n                name={\n                  <WithIntegrationHelpers>\n                    {({ setAttributes }) => {\n                      const handleChange = async (name: string) => {\n                        try {\n                          await setAttributes(props.data.integration.id!, {\n                            name,\n                          });\n                          return true;\n                        } catch (err) {\n                          return false;\n                        }\n                      };\n                      return (\n                        <IntegrationDetailEditableName\n                          name={\n                            <InlineTextEdit\n                              value={props.data.integration.name}\n                              allowEditing={true}\n                              isTextArea={false}\n                              onChange={handleChange}\n                            />\n                          }\n                        />\n                      );\n                    }}\n                  </WithIntegrationHelpers>\n                }\n                version={props.data.integration.version}\n                currentState={props.data.integration.currentState!}\n                targetState={props.data.integration.targetState!}\n                monitoringValue={\n                  props.data.monitoring &&\n                  t('integrations:' + props.data.monitoring.detailedState.value)\n                }\n                monitoringCurrentStep={\n                  props.data.monitoring &&\n                  props.data.monitoring.detailedState.currentStep\n                }\n                monitoringTotalSteps={\n                  props.data.monitoring &&\n                  props.data.monitoring.detailedState.totalSteps\n                }\n                monitoringLogUrl={props.getPodLogUrl(props.data.monitoring)}\n                i18nProgressPending={t('shared:Pending')}\n                i18nProgressStarting={t('integrations:progressStarting')}\n                i18nProgressStopping={t('integrations:progressStopping')}\n                i18nLogUrlText={t('shared:viewLogs')}\n              />\n            </PageSection>\n            <PageSection variant={'light'}>\n              {bulletinBoards.map((message: LeveledMessage, index) => (\n                <IntegrationBulletinBoardAlert\n                  key={index}\n                  level={toAlertLevel(message.level || 'INFO')}\n                  message={\n                    message.message\n                      ? message.message\n                      : t(`shared:${message.code!.toLocaleLowerCase()}`)\n                  }\n                  detail={message.detail}\n                  i18nTextExpanded={t('shared:HideDetails')}\n                  i18nTextCollapsed={t('shared:ShowDetails')}\n                />\n              ))}\n            </PageSection>\n            <PageSection variant={'light'} noPadding={true}>\n              <IntegrationDetailNavBar integration={props.data.integration} />\n            </PageSection>\n          </>\n        );\n      }}\n    </Translation>\n  );\n};\n","import {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  ENDPOINT,\n  getExtensionIcon,\n  getStepIcon,\n  getStepsLastPosition,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport {\n  Connection,\n  ConnectionOverview,\n  ConnectorAction,\n  DataShape,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function getStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport function toUIStepKind(step: Step): IUIStep {\n  const uiStepKind = getStepKind(step);\n  const inputDataShape =\n    step.action &&\n    step.action.descriptor &&\n    step.action.descriptor.inputDataShape;\n  const outputDataShape =\n    step.action &&\n    step.action.descriptor &&\n    step.action.descriptor.outputDataShape;\n  switch (uiStepKind) {\n    case 'extension':\n      // An extension needs special mapping\n      return {\n        ...step,\n        description:\n          (step as StepKind).description ||\n          (step as StepKind).extension!.description ||\n          '',\n        icon: getStepIcon(process.env.PUBLIC_URL, step),\n        inputDataShape,\n        metadata: {\n          ...(step.extension!.metadata || {}),\n          ...(step.metadata || {}),\n        },\n        name: step.name || step.extension!.name,\n        outputDataShape,\n        properties: step.action!.descriptor!.propertyDefinitionSteps![0]\n          .properties,\n        title: step.name!,\n        uiStepKind,\n      };\n    case 'api-provider':\n    case 'endpoint':\n    case 'connector':\n      // this step is a Connection step\n      return {\n        ...step,\n        description:\n          (step as ConnectionOverview).description ||\n          step.connection!.description ||\n          '',\n        icon: getStepIcon(process.env.PUBLIC_URL, step),\n        inputDataShape,\n        metadata: {\n          ...(step.connection!.metadata || {}),\n          ...(step.metadata || {}),\n        },\n        name: step.name || step.connection!.connector!.name!,\n        outputDataShape,\n        properties:\n          step.action &&\n          step.action.descriptor &&\n          step.action.descriptor.propertyDefinitionSteps &&\n          step.action.descriptor.propertyDefinitionSteps.length &&\n          step.action.descriptor.propertyDefinitionSteps[0].properties,\n        title:\n          `${(step.connection && step.connection.name) || '<unknown>'}` +\n          step.action\n            ? ` - ${(step.action && step.action.name) || '<unknown>'}`\n            : '',\n        uiStepKind,\n      };\n    default:\n      // this is a regular built-in step\n      const name = step.name || step.stepKind || 'Step';\n      return {\n        ...(step as StepKind),\n        icon: getStepIcon(process.env.PUBLIC_URL, step),\n        inputDataShape,\n        metadata: step.metadata || {},\n        name,\n        outputDataShape,\n        title: name,\n        uiStepKind,\n      };\n  }\n}\n\nexport function toUIStepKindCollection(steps: Step[]): IUIStep[] {\n  return steps.map(toUIStepKind);\n}\n\nexport function getDataShapeText(stepKind: string, dataShape?: DataShape) {\n  if (!dataShape) {\n    return undefined;\n  }\n  const isCollection =\n    dataShape.metadata && dataShape.metadata.variant === 'collection';\n  let answer: string | undefined = dataShape.name;\n  if (dataShape.kind) {\n    if (dataShape.kind === (DataShapeKinds.ANY as string)) {\n      answer = 'ANY';\n    } else if (dataShape.kind === (DataShapeKinds.NONE as string)) {\n      answer = undefined;\n    } else if (!dataShape.type) {\n      answer = dataShape.kind;\n    }\n  }\n  // TODO \"split\" currently appears to have variant set but maybe it shouldn't\n  if (answer && isCollection && stepKind !== SPLIT) {\n    answer = answer + ' (Collection)';\n  }\n  return answer;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (getStepKind(step)) {\n    case 'endpoint':\n    case 'connector':\n      return hrefs.connectionHref(\n        typeof (step as IUIStep).uiStepKind !== 'undefined'\n          ? (step as IUIStep).connection!\n          : (step as ConnectionOverview),\n        params,\n        state\n      );\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    default:\n      return hrefs.stepHref(step, params, state);\n  }\n};\n\nexport function mergeConnectionsSources(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(connection =>\n      toUIStepKind({\n        connection,\n        name: connection.name,\n        stepKind: ENDPOINT,\n      } as StepKind)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push(\n              toUIStepKind({\n                action: a,\n                configuredProperties: undefined,\n                description: a.description || '',\n                extension,\n                icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n                metadata: (extension.metadata as { [name: string]: any }) || {},\n                name: a.name,\n                properties,\n                stepKind: 'extension',\n                title: a.name,\n              } as StepKind)\n            );\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => toUIStepKind(s)),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step.connection || (step as Connection)).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind !== 'endpoint') {\n        return false;\n      }\n      if ((step.connection || (step as Connection)).connector) {\n        return (\n          step.connection || (step as Connection)\n        ).connector!.actions.some((action: ConnectorAction) => {\n          return action.pattern === 'From';\n        });\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if (\n      (step.connection || (step as Connection)).connectorId === 'api-provider'\n    ) {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step.connection || (step as Connection)).connector) {\n      return (step.connection || (step as Connection)).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(\n  steps: StepKind[],\n  position: number,\n  flowSteps: Step[]\n) {\n  const previousSteps = flowSteps.slice(0, position);\n  const subsequentSteps = flowSteps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s => {\n    if (typeof s.visible === 'function') {\n      return s.visible(position, previousSteps, subsequentSteps);\n    }\n    return true;\n  });\n}\n","import {\n  ENDPOINT,\n  getIntegrationStepIcon,\n  getSteps,\n  HIDE_FROM_CONNECTION_PAGES,\n} from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport resolvers from '../../resolvers';\nimport { IUIStep } from './editor/interfaces';\nimport { toUIStepKindCollection } from './editor/utils';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <PageSection variant={'light'}>\n        <IntegrationStepsHorizontalView>\n          {toUIStepKindCollection(steps).map((s: IUIStep, idx: number) => {\n            const isFirst = idx === 0;\n            const stepUri =\n              s.stepKind === ENDPOINT && !s.metadata[HIDE_FROM_CONNECTION_PAGES]\n                ? resolvers.connections.connection.details({\n                    connection: s.connection!,\n                  }).pathname\n                : undefined;\n\n            return (\n              <React.Fragment key={s.id}>\n                <IntegrationStepsHorizontalItem\n                  name={s.name}\n                  title={s.title}\n                  icon={getIntegrationStepIcon(\n                    process.env.PUBLIC_URL,\n                    this.props.integration,\n                    flowId,\n                    idx\n                  )}\n                  href={stepUri}\n                  isFirst={isFirst}\n                />\n              </React.Fragment>\n            );\n          })}\n        </IntegrationStepsHorizontalView>\n      </PageSection>\n    );\n  }\n}\n","import {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { IUIStep } from './editor/interfaces';\nimport { getDataShapeText } from './editor/utils';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: IUIStep[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                <IntegrationFlowStepWithOverview\n                  icon={\n                    <img alt={'Step'} src={s.icon} width={24} height={24} />\n                  }\n                  i18nTitle={`${position}. ${s.name}`}\n                  i18nTooltip={`${position}. ${s.title}`}\n                  active={isActive}\n                  showDetails={expanded}\n                  name={s.name}\n                  action={s.action && s.action.name!}\n                  dataType={\n                    idx === 0\n                      ? getDataShapeText(s.stepKind!, s.outputDataShape)\n                      : getDataShapeText(s.stepKind!, s.inputDataShape)\n                  }\n                />\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getStepIcon } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n  PageSection,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <PageSection>\n        <IntegrationEditorStepsList>\n          {this.props.steps.map((s, idx) => {\n            return (\n              <React.Fragment key={idx}>\n                <IntegrationEditorStepsListItem\n                  stepName={s.name!}\n                  stepDescription={s.action ? s.action.name : ''}\n                  icon={\n                    <img\n                      alt={'Step'}\n                      src={getStepIcon(process.env.PUBLIC_URL, s)}\n                      width={24}\n                      height={24}\n                    />\n                  }\n                  actions={\n                    <>\n                      <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                        Configure\n                      </ButtonLink>\n                      <ButtonLink href={'#'} as={'danger'}>\n                        <i className=\"fa fa-trash\" />\n                      </ButtonLink>\n                    </>\n                  }\n                />\n                {idx < this.props.steps.length - 1 && (\n                  <IntegrationFlowAddStep\n                    active={false}\n                    showDetails={false}\n                    addStepHref={this.props.addStepHref(idx + 1)}\n                    i18nAddStep={'Add a step'}\n                  />\n                )}\n              </React.Fragment>\n            );\n          })}\n        </IntegrationEditorStepsList>\n      </PageSection>\n    );\n  }\n}\n","import {\n  WithConnections,\n  WithIntegrationsMetrics,\n  WithMonitoredIntegrations,\n} from '@syndesis/api';\nimport { IntegrationOverview, IntegrationWithOverview } from '@syndesis/models';\nimport {\n  AggregatedMetricCard,\n  ConnectionsMetric,\n  Dashboard,\n  IntegrationBoard,\n  RecentUpdatesCard,\n  RecentUpdatesItem,\n  RecentUpdatesSkeleton,\n  TopIntegrationsCard,\n  UptimeMetric,\n} from '@syndesis/ui';\nimport { toDurationDifferenceString, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\nimport { Connections } from '../../connections/components';\nimport { Integrations } from '../../integrations/components';\nimport resolvers from '../../resolvers';\n\nexport interface IIntegrationCountsByState {\n  Error: number;\n  Pending: number;\n  Published: number;\n  Unpublished: number;\n}\n\nexport function getIntegrationsCountsByState(\n  integrations: IntegrationWithOverview[]\n): IIntegrationCountsByState {\n  return integrations.reduce(\n    (counts, mi) => {\n      const stateCount = counts[mi.integration.currentState!] || 0;\n      return {\n        ...counts,\n        [mi.integration.currentState!]: stateCount + 1,\n      };\n    },\n    {\n      Error: 0,\n      Pending: 0,\n      Published: 0,\n      Unpublished: 0,\n    } as IIntegrationCountsByState\n  );\n}\n\nexport function getTimestamp(integration: IntegrationOverview) {\n  return integration.updatedAt !== 0\n    ? integration.updatedAt\n    : integration.createdAt;\n}\n\nexport function byTimestamp(a: IntegrationOverview, b: IntegrationOverview) {\n  const aTimestamp = getTimestamp(a) || 0;\n  const bTimestamp = getTimestamp(b) || 0;\n  return bTimestamp - aTimestamp;\n}\n\nexport function getRecentlyUpdatedIntegrations(\n  integrations: IntegrationWithOverview[]\n): IntegrationOverview[] {\n  return integrations\n    .map(mi => mi.integration)\n    .sort(byTimestamp)\n    .slice(0, 5);\n}\n\nexport function getTopIntegrations(\n  integrations: IntegrationWithOverview[],\n  topIntegrations: { [name: string]: number } = {}\n): IntegrationWithOverview[] {\n  const topIntegrationsArray = Object.keys(topIntegrations)\n    .map(key => {\n      return {\n        count: topIntegrations[key],\n        id: key,\n      } as any;\n    })\n    .sort((a, b) => {\n      return b.count - a.count;\n    });\n\n  return integrations\n    .sort((miA, miB) => byTimestamp(miA.integration, miB.integration))\n    .sort((a, b) => {\n      const index = topIntegrationsArray.findIndex(\n        i => i.id === b.integration.id\n      );\n      return index === -1 ? topIntegrationsArray.length + 1 : index;\n    })\n    .reverse()\n    .slice(0, 5);\n}\n\nexport default () => (\n  <WithMonitoredIntegrations>\n    {({\n      data: integrationsData,\n      hasData: hasIntegrations,\n      error: integrationsError,\n    }) => (\n      <WithIntegrationsMetrics>\n        {({ data: metricsData }) => (\n          <WithConnections>\n            {({\n              data: connectionsData,\n              hasData: hasConnections,\n              error: connectionsError,\n            }) => {\n              const integrationStatesCount = getIntegrationsCountsByState(\n                integrationsData.items\n              );\n              const recentlyUpdatedIntegrations = getRecentlyUpdatedIntegrations(\n                integrationsData.items\n              );\n              const topIntegrations = getTopIntegrations(\n                integrationsData.items,\n                metricsData.topIntegrations\n              );\n              return (\n                <Translation ns={['dashboard', 'integrations', 'shared']}>\n                  {t => (\n                    <Dashboard\n                      linkToIntegrations={resolvers.integrations.list()}\n                      linkToIntegrationCreation={resolvers.integrations.create.start.selectStep()}\n                      linkToConnections={resolvers.connections.connections()}\n                      linkToConnectionCreation={resolvers.connections.create.selectConnector()}\n                      integrationsOverview={\n                        <div data-testid=\"total-integrations\">\n                          <AggregatedMetricCard\n                            title={t('titleTotalIntegrations', {\n                              count: integrationsData.totalCount,\n                            })}\n                            ok={\n                              integrationsData.totalCount -\n                              integrationStatesCount.Error\n                            }\n                            error={integrationStatesCount.Error}\n                          />\n                        </div>\n                      }\n                      connectionsOverview={\n                        <div data-testid=\"total-connections\">\n                          <ConnectionsMetric\n                            i18nTitle={t('titleTotalConnections', {\n                              count:\n                                connectionsData.connectionsForDisplay.length,\n                            })}\n                          />\n                        </div>\n                      }\n                      messagesOverview={\n                        <div data-testid=\"total-messages\">\n                          <AggregatedMetricCard\n                            title={t('titleTotalMessages', {\n                              count: metricsData.messages,\n                            })}\n                            ok={metricsData.messages! - metricsData.errors!}\n                            error={metricsData.errors!}\n                          />\n                        </div>\n                      }\n                      uptimeOverview={\n                        <UptimeMetric\n                          start={parseInt(metricsData.start!, 10)}\n                          durationDifference={toDurationDifferenceString(\n                            parseInt(metricsData.start!, 10)\n                          )}\n                          i18nTitle={t('titleUptimeMetric')}\n                        />\n                      }\n                      topIntegrations={\n                        <TopIntegrationsCard\n                          i18nTitle={t('titleTopIntegrations', {\n                            count: 5,\n                          })}\n                          i18nLast30Days={t('lastNumberOfDays', {\n                            numberOfDays: 30,\n                          })}\n                          i18nLast60Days={t('lastNumberOfDays', {\n                            numberOfDays: 60,\n                          })}\n                          i18nLast90Days={t('lastNumberOfDays', {\n                            numberOfDays: 90,\n                          })}\n                        >\n                          <Integrations\n                            error={integrationsError}\n                            loading={!hasIntegrations}\n                            integrations={topIntegrations}\n                          />\n                        </TopIntegrationsCard>\n                      }\n                      integrationBoard={\n                        <IntegrationBoard\n                          runningIntegrations={integrationStatesCount.Published}\n                          pendingIntegrations={integrationStatesCount.Pending}\n                          stoppedIntegrations={\n                            integrationStatesCount.Unpublished\n                          }\n                          i18nTitle={t('titleIntegrationBoard')}\n                          i18nIntegrationStatePending={t(\n                            'integrationStatePending'\n                          )}\n                          i18nIntegrationStateRunning={t(\n                            'integrationStateRunning'\n                          )}\n                          i18nIntegrationStateStopped={t(\n                            'integrationStateStopped'\n                          )}\n                          i18nIntegrations={t('shared:Integrations')}\n                          i18nTotal={t('shared:Total')}\n                        />\n                      }\n                      integrationUpdates={\n                        <RecentUpdatesCard\n                          i18nTitle={t('titleIntegrationUpdates')}\n                        >\n                          <WithLoader\n                            error={false}\n                            loading={!hasIntegrations}\n                            loaderChildren={<RecentUpdatesSkeleton />}\n                            errorChildren={<ApiError />}\n                          >\n                            {() =>\n                              recentlyUpdatedIntegrations.map(i => (\n                                <RecentUpdatesItem\n                                  key={i.id}\n                                  integrationName={i.name}\n                                  integrationCurrentState={i.currentState!}\n                                  integrationDate={i.updatedAt! || i.createdAt!}\n                                  i18nError={t('shared:Error')}\n                                  i18nPublished={t('shared:Published')}\n                                  i18nUnpublished={t('shared:Unpublished')}\n                                />\n                              ))\n                            }\n                          </WithLoader>\n                        </RecentUpdatesCard>\n                      }\n                      connections={\n                        <Connections\n                          error={connectionsError}\n                          includeConnectionMenu={false}\n                          loading={!hasConnections}\n                          connections={connectionsData.connectionsForDisplay}\n                          getConnectionHref={connection =>\n                            resolvers.connections.connection.details({\n                              connection,\n                            })\n                          }\n                          getConnectionEditHref={connection =>\n                            resolvers.connections.connection.edit({\n                              connection,\n                            })\n                          }\n                        />\n                      }\n                      i18nIntegrations={t('shared:Integrations')}\n                      i18nConnections={t('shared:Connections')}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nLinkCreateIntegration={t(\n                        'shared:linkCreateIntegration'\n                      )}\n                      i18nLinkToConnections={t('linkToConnections')}\n                      i18nLinkToIntegrations={t('linkToIntegrations')}\n                      i18nTitle={t('title')}\n                      i18nDescription={t('description')}\n                    />\n                  )}\n                </Translation>\n              );\n            }}\n          </WithConnections>\n        )}\n      </WithIntegrationsMetrics>\n    )}\n  </WithMonitoredIntegrations>\n);\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n    default:\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport DashboardPage from './pages/DashboardPage';\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return <DashboardPage />;\n  }\n}\n","import apiClientConnectors from './apiClientConnectors/routes';\nimport connections from './connections/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport extensions from './extensions/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  apiClientConnectors,\n  connections,\n  dashboard,\n  data,\n  extensions,\n  integrations,\n  settings,\n};\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { SqlClientContent, SqlClientForm } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IWithVirtualizationSqlClientFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithVirtualizationSqlClientFormProps {\n  views: ViewDefinition[];\n\n  targetVdb: string;\n\n  linkCreateView: H.LocationDescriptor;\n  linkImportViews: H.LocationDescriptor;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithVirtualizationSqlClientFormChildrenProps#form}\n   * @see [isValid]{@link IWithVirtualizationSqlClientFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithVirtualizationSqlClientFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithVirtualizationSqlClientFormChildrenProps#submitForm}\n   */\n  // tslint:disable-next-line: react-unused-props-and-state\n  children(props: IWithVirtualizationSqlClientFormChildrenProps): any;\n}\n\nexport interface IWithVirtualizationSqlClientFormState {\n  queryResults: QueryResults;\n}\n\ninterface IColumn {\n  id: string;\n  label: string;\n}\n\n/**\n * A component to generate the SqlClient page content\n */\nexport class WithVirtualizationSqlClientForm extends React.Component<\n  IWithVirtualizationSqlClientFormProps,\n  IWithVirtualizationSqlClientFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  constructor(props: IWithVirtualizationSqlClientFormProps) {\n    super(props);\n    this.state = {\n      queryResults: WithVirtualizationSqlClientForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    results && results.columns.length > 0\n      ? this.setState({\n          queryResults: results,\n        })\n      : this.setState({\n          queryResults: WithVirtualizationSqlClientForm.queryResultsEmpty,\n        });\n  }\n\n  public buildViews() {\n    const enums = [];\n    for (const view of this.props.views) {\n      enums.push({ label: view.viewName, value: view.viewName });\n    }\n    return enums;\n  }\n\n  public buildRows(queryResults: QueryResults): Array<{}> {\n    return queryResults.rows\n      .map(row => row.row)\n      .map(row =>\n        row.reduce(\n          // tslint:disable-next-line: no-shadowed-variable\n          (row, r, idx) => ({\n            ...row,\n            [this.state.queryResults.columns[idx].name]: r,\n          }),\n          {}\n        )\n      );\n  }\n\n  public buildColumns(queryResults: QueryResults): IColumn[] {\n    const columns = [];\n    for (const col of queryResults.columns) {\n      columns.push({ id: col.name, label: col.label });\n    }\n    return columns;\n  }\n\n  public getInitialView() {\n    return this.props.views.length > 0 ? this.props.views[0].viewName : '';\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      view: {\n        description: 'The View to Query',\n        displayName: 'View',\n        enum: this.buildViews(),\n        kind: 'parameter',\n        order: 1,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n      // TODO - Future add this for SQL ad-hoc queries...\n      // sqlStatement: {\n      //   componentProperty: true,\n      //   defaultValue: 'default query sql',\n      //   deprecated: false,\n      //   description: i18n.t(\n      //     'data:virtualization.viewSqlFormSqlStatementDescription'\n      //   ),\n      //   displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n      //   height: 300,\n      //   javaType: 'java.lang.String',\n      //   kind: 'property',\n      //   order: 2,\n      //   required: true,\n      //   secret: false,\n      //   type: 'textarea',\n      // },\n    } as IFormDefinition;\n\n    const initialValue = {\n      rowLimit: '15',\n      rowOffset: '0',\n      view: this.getInitialView(),\n    };\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const viewDefn = this.props.views.find(\n              view => view.viewName === value.view\n            );\n            let sqlStatement = '';\n            if (viewDefn) {\n              sqlStatement = getPreviewSql(viewDefn);\n            }\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.setQueryResults(results);\n          };\n          return (\n            <AutoForm\n              i18nRequiredProperty={'* Required field'}\n              definition={formDefinition}\n              initialValue={initialValue}\n              onSave={doSubmit}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                submitForm,\n              }) => (\n                <SqlClientContent\n                  formContent={\n                    <SqlClientForm handleSubmit={handleSubmit}>\n                      {fields}\n                    </SqlClientForm>\n                  }\n                  viewNames={this.props.views.map(\n                    (viewDefn: ViewDefinition) => viewDefn.viewName\n                  )}\n                  queryResultRows={this.buildRows(this.state.queryResults)}\n                  queryResultCols={this.buildColumns(this.state.queryResults)}\n                  targetVdb={'test'}\n                  i18nEmptyStateInfo={i18n.t(\n                    'data:virtualization.viewEmptyStateInfo'\n                  )}\n                  i18nEmptyStateTitle={i18n.t(\n                    'data:virtualization.viewEmptyStateTitle'\n                  )}\n                  i18nImportViews={i18n.t(\n                    'data:virtualization.importDataSource'\n                  )}\n                  i18nImportViewsTip={i18n.t(\n                    'data:virtualization.importDataSourceTip'\n                  )}\n                  i18nCreateView={i18n.t('data:virtualization.createView')}\n                  i18nCreateViewTip={i18n.t(\n                    'data:virtualization.createViewTip'\n                  )}\n                  linkCreateViewHRef={this.props.linkCreateView}\n                  linkImportViewsHRef={this.props.linkImportViews}\n                  i18nEmptyResultsTitle={i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                  i18nEmptyResultsMsg={i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                />\n              )}\n            </AutoForm>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, PageSection } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <PageSection variant={'light'}>\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                      </PageSection>\n                      <PageSection>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </PageSection>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <ViewHeader\n                    i18nTitle={virtualization.keng__id}\n                    i18nDescription={virtualization.tko__description}\n                  />\n                  <PageSection variant={'light'} noPadding={true}>\n                    <VirtualizationNavBar virtualization={virtualization} />\n                  </PageSection>\n                  <PageSection>\n                    <h2>Metrics are not yet implemented</h2>\n                  </PageSection>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <ViewHeader\n                    i18nTitle={virtualization.keng__id}\n                    i18nDescription={virtualization.tko__description}\n                  />\n                  <PageSection variant={'light'} noPadding={true}>\n                    <VirtualizationNavBar virtualization={virtualization} />\n                  </PageSection>\n                  <PageSection>\n                    <h2>Relationships are not yet implemented</h2>\n                  </PageSection>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  VirtualizationNavBar,\n  WithVirtualizationSqlClientForm,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualization - the virtualization being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\n/**\n * Page displays virtualization views and allows user run test queries against the views.\n */\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public handleSubmit() {\n    // TODO: finish form handling\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <ViewHeader\n                  i18nTitle={virtualization.keng__id}\n                  i18nDescription={virtualization.tko__description}\n                />\n                <PageSection variant={'light'} noPadding={true}>\n                  <VirtualizationNavBar virtualization={virtualization} />\n                </PageSection>\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <WithVirtualizationSqlClientForm\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                      linkCreateView={resolvers.data.virtualizations.create()}\n                      linkImportViews={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                    >\n                      {({ form, submitForm, isSubmitting }) => <></>}\n                    </WithVirtualizationSqlClientForm>\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb, PageSection, ViewHeader } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <ViewHeader\n                    i18nTitle={virtualization.keng__id}\n                    i18nDescription={virtualization.tko__description}\n                  />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <PageSection\n                                        variant={'light'}\n                                        noPadding={true}\n                                      >\n                                        <VirtualizationNavBar\n                                          virtualization={virtualization}\n                                        />\n                                      </PageSection>\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <>\n        <Switch>\n          <Redirect\n            path={routes.root}\n            exact={true}\n            to={routes.virtualizations.list}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.views.importSource.root}\n            component={CreateViewsApp}\n          />\n          <Route\n            path={routes.virtualizations.create}\n            exact={true}\n            component={VirtualizationCreatePage}\n          />\n          <Route\n            path={routes.virtualizations.list}\n            exact={true}\n            component={VirtualizationsPage}\n          />\n          <Redirect\n            path={routes.virtualizations.virtualization.root}\n            exact={true}\n            to={routes.virtualizations.virtualization.views.root}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.views.root}\n            exact={true}\n            component={VirtualizationViewsPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.relationship}\n            exact={true}\n            component={VirtualizationRelationshipPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.sqlClient}\n            exact={true}\n            component={VirtualizationSqlClientPage}\n          />\n          <Route\n            path={routes.virtualizations.virtualization.metrics}\n            exact={true}\n            component={VirtualizationMetricsPage}\n          />\n        </Switch>\n      </>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('extensions:usedByOne');\n    }\n\n    return i18n.t('extensions:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['extensions', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['extensions', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.extensions.list()}>\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('extensions:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('extensions:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('extensions:extension.LibraryExtension');\n  }\n\n  return i18n.t('extensions:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n  PageSection,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../utils';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(resolvers.extensions.list());\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['extensions', 'shared']}>\n                        {t => (\n                          <>\n                            <Breadcrumb\n                              actions={\n                                <ButtonLink\n                                  className={'extension-import-page__action'}\n                                  href={resolvers.extensions.list()}\n                                  as={'default'}\n                                >\n                                  {t('shared:Cancel')}\n                                </ButtonLink>\n                              }\n                            >\n                              <Link to={resolvers.dashboard.root()}>\n                                {t('shared:Home')}\n                              </Link>\n                              <Link to={resolvers.extensions.list()}>\n                                {t('shared:Extensions')}\n                              </Link>\n                              <span>\n                                {t('extension.extensionImportPageTitle')}\n                              </span>\n                            </Breadcrumb>\n                            <PageSection>\n                              {this.state.loading ? <Loader /> : null}\n                              <ExtensionImportCard\n                                dndDisabled={this.state.disableDropzone}\n                                i18nAlertMessage={this.state.i18nAlertMessage}\n                                i18nDndHelpMessage={t(\n                                  'extension.importHelpMessage'\n                                )}\n                                i18nDndInstructions={t(\n                                  'extension.importDndInstructions'\n                                )}\n                                i18nDndNoFileSelectedMessage={t(\n                                  'extension.importNoFileSelectedMessage'\n                                )}\n                                i18nDndSelectedFileLabel={t(\n                                  'extension.importSelectedFileLabel'\n                                )}\n                                i18nDndUploadFailedMessage={\n                                  this.state.dndUploadFailedMessage\n                                }\n                                i18nDndUploadSuccessMessage={\n                                  this.state.dndUploadSuccessMessage\n                                }\n                                i18nImportInstructions={t(\n                                  'extension.importUpdateMessage'\n                                )}\n                                i18nTitle={t('extension.ImportExtension')}\n                                onDndUploadAccepted={onDndUploadAcceptedHandler}\n                                onDndUploadRejected={onDndUploadRejectedHandler}\n                              />\n                              {this.state.extension &&\n                              this.state.extension.id &&\n                              this.state.extension.extensionId ? (\n                                <ExtensionImportReview\n                                  actions={this.state.extension.actions.map(\n                                    (action: Action) =>\n                                      ({\n                                        description: action.description,\n                                        name: action.name,\n                                      } as IImportAction)\n                                  )}\n                                  cancelLink={resolvers.extensions.list()}\n                                  extensionDescription={\n                                    this.state.extension.description\n                                  }\n                                  extensionId={this.state.extension.extensionId}\n                                  extensionName={this.state.extension.name}\n                                  extensionUid={this.state.extension.id}\n                                  i18nActionsLabel={this.getActionsLabel()}\n                                  i18nCancel={i18n.t('shared:Cancel')}\n                                  i18nDescriptionLabel={i18n.t(\n                                    'shared:Description'\n                                  )}\n                                  i18nExtensionTypeMessage={getExtensionTypeName(\n                                    this.state.extension\n                                  )}\n                                  i18nIdLabel={i18n.t('shared:ID')}\n                                  i18nImport={i18n.t(\n                                    'customizations:extension.ImportExtension'\n                                  )}\n                                  i18nNameLabel={i18n.t('shared:Name')}\n                                  i18nTitle={i18n.t(\n                                    'customizations:extension.ImportReview'\n                                  )}\n                                  i18nTypeLabel={i18n.t('shared:Type')}\n                                  i18nActionText={this.getActionText}\n                                  onImport={handleImport}\n                                />\n                              ) : null}\n                            </PageSection>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  SimplePageHeader,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getExtensionTypeName } from '../utils';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['extensions', 'shared']}>\n                        {t => (\n                          <>\n                            <SimplePageHeader\n                              i18nTitle={t('extension.extensionsPageTitle')}\n                              i18nDescription={t(\n                                'extension.extensionsPageDescription'\n                              )}\n                            />\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport class ExtensionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.list} exact={true} component={ExtensionsPage} />\n        <Route\n          path={routes.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        <Route\n          path={routes.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { getSteps } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  saveHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <>\n            <PageTitle title={'Save or add step'} />\n            <IntegrationEditorLayout\n              title={'Add to Integration'}\n              description={\n                'You can continue adding steps and connections to your integration as well.'\n              }\n              content={\n                <IntegrationEditorStepAdder\n                  steps={getSteps(integration, flowId)}\n                  addStepHref={position =>\n                    this.props.getEditAddStepHref(\n                      position,\n                      { flowId },\n                      { integration }\n                    )\n                  }\n                  configureStepHref={(position: number, step: Step) =>\n                    getStepHref(\n                      step,\n                      { flowId, position: `${position}` },\n                      { integration },\n                      this.props\n                    )\n                  }\n                />\n              }\n              cancelHref={this.props.cancelHref({ flowId }, { integration })}\n              saveHref={this.props.saveHref({ flowId }, { integration })}\n              publishHref={this.props.saveHref({ flowId }, { integration })}\n            />\n          </>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { Connection, Integration } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  IUIStep,\n} from '../interfaces';\nimport { toUIStepKindCollection } from '../utils';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: IUIStep[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                  chooseActionHref={this.props.backHref(\n                    { actionId, flowId, step, position },\n                    {\n                      configuredProperties,\n                      connection,\n                      integration,\n                      updatedIntegration,\n                    }\n                  )}\n                >\n                  {({ form }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        title={'Configure the action'}\n                        description={\n                          'Fill in the required information for the selected action.'\n                        }\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: toUIStepKindCollection(\n                            getSteps(updatedIntegration || integration, flowId)\n                          ),\n                        })}\n                        content={form}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  IUIStep,\n} from '../interfaces';\nimport { toUIStepKindCollection } from '../utils';\n\nexport interface ISelectActionPageProps {\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  sidebar: (props: {\n    steps: IUIStep[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        title={'Choose an action'}\n                        description={\n                          'Choose an action for the selected connection.'\n                        }\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: toUIStepKindCollection(\n                            getSteps(integration, flowId)\n                          ),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction>\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport * as H from '@syndesis/history';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorLayout, IntegrationSaveForm } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              let shouldPublish = false;\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n\n                if (shouldPublish) {\n                  alert('TODO: publish');\n                  shouldPublish = false;\n                }\n\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <>\n                      <PageTitle title={'Save the integration'} />\n                      <IntegrationEditorLayout\n                        title={'Save the integration'}\n                        description={'Update details about this integration.'}\n                        content={\n                          <IntegrationSaveForm handleSubmit={handleSubmit}>\n                            {fields}\n                          </IntegrationSaveForm>\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { flowId },\n                          { integration }\n                        )}\n                        onSave={submitForm}\n                        isSaveDisabled={dirty && !isValid}\n                        isSaveLoading={isSubmitting}\n                        onPublish={async () => {\n                          shouldPublish = true;\n                          await submitForm();\n                        }}\n                        isPublishDisabled={dirty && !isValid}\n                        isPublishLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport * as H from '@syndesis/history';\nimport { StepKind } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionsWithToolbar } from '../../../connections/components';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport {\n  getStepHref,\n  IGetStepHrefs,\n  mergeConnectionsSources,\n  toUIStepKindCollection,\n  visibleStepsByPosition,\n} from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  sidebar: (props: {\n    steps: IUIStep[];\n    activeIndex: number;\n  }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                title={'Choose a connection'}\n                description={\n                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                }\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: toUIStepKindCollection(integrationSteps),\n                })}\n                content={\n                  <Translation ns={['connections', 'shared']}>\n                    {t => (\n                      <WithConnections>\n                        {({\n                          data: connectionsData,\n                          hasData: hasConnectionsData,\n                          error: connectionsError,\n                        }) => (\n                          <WithExtensions>\n                            {({\n                              data: extensionsData,\n                              hasData: hasExtensionsData,\n                              error: extensionsError,\n                            }) => (\n                              <WithSteps>\n                                {({ items: steps }) => {\n                                  const stepKinds = mergeConnectionsSources(\n                                    connectionsData.dangerouslyUnfilteredConnections,\n                                    extensionsData.items,\n                                    steps\n                                  );\n                                  const visibleSteps = visibleStepsByPosition(\n                                    stepKinds as StepKind[],\n                                    positionAsNumber,\n                                    integrationSteps\n                                  ) as IUIStep[];\n                                  return (\n                                    <ConnectionsWithToolbar\n                                      loading={\n                                        !hasConnectionsData ||\n                                        !hasExtensionsData\n                                      }\n                                      error={\n                                        connectionsError || extensionsError\n                                      }\n                                      includeConnectionMenu={false}\n                                      getConnectionHref={step =>\n                                        getStepHref(\n                                          step,\n                                          params,\n                                          state,\n                                          this.props\n                                        )\n                                      }\n                                      connections={visibleSteps}\n                                      createConnectionButtonStyle={'default'}\n                                    />\n                                  );\n                                }}\n                              </WithSteps>\n                            )}\n                          </WithExtensions>\n                        )}\n                      </WithConnections>\n                    )}\n                  </Translation>\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { IntegrationEditorSidebar } from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { IUIStep } from './components/editor/interfaces';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    saveHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={resolvers.create.start.selectStep}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  alt={'Step icon'}\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${(connection as IUIStep).title}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  alt={'Step icon'}\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    alt={'Step icon'}\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Step icon'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Step icon'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { IntegrationEditorSidebar } from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    saveHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Add step'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    mode={'adding'}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            alt={'Add step'}\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { WithActivities } from '@syndesis/api';\nimport {\n  Activity,\n  ActivityStep,\n  IntegrationDeployment,\n  Step,\n} from '@syndesis/models';\nimport {\n  IntegrationDetailActivity,\n  IntegrationDetailActivityItem,\n  IntegrationDetailActivityItemSteps,\n} from '@syndesis/ui';\nimport { toDurationString } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IActivityPagetableProps {\n  integrationId: string;\n  linkToOpenShiftLog: string;\n}\n\ninterface IExtendedActivity extends Activity {\n  [name: string]: any;\n}\n\ninterface IExtendedActivityStep extends ActivityStep {\n  [name: string]: any;\n}\n\ninterface IExtendedDeployment extends IntegrationDeployment {\n  [name: string]: any;\n}\n\nfunction fetchStepName(step: Step): string {\n  let stepName = 'n/a';\n\n  if (step) {\n    const { name, action } = step;\n    stepName = name || (action && action.name ? action.name : stepName);\n  }\n\n  return stepName;\n}\n\nexport class ActivityPageTable extends React.Component<\n  IActivityPagetableProps\n> {\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithActivities integrationId={this.props.integrationId}>\n            {({\n              activities: activitiesBase,\n              deployments: deploymentsBase,\n              fetchActivities,\n              fetchDeployments,\n            }) => {\n              const activities = activitiesBase as IExtendedActivity[];\n              const integrationDeployments = (deploymentsBase ||\n                []) as IExtendedDeployment[];\n\n              const refresh = async () => {\n                await fetchActivities();\n                await fetchDeployments();\n              };\n\n              activities.forEach((activity: IExtendedActivity) => {\n                if (activity.steps && Array.isArray(activity.steps)) {\n                  activity.steps.forEach((step: IExtendedActivityStep) => {\n                    step.name = 'n/a';\n                    step.isFailed =\n                      typeof step.failure !== 'undefined' &&\n                      step.failure.length > 0;\n\n                    const deployedIntegration = integrationDeployments.find(\n                      deployment => deployment.version === +activity.ver\n                    );\n                    if (!deployedIntegration) {\n                      return;\n                    }\n\n                    for (const integrationFlow of deployedIntegration!.spec!\n                      .flows!) {\n                      const integrationStep = integrationFlow!.steps!.find(\n                        is => is.id === step.id\n                      );\n                      if (integrationStep) {\n                        step.name = fetchStepName(integrationStep);\n                        break;\n                      }\n                    }\n\n                    const errorMessages = [\n                      null,\n                      ...step.messages!,\n                      step.failure,\n                    ].filter(messages => !!messages);\n                    step.output =\n                      errorMessages.length > 0 ? errorMessages.join('\\n') : '';\n                  });\n                }\n              });\n              const lastRefreshed = new Date().toLocaleString();\n\n              return (\n                <>\n                  <IntegrationDetailActivity\n                    i18nBtnRefresh={t('shared:Refresh')}\n                    i18nLastRefresh={t('integrations:LastRefresh', {\n                      at: lastRefreshed,\n                    })}\n                    i18nViewLogOpenShift={t(\n                      'integrations:View Log in OpenShift'\n                    )}\n                    linkToOpenShiftLog={this.props.linkToOpenShiftLog}\n                    onRefresh={refresh}\n                    children={activities.map(\n                      (activity: IExtendedActivity, activityIndex: number) => {\n                        const date = new Date(\n                          activity.at!\n                        ).toLocaleDateString();\n                        const time = new Date(\n                          activity.at!\n                        ).toLocaleTimeString();\n\n                        return (\n                          <IntegrationDetailActivityItem\n                            key={activityIndex}\n                            date={date}\n                            errorCount={activity.failed ? 1 : 0}\n                            i18nErrorsFound={t('integrations:ErrorsFound')}\n                            i18nNoErrors={t('integrations:NoErrors')}\n                            i18nNoSteps={t('integrations:NoSteps')}\n                            i18nVersion={t('shared:Version')}\n                            steps={(activity.steps || []).map(\n                              (\n                                step: IExtendedActivityStep,\n                                stepIndex: number\n                              ) => (\n                                <IntegrationDetailActivityItemSteps\n                                  key={stepIndex}\n                                  duration={toDurationString(\n                                    step.duration!,\n                                    'ns'\n                                  )}\n                                  name={step.name || ''}\n                                  output={step.output}\n                                  time={new Date(step.at!).toLocaleString()}\n                                  status={\n                                    step.isFailed\n                                      ? t('shared:Error')\n                                      : t('shared:Success')\n                                  }\n                                />\n                              )\n                            )}\n                            time={time}\n                            version={activity.ver!}\n                          />\n                        );\n                      }\n                    )}\n                  />\n                </>\n              );\n            }}\n          </WithActivities>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithMonitoredIntegration } from '@syndesis/api';\nimport { Loader } from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { ActivityPageTable } from './ActivityPageTable';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }, { history }) => {\n                    return (\n                      <>\n                        <WithMonitoredIntegration\n                          integrationId={integrationId}\n                          initialValue={integration}\n                        >\n                          {({ data, hasData, error }) => (\n                            <WithLoader\n                              error={error}\n                              loading={!hasData}\n                              loaderChildren={<Loader />}\n                              errorChildren={<ApiError />}\n                            >\n                              {() => (\n                                <WithIntegrationActions\n                                  integration={data.integration}\n                                >\n                                  {({\n                                    ciCdAction,\n                                    editAction,\n                                    deleteAction,\n                                    exportAction,\n                                    startAction,\n                                    stopAction,\n                                  }) => {\n                                    return (\n                                      <>\n                                        <PageTitle\n                                          title={t(\n                                            'integrations:detail:pageTitle'\n                                          )}\n                                        />\n                                        <IntegrationDetailHeader\n                                          data={data}\n                                          startAction={startAction}\n                                          stopAction={stopAction}\n                                          deleteAction={deleteAction}\n                                          ciCdAction={ciCdAction}\n                                          editAction={editAction}\n                                          exportAction={exportAction}\n                                          getPodLogUrl={getPodLogUrl}\n                                        />\n                                        <ActivityPageTable\n                                          integrationId={data.integration.id!}\n                                          linkToOpenShiftLog={\n                                            getPodLogUrl(data.monitoring) || ''\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithIntegrationActions>\n                              )}\n                            </WithLoader>\n                          )}\n                        </WithMonitoredIntegration>\n                      </>\n                    );\n                  }}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { IntegrationDeployment } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IMenuActions,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { IPromptActionOptions } from './WithIntegrationActions';\n\nexport interface IWithDeploymentActionsChildrenProps {\n  startDeploymentAction: IMenuActions;\n  stopDeploymentAction: IMenuActions;\n  replaceDraftAction: IMenuActions;\n}\n\nexport interface IWithDeploymentActionsProps {\n  integrationName: string;\n  integrationId: string;\n  deployment: IntegrationDeployment;\n  children: (props: IWithDeploymentActionsChildrenProps) => any;\n}\n\nexport interface IWithDeploymentActionsState {\n  showActionPromptDialog: boolean;\n  targetId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\nexport class WithDeploymentActions extends React.Component<\n  IWithDeploymentActionsProps,\n  IWithDeploymentActionsState\n> {\n  constructor(props: IWithDeploymentActionsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <UIContext.Consumer>\n            {({ pushNotification }) => (\n              <WithIntegrationHelpers>\n                {({ deployIntegration, undeployIntegration, replaceDraft }) => {\n                  const startDeploymentAction: IMenuActions = {\n                    label: t('shared:Start'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:PublishingIntegrationMessage'),\n                            'info'\n                          );\n                          try {\n                            await deployIntegration(\n                              this.props.integrationId,\n                              this.props.deployment.version!,\n                              true\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:PublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Start'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:publishDeploymentModal',\n                          {\n                            name: this.props.integrationName,\n                            version: this.props.deployment.version!,\n                          }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:publishDeploymentModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n                  const stopDeploymentAction: IMenuActions = {\n                    label: t('shared:Stop'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t(\n                              'integrations:UnpublishingIntegrationMessage'\n                            ),\n                            'info'\n                          );\n                          try {\n                            undeployIntegration(\n                              this.props.integrationId,\n                              this.props.deployment.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t(\n                                'integrations:UnpublishingIntegrationFailedMessage',\n                                {\n                                  error: err.errorMessage || err.message || err,\n                                }\n                              ),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:Stop'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:unpublishIntegrationModal',\n                          { name: this.props.integrationName }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:unpublishIntegrationModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n\n                  const replaceDraftAction: IMenuActions = {\n                    label: t('integrations:ReplaceDraft'),\n                    onClick: () =>\n                      this.promptForAction({\n                        handleAction: async () => {\n                          pushNotification(\n                            i18n.t('integrations:ReplacedDraftMessage'),\n                            'info'\n                          );\n                          try {\n                            await replaceDraft(\n                              this.props.integrationId,\n                              this.props.deployment.version!\n                            );\n                          } catch (err) {\n                            pushNotification(\n                              i18n.t('integrations:ReplaceDraftFailedMessage', {\n                                error: err.errorMessage || err.message || err,\n                              }),\n                              'warning'\n                            );\n                          }\n                        },\n                        promptDialogButtonStyle: ConfirmationButtonStyle.NORMAL,\n                        promptDialogButtonText: t('shared:ReplaceDraft'),\n                        promptDialogIcon: ConfirmationIconType.NONE,\n                        promptDialogText: t(\n                          'integrations:ReplaceDraftModalMessage',\n                          { name: this.props.integrationName }\n                        ),\n                        promptDialogTitle: t(\n                          'integrations:ReplaceDraftModalTitle'\n                        ),\n                      } as IPromptActionOptions),\n                  };\n\n                  return (\n                    <>\n                      {this.state.showActionPromptDialog && (\n                        <ConfirmationDialog\n                          buttonStyle={ConfirmationButtonStyle.NORMAL}\n                          i18nCancelButtonText={t('shared:Cancel')}\n                          i18nConfirmButtonText={\n                            this.state.promptDialogButtonText!\n                          }\n                          i18nConfirmationMessage={this.state.promptDialogText!}\n                          i18nTitle={this.state.promptDialogTitle!}\n                          icon={this.state.promptDialogIcon!}\n                          showDialog={this.state.showActionPromptDialog}\n                          onCancel={this.handleActionCancel}\n                          onConfirm={this.handleAction}\n                        />\n                      )}\n                      {this.props.children({\n                        replaceDraftAction,\n                        startDeploymentAction,\n                        stopDeploymentAction,\n                      })}\n                    </>\n                  );\n                }}\n              </WithIntegrationHelpers>\n            )}\n          </UIContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  WithIntegrationHelpers,\n  WithMonitoredIntegration,\n} from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  InlineTextEdit,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailHistoryListViewItem,\n  IntegrationDetailHistoryListViewItemActions,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  IntegrationDetailSteps,\n  WithIntegrationActions,\n} from '../../components';\nimport { WithDeploymentActions } from '../../components/WithDeploymentActions';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }) => (\n                    <WithMonitoredIntegration\n                      integrationId={integrationId}\n                      initialValue={integration}\n                    >\n                      {({ data, hasData, error }) => (\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={<Loader />}\n                          errorChildren={<ApiError />}\n                        >\n                          {() => (\n                            <WithIntegrationActions\n                              integration={data.integration}\n                            >\n                              {({\n                                ciCdAction,\n                                editAction,\n                                deleteAction,\n                                exportAction,\n                                startAction,\n                                stopAction,\n                              }) => {\n                                return (\n                                  <>\n                                    <PageTitle\n                                      title={t('integrations:detail:pageTitle')}\n                                    />\n                                    <IntegrationDetailHeader\n                                      data={data}\n                                      startAction={startAction}\n                                      stopAction={stopAction}\n                                      deleteAction={deleteAction}\n                                      ciCdAction={ciCdAction}\n                                      editAction={editAction}\n                                      exportAction={exportAction}\n                                      getPodLogUrl={getPodLogUrl}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data.integration}\n                                    />\n                                    <WithIntegrationHelpers>\n                                      {({ setAttributes }) => {\n                                        const handleChange = async (\n                                          description: string\n                                        ) => {\n                                          try {\n                                            await setAttributes(\n                                              data.integration.id!,\n                                              {\n                                                description,\n                                              }\n                                            );\n                                            return true;\n                                          } catch (err) {\n                                            return false;\n                                          }\n                                        };\n                                        return (\n                                          <IntegrationDetailDescription\n                                            description={\n                                              <InlineTextEdit\n                                                value={\n                                                  data.integration\n                                                    .description ||\n                                                  t(\n                                                    'integrations:detail:noDescription'\n                                                  )\n                                                }\n                                                allowEditing={true}\n                                                isTextArea={true}\n                                                onChange={handleChange}\n                                              />\n                                            }\n                                          />\n                                        );\n                                      }}\n                                    </WithIntegrationHelpers>\n                                    <IntegrationDetailHistoryListView\n                                      editHref={editAction.href}\n                                      editLabel={editAction.label}\n                                      hasHistory={\n                                        (data.integration.deployments || [])\n                                          .length > 0\n                                      }\n                                      isDraft={\n                                        (data.integration as IIntegrationOverviewWithDraft)\n                                          .isDraft\n                                      }\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      publishAction={startAction.onClick}\n                                      publishLabel={t('shared:Publish')}\n                                      children={(\n                                        data.integration.deployments || []\n                                      )\n                                        .sort((a, b) => {\n                                          const aVersion =\n                                            (a || {}).version || 0;\n                                          const bVersion =\n                                            (b || {}).version || 0;\n                                          return bVersion - aVersion;\n                                        })\n                                        .map((deployment, idx) => {\n                                          const updatedAt = deployment.updatedAt\n                                            ? new Date(\n                                                deployment.updatedAt!\n                                              ).toLocaleString()\n                                            : '';\n                                          return (\n                                            <WithDeploymentActions\n                                              key={deployment.id}\n                                              integrationId={\n                                                data.integration.id!\n                                              }\n                                              integrationName={\n                                                data.integration.name\n                                              }\n                                              deployment={deployment}\n                                            >\n                                              {({\n                                                startDeploymentAction,\n                                                stopDeploymentAction,\n                                                replaceDraftAction,\n                                              }) => {\n                                                const actions = [];\n                                                if (\n                                                  data.integration.version !==\n                                                  deployment.version\n                                                ) {\n                                                  actions.push(\n                                                    replaceDraftAction\n                                                  );\n                                                }\n                                                if (\n                                                  data.integration.version ===\n                                                    deployment.version &&\n                                                  data.integration\n                                                    .currentState ===\n                                                    'Published'\n                                                ) {\n                                                  actions.push(\n                                                    stopDeploymentAction\n                                                  );\n                                                } else {\n                                                  actions.push(\n                                                    startDeploymentAction\n                                                  );\n                                                }\n                                                return (\n                                                  <IntegrationDetailHistoryListViewItem\n                                                    key={deployment.id}\n                                                    actions={\n                                                      <IntegrationDetailHistoryListViewItemActions\n                                                        actions={actions}\n                                                        integrationId={\n                                                          data.integration.id!\n                                                        }\n                                                      />\n                                                    }\n                                                    currentState={\n                                                      deployment.currentState!\n                                                    }\n                                                    i18nTextLastPublished={t(\n                                                      'integrations:detail:lastPublished'\n                                                    )}\n                                                    i18nTextVersion={t(\n                                                      'shared:Version'\n                                                    )}\n                                                    updatedAt={updatedAt}\n                                                    version={deployment.version}\n                                                  />\n                                                );\n                                              }}\n                                            </WithDeploymentActions>\n                                          );\n                                        })}\n                                    />\n                                  </>\n                                );\n                              }}\n                            </WithIntegrationActions>\n                          )}\n                        </WithLoader>\n                      )}\n                    </WithMonitoredIntegration>\n                  )}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import {\n  WithIntegrationMetrics,\n  WithMonitoredIntegration,\n} from '@syndesis/api';\nimport { IntegrationDetailMetrics, Loader } from '@syndesis/ui';\nimport {\n  toDurationDifferenceString,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext } from '../../../../app';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  IntegrationDetailHeader,\n  WithIntegrationActions,\n} from '../../components';\nimport { IDetailsRouteParams, IDetailsRouteState } from './interfaces';\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <Translation ns={['integrations', 'shared']}>\n          {t => (\n            <AppContext.Consumer>\n              {({ getPodLogUrl }) => (\n                <WithRouteData<IDetailsRouteParams, IDetailsRouteState>>\n                  {({ integrationId }, { integration }) => {\n                    return (\n                      <WithMonitoredIntegration\n                        integrationId={integrationId}\n                        initialValue={integration}\n                      >\n                        {({ data, hasData, error }) => (\n                          <WithIntegrationMetrics integrationId={integrationId}>\n                            {({ data: metricsData }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={<Loader />}\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <WithIntegrationActions\n                                    integration={data.integration}\n                                  >\n                                    {({\n                                      ciCdAction,\n                                      editAction,\n                                      deleteAction,\n                                      exportAction,\n                                      startAction,\n                                      stopAction,\n                                    }) => {\n                                      return (\n                                        <>\n                                          <PageTitle\n                                            title={t(\n                                              'integrations:detail:pageTitle'\n                                            )}\n                                          />\n                                          <IntegrationDetailHeader\n                                            data={data}\n                                            startAction={startAction}\n                                            stopAction={stopAction}\n                                            deleteAction={deleteAction}\n                                            ciCdAction={ciCdAction}\n                                            editAction={editAction}\n                                            exportAction={exportAction}\n                                            getPodLogUrl={getPodLogUrl}\n                                          />\n                                          <IntegrationDetailMetrics\n                                            i18nUptime={t(\n                                              'integrations:metrics:uptime'\n                                            )}\n                                            i18nTotalMessages={t(\n                                              'integrations:metrics:totalMessages'\n                                            )}\n                                            i18nTotalErrors={t(\n                                              'integrations:metrics:totalErrors'\n                                            )}\n                                            i18nSince={t(\n                                              'integrations:metrics:since'\n                                            )}\n                                            i18nLastProcessed={t(\n                                              'integrations:metrics:lastProcessed'\n                                            )}\n                                            errors={metricsData.errors}\n                                            lastProcessed={\n                                              typeof metricsData.lastProcessed !==\n                                              'undefined'\n                                                ? new Date(\n                                                    metricsData.lastProcessed\n                                                  ).toLocaleString()\n                                                : t('shared:NA')\n                                            }\n                                            messages={metricsData.messages}\n                                            start={parseInt(\n                                              metricsData.start!,\n                                              10\n                                            )}\n                                            durationDifference={toDurationDifferenceString(\n                                              parseInt(metricsData.start!, 10)\n                                            )}\n                                          />\n                                        </>\n                                      );\n                                    }}\n                                  </WithIntegrationActions>\n                                )}\n                              </WithLoader>\n                            )}\n                          </WithIntegrationMetrics>\n                        )}\n                      </WithMonitoredIntegration>\n                    );\n                  }}\n                </WithRouteData>\n              )}\n            </AppContext.Consumer>\n          )}\n        </Translation>\n      </>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false as boolean\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nTitle={t('shared:Integrations')}\n                            i18nDescription={t('integrationListDescription')}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'primary'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { createBrowserHistory } from '@syndesis/history';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { Router } from 'react-router-dom';\nimport { App, IAppRoute, IAppRouteWithChildrens } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ApiClientConnectorsModule } from './modules/apiClientConnectors';\nimport { ConnectionsModule } from './modules/connections';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { ExtensionsModule } from './modules/extensions';\nimport { IntegrationsModule } from './modules/integrations';\nimport routes from './modules/routes';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router history={createBrowserHistory()}>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                label: 'Home',\n                                to: routes.dashboard.root,\n                              } as IAppRoute,\n                              {\n                                component: IntegrationsModule,\n                                label: 'Integrations',\n                                to: routes.integrations.list,\n                              } as IAppRoute,\n                              {\n                                component: ConnectionsModule,\n                                label: 'Connections',\n                                to: routes.connections.connections,\n                              } as IAppRoute,\n                              {\n                                childrens: [\n                                  {\n                                    component: ApiClientConnectorsModule,\n                                    label: 'API Client Connectors',\n                                    to: routes.apiClientConnectors.list,\n                                  } as IAppRoute,\n                                  {\n                                    component: ExtensionsModule,\n                                    label: 'Extensions',\n                                    to: routes.extensions.list,\n                                  } as IAppRoute,\n                                ],\n                                label: 'Customizations',\n                              } as IAppRouteWithChildrens,\n                              {\n                                component: DataModule,\n                                label: 'Data',\n                                to: routes.data.root,\n                              } as IAppRoute,\n                              {\n                                component: SettingsModule,\n                                label: 'Settings',\n                                to: routes.settings.root,\n                              } as IAppRoute,\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}