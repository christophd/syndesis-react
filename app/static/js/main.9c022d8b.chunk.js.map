{"version":3,"sources":["modules/settings/routes.ts","modules/integrations/routes.ts","modules/customizations/resolvers.ts","../../src/DataMapperAdapter.tsx","modules/integrations/resolvers.ts","i18n/locales/index.ts","i18n/index.ts","shared/ApiError.tsx","shared/ModuleLoader.tsx","shared/PageNotFound.tsx","shared/PageTitle.tsx","shared/WithClosedNavigation.tsx","shared/WithErrorBoundary.tsx","shared/index.ts","modules/integrations/components/IntegrationEditorStepAdder.tsx","modules/dashboard/routes.ts","modules/dashboard/resolvers.ts","modules/settings/resolvers.ts","modules/resolvers.ts","../../src/Shared/ConfirmationDialog.tsx","../../src/Shared/AggregatedMetricCard.tsx","../../src/Shared/Dialog.tsx","../../src/Layout/Container.tsx","../../src/Shared/DndFileChooser.tsx","../../src/Layout/AppTopMenu.tsx","../../src/Layout/ButtonLink.tsx","../../src/Layout/Loader.tsx","../../src/Layout/PfNavLink.tsx","../../src/Layout/PfVerticalNavItem.tsx","../../src/Layout/TabBarItem.tsx","../../src/Layout/WizardSteps.tsx","../../src/Shared/InlineTextEdit.tsx","../../src/Shared/ListViewToolbar.tsx","../../src/Shared/LogViewer.tsx","../../src/Shared/Notifications.tsx","../../src/Shared/SimplePageHeader.tsx","../../src/Shared/ProgressWithLink.tsx","../../src/Shared/PfDropdownItem.tsx","../../src/Connection/ConnectionCard.tsx","../../src/Connection/ConnectionDetailsForm.tsx","../../src/Connection/ConnectionDetailsHeader.tsx","../../src/Connection/ConnectionsGrid.tsx","../../src/Connection/ConnectionsGridCell.tsx","../../src/Connection/ConnectionsListView.tsx","../../src/Connection/ConnectorConfigurationForm.tsx","../../src/Integration/CiCd/CiCdUIModels.ts","../../src/Customization/ApiConnectorDetailCard.tsx","../../src/Customization/ApiConnectorInfo.tsx","../../src/Customization/ApiConnectorReview.tsx","../../src/Customization/ApiConnectorDetail.tsx","../../src/Customization/ApiConnectorListItem.tsx","../../src/Customization/ApiConnectorListView.tsx","../../src/Customization/ExtensionDetail.tsx","../../src/Customization/ExtensionImportCard.tsx","../../src/Customization/ExtensionImportReview.tsx","../../src/Customization/ExtensionIntegrationsTable.tsx","../../src/Customization/ExtensionListItem.tsx","../../src/Customization/ExtensionListView.tsx","../../src/Customization/ExtensionOverview.tsx","../../src/Customization/ExtensionSupports.tsx","../../src/Dashboard/ConnectionsMetric.tsx","../../src/Dashboard/Dashboard.tsx","../../src/Dashboard/IntegrationBoard.tsx","../../src/Dashboard/RecentUpdatesCard.tsx","../../src/Integration/CiCd/CiCdEditDialog.tsx","../../src/Integration/CiCd/CiCdList.tsx","../../src/Integration/CiCd/CiCdListEmptyState.tsx","../../src/Integration/CiCd/CiCdListItem.tsx","../../src/Integration/CiCd/CiCdListView.tsx","../../src/Integration/CiCd/CiCdManagePageUI.tsx","../../src/Integration/CiCd/CiCdListSkeleton.tsx","../../src/Integration/CiCd/TagIntegrationDialog.tsx","../../src/Integration/CiCd/TagIntegrationListItem.tsx","../../src/Integration/CiCd/TagIntegrationDialogEmptyState.tsx","../../src/Integration/CiCd/TagIntegrationDialogBody.tsx","../../src/Integration/Import/ImportPageUI.tsx","../../src/Integration/IntegrationActions.tsx","../../src/Integration/IntegrationDetailActivity.tsx","../../src/Integration/IntegrationDetailActivityItem.tsx","../../src/Integration/IntegrationDetailActivityItemSteps.tsx","../../src/Integration/IntegrationDetailDescription.tsx","../../src/Integration/IntegrationDetailEditableName.tsx","../../src/Integration/IntegrationDetailHistoryListView.tsx","../../src/Integration/IntegrationDetailHistoryListViewItem.tsx","../../src/Integration/IntegrationDetailInfo.tsx","../../src/Integration/IntegrationDetailMetrics.tsx","../../src/Integration/IntegrationEditorActionsListItem.tsx","../../src/Integration/IntegrationEditorChooseAction.tsx","../../src/Integration/IntegrationEditorChooseConnection.tsx","../../src/Integration/IntegrationEditorConnectionsListItem.tsx","../../src/Integration/IntegrationEditorForm.tsx","../../src/Integration/IntegrationEditorNothingToConfigure.tsx","../../src/Integration/IntegrationEditorStepsList.tsx","../../src/Integration/IntegrationEditorStepsListItem.tsx","../../src/Integration/IntegrationFlowAddStep.tsx","../../src/Integration/IntegrationFlowStep.tsx","../../src/Integration/IntegrationFlowStepDetails.tsx","../../src/Integration/IntegrationFlowStepGeneric.tsx","../../src/Integration/IntegrationIcon.tsx","../../src/Integration/IntegrationStatus.tsx","../../src/Integration/models.ts","../../src/Integration/IntegrationStatusDetail.tsx","../../src/Integration/IntegrationStepsHorizontalItem.tsx","../../src/Integration/IntegrationStepsHorizontalView.tsx","../../src/Integration/IntegrationVerticalFlow.tsx","../../src/Integration/IntegrationsList.tsx","../../src/Integration/IntegrationsListItem.tsx","../../src/Integration/IntegrationsListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionCard.tsx","../../src/Integration/IntegrationsListView.tsx","../../src/Dashboard/TopIntegrationsCard.tsx","../../src/Dashboard/UptimeMetric.tsx","../../src/Data/Virtualizations/Views/ViewListItem.tsx","../../src/Data/Virtualizations/Views/ViewList.tsx","../../src/Data/DvConnection/DvConnectionsGrid.tsx","../../src/Data/DvConnection/DvConnectionsGridCell.tsx","../../src/Data/DvConnection/DvConnectionsListView.tsx","../../src/Data/Virtualizations/Views/ViewInfoListItem.tsx","../../src/Data/Virtualizations/Views/ViewInfoList.tsx","../../src/Data/Virtualizations/VirtualizationListItem.tsx","../../src/Data/Virtualizations/models.ts","../../src/Data/Virtualizations/VirtualizationList.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatus.tsx","../../src/Data/Virtualizations/VirtualizationPublishStatusDetail.tsx","../../src/Settings/OAuth/OAuthAppExpanderBody.tsx","../../src/Settings/OAuth/OAuthAppListItem.tsx","../../src/Connection/ConnectionCreatorLayout.tsx","../../src/Connection/ConnectionSkeleton.tsx","../../src/Customization/ApiConnectorListSkeleton.tsx","../../src/Customization/ExtensionListSkeleton.tsx","../../src/Dashboard/RecentUpdatesItem.tsx","../../src/Dashboard/RecentUpdatesSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewListSkeleton.tsx","../../src/Data/DvConnection/DvConnectionSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewInfoListSkeleton.tsx","../../src/Data/Virtualizations/Views/ViewsCreateLayout.tsx","../../src/Data/Virtualizations/VirtualizationListSkeleton.tsx","../../src/Integration/IntegrationActionSelectorCard.tsx","../../src/Integration/IntegrationEditorLayout.tsx","../../src/Integration/IntegrationFlowStepWithOverview.tsx","../../src/Integration/IntegrationsListItemUnreadable.tsx","../../src/Layout/AppLayout.tsx","../../src/Layout/Breadcrumb.tsx","../../src/Layout/TabBar.tsx","../../src/Layout/WizardStep.tsx","../../src/Settings/OAuth/OAuthAppHeader.tsx","../../src/Settings/OAuth/OAuthAppList.tsx","../../src/Settings/OAuth/OAuthAppListItemView.tsx","../../src/Shared/GenericTable.tsx","../../src/Shared/UnrecoverableError.tsx","modules/integrations/components/TagIntegrationDialogWrapper.tsx","modules/integrations/components/Integrations.tsx","modules/integrations/components/IntegrationCreatorBreadcrumbs.tsx","modules/integrations/components/IntegrationDetailHistory.tsx","modules/integrations/components/IntegrationDetailSteps.tsx","modules/integrations/components/IntegrationEditorBreadcrumbs.tsx","modules/integrations/components/IntegrationEditorSidebar.tsx","modules/integrations/components/index.ts","modules/customizations/routes.ts","app/syndesis_logo_full_darkbkg.svg","modules/data/routes.ts","modules/connections/resolvers.ts","app/AppContext.tsx","app/UIContext.tsx","app/UI.tsx","app/App.tsx","app/index.ts","../../src/autoformHelpers.ts","../../src/key.ts","../../src/WithListViewToolbarHelpers.tsx","../../src/WithLoader.tsx","../../src/WithRouteData.tsx","../../src/WithRouter.tsx","../../src/makeResolver.ts","../../src/OptionalIntUtil.ts","modules/connections/routes.ts","../../src/widgets/helpers.ts","../../src/widgets/FormInputComponent.tsx","../../src/widgets/FormSelectComponent.tsx","../../src/widgets/FormTextAreaComponent.tsx","../../src/widgets/FormCheckboxComponent.tsx","../../src/widgets/FormHiddenComponent.tsx","../../src/widgets/FormDurationComponent.tsx","../../src/FormBuilder.tsx","../../src/AutoForm.tsx","modules/connections/components/ConnectionCreatorBreadcrumbs.tsx","modules/connections/components/Connections.tsx","modules/connections/components/ConnectionsWithToolbar.tsx","modules/connections/components/WithConnectorForm.tsx","modules/connections/components/index.ts","../../packages/atlasmap-assembly/dist/atlasmap/runtime.js","../../packages/atlasmap-assembly/dist/atlasmap/polyfills.js","../../packages/atlasmap-assembly/dist/atlasmap/styles.js","../../packages/atlasmap-assembly/dist/atlasmap/scripts.js","../../packages/atlasmap-assembly/dist/atlasmap/vendor.js","../../packages/atlasmap-assembly/dist/atlasmap/main.js","app/WithConfig.tsx","modules/connections/pages/ConnectionDetailsPage.tsx","modules/connections/pages/ConnectionsPage.tsx","modules/connections/pages/create/ConfigurationPage.tsx","modules/connections/pages/create/ConnectorsPage.tsx","modules/connections/pages/create/index.ts","modules/connections/pages/create/ReviewPage.tsx","modules/connections/ConnectionsCreatorApp.tsx","modules/connections/index.tsx","modules/customizations/shared/CustomizationsNavBar.tsx","modules/customizations/pages/ApiConnectorsPage.tsx","modules/customizations/shared/ExtensionIntegrations.tsx","modules/customizations/pages/ExtensionDetailsPage.tsx","modules/customizations/customizationsUtils.ts","modules/customizations/pages/ExtensionImportPage.tsx","modules/customizations/pages/ExtensionsPage.tsx","modules/data/shared/VirtualizationUtils.ts","modules/customizations/CustomizationsApp.tsx","modules/customizations/index.tsx","modules/dashboard/index.tsx","modules/routes.ts","modules/data/shared/HeaderView.tsx","modules/data/shared/VirtualizationNavBar.tsx","modules/data/shared/ViewsCreateSteps.tsx","modules/data/shared/ViewInfosContent.tsx","modules/data/shared/ViewSqlForm.tsx","modules/data/shared/ViewSqlFormAndTable.tsx","modules/data/shared/DvConnections.tsx","modules/data/shared/DvConnectionsWithToolbar.tsx","modules/data/pages/views/SelectConnectionPage.tsx","modules/data/pages/views/SelectViewsPage.tsx","modules/data/CreateViewsApp.tsx","modules/data/pages/VirtualizationCreatePage.tsx","modules/data/pages/VirtualizationMetricsPage.tsx","modules/data/pages/VirtualizationRelationshipPage.tsx","modules/data/pages/VirtualizationsPage.tsx","modules/data/pages/VirtualizationSqlClientPage.tsx","modules/data/pages/VirtualizationViewsPage.tsx","modules/data/index.tsx","modules/integrations/components/editor/utils.ts","modules/integrations/components/editor/AddStepPage.tsx","modules/integrations/components/editor/api-provider/EditPage.tsx","modules/integrations/components/editor/api-provider/ReviewPage.tsx","modules/integrations/components/editor/api-provider/UploadPage.tsx","modules/integrations/components/editor/EditorApp.tsx","modules/integrations/shared/IntegrationDetailNavBar.tsx","modules/integrations/shared/WithConfigurationForm.tsx","modules/integrations/components/editor/endpoint/ConfigureActionPage.tsx","modules/integrations/components/editor/endpoint/SelectActionPage.tsx","modules/integrations/components/editor/SaveIntegrationPage.tsx","modules/integrations/components/editor/SelectConnectionPage.tsx","modules/integrations/IntegrationCreatorApp.tsx","modules/integrations/IntegrationEditorApp.tsx","modules/integrations/pages/detail/ActivityPage.tsx","modules/integrations/pages/detail/DetailsPage.tsx","modules/integrations/pages/detail/MetricsPage.tsx","modules/integrations/pages/import/ImportPage.tsx","modules/integrations/pages/IntegrationsPage.tsx","modules/integrations/pages/TestAtlasmapPage.tsx","modules/integrations/pages/cicd/ManageCiCdPage.tsx","modules/integrations/index.tsx","modules/settings/pages/OAuthAppsPage.tsx","modules/settings/index.tsx","registerServiceWorker.ts","index.tsx","../../src/ApiContext.tsx","../../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/callFetch.ts","../../src/Fetch.tsx","../../src/Stream.tsx","../../src/SyndesisFetch.tsx","../../src/DVFetch.tsx","../../src/constants.ts","../../src/ServerEventsContext.tsx","../../src/WithIntegrationHelpers.tsx","../../src/WithChangeListener.tsx","../../src/WithApiConnectors.tsx","../../src/WithPolling.tsx","../../src/WithEnvironments.tsx","../../src/WithEnvironmentHelpers.tsx","../../src/WithExtension.tsx","../../src/WithExtensionHelpers.tsx","../../src/WithExtensionIntegrations.tsx","../../src/WithExtensions.tsx","../../src/WithIntegration.tsx","../../src/WithIntegrations.tsx","../../src/WithIntegrationTags.tsx","../../src/WithMonitoredIntegrations.tsx","../../src/WithIntegrationsMetrics.tsx","../../src/WithConnections.tsx","../../src/helpers/connectionFunctions.ts","../../src/helpers/integrationFunctions.ts","../../src/WithConnection.tsx","../../src/WithConnectionHelpers.tsx","../../src/WithConnector.tsx","../../src/WithConnectors.tsx","../../src/WithSteps.tsx","../../src/WithOAuthAppHelpers.tsx","../../src/WithOAuthApps.tsx","../../src/WithServerEvents.tsx","../../src/WithViews.tsx","../../src/WithViewEditorStates.tsx","../../src/WithVirtualizationHelpers.tsx","../../src/WithVirtualization.tsx","../../src/WithVirtualizations.tsx","../../src/WithVirtualizationConnectionStatuses.tsx","../../src/WithVirtualizationConnectionSchema.tsx","../../src/helpers/serializeIntegration.ts","../../src/helpers/deserializeIntegration.ts","modules/data/resolvers.ts"],"names":["named_urls__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","include","oauthApps","root","stepRoutes","selectStep","apiProvider","upload","review","edit","dataMapper","basicFilter","template","step","extension","connection","selectAction","configureAction","describeData","editorRoutes","index","addStep","editStep","saveAndPublish","list","manageCicd","import","create","start","finish","configure","integration","details","activity","metrics","_syndesis_utils__WEBPACK_IMPORTED_MODULE_0__","_routes__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","apiConnectors","apiConnector","makeResolver","routes","_ref","params","apiConnectorId","id","state","makeResolverNoParams","security","save","extensions","_ref2","extensionId","update","_ref3","const","DocumentType","InspectionType","runtime","require","polyfills","styles","scripts","vendor","main","DataMapperAdapter","constructor","props","iframe","messageChannel","MessageChannel","onIframeLoad","this","bind","onMessages","componentDidMount","addEventListener","componentWillReceiveProps","nextProps","prevPayload","_","nextPayload","equal","updateDataMapperApp","shouldComponentUpdate","componentWillUnmount","removeEventListener","messagePort","port1","onmessage","contentWindow","postMessage","port2","event","message","payload","onMappings","mappings","documentId","inputDataShape","inputDescription","inputDocumentType","inputInspectionType","inputName","outputDataShape","outputDescription","outputDocumentType","outputInspectionType","outputName","render","srcDoc","React","createElement","Object","assign","style","width","height","frameBorder","allowtransparency","extraProps","ref","el","configureIndexMapper","flowId","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","flows","integrationId","configureSelectConnectionMapper","position","rest","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_configureIndexMapper","configureSelectActionMapper","_configureSelectConne","connectionId","configureConfigureActionMapper","_ref4","actionId","updatedIntegration","_configureSelectActio","positionAsNumber","parseInt","stepObject","getStep","concat","configuredProperties","listResolver","manageCicdResolver","createRootResolver","createStartSelectStepResolver","makeResolverNoParamsWithDefaults","getEmptyIntegration","createStartSelectActionResolver","createStartConfigureActionResolver","createFinishSelectStepResolver","createFinishSelectActionResolver","createFinishConfigureActionResolver","createConfigureIndexResolver","createConfigureAddStepSelectStepResolver","createConfigureAddStepSelectActionResolver","createConfigureAddStepConfigureActionResolver","createConfigureEditStepSelectActionResolver","createConfigureEditStepConfigureActionResolver","createConfigureEditStepSaveAndPublishResolver","integrationActivityResolver","_ref5","integrationDetailsResolver","_ref6","integrationEditIndexResolver","integrationEditAddStepSelectStepResolver","integrationEditAddStepSelectActionResolver","integrationEditAddStepConfigureActionResolver","integrationEditEditStepSelectActionResolver","integrationEditEditStepConfigureActionResolver","integrationEditSaveAndPublish","metricsResolver","_ref7","resolvers","Error","en","app","appEn","it","appIt","modules","settings","settingsEn","settingsIt","connections","connectionsEn","connectionsIt","customizations","customizationsEn","customizationsIt","dashboard","dashboardEn","dashboardIt","data","dataEn","dataIt","integrations","integrationsEn","integrationsIt","options","interpolation","escapeValue","debug","resources","shared","defaultNS","fallbackLng","fallbackNS","keySeparator","ns","i18n","use","LanguageDetector","init","ApiError","react","es","t","ui","i18nTitle","i18nInfo","i18nHelp","i18nRefreshLabel","i18nReportIssue","error","errorInfo","ModuleLoader","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","timedOut","console","i18nShowErrorInfoLabel","pastDelay","PageNotFound","PageTitle","_React$PureComponent","Consumer","config","Helmet_default","a","title","WithClosedNavigation","children","context","UIContext","hideNavigation","showNavigation","WithErrorBoundary","_getPrototypeOf2","_len","length","args","Array","_key","call","setState","nextContext","undefined","_this2","errorComponent","d","ApiError_ApiError","ModuleLoader_ModuleLoader","PageNotFound_PageNotFound","PageTitle_PageTitle","WithClosedNavigation_WithClosedNavigation","WithErrorBoundary_WithErrorBoundary","IntegrationEditorStepAdder","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_repo_app_ui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_7__","_syndesis_ui__WEBPACK_IMPORTED_MODULE_6__","steps","map","s","idx","stepName","name","stepDescription","action","icon","src","getStepIcon","process","actions","href","configureStepHref","as","className","active","showDetails","addStepHref","i18nAddStep","route","dashboard_resolvers","reverse","settings_resolvers","ConfirmationIconType","ConfirmationButtonStyle","AggregatedMetricCard","Card","accented","aggregated","matchHeight","AggregateStatusCount","Body","AggregateStatusNotifications","AggregateStatusNotification","Icon","type","ok","ConfirmationDialog","MessageDialog","accessibleName","accessibleDescription","NONE","onHide","onCancel","primaryAction","onConfirm","primaryActionButtonContent","i18nConfirmButtonText","primaryActionButtonBsStyle","buttonStyle","primaryContent","i18nConfirmationMessage","secondaryAction","secondaryActionButtonContent","i18nCancelButtonText","secondaryContent","i18nDetailsMessage","show","showDialog","Dialog","body","footer","Container","classnames","DndFileChooser","files","notifications","handleAcceptedFiles","handleRejectedFiles","getSelectedFileMessage","file","i18nNoFileSelectedMessage","getUploadMessage","i18nUploadSuccessMessage","i18nUploadFailedMessage","i18nUploadSuccessMessages","i18nUploadFailedMessages","acceptedFiles","onUploadAccepted","rejectedFiles","Dropzone","accept","fileExtensions","disabled","disableDropzone","multiple","allowMultiple","onDropAccepted","onDropRejected","getInputProps","Grid","fluid","getRootProps","refKey","Row","Col","dangerouslySetInnerHTML","__html","i18nInstructions","xs","i18nSelectedFileLabel","AppTopMenu","isOpen","onToggle","onSelect","username","Dropdown","isPlain","toggle","DropdownToggle","dropdownItems","ButtonLink","size","Link","to","onClick","Loader","inline","Spinner","loading","inverse","PfNavLink","classNameProp","exact","isActiveProp","location","strict","styleProp","label","path","pathname","escapedPath","Route","match","isActive","childLocation","i","joinClassnames","activeClassName","activeStyle","PfVerticalNavItem","classNames","obj","WizardSteps","mainSteps","altSteps","ReadWidget","allowEditing","onEdit","EditWidget","placeholder","errorMsg","saving","asTextarea","onChange","Fragment","FormGroup","controlId","validationState","valid","FormControl","componentClass","InlineEdit","ConfirmButton","CancelButton","HelpBlock","InputGroup","Button","InlineTextEdit","i18nPlaceholder","isTextArea","onValidate","attrs","currentValue","setCurrentValue","editing","setEditing","setSaving","useState","ref$4_0","ref$4","setValidity","validate","valueToValidate","then","result","e","handleConfirm","success","handleChange","isEditing","renderValue","v","renderEdit","ListViewToolbar","renderInput","currentFilterType","Filter","ValueSelector","filterValues","onFilterValueSelected","filterType","onUpdateCurrentValue","onKeyPress","onValueKeyPress","Toolbar","TypeSelector","filterTypes","onFilterTypeSelected","onSelectFilterType","Sort","sortTypes","currentSortType","onSortTypeSelected","onUpdateCurrentSortType","DirectionSelector","isNumeric","isAscending","isSortAscending","onToggleCurrentSortDirection","Results","activeFilters","i18nResultsCount","List","item","Item","onRemove","onRemoveFilter","filterData","onClearFilters","LogViewer","count","followScroll","previousCount","renderRow","parent","CellMeasurer","cache","cellMeasurerCache","columnIndex","rowIndex","toggleFollow","CellMeasurerCache","fixedWidth","minHeight","getDerivedStateFromProps","sm","AutoSizer","disableHeight","disableWidth","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToLine","scrollToIndex","Switch","labelText","Notifications","ToastNotificationList","notification","TimedToastNotification","persistent","onDismiss","timerdelay","notificationTimerDelay","SimplePageHeader","i18nDescription","Title","headingLevel","TitleLevel","h2","Text","ProgressWithLink","currentStep","totalSteps","logUrl","target","i18nLogUrlText","ProgressBar","now","max","PfDropdownItem","superclass","DropdownItem","ConnectionCard","showDeleteDialog","menuProps","doCancel","doDelete","onDelete","DANGER","i18nCancelLabel","i18nDeleteLabel","i18nDeleteModalMessage","i18nDeleteModalTitle","DropdownKebab","pullRight","i18nMenuTitle","role","tabIndex","i18nViewLabel","editHref","i18nEditLabel","isDeleteEnabled","alt","description","ConnectionDetailsForm","onSubmit","handleSubmit","validationResults","Alert","bsStyle","isWorking","isValid","i18nValidateLabel","onCancelEditing","i18nSaveLabel","onStartEditing","ConnectionDetailsHeader","connectionIcon","connectionName","i18nNamePlaceholder","onChangeName","i18nDescriptionLabel","connectionDescription","i18nDescriptionPlaceholder","onChangeDescription","i18nUsageMessage","ConnectionsGrid","CardGrid","ConnectionsGridCell","md","ConnectionsListView","linkToConnectionCreate","ConnectorConfigurationForm","i18nFormTitle","TagNameValidationError","ApiConnectorDetailCard","CardBody","ApiConnectorInfo","ApiConnectorReview","ApiConnectorDetail","CardHeading","CardTitle","ApiConnectorListItem","handleDelete","handleDetails","getDeleteTooltip","Tooltip","i18nDeleteTip","i18nDelete","getDetailsTooltip","i18nDetailsTip","i18nDetails","onDetails","ListViewItem","OverlayTrigger","overlay","placement","usedBy","additionalInfo","ListViewInfoItem","i18nUsedByMessage","apiConnectorDescription","heading","apiConnectorName","hideCloseIcon","leftContent","apiConnectorIcon","stacked","ApiConnectorListView","getCreateConnectorTooltip","linkCreateApiConnector","ListView","EmptyState","i18nEmptyStateTitle","i18nEmptyStateInfo","Action","i18nLinkCreateApiConnector","i18nLinkCreateApiConnectorTip","ExtensionDetail","getUpdateTooltip","i18nUpdateTip","i18nUpdate","i18nCancelText","extensionName","i18nIdMessage","linkUpdateExtension","extensionUses","h3","integrationsSection","ExtensionImportCard","i18nImportInstructions","i18nAlertMessage","dndDisabled","i18nHelpMessage","i18nDndHelpMessage","i18nDndInstructions","i18nDndNoFileSelectedMessage","i18nDndSelectedFileLabel","i18nDndUploadFailedMessage","i18nDndUploadSuccessMessage","onDndUploadAccepted","onUploadRejected","onDndUploadRejected","ExtensionImportReview","handleImport","getActions","onImport","extensionUid","i18nNameLabel","extensionDescription","i18nTypeLabel","i18nExtensionTypeMessage","i18nActionsLabel","xsOffset","i18nImport","cancelLink","i18nCancel","ExtensionIntegrationsTable","getColumns","headerFormat","Table","cell","formatters","rowData","header","i18nName","property","onIntegrationSelected","onSelectIntegration","PfProvider","striped","bordered","hover","columns","rows","rowKey","ExtensionListItem","detailsPageLink","i18nExtensionType","extensionIcon","ExtensionListView","getImportTooltip","i18nLinkImportExtensionTip","i18nLinkImportExtension","linkImportExtension","ExtensionOverview","i18nType","i18nLastUpdate","i18nLastUpdateDate","ExtensionSupports","extensionActions","ConnectionsMetric","Dashboard","linkToIntegrations","i18nLinkToIntegrations","linkToIntegrationCreation","topIntegrations","integrationBoard","marginTop","i18nConnections","linkToConnections","i18nLinkToConnections","linkToConnectionCreation","IntegrationBoard","colors","Pending","patternfly","black200","Published","blue400","Stopped","black300","i18nIntegrationStateRunning","runningIntegrations","i18nIntegrationStateStopped","stoppedIntegrations","i18nIntegrationStatePending","pendingIntegrations","DonutChart","tooltip","contents","pfDonutTooltipContents","secondary","i18nIntegrations","i18nTotal","legend","RecentUpdatesCard","CiCdEditDialog","tagName","handleClick","trim","onSave","validationError","NoErrors","htmlFor","i18nInputLabel","defaultValue","NoName","i18nNoNameError","NameInUse","i18nNameInUseError","CiCdList","CiCdListEmptyState","bsSize","onAddNew","i18nAddNewButtonText","CiCdListItem","handleEditClicked","handleRemoveClicked","onEditClicked","onRemoveClicked","i18nUsesText","CiCdListView","resultsCount","CiCdManagePageUI","showAddDialog","showEditDialog","showRemoveDialog","openAddDialog","closeAddDialog","openEditDialog","closeEditDialog","openRemoveDialog","closeRemoveDialog","handleSave","handleRemoveConfirm","onEditItem","currentItemName","onAddItem","onRemoveItem","i18nPageTitle","i18nPageDescription","i18nAddTagDialogTitle","i18nAddTagDialogDescription","i18nTagInputLabel","i18nSaveButtonText","nameValidationError","onValidateItem","i18nEditTagDialogTitle","i18nEditTagDialogDescription","NORMAL","i18nConfirmCancelButtonText","i18nConfirmRemoveButtonText","i18nRemoveConfirmationMessage","i18nRemoveConfirmationTitle","i18nRemoveConfirmationDetailMessage","onFilterAdded","ItemSkeleton","ContentLoader","speed","primaryColor","secondaryColor","x","y","rx","ry","min","Math","CiCdListSkeleton","TagIntegrationDialog","disableSave","items","initialItems","selected","acc","current","itemsDraft","TagIntegrationListItem","checked","checkboxInput","defaultChecked","TagIntegrationDialogEmptyState","background","border","i18nGoToManageCiCdButtonText","TagIntegrationDialogBody","manageCiCdHref","i18nEmptyStateButtonText","ImportPageUI","IntegrationActions","detailsHref","IntegrationDetailActivity","linkToOpenShiftLog","i18nViewLogOpenShift","i18nLastRefresh","IntegrationDetailActivityItem","cellFormat","errorCount","i18nErrorsFound","date","time","i18nVersion","version","i18nNoSteps","IntegrationDetailActivityItemSteps","duration","output","status","IntegrationDetailDescription","i18nNoDescription","IntegrationDetailEditableName","IntegrationDetailHistoryListView","isDraft","i18nTextDraft","hasHistory","IntegrationDetailHistoryListViewItem","i18nTextLastPublished","updatedAt","currentState","Unpublished","states","IntegrationDetailInfo","IntegrationDetailMetrics","startAsHuman","Date","uptimeStart","toLocaleString","marginBottom","errorMessagesCount","okMessagesCount","IntegrationEditorActionsListItem","integrationName","integrationDescription","IntegrationEditorChooseAction","IntegrationEditorChooseConnection","IntegrationEditorConnectionsListItem","IntegrationEditorForm","IntegrationEditorNothingToConfigure","i18nAlert","IntegrationEditorStepsList","IntegrationEditorStepsListItem","IntegrationFlowAddStep","showTooltip","containerRef","createRef","hideTooltip","toggleTooltip","onMouseEnter","onMouseLeave","onTouchStart","IntegrationFlowStep","i18nTooltip","trigger","rootClose","GenericDescription","StepOverview","actionI18nLabel","dataTypeI18nLabel","dataType","nameI18nLabel","IntegrationFlowStepDetails","IntegrationIcon","finishConnectionIcon","startConnectionIcon","IntegrationStatus","labelType","Label","IntegrationStatusDetail","fallbackText","i18nProgressPending","targetState","IntegrationStepsHorizontalItem","isFirst","IntegrationStepsHorizontalView","IntegrationVerticalFlow","expanded","localStorage","toggleExpanded","IntegrationsList","IntegrationsListItem","isConfigurationRequired","i18nConfigurationRequired","InfoItem","monitoringValue","monitoringCurrentStep","monitoringTotalSteps","monitoringLogUrl","i18nProgressStarting","i18nProgressStopping","i18nPublished","i18nUnpublished","i18nError","getRandom$1","ConnectionStatus","cx","cy","r","getRandom","IntegrationsListSkeleton","IntegrationsListView","linkToManageCiCd","i18nManageCiCd","linkToIntegrationImport","TopIntegrationsCard","DropdownButton","i18nLast30Days","MenuItem","eventKey","i18nLast60Days","UptimeMetric","ViewListItem","handleEdit","viewName","handleCancel","getEditTooltip","i18nEdit","viewDescription","viewIcon","ListViewIcon","i18nEditTip","ViewList","getImportViewsTooltip","linkImportViewsHRef","i18nImportViews","getCreateViewTooltip","linkCreateViewHRef","hasListData","i18nCreateView","i18nCreateViewTip","i18nImportViewsTip","DvConnectionCard","toggleSelected","connName","ACTIVE","isSelected","onSelectionChanged","dvStatus","DvConnectionsGrid","DvConnectionsGridCell","DvConnectionsListView","ViewInfoListItem","handleCheckboxToggle","itemSelected","temp","getNodePathStr","nodePath","segment","isUpdateView","ViewInfoList","VirtualizationListItem","showConfirmationDialog","handleExport","handleUnpublish","handlePublish","virtualizationName","onExport","onPublish","serviceVdbName","onUnpublish","handleAcceptConfirmation","currentPublishedState","isPublished","publishInProgress","WARNING","i18nUnpublish","i18nUnpublishModalMessage","i18nUnpublishModalTitle","VirtualizationPublishStatusDetail","publishingLogUrl","stepText","publishingStepText","publishingCurrentStep","publishingTotalSteps","i18nPublishInProgress","i18nPublishLogUrlText","VirtualizationPublishStatus","i18nDraft","i18nExport","i18nPublish","virtualizationDescription","VirtualizationList","getCreateVirtualizationTooltip","i18nLinkCreateVirtualizationTip","i18nLinkCreateVirtualization","getImportVirtualizationTooltip","i18nImportTip","linkCreateHRef","OAuthAppExpanderBody","showSuccess","i18nAlertTitle","disableRemove","i18nRemoveButtonText","OAuthAppListItem","initExpanded","configured","i18nNotConfiguredText","content","onBack","onNext","cancelHref","backHref","nextHref","isNextLoading","isNextDisabled","extraButtons","isLastStep","integrationCurrentState","integrationDate","onCreateViews","sidebar","rawObject","window","appNav","verticalNav","logoHref","onNavigationCollapse","onNavigationExpand","onNavToggle","Page","PageHeader","logo","pictograph","logoProps","toolbar","showNavToggle","isNavOpen","PageSidebar","nav","Nav","NavList","PageSection","PfBreadcrumb","Breadcrumb","margin","paddingLeft","c","bsClass","isDisabled","isAlt","subSteps","i18nCallbackDescription","callbackURI","showErrorInfo","setShowErrorInfo","Help","textAlign","componentStack","TagIntegrationDialogWrapper","assertThisInitialized","newEnvironments","filter","tagIntegration","targetIntegrationId","api","tags","hasTags","hasData","tagError","disableUpdates","environments","hasEnvironments","environmentsError","utils","loaderChildren","errorChildren","mappedItems","JSON","stringify","Integrations","showActionPromptDialog","showCiCdPromptDialog","handleAction","handleActionCancel","promptForAction","closeCiCdDialog","promptDialogButtonText","promptDialogIcon","promptDialogText","promptDialogTitle","getPodLogUrl","pushNotification","deleteIntegration","deployIntegration","exportIntegration","undeployIntegration","TagIntegrationDialogWrapper_TagIntegrationDialogWrapper","mi","editAction","startAction","_handleAction","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","stop","promptDialogButtonStyle","stopAction","_handleAction2","_callee2","_context2","err","deleteAction","_handleAction3","_callee3","_context3","exportAction","ciCdAction","promptForCiCd","canEdit","push","canActivate","canDeactivate","board","warnings","errors","notices","monitoring","detailedState","getStartIcon","getFinishIcon","IntegrationCreatorBreadcrumbs","toggleActive","activeSubstep","subStep","IntegrationDetailHistory","deployments","deployment","i18nTextVersion","IntegrationDetailSteps","getSteps","connector","getIntegrationStepIcon","IntegrationEditorBreadcrumbs","IntegrationEditorSidebar","activeIndex","hasAddStep","addAtIndex","activeAddStep","addIcon","addI18nTitle","addI18nTooltip","addI18nDescription","stepKind","getConnectionIcon","Integrations_Integrations","IntegrationCreatorBreadcrumbs_IntegrationCreatorBreadcrumbs","IntegrationDetailHistory_IntegrationDetailHistory","IntegrationDetailSteps_IntegrationDetailSteps","IntegrationEditorBreadcrumbs_IntegrationEditorBreadcrumbs","IntegrationEditorSidebar_IntegrationEditorSidebar","module","exports","p","virtualizations","virtualization","relationship","sqlClient","views","importSource","selectConnection","selectViews","selectConnector","configureConnector","connectorId","AppContext","UI","_useState","_useState2","slicedToArray","setShowNavigation","onHideNavigation","onShowNavigation","_useState3","_useState4","setNotifications","onRemoveNotification","n","Provider","msg","toConsumableArray","toString","data-testid","minWidth","removeNotificationAction","url","component","App","linkType","namespace","podName","baseUrl","consoleUrl","logout","UI_UI","App_App","toFormDefinitionProperty","controlHint","controlTooltip","labelHint","labelTooltip","formDefinitionProperty","fieldAttributes","cols","ALPHABET","RANDOMNESS","lastTimestamp","let","WithListViewToolbarHelpers","keyEvent","filterValue","updated","sortType","defaultFilterType","defaultSortType","filterCategory","WithLoader","loaded","componentDidUpdate","prevProps","waitTimeout","setTimeout","clearTimeout","minWait","WithRouteData","WithRouterBase","WithRouter","withRouter","properties","answer","timestamp","getTime","remainingTimestamp","defaultRoute","mapper","present","asInt","optional","getValidationState","field","form","FormInputComponent","ControlLabel","displayName","FieldLevelHelp","FormSelectComponent","isMultiple","onBlur","newValue","select","currentTarget","option","enum","opt","FormTextAreaComponent","FormCheckboxComponent","Checkbox","FormHiddenComponent","durations","calculateValue","FormDurationComponent","inputField","handleOnSelect","handleBlur","receiveInputRef","newDuration","setFieldValue","valueAsNumber","Form","initialValue","isSubmitting","inputRef","FormBuilder","getField","componentTypemaps","checkbox","hidden","textarea","Field","i18nRequiredProperty","fields","enrichAndOrderProperties","definition","massagedValue","sanitizeValues","keys","reduce","prop","required","sort","b","massageType","secret","massageRequired","massageValue","String","AutoForm","Formik","initialValues","values","touched","dirty","isValidating","resetForm","validateForm","submitForm","this$1","ConnectionCreatorBreadcrumbs","Connections","deleteConnection","_x","_x2","fill","getConnectionHref","includeConnectionMenu","getConnectionEditHref","uses","filterByName","sortByName","ConnectionsWithToolbar","helpers","filteredAndSortedConnections","forEach","valueToLower","toLowerCase","includes","miA","miB","right","localeCompare","getFilteredAndSortedConnections","i18nLinkCreateConnection","Connections_Connections","defaultProps","includeHidden","WithConnectorForm","def","objectSpread","validateConfiguration","shouldValidateAgainstBackend","validateFormAgainstBackend","sent","find","scope","parameters","auto_form","toFormDefinition","enableValidationAgainstBackend","ConnectionCreatorBreadcrumbs_ConnectionCreatorBreadcrumbs","ConnectionsWithToolbar_ConnectionsWithToolbar","WithConnectorForm_WithConnectorForm","WithConfig","_componentDidMount","configResponse","_config","fetch","json","ConnectionDetailsPage","numUsedBy","history","dist_api","updateConnection","saveConnection","validateName","_ref8","updatedConnection","abrupt","saveDescription","_ref9","saved","saveName","_ref10","validation","doValidateName","_x3","saveConnector","_ref11","_callee4","_context4","setSubmitting","_x4","_x5","_ref12","_callee5","proposedName","response","_context5","isError","_x6","cancelEditing","startEditing","components","_ref13","i18nUsageLabel","getUsedByMessage","ConnectionsPage","connectionsForDisplay","ConfigurationPage","ConnectorsPage","connectorsForDisplay","ReviewPage","createConnection","ConnectionsCreatorApp","ConnectionsModule","ConnectionDetailsPage_ConnectionDetailsPage","CustomizationsNavBar","ApiConnectorsPage","optionalIntValue","alert","filteredAndSorted","thisApi","thatApi","getFilteredAndSortedApiConnectors","CustomizationsNavBar_CustomizationsNavBar","backgroundColor","filterUndefinedId","ExtensionIntegrations","getUsageMessage","ExtensionDetailsPage","handleSelectIntegration","selectedIntegrationId","deleteExtension","i18nOverviewSectionTitle","i18nSupportsSectionTitle","extensionType","i18nUsageSectionTitle","ExtensionIntegrations_ExtensionIntegrations","overviewSection","lastUpdated","i18nTypeMessage","getTypeMessage","supportsSection","getExtensionTypeName","ExtensionImportPage","actionDescription","actionName","onDndUploadRejectedHandler","failedFileName","text","fileName","importExtension","uploadExtension","onDndUploadAcceptedHandler","uploaded","dndUploadFailedMessage","dndUploadSuccessMessage","t1","importExtensionId","getActionsLabel","i18nIdLabel","i18nActionText","getActionText","DvConnectionStatus","DvConnectionSelection","ExtensionsPage","thisExtension","thatExtension","getFilteredAndSortedExtensions","i18nNameFilterPlaceholder","CustomizationApp","Redirect","CustomizationsModule","CustomizationsApp","LoadableDashboardPage","Loadable","loader","DashboardModule","baseurl","modules_routes","HeaderView","virtualizationId","keng__id","tko__description","VirtualizationNavBar","ViewsCreateSteps","PREVIEW_VDB_NAME","SCHEMA_MODEL_SUFFIX","generateViewEditorStates","viewInfos","editorStates","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Symbol","iterator","done","viewInfo","srcPaths","viewSourceNode","projCols","viewDefn","compositions","isComplete","keng__description","projectedColumns","sourcePaths","editorState","viewDefinition","return","getDvConnectionStatus","conn","dvState","INACTIVE","isDvConnectionSelected","dvSelected","SELECTED","getPreviewSql","sourcePath","split","getConnectionName","segments","getNodeName","getPreviewTableName","getFilteredAndSortedViewInfos","schemaNodes","selectedViewNames","existingViewNames","generateViewInfos","schemaNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","seg","queryable","vwName","selectedState","findIndex","hasExistingView","view","isUpdate","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","thisViewInfo","thatViewInfo","ViewInfosContent","displayedViews","handleViewSelectionChange","onViewSelected","onViewDeselected","ViewSqlForm","queryResults","queryResultsEmpty","querySql","updateQueryResults","viewSelected","results","onQueryResultsChanged","viewSql","selectedView","formDefinition","rowLimit","componentProperty","deprecated","javaType","kind","order","rowOffset","sqlStatement","queryVirtualization","doSubmit","targetVdb","ViewSqlFormAndTable","setQueryResults","defaultCellFormat","Heading","defaultHeaderFormat","Cell","ViewSqlForm_ViewSqlForm","row","defineProperty","Info","DvConnections","handleConnSourceSelectionChanged","onConnectionSelectionChanged","dvSourceStatuses","selectedConn","conns","virtualizationsSourceStatuses","dvConns","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_loop","connStatus","virtSrcStatus","virtStatus","sourceName","vdbState","schemaState","selectionState","NOTSELECTED","_iterator4","generateDvConnections","DvConnectionsWithToolbar","selectedConnection","handleConnectionSelectionChanged","DvConnections_DvConnections","SelectConnectionPage","selConn","ViewsCreateSteps_ViewsCreateSteps","DvConnectionsWithToolbar_DvConnectionsWithToolbar","SelectViewsPage","selectedViews","hasSelectedTables","handleAddView","handleRemoveView","viewNames","splice","refreshVirtualizationViews","handleCreateViews","viewEditorStates","idPattern","ViewInfosContent_ViewInfosContent","getExistingViewNames","CreateViewsApp","VirtualizationCreatePage","virtDescription","virtName","createVirtualization","handleCreate","VirtualizationMetricsPage","HeaderView_HeaderView","VirtualizationNavBar_VirtualizationNavBar","VirtualizationRelationshipPage","VirtualizationsPage","read","deleteVirtualization","publishVirtualization","unpublishServiceVdb","thisVirtualization","thatVirtualization","getFilteredAndSortedVirtualizations","i18nCreateDataVirtualization","i18nCreateDataVirtualizationTip","handleImportVirt","publishingDetails","publishStepDetails","publishedState","stepNumber","stepTotal","publishLogUrl","getPublishingDetails","handleExportVirtualization","VirtualizationSqlClientPage","ViewSqlFormAndTable_ViewSqlFormAndTable","VirtualizationViewsPage","deleteView","handleDeleteView","viewDefinitions","thisView","thatView","getFilteredAndSortedViewDefns","onImportView","handleImportView","handleEditView","DataModule","getStepHref","hrefs","toUIStepKind","apiProviderHref","filterHref","extensionHref","mapperHref","templateHref","stepHref","connectionHref","AddStepPage","getEditAddStepHref","EditPage","UploadPage","EndpointEditorApp","selectActionPath","selectActionChildren","configureActionPath","configureActionChildren","describeDataPath","describeDataChildren","ApiProviderApp","uploadPath","uploadChildren","reviewPath","reviewChildren","editPath","editChildren","TemplateApp","templatePath","templateChildren","BasicFilterApp","filterPath","filterChildren","DataMapperApp","mapperPath","mapperChildren","StepApp","configurePath","configureChildren","ExtensionApp","EditorApp","selectStepPath","selectStepChildren","endpointEditor","EditorApp_EndpointEditorApp","EditorApp_ApiProviderApp","EditorApp_TemplateApp","EditorApp_DataMapperApp","EditorApp_BasicFilterApp","EditorApp_StepApp","EditorApp_ExtensionApp","IntegrationDetailNavBar","WithConfigurationForm","descriptor","getActionDescriptor","getActionSteps","getActionStep","configurationStep","getActionStepDefinition","moreConfigurationSteps","onUpdatedIntegration","i18nSubtitle","getActionById","getConnectorActions","getConnectionConnector","renderConfigurationForm","renderNoPropertiesInfo","ConfigureActionPage","addConnection","_ref2$step","stepAsNumber","mode","nextStepHref","postConfigureHref","WithConfigurationForm_WithConfigurationForm","SelectActionPage","actionsWithTo","actionsWithFrom","selectHref","SaveIntegrationPage","saveIntegration","setIntegrationName","postSaveHref","_state$integration","integrationSteps","connectionsData","hasConnectionsData","connectionsError","extensionsData","hasExtensionsData","extensionsError","stepKinds","uiStepKind","extentionsByAction","isArray","propertyDefinitionSteps","actionType","getExtensionIcon","getStepKindIcon","toStepKindCollection","connectionsWithFromAction","connectionsWithToAction","visibleSteps","visibleStepsByPosition","addStepPage","AddStepPage_AddStepPage","integrations_components","saveIntegrationPage","SaveIntegrationPage_SaveIntegrationPage","startStepSelectConnectionPage","editor_SelectConnectionPage_SelectConnectionPage","startStepSelectActionPage","SelectActionPage_SelectActionPage","startStepConfigureActionPage","ConfigureActionPage_ConfigureActionPage","finishStepSelectConnectionPage","finishStepSelectActionPage","finishStepConfigureActionPage","addStepSelectConnectionPage","addStepSelectActionPage","addStepConfigureActionPage","_ref14","editStepSelectActionPage","_ref15","editStepConfigureActionPage","_ref16","TODO","IntegrationCreatorApp","EditorApp_EditorApp","UploadPage_UploadPage","EditPage_ReviewPage","ReviewPage_EditPage","selectConnectionPage","IntegrationEditorApp","ActivityPage","IntegrationDetailNavBar_IntegrationDetailNavBar","DetailsPage","showPromptDialog","draftActions","i18nTextHistory","MetricsPage","ImportPage","importIntegration","handleUploadAccepted","uploadFails","uploadWins","uploadFailedMessages","uploadSuccessMessages","failed","filterByConnection","sortByStatus","IntegrationsPage","integrationsData","filteredAndSortedIntegrations","flow","found","left","getFilteredAndSortedIntegrations","TestAtlasmapPage","onReset","display","flexFlow","atlasmap_adapter","SCHEMA","createConfirmRemoveString","tag","ManageCiCdPage","filteredAndSortedEnvironments","getFilteredAndSortedEnvironments","handleValidateItem","indexOf","createEnvironment","deleteEnvironment","renameEnvironment","newName","finally","listItem","i18nEditButtonText","IntegrationsModule","OAuthAppsPage","currentItemId","deleteOAuthApp","apiUri","updateOAuthApp","filteredAndSortedOAuthApps","oauthApp","getFilteredAndSortedOAuthApps","docLink","configuration","saveSuccessId","i18nAlertDetail","SettingsModule","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","BrowserRouter","WithConfig_WithConfig","apiBase","apiEndpoint","dvApiUri","datavirt","dvUrl","headers","SYNDESIS-XSRF-TOKEN","functions","document","getElementById","URL","origin","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ApiContextDefaultValue","ApiContext","_Pact","onFulfilled","onRejected","callback","_settle","o","pact","observer","_catch","recover","_earlyReturn","_AsyncGenerator","entry","_entry","_pact","_resolve","_return","_promise","_wrapReturnedValue","_wrapYieldedValue","Promise","resolve","returnValue","reject","callFetch","method","includeAccept","includeContentType","includeReferrerPolicy","contentType","credentials","redirect","Fetch","nextState","_this3","statusText","_response$text","_response$json","deepmerge","errorMessage","Stream","reader","getReader","textDecoder","TextDecoder","pushData","cancel","SyndesisFetch","stream","FetchOrStream","MessageLevel","DataShapeKinds","MessageCode","DVFetch","ServerEventsContextDefaultValue","ServerEventsContext","IntegrationType","ConsoleLinkType","DetailedStatus","HIDE_FROM_STEP_SELECT","ENDPOINT","DATA_MAPPER","BASIC_FILTER","ADVANCED_FILTER","SPLIT","AGGREGATE","TEMPLATE","WithIntegrationHelpersWrapped","updateOrAddConnection","actionDescriptor","produce","draft","f","Set","blob","_body$blob","saveAs","isIntegrationDeployment","WithChangeListener","changeListener","registerChangeListener","unregisterChangeListener","WithApiConnectors","changeFilter","change","totalCount","WithPolling","poller","startPolling","stopPolling","setPoller","func","polling","pollingTimer","setInterval","clearInterval","WithEnvironments","WithEnvironmentHelpersWrapped","stringifyBody","WithExtension","schemaVersion","WithExtensionHelpersWrapped","FormData","WithExtensionIntegrations","WithExtensions","WithIntegration","WithIntegrations","WithIntegrationTags","WithMonitoredIntegrations","getMonitoredIntegrations","WithIntegrationsMetrics","integrationDeploymentMetrics","lastProcessed","messages","metricsProvider","getConnectionsForDisplay","metadata","getConnectionsWithFromAction","some","getConnectionsWithToAction","transformResponse","dangerouslyUnfilteredConnections","WithConnections","getActionsWithFrom","getActionsWithTo","iconFile","File","NEW_INTEGRATION","getFlow","stepIndex","getStepsLastPosition","filterStepsByPosition","atStart","atEnd","WithConnection","WithConnectionHelpersWrapped","testConn","WithConnector","getConnectorsForDisplay","connectors","transformConnectorsResponse","WithConnectors","WithOAuthAppHelpersWrapped","WithOAuthApps","WithServerEvents","starting","started","unmounting","retries","preferredProtocol","changeListeners","messageListeners","registerMessageListener","unregisterMessageListener","listener","l","close","webSocket","eventSource","startConnection","onFailure","reconnectIn","connectUsingWebSockets","reservation","wsApiEndpoint","replace","connectWebSocket","connectEventSource","postMessageEvent","messageEvent","postChangeEvent","changeEvent","EventSource","onError","WebSocket","onclose","ALL_STEPS","anyPrevious","anySubsequent","previousSteps","subsequentSteps","previousStep","dataShapeExists","subsequentStep","stepsHaveOutputDataShape","ANY","requiresInputOutputDataShapes","requiresOutputDataShape","hasPrecedingCollection","contextLoggingEnabled","bodyLoggingEnabled","customText","positionNextSplit","positionNextAggregate","requiresConsistentSplitAggregate","input","previousDataShape","noCollectionSupportP","WithViews","vdbId","WithViewEditorStates","WithVirtualizationHelpersWrapped","updateViewEditorStates","deleteViewEditorState","virtDesc","newVirtualization","keng__dataPath","vdbName","editorStateId","pubVirtualization","sqlQuery","rowlimit","queryBody","limit","offset","query","viewEditorStateId","_this9","WithVirtualization","drivers","keng___links","keng__baseUri","keng__hasChildren","keng__kType","serviceVdbVersion","serviceViewDefinitions","serviceViewModel","WithVirtualizations","WithVirtualizationConnectionStatuses","WithVirtualizationConnectionSchema","apiContext","nextIntegration","visible","btoa","encodeURIComponent","decodeURIComponent","atob"],"mappings":"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","file":"static/js/main.9c022d8b.chunk.js","sourcesContent":["import { include } from 'named-urls';\n\nexport default include('/settings', {\n  oauthApps: include('oauth-apps', {\n    root: '',\n  }),\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nconst stepRoutes = {\n  // step 1\n  selectStep: '',\n  // if selected step is api provider\n  apiProvider: include('api-provider', {\n    upload: '',\n    review: 'review',\n    edit: 'edit',\n  }),\n  // if selected step kind is data mapper\n  dataMapper: 'mapper',\n  // if selected step kind is basic filter\n  basicFilter: 'filter',\n  // if selected step kind is template\n  template: 'template',\n  // if selected step kind is step\n  step: 'step',\n  // if selected step kind is step\n  extension: 'extension',\n  // if selected step kind is endpoint\n  connection: include('connection/:connectionId', {\n    selectAction: '',\n    configureAction: ':actionId/:step',\n    // if 'any' data shape\n    describeData: 'describe-data/:position/:direction(input|output)',\n  }),\n};\n\n/**\n * Both the integration creator and editor share the same routes when the creator\n * reaches the third step in the wizard. This object is to keep them DRY.\n */\nconst editorRoutes = include(':flowId', {\n  index: 'add-step',\n  addStep: include(':position/add', stepRoutes),\n  editStep: include(':position/edit', stepRoutes),\n  saveAndPublish: 'save',\n  root: '',\n});\n\nexport default include('/integrations', {\n  list: '',\n  manageCicd: include('manageCicd', { root: '' }),\n  import: 'import',\n  create: include('create', {\n    start: include('start/:flowId/:position', stepRoutes),\n    finish: include('finish/:flowId/:position', stepRoutes),\n    configure: include('configure', editorRoutes),\n    root: '',\n  }),\n  integration: include(':integrationId', {\n    details: 'details',\n    activity: 'activity',\n    metrics: 'metrics',\n    edit: include('edit', editorRoutes),\n    root: '',\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connector, Extension } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  apiConnectors: {\n    apiConnector: makeResolver<{ apiConnector: Connector }>(\n      routes.apiConnectors.apiConnector,\n      ({ apiConnector }) => ({\n        params: {\n          apiConnectorId: apiConnector.id,\n        },\n        state: {\n          apiConnector,\n        },\n      })\n    ),\n    create: {\n      upload: makeResolverNoParams(routes.apiConnectors.create.upload),\n      review: makeResolverNoParams(routes.apiConnectors.create.review),\n      security: makeResolverNoParams(routes.apiConnectors.create.security),\n      save: makeResolverNoParams(routes.apiConnectors.create.save),\n    },\n    list: makeResolverNoParams(routes.apiConnectors.list),\n  },\n  extensions: {\n    extension: {\n      details: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.details,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n      update: makeResolver<{ extension: Extension }>(\n        routes.extensions.extension.update,\n        ({ extension }) => ({\n          params: {\n            extensionId: extension.id,\n          },\n          state: {\n            extension,\n          },\n        })\n      ),\n    },\n    import: makeResolverNoParams(routes.extensions.import),\n    list: makeResolverNoParams(routes.extensions.list),\n  },\n  root: makeResolverNoParams(routes.apiConnectors.list),\n};\n","import {\n  IInitMessagePayload,\n  IMappingsMessagePayload,\n} from '@syndesis/atlasmap-assembly/src/app/app.component';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\n\n/* tslint:disable */\nconst runtime = require('file-loader?name=atlasmap-runtime.js!@syndesis/atlasmap-assembly/dist/atlasmap/runtime.js');\nconst polyfills = require('file-loader?name=atlasmap-polyfills.js!@syndesis/atlasmap-assembly/dist/atlasmap/polyfills.js');\nconst styles = require('file-loader?name=atlasmap-styles.js!@syndesis/atlasmap-assembly/dist/atlasmap/styles.js');\nconst scripts = require('file-loader?name=atlasmap-scripts.js!@syndesis/atlasmap-assembly/dist/atlasmap/scripts.js');\nconst vendor = require('file-loader?name=atlasmap-vendor.js!@syndesis/atlasmap-assembly/dist/atlasmap/vendor.js');\nconst main = require('file-loader?name=atlasmap-main.js!@syndesis/atlasmap-assembly/dist/atlasmap/main.js');\n/* tslint:enable*/\n\nexport enum DocumentType {\n  JAVA = 'Java',\n  XML = 'XML',\n  XSD = 'XSD',\n  JSON = 'JSON',\n  CORE = 'Core',\n  CSV = 'CSV',\n  CONSTANT = 'Constants',\n  PROPERTY = 'Property',\n}\nexport enum InspectionType {\n  JAVA_CLASS = 'JAVA_CLASS',\n  SCHEMA = 'SCHEMA',\n  INSTANCE = 'INSTANCE',\n  UNKNOWN = 'UNKNOWN',\n}\n\nexport interface IDataMapperAdapterProps extends IInitMessagePayload {\n  onMappings(mappings: string): void;\n}\n\nexport class DataMapperAdapter extends React.Component<\n  IDataMapperAdapterProps\n> {\n  protected messageChannel: MessageChannel;\n  protected messagePort?: MessagePort;\n  protected iframe: HTMLIFrameElement | null = null;\n\n  constructor(props: IDataMapperAdapterProps) {\n    super(props);\n    this.messageChannel = new MessageChannel();\n    this.onIframeLoad = this.onIframeLoad.bind(this);\n    this.onMessages = this.onMessages.bind(this);\n  }\n\n  public componentDidMount() {\n    if (this.iframe) {\n      this.iframe.addEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IDataMapperAdapterProps) {\n    const { onMappings: _, ...prevPayload } = this.props;\n    const { onMappings: __, ...nextPayload } = nextProps;\n    if (!equal(prevPayload, nextPayload)) {\n      this.updateDataMapperApp(nextPayload);\n    }\n  }\n\n  public shouldComponentUpdate() {\n    return false;\n  }\n\n  public componentWillUnmount() {\n    if (this.iframe) {\n      this.iframe.removeEventListener('load', this.onIframeLoad);\n    }\n  }\n\n  public onIframeLoad() {\n    this.messagePort = this.messageChannel.port1;\n    this.messagePort.onmessage = this.onMessages;\n    this.iframe!.contentWindow!.postMessage('init', '*', [\n      this.messageChannel.port2,\n    ]);\n  }\n\n  public onMessages(event: MessageEvent) {\n    switch (event.data.message) {\n      case 'ready': {\n        const { onMappings, ...payload } = this.props;\n        this.updateDataMapperApp(payload);\n        break;\n      }\n      case 'mappings': {\n        const payload: IMappingsMessagePayload = event.data.payload;\n        this.props.onMappings(payload.mappings);\n        break;\n      }\n    }\n  }\n\n  public updateDataMapperApp(props: IInitMessagePayload) {\n    if (this.messagePort) {\n      const message = {\n        message: 'update',\n        payload: {\n          documentId: props.documentId,\n          inputDataShape: props.inputDataShape,\n          inputDescription: props.inputDescription,\n          inputDocumentType: props.inputDocumentType,\n          inputInspectionType: props.inputInspectionType,\n          inputName: props.inputName,\n          mappings: props.mappings,\n          outputDataShape: props.outputDataShape,\n          outputDescription: props.outputDescription,\n          outputDocumentType: props.outputDocumentType,\n          outputInspectionType: props.outputInspectionType,\n          outputName: props.outputName,\n        },\n      };\n      this.messagePort.postMessage(message);\n    }\n  }\n\n  public render() {\n    const srcDoc = `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Atlasmap</title>\n  <base href=\"/dm\">\n\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n</head>\n<body style=\"background: transparent;\">\n  <app-root></app-root>\n  <script type=\"text/javascript\" src=\"${runtime}\"></script>\n  <script type=\"text/javascript\" src=\"${polyfills}\"></script>\n  <script type=\"text/javascript\" src=\"${styles}\"></script>\n  <script type=\"text/javascript\" src=\"${scripts}\"></script>\n  <script type=\"text/javascript\" src=\"${vendor}\"></script>\n  <script type=\"text/javascript\" src=\"${main}\"></script></body>\n</html>\n\n`;\n    // bypass some odd typing incompatibility with base React when using \"exotic\"\n    // html attributes\n    const extraProps = {\n      allowtransparency: '',\n    };\n    return (\n      <iframe\n        srcDoc={srcDoc}\n        style={{ width: '100%', height: '100%' }}\n        frameBorder={0}\n        {...extraProps}\n        ref={el => (this.iframe = el)}\n      />\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { getEmptyIntegration, getStep } from '@syndesis/api';\nimport { ConnectionOverview, Integration } from '@syndesis/models';\nimport {\n  makeResolver,\n  makeResolverNoParams,\n  makeResolverNoParamsWithDefaults,\n} from '@syndesis/utils';\nimport {\n  IBaseRouteParams,\n  IBaseRouteState,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n} from './components/editor/interfaces';\nimport {\n  IActivityPageParams,\n  IActivityPageState,\n  IIntegrationDetailsRouteParams,\n  IMetricsPageParams,\n  IMetricsPageState,\n} from './pages/detail';\nimport routes from './routes';\n\ninterface IEditorIndex {\n  flowId: string;\n  integration: Integration;\n}\n\ninterface IEditorSelectConnection extends IEditorIndex {\n  position: string;\n}\n\ninterface IEditorSelectAction extends IEditorSelectConnection {\n  connection: ConnectionOverview;\n}\n\ninterface IEditorConfigureAction extends IEditorSelectAction {\n  actionId: string;\n  step?: string;\n  updatedIntegration?: Integration;\n}\n\nexport const configureIndexMapper = ({\n  flowId,\n  integration,\n}: IEditorIndex) => ({\n  params: {\n    flowId: flowId ? flowId : integration.flows![0].id!,\n    ...(integration && integration.id ? { integrationId: integration.id } : {}),\n  } as IBaseRouteParams,\n  state: {\n    integration,\n  } as IBaseRouteState,\n});\n\nexport const configureSelectConnectionMapper = ({\n  position,\n  ...rest\n}: IEditorSelectConnection) => {\n  const { params, state } = configureIndexMapper(rest);\n  return {\n    params: {\n      ...params,\n      position,\n    } as ISelectConnectionRouteParams,\n    state,\n  };\n};\n\nexport const configureSelectActionMapper = ({\n  connection,\n  ...rest\n}: IEditorSelectAction) => {\n  const { params, state } = configureSelectConnectionMapper(rest);\n  return {\n    params: {\n      ...params,\n      connectionId: connection.id!,\n    } as ISelectActionRouteParams,\n    state: {\n      ...state,\n      connection,\n    } as ISelectActionRouteState,\n  };\n};\n\nexport const configureConfigureActionMapper = ({\n  actionId,\n  flowId,\n  step,\n  integration,\n  updatedIntegration,\n  position,\n  ...rest\n}: IEditorConfigureAction) => {\n  const { params, state } = configureSelectActionMapper({\n    ...rest,\n    flowId,\n    integration,\n    position,\n  });\n  const positionAsNumber = parseInt(position, 10);\n  const stepObject = getStep(integration, flowId, positionAsNumber) || {};\n  return {\n    params: {\n      ...params,\n      actionId,\n      step: `${step || 0}`,\n    } as IConfigureActionRouteParams,\n    state: {\n      ...state,\n      updatedIntegration,\n      configuredProperties: stepObject.configuredProperties || {},\n    } as IConfigureActionRouteState,\n  };\n};\n\n// TODO: unit test every single one of these resolvers 😫\n\nexport const listResolver = makeResolverNoParams(routes.list);\n\nexport const manageCicdResolver = makeResolverNoParams(routes.manageCicd.root);\n\nexport const createRootResolver = makeResolverNoParams(routes.create.root);\n\nexport const createStartSelectStepResolver = makeResolverNoParamsWithDefaults<\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.start.selectStep, () => {\n  const integration = getEmptyIntegration();\n  return {\n    params: {\n      flowId: integration.flows![0].id!,\n      position: '0',\n    },\n    state: {\n      integration,\n    },\n  };\n});\n\nexport const createStartSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.start.connection.selectAction, configureSelectActionMapper);\n\nexport const createStartConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.start.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createFinishSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.finish.selectStep, configureSelectConnectionMapper);\n\nexport const createFinishSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(routes.create.finish.connection.selectAction, configureSelectActionMapper);\n\nexport const createFinishConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.finish.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.create.configure.index, configureIndexMapper);\n\nexport const createConfigureAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.create.configure.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const createConfigureAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.create.configure.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const createConfigureEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.create.configure.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const createConfigureEditStepSaveAndPublishResolver = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.create.configure.saveAndPublish, configureIndexMapper);\n\nexport const integrationActivityResolver = makeResolver<\n  { integration: Integration },\n  IActivityPageParams,\n  IActivityPageState\n>(routes.integration.activity, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\nexport const integrationDetailsResolver = makeResolver<\n  { integrationId: string },\n  IIntegrationDetailsRouteParams,\n  null\n>(routes.integration.details, ({ integrationId }) => ({\n  params: {\n    integrationId,\n  },\n}));\n\nexport const integrationEditIndexResolver = makeResolver<\n  IEditorIndex,\n  IBaseRouteParams,\n  IBaseRouteState\n>(routes.integration.edit.index, configureIndexMapper);\n\nexport const integrationEditAddStepSelectStepResolver = makeResolver<\n  IEditorSelectConnection,\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState\n>(routes.integration.edit.addStep.selectStep, configureSelectConnectionMapper);\n\nexport const integrationEditAddStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectConnectionRouteState\n>(\n  routes.integration.edit.addStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditAddStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.addStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditEditStepSelectActionResolver = makeResolver<\n  IEditorSelectAction,\n  ISelectActionRouteParams,\n  ISelectActionRouteState\n>(\n  routes.integration.edit.editStep.connection.selectAction,\n  configureSelectActionMapper\n);\n\nexport const integrationEditEditStepConfigureActionResolver = makeResolver<\n  IEditorConfigureAction,\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState\n>(\n  routes.integration.edit.editStep.connection.configureAction,\n  configureConfigureActionMapper\n);\n\nexport const integrationEditSaveAndPublish = makeResolver<\n  IEditorIndex,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState\n>(routes.integration.edit.saveAndPublish, configureIndexMapper);\n\nexport const metricsResolver = makeResolver<\n  { integration: Integration },\n  IMetricsPageParams,\n  IMetricsPageState\n>(routes.integration.metrics, ({ integration }) => ({\n  params: {\n    integrationId: integration.id!,\n  },\n  state: {\n    integration,\n  },\n}));\n\ntype RouteResolver<T> = {\n  [K in keyof T]: T[K] extends string ? any : RouteResolver<T[K]>\n};\n\nconst resolvers: RouteResolver<typeof routes> = {\n  list: listResolver,\n  manageCicd: {\n    root: manageCicdResolver,\n  },\n  create: {\n    root: createRootResolver,\n    start: {\n      selectStep: createStartSelectStepResolver,\n      connection: {\n        selectAction: createStartSelectActionResolver,\n        configureAction: createStartConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.start.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    finish: {\n      selectStep: createFinishSelectStepResolver,\n      connection: {\n        selectAction: createFinishSelectActionResolver,\n        configureAction: createFinishConfigureActionResolver,\n        describeData: () => 'describeData',\n      },\n      apiProvider: {\n        upload: makeResolverNoParams(routes.create.finish.apiProvider.upload),\n        review: () => 'review',\n        edit: () => 'edit',\n      },\n      basicFilter: () => 'basicFilter',\n      dataMapper: () => 'dataMapper',\n      template: () => 'template',\n      step: () => 'step',\n      extension: () => 'extension',\n    },\n    configure: {\n      root: createRootResolver,\n      index: createConfigureIndexResolver,\n      addStep: {\n        selectStep: createConfigureAddStepSelectStepResolver,\n        connection: {\n          selectAction: createConfigureAddStepSelectActionResolver,\n          configureAction: createConfigureAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: createConfigureEditStepSelectActionResolver,\n          configureAction: createConfigureEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.create.configure.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: createConfigureEditStepSaveAndPublishResolver,\n    },\n  },\n  integration: {\n    root: createRootResolver,\n    activity: integrationActivityResolver,\n    details: integrationDetailsResolver,\n    edit: {\n      root: createRootResolver,\n      index: integrationEditIndexResolver,\n      addStep: {\n        selectStep: integrationEditAddStepSelectStepResolver,\n        connection: {\n          selectAction: integrationEditAddStepSelectActionResolver,\n          configureAction: integrationEditAddStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.addStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      editStep: {\n        selectStep: () => {\n          throw new Error('this route should not be used');\n        },\n        connection: {\n          selectAction: integrationEditEditStepSelectActionResolver,\n          configureAction: integrationEditEditStepConfigureActionResolver,\n          describeData: () => 'describeData',\n        },\n        apiProvider: {\n          upload: makeResolverNoParams(\n            routes.integration.edit.editStep.apiProvider.upload\n          ),\n          review: () => 'review',\n          edit: () => 'edit',\n        },\n        basicFilter: () => 'basicFilter',\n        dataMapper: () => 'dataMapper',\n        template: () => 'template',\n        step: () => 'step',\n        extension: () => 'extension',\n      },\n      saveAndPublish: integrationEditSaveAndPublish,\n    },\n    metrics: metricsResolver,\n  },\n  import: makeResolverNoParams(routes.import),\n};\n\nexport default resolvers;\n","import appEn from '../../app/locales/app-translations.en.json';\nimport appIt from '../../app/locales/app-translations.it.json';\nimport connectionsEn from '../../modules/connections/locales/connections-translations.en.json';\nimport connectionsIt from '../../modules/connections/locales/connections-translations.it.json';\nimport customizationsEn from '../../modules/customizations/locales/customizations-translations.en.json';\nimport customizationsIt from '../../modules/customizations/locales/customizations-translations.it.json';\nimport dashboardEn from '../../modules/dashboard/locales/dashboard-translations.en.json';\nimport dashboardIt from '../../modules/dashboard/locales/dashboard-translations.it.json';\nimport dataEn from '../../modules/data/locales/data-translations.en.json';\nimport dataIt from '../../modules/data/locales/data-translations.it.json';\nimport integrationsEn from '../../modules/integrations/locales/integrations-translations.en.json';\nimport integrationsIt from '../../modules/integrations/locales/integrations-translations.it.json';\nimport settingsEn from '../../modules/settings/locales/settings-translations.en.json';\nimport settingsIt from '../../modules/settings/locales/settings-translations.it.json';\nimport en from './shared-translations.en.json';\nimport it from './shared-translations.it.json';\n\n// app\nen.en.app = appEn;\nit.it.app = appIt;\n\n// settings\nen.en.modules.settings = settingsEn;\nit.it.modules.settings = settingsIt;\n\n// connections\nen.en.modules.connections = connectionsEn;\nit.it.modules.connections = connectionsIt;\n\n// customizations\nen.en.modules.customizations = customizationsEn;\nit.it.modules.customizations = customizationsIt;\n\n// dashboard\nen.en.modules.dashboard = dashboardEn;\nit.it.modules.dashboard = dashboardIt;\n\n// data\nen.en.modules.data = dataEn;\nit.it.modules.data = dataIt;\n\n// integrations\nen.en.modules.integrations = integrationsEn;\nit.it.modules.integrations = integrationsIt;\n\nexport { en, it };\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { en, it } from './locales';\n\nconst options = {\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n  },\n\n  debug: false,\n\n  resources: {\n    en: {\n      app: en.en.app,\n      connections: en.en.modules.connections,\n      customizations: en.en.modules.customizations,\n      dashboard: en.en.modules.dashboard,\n      data: en.en.modules.data,\n      integrations: en.en.modules.integrations,\n      settings: en.en.modules.settings,\n      shared: en.en.shared,\n    },\n    it: {\n      app: it.it.app,\n      connections: it.it.modules.connections,\n      customizations: it.it.modules.customizations,\n      dashboard: it.it.modules.dashboard,\n      data: it.it.modules.data,\n      integrations: it.it.modules.integrations,\n      settings: it.it.modules.settings,\n      shared: it.it.shared,\n    },\n  },\n\n  defaultNS: 'shared',\n  fallbackLng: process.env.NODE_ENV === 'production' ? 'en' : 'it',\n  fallbackNS: ['shared'],\n  keySeparator: '.',\n  ns: [\n    'shared',\n    'app',\n    'customizations',\n    'dashboard',\n    'integrations',\n    'settings',\n  ],\n} as i18n.InitOptions;\n\ni18n.use(LanguageDetector).init(options);\nexport default i18n;\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IApiErrorProps {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const ApiError: React.SFC<IApiErrorProps> = props => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('error.title')}\n        i18nInfo={t('error.info')}\n        i18nHelp={t('error.help')}\n        i18nRefreshLabel={t('error.refreshButton')}\n        i18nReportIssue={t('error.reportIssueButton')}\n        error={props.error}\n        errorInfo={props.errorInfo}\n      />\n    )}\n  </Translation>\n);\n","import { Loader, UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { LoadingComponentProps } from 'react-loadable';\n\nexport class ModuleLoader extends React.Component<LoadingComponentProps> {\n  public render() {\n    if (this.props.error || this.props.timedOut) {\n      console.error(this.props.error); // tslint:disable-line\n      return (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.props.error}\n            />\n          )}\n        </Translation>\n      );\n    } else if (this.props.pastDelay) {\n      return <Loader />;\n    }\n    return null;\n  }\n}\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport const PageNotFound: React.FC = () => (\n  <Translation ns={['shared']}>\n    {t => (\n      <UnrecoverableError\n        i18nTitle={t('404.title')}\n        i18nInfo={t('404.info')}\n        i18nHelp={t('404.help')}\n        i18nRefreshLabel={t('404.refreshButton')}\n        i18nReportIssue={t('404.reportIssueButton')}\n      />\n    )}\n  </Translation>\n);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { AppContext } from '../app';\n\nexport interface IPageTitleProps {\n  /**\n   * The page title. Don't append or prepend the application name, the right one\n   * will be added automatically.\n   */\n  title: string;\n}\n\n/**\n * A component to set the title in the document metadata. This title will be\n * visible in the browser's title bar, tab and history.\n * @see [title]{@link IPageTitleProps#title}\n */\nexport class PageTitle extends React.PureComponent<IPageTitleProps> {\n  public render() {\n    return (\n      <AppContext.Consumer>\n        {({ config }) => (\n          <Helmet>\n            <title>{`${this.props.title} - ${config.title ||\n              'Syndesis'}`}</title>\n          </Helmet>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { UIContext } from '../app';\n\n/**\n * This component will automatically close the app left navigation bar when\n * mounted in the DOM, and will reopen it when unmounted.\n *\n * If you need this behaviour for a whole section, keep this component high in\n * the DOM tree, ideally before any component that will re-render on his\n * lifecycle - like data fetching components - to avoid firing quick unmount/mount\n * events that will lead to a bad UX.\n */\nexport const WithClosedNavigation: React.FunctionComponent = ({ children }) => {\n  const context = React.useContext(UIContext);\n  React.useEffect(() => {\n    context.hideNavigation();\n\n    return () => {\n      context.showNavigation();\n    };\n  }, []);\n  return <>{children}</>;\n};\n","import { UnrecoverableError } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IWithErrorBoundaryState {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n  errorComponent?: React.ReactElement<{\n    error: Error;\n    errorInfo: React.ErrorInfo;\n  }>;\n}\n\nexport class WithErrorBoundary extends React.Component<\n  any,\n  IWithErrorBoundaryState\n> {\n  public state: IWithErrorBoundaryState = {};\n\n  public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  public componentWillReceiveProps(\n    nextProps: Readonly<any>,\n    nextContext: any\n  ): void {\n    this.setState({\n      error: undefined,\n      errorInfo: undefined,\n    });\n  }\n\n  public render() {\n    return this.state.error && this.state.errorInfo ? (\n      this.props.errorComponent ? (\n        React.createElement(this.props.errorComponent, {\n          error: this.state.error,\n          errorInfo: this.state.errorInfo,\n        })\n      ) : (\n        <Translation ns={['shared']}>\n          {t => (\n            <UnrecoverableError\n              i18nTitle={t('error.title')}\n              i18nInfo={t('error.info')}\n              i18nHelp={t('error.help')}\n              i18nRefreshLabel={t('error.refreshButton')}\n              i18nReportIssue={t('shared:error.reportIssueButton')}\n              i18nShowErrorInfoLabel={t('error.showErrorInfoButton')}\n              error={this.state.error}\n              errorInfo={this.state.errorInfo}\n            />\n          )}\n        </Translation>\n      )\n    ) : (\n      this.props.children\n    );\n  }\n}\n","export * from './ApiError';\nexport * from './ModuleLoader';\nexport * from './PageNotFound';\nexport * from './PageTitle';\nexport * from './WithClosedNavigation';\nexport * from './WithErrorBoundary';\n","import { getStepIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorStepsList,\n  IntegrationEditorStepsListItem,\n  IntegrationFlowAddStep,\n} from '@syndesis/ui';\nimport * as H from 'history';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepAdderProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Add Connection button\n   * @param idx - the zero-based index where a new connection should be added\n   */\n  addStepHref: (idx: number) => H.LocationDescriptor;\n  /**\n   * a callback to get the `LocationDescriptor` that should be reached when\n   * clicking the Edit Step button\n   * @param stepIdx - the zero-based index of the integration step that should\n   * be edited\n   * @param step - the integration step object that should be edited\n   */\n  // tslint:disable-next-line:react-unused-props-and-state\n  configureStepHref: (stepIdx: number, step: Step) => H.LocationDescriptor;\n}\n\n/**\n * A component to render the steps of an integration with the required action\n * buttons to add a new step, edit an existing one, etc.\n *\n * @see [steps]{@link IIntegrationEditorStepAdderProps#steps}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [addStepHref]{@link IIntegrationEditorStepAdderProps#addStepHref}\n * @see [configureStepHref]{@link IIntegrationEditorStepAdderProps#configureStepHref}\n *\n * @todo add the delete step button\n */\nexport class IntegrationEditorStepAdder extends React.Component<\n  IIntegrationEditorStepAdderProps\n> {\n  public render() {\n    return (\n      <IntegrationEditorStepsList>\n        {this.props.steps.map((s, idx) => {\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationEditorStepsListItem\n                stepName={s.name!}\n                stepDescription={s.action ? s.action.name : ''}\n                icon={\n                  <img\n                    src={getStepIcon(process.env.PUBLIC_URL, s)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                actions={\n                  <>\n                    <ButtonLink href={this.props.configureStepHref(idx, s)}>\n                      Configure\n                    </ButtonLink>\n                    <ButtonLink href={'#'} as={'danger'}>\n                      <i className=\"fa fa-trash\" />\n                    </ButtonLink>\n                  </>\n                }\n              />\n              {idx < this.props.steps.length - 1 && (\n                <IntegrationFlowAddStep\n                  active={false}\n                  showDetails={false}\n                  addStepHref={this.props.addStepHref(idx + 1)}\n                  i18nAddStep={'Add a step'}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </IntegrationEditorStepsList>\n    );\n  }\n}\n","import { include } from 'named-urls';\n\nexport default include('/', {\n  root: '',\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { reverse } from 'named-urls';\nimport routes from './routes';\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n *\n * @todo perhaps move in the @syndesis/utils package?\n */\nfunction makeResolverNoParams(route: string) {\n  return () => reverse(route);\n}\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  root: makeResolverNoParams(routes.root),\n};\n","import { makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  oauthApps: makeResolverNoParams(routes.oauthApps.root),\n  root: makeResolverNoParams(routes.root),\n};\n","import connections from './connections/resolvers';\nimport customizations from './customizations/resolvers';\nimport dashboard from './dashboard/resolvers';\nimport data from './data/resolvers';\nimport integrations from './integrations/resolvers';\nimport settings from './settings/resolvers';\n\nexport default {\n  connections,\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { Icon, MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * Icon type enum that maps to patternfly icon types\n */\nexport enum ConfirmationIconType {\n  DANGER = 'error-circle-o',\n  WARNING = 'warning-triangle-o',\n  INFO = 'info',\n  OK = 'ok',\n  NONE = 'NONE',\n}\n\n/**\n * Button style enum that maps to patternfly button classes\n */\nexport enum ConfirmationButtonStyle {\n  NORMAL = 'primary',\n  SUCCESS = 'success',\n  DANGER = 'danger',\n  WARNING = 'warning',\n  INFO = 'info',\n  LINK = 'link',\n}\n\n/**\n * A dialog that can be used to obtain user confirmation when deleting an object.\n */\nexport interface IConfirmationDialogProps {\n  /**\n   * The style of button to use for the primary action\n   */\n  buttonStyle: ConfirmationButtonStyle;\n  /**\n   * The localized cancel button text.\n   */\n  i18nCancelButtonText: string;\n\n  /**\n   * The localized confirmation button text.\n   */\n  i18nConfirmButtonText: string;\n\n  /**\n   * The localized confirmation message.\n   */\n  i18nConfirmationMessage: string;\n\n  /**\n   * An optional localized message providing more details.\n   */\n  i18nDetailsMessage?: string;\n\n  /**\n   * The localized dialog title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The icon type to use, or unset for no icon\n   */\n  icon: ConfirmationIconType;\n\n  /**\n   * A callback for when the cancel button is clicked. Caller should hide dialog.\n   */\n  onCancel: () => void;\n\n  /**\n   * A callback for when the confirmation button is clicked. Caller should hide dialog.\n   */\n  onConfirm: () => void;\n\n  /**\n   * Indicates if the dialog should be visible.\n   */\n  showDialog: boolean;\n}\n\n/**\n * A modal dialog to display when an object is being deleted.\n */\nexport class ConfirmationDialog extends React.Component<\n  IConfirmationDialogProps\n> {\n  public render() {\n    return (\n      <MessageDialog\n        accessibleName=\"deleteConfirmationDialog\"\n        accessibleDescription=\"deleteConfirmationDialogContent\"\n        icon={\n          this.props.icon !== ConfirmationIconType.NONE && (\n            <Icon type=\"pf\" name={this.props.icon} />\n          )\n        }\n        onHide={this.props.onCancel}\n        primaryAction={this.props.onConfirm}\n        primaryActionButtonContent={this.props.i18nConfirmButtonText}\n        primaryActionButtonBsStyle={this.props.buttonStyle}\n        primaryContent={\n          <p className=\"lead\">{this.props.i18nConfirmationMessage}</p>\n        }\n        secondaryAction={this.props.onCancel}\n        secondaryActionButtonContent={this.props.i18nCancelButtonText}\n        secondaryContent={\n          this.props.i18nDetailsMessage ? (\n            <p>{this.props.i18nDetailsMessage}</p>\n          ) : (\n            undefined\n          )\n        }\n        show={this.props.showDialog}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  Icon,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAggregatedMetricProps {\n  title: string;\n  ok: number;\n  error: number;\n}\n\nexport class AggregatedMetricCard extends React.PureComponent<\n  IAggregatedMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>\n          <AggregateStatusCount>\n            <span data-testid=\"aggregate-title\">{this.props.title}</span>\n          </AggregateStatusCount>\n        </Card.Title>\n        <Card.Body>\n          <AggregateStatusNotifications>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"ok\" />\n              <span data-testid=\"aggregate-ok-count\">{this.props.ok}</span>{' '}\n            </AggregateStatusNotification>\n            <AggregateStatusNotification>\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              <span data-testid=\"aggregate-error-count\">\n                {this.props.error}\n              </span>\n            </AggregateStatusNotification>\n          </AggregateStatusNotifications>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { MessageDialog } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IDialogProps {\n  body: any;\n  footer: any;\n  onHide: () => void;\n  title: string;\n}\n\nexport class Dialog extends React.Component<IDialogProps> {\n  public render() {\n    return (\n      <MessageDialog\n        title={this.props.title}\n        primaryContent={this.props.body}\n        footer={this.props.footer}\n        show={true}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\n\nexport interface IContainerProps {\n  className?: string;\n  [key: string]: any;\n}\n\nexport const Container: React.FunctionComponent<IContainerProps> = ({\n  children,\n  className,\n  ...props\n}) => (\n  <div className={classnames('container-fluid', className)} {...props}>\n    {children}\n  </div>\n);\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { Container } from '../Layout/Container';\nimport './DndFileChooser.css';\nimport { INotification, INotificationType } from './Notifications';\n\n/**\n * The properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserProps {\n  /**\n   * Indicates if multiple files can be added. Defaults to `false`.\n   */\n  allowMultiple?: boolean;\n\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A comma delimited string of file extensions. For example, '.jar,.txt'. Defaults to any file extension.\n   */\n  fileExtensions?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area.\n   */\n  i18nHelpMessage?: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area.\n   */\n  i18nInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nUploadSuccessMessage` should not be set.\n   */\n  i18nUploadFailedMessage?: string;\n\n  /**\n   * A list of error messages for failed uploads\n   */\n  i18nUploadFailedMessages?: string[];\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nUploadFailedMessage` should not be set.\n   */\n  i18nUploadSuccessMessage?: string;\n\n  /**\n   * A list of error messages for successful uploads\n   */\n  i18nUploadSuccessMessages?: string[];\n\n  /**\n   * Obtains the localized text (may include HTML tags) that appears when the file upload was rejected. This\n   * will occur when a DnD of a file with the wrong extension is dropped. This message is presented\n   * as a timed toast notification.\n   */\n  onUploadRejected(fileName: string): string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onUploadAccepted(file: File[]): void;\n}\n\n/**\n * The state properties of the `DndFileChooser`.\n */\nexport interface IDndFileChooserState {\n  /**\n   * The files that were uploaded successfully. Defaults to an empty array.\n   */\n  files: File[];\n\n  /**\n   * The error notifications for rejected files. After a toast is displayed for a notification it is removed\n   * from the array.\n   */\n  notifications: INotification[];\n}\n\n/**\n * A component that can be used to upload files. Files can be uploaded by clicking in the drop zone or by\n * drag and dropping files into the drop zone.\n */\nexport class DndFileChooser extends React.Component<\n  IDndFileChooserProps,\n  IDndFileChooserState\n> {\n  // setup default prop values\n  public static defaultProps = {\n    allowMultiple: false,\n  };\n\n  public constructor(props: IDndFileChooserProps) {\n    super(props);\n\n    // set up initial state\n    this.state = {\n      files: [],\n      notifications: [],\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.handleRejectedFiles = this.handleRejectedFiles.bind(this);\n  }\n\n  /**\n   * Obtains an element that lists the names of the files that have been uploaded.\n   */\n  public getSelectedFileMessage(): JSX.Element {\n    // one file uploaded\n    if (this.state.files.length === 1) {\n      return <Container>{this.state.files[0].name}</Container>;\n    }\n\n    // multiple files uploaded\n    if (this.state.files.length > 1) {\n      return (\n        <ul>\n          {this.state.files.map((file, index) => (\n            <li key={index}>{file.name}</li>\n          ))}\n        </ul>\n      );\n    }\n\n    // no files uploaded\n    return <Container>{this.props.i18nNoFileSelectedMessage}</Container>;\n  }\n\n  /**\n   * Obtains an element that indicates the if the upload was successful.\n   */\n  public getUploadMessage(): JSX.Element {\n    if (this.props.i18nUploadSuccessMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"ok\" />\n          &nbsp;{this.props.i18nUploadSuccessMessage}\n        </span>\n      );\n    }\n    if (this.props.i18nUploadFailedMessage) {\n      return (\n        <span className=\"dnd-file-chooser__uploadMessage\">\n          <Icon type=\"pf\" name=\"error-circle-o\" />\n          &nbsp;{this.props.i18nUploadFailedMessage}\n        </span>\n      );\n    }\n    if (\n      this.props.i18nUploadSuccessMessages &&\n      this.props.i18nUploadFailedMessages\n    ) {\n      return (\n        <ul>\n          {this.props.i18nUploadSuccessMessages!.map((message, idx) => (\n            <li\n              key={'success' + idx}\n              className=\"dnd-file-chooser__uploadMessage\"\n            >\n              <Icon type=\"pf\" name=\"ok\" />\n              &nbsp;{message}\n            </li>\n          ))}\n          {this.props.i18nUploadFailedMessages!.map((message, idx) => (\n            <li key={'fail' + idx} className=\"dnd-file-chooser__uploadMessage\">\n              <Icon type=\"pf\" name=\"error-circle-o\" />\n              &nbsp;{message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    // no message\n    return <Container />;\n  }\n\n  /**\n   * Callback for when one or more files were uploaded successfully.\n   * @param acceptedFiles the files that have been uploaded\n   */\n  public handleAcceptedFiles(acceptedFiles: File[]) {\n    this.setState({ ...this.state, files: acceptedFiles });\n    this.props.onUploadAccepted(acceptedFiles); // notify callback\n  }\n\n  /**\n   * Callback for when one or more files were rejected.\n   * @param rejectedFiles the files that were rejected\n   */\n  public handleRejectedFiles(rejectedFiles: File[]) {\n    const notifications = rejectedFiles.map(file => ({\n      key: file.name,\n      message: this.props.onUploadRejected(file.name),\n      type: 'error' as INotificationType,\n    }));\n\n    // If single file dropped then all files will be cleared. If multiple allowed, and multiple dropped,\n    // and some are accepted and some are rejected, the accepted files will still be uploaded because the\n    // handleAcceptedFiles is called after this method.\n    this.setState({\n      ...this.state,\n      files: [],\n      notifications: [...this.state.notifications, ...notifications],\n    });\n  }\n\n  public render() {\n    return (\n      <Dropzone\n        accept={this.props.fileExtensions}\n        disabled={this.props.disableDropzone}\n        multiple={this.props.allowMultiple}\n        onDropAccepted={this.handleAcceptedFiles}\n        onDropRejected={this.handleRejectedFiles}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <Container>\n            <Grid\n              disabled={this.props.disableDropzone}\n              fluid={true}\n              className=\"dnd-file-chooser\"\n              {...getRootProps({ refKey: 'dnd-file-chooser' })}\n            >\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__instructions\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nInstructions,\n                  }}\n                />\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col>\n                  <input {...getInputProps()} />\n                </Grid.Col>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Col\n                  className=\"dnd-file-chooser__selectedFileLabel\"\n                  xs={3}\n                >\n                  {this.props.i18nSelectedFileLabel}\n                </Grid.Col>\n                <Grid.Col className=\"dnd-file-chooser__selectedFile\" xs={6}>\n                  {this.getSelectedFileMessage()}\n                </Grid.Col>\n                <Grid.Col xs={3}>{this.getUploadMessage()}</Grid.Col>\n              </Grid.Row>\n              {this.props.i18nHelpMessage ? (\n                <Grid.Row>\n                  <Grid.Col className=\"dnd-file-chooser__helpText\">\n                    {this.props.i18nHelpMessage}\n                  </Grid.Col>\n                </Grid.Row>\n              ) : null}\n            </Grid>\n          </Container>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import { Dropdown, DropdownToggle } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IAppTopMenuProps {\n  username: string;\n  children: any;\n}\n\nexport interface IAppTopMenuState {\n  isOpen: boolean;\n}\n\n/**\n * A component to show the logged in user menu.\n */\nexport class AppTopMenu extends React.Component<\n  IAppTopMenuProps,\n  IAppTopMenuState\n> {\n  public state = {\n    isOpen: false,\n  };\n  public onToggle = (isOpen: boolean) => {\n    this.setState({\n      isOpen,\n    });\n  };\n  public onSelect = (event: React.SyntheticEvent<HTMLDivElement, Event>) => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  };\n  public render() {\n    const { children, username } = this.props;\n    return (\n      <Dropdown\n        isPlain={true}\n        onSelect={this.onSelect}\n        toggle={\n          <DropdownToggle onToggle={this.onToggle}>{username}</DropdownToggle>\n        }\n        isOpen={this.state.isOpen}\n        dropdownItems={React.Children.toArray(children)}\n      />\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface IButtonLinkProps {\n  onClick?: (e: React.MouseEvent<any>) => void;\n  href?: H.LocationDescriptor;\n  className?: string;\n  disabled?: boolean;\n  as?:\n    | 'default'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger'\n    | 'link';\n  size?: 'lg' | 'sm' | 'xs';\n  [key: string]: any;\n}\n\nexport const ButtonLink: React.FunctionComponent<IButtonLinkProps> = ({\n  onClick,\n  href,\n  className,\n  disabled,\n  as = 'default',\n  size,\n  children,\n  ...props\n}) => {\n  className = classnames('btn', `btn-${as}`, className, {\n    'btn-lg': size === 'lg',\n    'btn-sm': size === 'sm',\n    'btn-xs': size === 'xs',\n  });\n  return href && !disabled ? (\n    <Link to={href} onClick={onClick} className={className} {...props}>\n      {children}\n    </Link>\n  ) : (\n    <button\n      onClick={onClick}\n      className={className}\n      disabled={disabled || (!onClick && !href)}\n    >\n      {children}\n    </button>\n  );\n};\n","import classnames from 'classnames';\nimport { Spinner } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './Loader.css';\n\nexport interface ILoaderProps {\n  inline?: boolean;\n  inverse?: boolean;\n  loading?: boolean;\n  size?: 'lg' | 'md' | 'sm' | 'xs';\n}\n\nexport class Loader extends React.PureComponent<ILoaderProps> {\n  public static defaultProps = {\n    inline: false,\n    inverse: false,\n    loading: true,\n    size: 'lg',\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('Loader', {\n          'is-block': !this.props.inline,\n          'is-inline': this.props.inline,\n        })}\n      >\n        <Spinner\n          loading={this.props.loading}\n          size={this.props.size}\n          inline={this.props.inline}\n          inverse={this.props.inverse}\n        />\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\ninterface INavLink {\n  activeClassName?: string;\n  activeStyle?: any;\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  location?: any;\n  strict?: boolean;\n  style?: any;\n  to: H.LocationDescriptor;\n  label: any;\n  children?: any;\n}\n\nfunction joinClassnames(...classnames: Array<string | undefined>): string {\n  return classnames.filter(i => i).join(' ');\n}\n\nexport const PfNavLink = ({\n  activeClassName = 'active',\n  activeStyle,\n  className: classNameProp,\n  exact,\n  isActive: isActiveProp,\n  location,\n  strict,\n  style: styleProp,\n  to,\n  label,\n  children,\n  ...rest\n}: INavLink) => {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkChildren = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    const className = isActive\n      ? joinClassnames(classNameProp, activeClassName)\n      : classNameProp;\n    const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n    return (\n      <li className={className}>\n        <Link style={style} to={to} children={label} {...rest} />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkChildren}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { Route } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nexport interface IPfVerticalNavItem {\n  className?: string;\n  exact?: boolean;\n  isActive?: (match: any, location: any) => boolean;\n  icon: string;\n  location?: any;\n  strict?: boolean;\n  to: string | any;\n  label: any;\n  children?: any;\n}\n\nfunction PfVerticalNavItem({\n  className,\n  exact,\n  isActive: isActiveProp,\n  icon,\n  location,\n  strict,\n  to,\n  label,\n  children,\n  ...rest\n}: IPfVerticalNavItem) {\n  const path = typeof to === 'object' ? to.pathname : to;\n\n  // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n  const escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n\n  const NavLinkViewTemplate = ({\n    location: childLocation,\n    match,\n  }: {\n    location: any;\n    match: any;\n  }) => {\n    const isActive = !!(isActiveProp\n      ? isActiveProp(match, childLocation)\n      : match);\n\n    return (\n      <li className={'pf-c-nav__item'}>\n        <Link\n          to={to}\n          className={classNames('pf-c-nav__link', {\n            ['pf-m-current']: isActive,\n          })}\n          aria-current={isActive ? 'page' : undefined}\n          children={<>{label}</>}\n          {...rest}\n        />\n        {children}\n      </li>\n    );\n  };\n\n  return (\n    <Route\n      path={escapedPath}\n      exact={exact}\n      strict={strict}\n      location={location}\n      children={NavLinkViewTemplate}\n    />\n  );\n}\n\nPfVerticalNavItem.displayName = 'VerticalNav.Item';\n\nexport { PfVerticalNavItem };\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PfNavLink } from './PfNavLink';\n\nexport interface ITabBarItemProps {\n  label: string;\n  to: H.LocationDescriptor;\n  [key: string]: any;\n}\n\nexport const TabBarItem: React.FunctionComponent<ITabBarItemProps> = ({\n  label,\n  to,\n  ...props\n}) => <PfNavLink label={label} to={to} {...props} />;\n","import * as React from 'react';\n\ninterface IWizardStepsProps {\n  mainSteps: React.ReactNode;\n  altSteps: React.ReactNode;\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\nexport class WizardSteps extends React.Component<IWizardStepsProps> {\n  public render() {\n    return (\n      <div className={'wizard-pf-steps'}>\n        <ul\n          className={`wizard-pf-steps-indicator wizard-pf-steps-alt-indicator ${\n            this.props.active ? 'active' : ''\n          }`}\n        >\n          {this.props.mainSteps}\n        </ul>\n        <ul\n          className={`wizard-pf-steps-alt ${this.props.active ? '' : 'hidden'}`}\n        >\n          {this.props.altSteps}\n        </ul>\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport {\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  Icon,\n  InlineEdit,\n  InputGroup,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Omit } from 'react-router';\nimport { Loader } from '../Layout';\nimport './InlineTextEdit.css';\n\ninterface IReadWidget {\n  className?: string;\n  allowEditing: boolean;\n  value: string;\n  onEdit(): void;\n}\n\nconst ReadWidget: React.FunctionComponent<IReadWidget> = ({\n  className,\n  allowEditing,\n  value,\n  onEdit,\n}) => (\n  <div className={classnames('inline-text-readwidget', className)}>\n    {value}\n    {allowEditing ? (\n      <Icon\n        className=\"inline-text-editIcon\"\n        name=\"edit\"\n        onClick={onEdit}\n        type=\"pf\"\n      />\n    ) : null}\n  </div>\n);\n\ninterface IEditWidget extends React.InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  value: string;\n  valid: boolean;\n  saving: boolean;\n  asTextarea: boolean;\n  errorMsg?: string;\n  onConfirm(): void;\n  onCancel(): void;\n}\n\nconst EditWidget: React.FunctionComponent<IEditWidget> = ({\n  valid,\n  value,\n  placeholder,\n  errorMsg,\n  saving,\n  asTextarea,\n  onChange,\n  onConfirm,\n  onCancel,\n}) => (\n  <div className={'inline-text-editwidget'}>\n    {asTextarea ? (\n      <>\n        <FormGroup\n          controlId=\"textarea\"\n          validationState={valid ? 'success' : 'error'}\n        >\n          <FormControl\n            componentClass=\"textarea\"\n            disabled={saving}\n            onChange={onChange}\n            placeholder={placeholder}\n            value={value}\n          />\n          {saving ? (\n            <span className=\"btn\">\n              <Loader inline={true} loading={saving} size={'sm'} />\n            </span>\n          ) : (\n            <InlineEdit.ConfirmButton\n              disabled={saving || !valid}\n              onClick={onConfirm}\n            />\n          )}\n          <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n        </FormGroup>\n        {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n      </>\n    ) : (\n      <>\n        <FormGroup validationState={valid ? 'success' : 'error'}>\n          <InputGroup>\n            <FormControl\n              disabled={saving}\n              onChange={onChange}\n              placeholder={placeholder}\n              type=\"text\"\n              value={value}\n            />\n            <InputGroup.Button>\n              {saving ? (\n                <span className=\"btn\">\n                  <Loader inline={true} loading={saving} size={'sm'} />\n                </span>\n              ) : (\n                <InlineEdit.ConfirmButton\n                  disabled={saving || !valid}\n                  onClick={onConfirm}\n                />\n              )}\n            </InputGroup.Button>\n            <InputGroup.Button>\n              <InlineEdit.CancelButton disabled={saving} onClick={onCancel} />\n            </InputGroup.Button>\n          </InputGroup>\n          {errorMsg && <HelpBlock>{errorMsg}</HelpBlock>}\n        </FormGroup>\n      </>\n    )}\n  </div>\n);\n\nexport interface IInlineTextEditProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  className?: string;\n\n  /**\n   * The current value of the property being rendered.\n   */\n  value: string;\n\n  /**\n   * `true` if editing is allowed.\n   */\n  allowEditing: boolean;\n\n  /**\n   * A value to display if the current value is empty or undefined.\n   */\n  i18nPlaceholder?: string;\n\n  /**\n   * `true` if the value should be rendered as a text area.\n   */\n  isTextArea: boolean;\n\n  /**\n   * The callback invoked when the confirm button is clicked.\n   */\n  onChange: (newValue: string) => Promise<boolean>;\n\n  /**\n   * The callback invoked when the proposed value changes.\n   */\n  onValidate?: (newValue: string) => Promise<true | string>;\n}\n\nexport const InlineTextEdit: React.FunctionComponent<IInlineTextEditProps> = ({\n  className,\n  value,\n  allowEditing,\n  i18nPlaceholder,\n  isTextArea,\n  onChange,\n  onValidate,\n  ...attrs\n}) => {\n  const [currentValue, setCurrentValue] = React.useState(value);\n  const [editing, setEditing] = React.useState(false);\n  const [saving, setSaving] = React.useState(false);\n  const [{ valid, errorMsg }, setValidity] = React.useState({\n    errorMsg: '',\n    valid: true,\n  });\n\n  const validate = async (valueToValidate: string) => {\n    if (onValidate) {\n      const result = await onValidate(valueToValidate);\n      if (result === true) {\n        setValidity({\n          errorMsg: '',\n          valid: true,\n        });\n      } else {\n        setValidity({\n          errorMsg: result,\n          valid: false,\n        });\n      }\n    } else {\n      setValidity({\n        errorMsg: '',\n        valid: true,\n      });\n    }\n  };\n\n  const handleConfirm = async () => {\n    if (valid) {\n      setSaving(true);\n      const success = await onChange(currentValue);\n      if (success) {\n        setEditing(false);\n      }\n      setSaving(false);\n    }\n  };\n\n  const handleChange = (e: any) => {\n    setCurrentValue(e.target.value);\n    validate(e.target.value);\n  };\n\n  const onEdit = () => {\n    setEditing(true);\n    validate(currentValue);\n  };\n\n  const onCancel = () => {\n    setEditing(false);\n    setCurrentValue(value);\n  };\n\n  const renderValue = (v: string) => (\n    <ReadWidget\n      className={className}\n      value={v || i18nPlaceholder || 'Value...'}\n      allowEditing={allowEditing}\n      onEdit={onEdit}\n    />\n  );\n\n  const renderEdit = (v: string) => (\n    <EditWidget\n      {...attrs}\n      valid={valid}\n      saving={saving}\n      value={v}\n      errorMsg={errorMsg}\n      asTextarea={isTextArea}\n      onChange={handleChange}\n      onConfirm={handleConfirm}\n      onCancel={onCancel}\n    />\n  );\n\n  const isEditing = () => editing;\n\n  return (\n    <InlineEdit\n      className={className}\n      value={currentValue}\n      isEditing={isEditing}\n      renderValue={renderValue}\n      renderEdit={renderEdit}\n    />\n  );\n};\n","import { Filter, FormControl, Sort, Toolbar } from 'patternfly-react';\nimport * as React from 'react';\nimport './ListViewToolbar.css';\n\nexport interface IFilterValue {\n  id: string;\n  title: string;\n}\n\nexport interface IFilterType {\n  id: string;\n  filterType: 'select' | 'text' | 'number';\n  filterValues?: IFilterValue[];\n  placeholder: string;\n  title: string;\n}\n\nexport interface ISortType {\n  id: string;\n  isNumeric: boolean;\n  title: string;\n}\n\nexport interface IActiveFilter {\n  title: string;\n  value: string;\n}\n\nexport interface IListViewToolbarProps {\n  activeFilters: IActiveFilter[];\n  filterTypes: IFilterType[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  isSortAscending: boolean;\n  resultsCount: number;\n  sortTypes: ISortType[];\n  i18nResultsCount: string;\n\n  onUpdateCurrentValue(event: Event): void;\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n\n  onFilterAdded(title: string, value: string): void;\n\n  onSelectFilterType(filterType: IFilterType): void;\n\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n\n  onRemoveFilter(filter: IActiveFilter): void;\n\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n\n  onToggleCurrentSortDirection(): void;\n\n  onUpdateCurrentSortType(sortType: string): void;\n}\n\nexport class ListViewToolbar extends React.Component<IListViewToolbarProps> {\n  public render() {\n    return (\n      <Toolbar>\n        <Filter>\n          <Filter.TypeSelector\n            filterTypes={this.props.filterTypes}\n            currentFilterType={this.props.currentFilterType.title}\n            onFilterTypeSelected={this.props.onSelectFilterType}\n          />\n          {this.renderInput()}\n        </Filter>\n        <Sort>\n          <Sort.TypeSelector\n            sortTypes={this.props.sortTypes}\n            currentSortType={this.props.currentSortType}\n            onSortTypeSelected={this.props.onUpdateCurrentSortType}\n          />\n          <Sort.DirectionSelector\n            isNumeric={false}\n            isAscending={this.props.isSortAscending}\n            onClick={this.props.onToggleCurrentSortDirection}\n          />\n        </Sort>\n        <Toolbar.RightContent>{this.props.children}</Toolbar.RightContent>\n        <Toolbar.Results>\n          {this.props.activeFilters && this.props.activeFilters.length > 0 && (\n            <>\n              <h5>{this.props.i18nResultsCount}</h5>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                {this.props.activeFilters.map((item: IActiveFilter, index) => (\n                  <Filter.Item\n                    key={index}\n                    onRemove={this.props.onRemoveFilter}\n                    filterData={item}\n                  >\n                    {item.title}={item.value}\n                  </Filter.Item>\n                ))}\n              </Filter.List>\n              <a onClick={this.props.onClearFilters}>Clear All Filters</a>\n            </>\n          )}\n        </Toolbar.Results>\n      </Toolbar>\n    );\n  }\n\n  public renderInput = () => {\n    const { currentFilterType, currentValue } = this.props;\n    if (!currentFilterType) {\n      return null;\n    }\n    if (currentFilterType.filterType === 'select') {\n      return (\n        <Filter.ValueSelector\n          filterValues={currentFilterType.filterValues}\n          currentValue={currentValue}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n        />\n      );\n    } else {\n      return (\n        <FormControl\n          type={currentFilterType.filterType}\n          value={currentValue}\n          placeholder={currentFilterType.placeholder}\n          onChange={this.props.onUpdateCurrentValue}\n          onKeyPress={this.props.onValueKeyPress}\n        />\n      );\n    }\n  };\n}\n","import { Col, Row, Switch } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n} from 'react-virtualized';\nimport './LogViewer.css';\n\nexport interface ILogViewerProps {\n  data: string[];\n  height?: number;\n  width?: null;\n}\n\nexport interface ILogViewerState {\n  count: number;\n  followScroll: boolean;\n  previousCount: number;\n}\n\nexport class LogViewer extends React.Component<\n  ILogViewerProps,\n  ILogViewerState\n> {\n  public static defaultProps = {\n    height: 300,\n  };\n\n  public static getDerivedStateFromProps(\n    { data }: ILogViewerProps,\n    state: ILogViewerState\n  ) {\n    return {\n      ...state,\n      count: data.length,\n      previousCount: state.followScroll ? state.count : state.previousCount,\n    };\n  }\n\n  public state = {\n    count: 0,\n    followScroll: true,\n    previousCount: 0,\n  };\n\n  public cellMeasurerCache: CellMeasurerCache;\n\n  public constructor(props: ILogViewerProps) {\n    super(props);\n    this.cellMeasurerCache = new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 20,\n    });\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <Row className={'LogViewer'}>\n          <Col sm={12}>\n            <AutoSizer\n              disableHeight={!!this.props.height}\n              disableWidth={!!this.props.width}\n            >\n              {({ width, height }) => (\n                <List\n                  deferredMeasurementCache={this.cellMeasurerCache}\n                  height={this.props.height || height}\n                  rowCount={this.props.data.length}\n                  rowHeight={this.cellMeasurerCache.rowHeight}\n                  rowRenderer={this.renderRow}\n                  scrollToLine={this.state.count}\n                  scrollToIndex={\n                    this.state.followScroll ? this.state.count - 1 : -1\n                  }\n                  width={this.props.width || width}\n                />\n              )}\n            </AutoSizer>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Switch\n              id={'toggle-follow'}\n              labelText={'Follow logs'}\n              onChange={this.toggleFollow}\n              value={this.state.followScroll}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n\n  public renderRow: ListRowRenderer = ({ index, style, parent }) => (\n    <CellMeasurer\n      cache={this.cellMeasurerCache}\n      columnIndex={0}\n      key={index}\n      rowIndex={index}\n      parent={parent}\n    >\n      <div className={'LogViewerRow'} style={style}>\n        <span className=\"LogViewerRow_number\">{index + 1}</span>\n        <span className=\"LogViewerRow_content\">{this.props.data[index]}</span>\n      </div>\n    </CellMeasurer>\n  );\n\n  public toggleFollow = () => {\n    this.setState({\n      followScroll: !this.state.followScroll,\n    });\n  };\n}\n","import {\n  TimedToastNotification,\n  ToastNotificationList,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout/Container';\n\nexport type INotificationType = 'success' | 'info' | 'warning' | 'error';\n\nexport interface INotification {\n  key: string;\n  message: string;\n  type: INotificationType;\n}\n\nexport interface INotificationsProps {\n  notifications: INotification[];\n  notificationTimerDelay: number;\n  removeNotificationAction(notification: INotification): void;\n}\n\nexport class Notifications extends React.Component<INotificationsProps> {\n  public render() {\n    return (\n      <ToastNotificationList className=\"app__notificationList\">\n        {this.props.notifications.map(notification => (\n          <TimedToastNotification\n            key={notification.key}\n            type={notification.type}\n            persistent={false}\n            onDismiss={this.props.removeNotificationAction.bind(\n              this,\n              notification\n            )}\n            timerdelay={this.props.notificationTimerDelay}\n          >\n            <Container\n              dangerouslySetInnerHTML={{\n                __html: notification.message,\n              }}\n            />\n          </TimedToastNotification>\n        ))}\n      </ToastNotificationList>\n    );\n  }\n}\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface ISimplePageHeaderProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  className?: string;\n}\n\nexport const SimplePageHeader: React.FunctionComponent<\n  ISimplePageHeaderProps\n> = ({\n  i18nTitle,\n  i18nDescription,\n  className,\n  ...rest\n}: ISimplePageHeaderProps) => {\n  return (\n    <Container className={classnames('', className)} {...rest}>\n      <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n        {i18nTitle}\n      </Title>\n      <Text>{i18nDescription}</Text>\n    </Container>\n  );\n};\n","import { Icon, ProgressBar } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './ProgressWithLink.css';\n\nexport interface IProgressWithLinkProps {\n  value: string;\n  currentStep: number;\n  totalSteps: number;\n  logUrl?: string;\n  i18nLogUrlText: string;\n}\n\nexport class ProgressWithLink extends React.PureComponent<\n  IProgressWithLinkProps\n> {\n  public render() {\n    return (\n      <div className=\"progress-link\">\n        <div>\n          <i data-testid=\"progress-link-value\">\n            {this.props.value} ( {this.props.currentStep} /{' '}\n            {this.props.totalSteps} )\n          </i>\n          {this.props.logUrl && (\n            <span data-testid=\"progress-log-link\" className=\"pull-right\">\n              <a target=\"_blank\" href={this.props.logUrl}>\n                {this.props.i18nLogUrlText} <Icon name={'external-link'} />\n              </a>\n            </span>\n          )}\n        </div>\n        <ProgressBar\n          now={this.props.currentStep}\n          max={this.props.totalSteps}\n          style={{\n            height: 6,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { DropdownItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface IPfDropdownItem {\n  children: any;\n}\nclass PfDropdownItem extends React.Component<IPfDropdownItem> {\n  public render() {\n    return <DropdownItem>{this.props.children}</DropdownItem>;\n  }\n}\n\nexport { PfDropdownItem };\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { Card, DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nimport './ConnectionCard.css';\n\nexport interface IConnectionCardMenuProps {\n  editHref: H.LocationDescriptor;\n  i18nCancelLabel: string;\n  i18nDeleteLabel: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEditLabel: string;\n  i18nMenuTitle: string;\n  i18nViewLabel: string;\n  isDeleteEnabled: boolean;\n  onDelete(): void;\n}\n\nexport interface IConnectionProps {\n  description: string;\n  menuProps?: IConnectionCardMenuProps;\n  name: string;\n  href: H.LocationDescriptor;\n  icon: string;\n}\n\nexport interface IConnectionCardState {\n  showDeleteDialog: boolean;\n}\n\nexport class ConnectionCard extends React.PureComponent<\n  IConnectionProps,\n  IConnectionCardState\n> {\n  public constructor(props: IConnectionProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    if (this.props.menuProps) {\n      this.doCancel = this.doCancel.bind(this);\n      this.doDelete = this.doDelete.bind(this);\n      this.showDeleteDialog = this.showDeleteDialog.bind(this);\n    }\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    if (this.props.menuProps) {\n      this.props.menuProps.onDelete();\n    }\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.menuProps && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.DANGER}\n            i18nCancelButtonText={this.props.menuProps.i18nCancelLabel}\n            i18nConfirmButtonText={this.props.menuProps.i18nDeleteLabel}\n            i18nConfirmationMessage={\n              this.props.menuProps.i18nDeleteModalMessage\n            }\n            i18nTitle={this.props.menuProps.i18nDeleteModalTitle}\n            icon={ConfirmationIconType.DANGER}\n            showDialog={this.state.showDeleteDialog}\n            onCancel={this.doCancel}\n            onConfirm={this.doDelete}\n          />\n        )}\n        <Card matchHeight={true}>\n          {this.props.menuProps && (\n            <div className=\"pull-right\">\n              <DropdownKebab\n                id={`connection-${this.props.name}-menu`}\n                pullRight={true}\n                title={this.props.menuProps.i18nMenuTitle}\n              >\n                <li role={'presentation'} key={0}>\n                  <Link to={this.props.href} role={'menuitem'} tabIndex={1}>\n                    {this.props.menuProps.i18nViewLabel}\n                  </Link>\n                </li>\n                <li role={'presentation'} key={1}>\n                  <Link\n                    to={this.props.menuProps.editHref}\n                    role={'menuitem'}\n                    tabIndex={2}\n                  >\n                    {this.props.menuProps.i18nEditLabel}\n                  </Link>\n                </li>\n                <li\n                  className={\n                    !this.props.menuProps.isDeleteEnabled ? 'disabled' : ''\n                  }\n                  role={'presentation'}\n                  key={2}\n                >\n                  <a\n                    href={'javascript:void(0)'}\n                    onClick={this.showDeleteDialog}\n                    role={'menuitem'}\n                    tabIndex={3}\n                  >\n                    {this.props.menuProps.i18nDeleteLabel}\n                  </a>\n                </li>\n              </DropdownKebab>\n            </div>\n          )}\n          <Link to={this.props.href} className={'connection-card'}>\n            <Card.Body>\n              <div className={'connection-card__content'}>\n                <div className=\"connection-card__icon\">\n                  <img src={this.props.icon} alt={this.props.name} width={46} />\n                </div>\n                <Title\n                  size=\"lg\"\n                  className=\"connection-card__title h2\"\n                  data-testid=\"connection-card-title\"\n                >\n                  {this.props.name}\n                </Title>\n                <Text className=\"connection-card__description\">\n                  {this.props.description}\n                </Text>\n              </div>\n            </Card.Body>\n          </Link>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Alert, Button, Row } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container, Loader } from '../Layout';\nimport './ConnectionDetailsForm.css';\n\nexport interface IConnectionDetailsValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectionDetailsFormProps {\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancelLabel: string;\n\n  /**\n   * The localized text for the edit button.\n   */\n  i18nEditLabel: string;\n\n  /**\n   * The localized text for the save button.\n   */\n  i18nSaveLabel: string;\n\n  /**\n   * The localized text of the form title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized text for the validate button.\n   */\n  i18nValidateLabel: string;\n\n  /**\n   * `true` if all form fields have valid values.\n   */\n  isValid: boolean;\n\n  /**\n   * `true` if the parent is doing some work and this form should disable user input.\n   */\n  isWorking: boolean;\n\n  /**\n   * Form level validationResults\n   */\n  validationResults: IConnectionDetailsValidationResult[];\n\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n\n  /**\n   * The callback for when the validate button is clicked.\n   */\n  onValidate: () => void;\n\n  /**\n   * `true` when the connection details are being edited.\n   */\n  isEditing: boolean;\n\n  /**\n   * The callback for editing has been canceled.\n   */\n  onCancelEditing: () => void;\n\n  /**\n   * The callback for start editing.\n   */\n  onStartEditing: () => void;\n}\n\nexport class ConnectionDetailsForm extends React.Component<\n  IConnectionDetailsFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.validationResults.map((e, idx) => (\n                <Alert key={idx} type={e.type}>\n                  {e.message}\n                </Alert>\n              ))}\n              <div className=\"card-pf-title\">{this.props.i18nTitle}</div>\n              <div className=\"card-pf-body connection-details-form__formFields\">\n                <Container>{this.props.children}</Container>\n                {this.props.isEditing ? (\n                  <Container>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.onValidate}\n                      >\n                        {this.props.isWorking ? (\n                          <Loader size={'sm'} inline={true} />\n                        ) : null}\n                        {this.props.i18nValidateLabel}\n                      </Button>\n                    </Row>\n                    <Row>\n                      <Button\n                        bsStyle=\"default\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking}\n                        onClick={this.props.onCancelEditing}\n                      >\n                        {this.props.i18nCancelLabel}\n                      </Button>\n                      <Button\n                        bsStyle=\"primary\"\n                        className=\"connection-details-form__editButton\"\n                        disabled={this.props.isWorking || !this.props.isValid}\n                        onClick={this.props.handleSubmit}\n                      >\n                        {this.props.i18nSaveLabel}\n                      </Button>\n                    </Row>\n                  </Container>\n                ) : (\n                  <Button bsStyle=\"primary\" onClick={this.props.onStartEditing}>\n                    {this.props.i18nEditLabel}\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\nimport { InlineTextEdit } from '../Shared';\nimport './ConnectionDetailsHeader.css';\n\nexport interface IConnectionDetailsHeaderProps {\n  /**\n   * `true` if the name and description can be edited.\n   */\n  allowEditing: boolean;\n\n  /**\n   * The optional connection description.\n   */\n  connectionDescription?: string;\n\n  /**\n   * The optional connection icon.\n   */\n  connectionIcon?: string;\n\n  /**\n   * The name of the connection.\n   */\n  connectionName: string;\n\n  /**\n   * The localized text of the description label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized placeholder text of the connection description.\n   */\n  i18nDescriptionPlaceholder: string;\n\n  /**\n   * The localized placeholder text of the connection name.\n   */\n  i18nNamePlaceholder: string;\n\n  /**\n   * The localized text of the usage label.\n   */\n  i18nUsageLabel: string;\n\n  /**\n   * The localized message that provides the number of integrations that are using this connection.\n   */\n  i18nUsageMessage: string;\n\n  /**\n   * `true` when the name or description is being saved.\n   */\n  isWorking: boolean;\n\n  /**\n   * The callback for when the connection description should be saved.\n   * @param newDescription - the new description being saved\n   * @returns `true` if save was successful\n   */\n  onChangeDescription: (newDescription: string) => Promise<boolean>;\n\n  /**\n   * The callback for when the connection name should be saved.\n   * @param newName - the new name being saved\n   * @returns `true` if save was successful\n   */\n  onChangeName: (newName: string) => Promise<boolean>;\n}\n\n/**\n * Line 1: icon, name, edit icon (makes name editable when clicked)\n * Line 2: description label and value\n * Line 3: usage label and value\n */\nexport class ConnectionDetailsHeader extends React.Component<\n  IConnectionDetailsHeaderProps\n> {\n  public render() {\n    return (\n      <Grid fluid={true}>\n        <Grid.Row className={'connection-details-header__row'}>\n          {this.props.connectionIcon ? (\n            <Grid.Col xs={1}>\n              <Container className=\"blank-slate-pf-icon\">\n                <img\n                  className=\"connection-details-header__connectionIcon\"\n                  src={this.props.connectionIcon}\n                  alt={this.props.connectionName}\n                  width={46}\n                />\n              </Container>\n            </Grid.Col>\n          ) : null}\n          <Grid.Col xs={11}>\n            <InlineTextEdit\n              className=\"connection-details-header__connectionName\"\n              value={this.props.connectionName}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              placeholder={this.props.i18nNamePlaceholder}\n              isTextArea={false}\n              onChange={this.props.onChangeName}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row className={'connection-details-header__row'}>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col xs={10}>\n            <InlineTextEdit\n              value={this.props.connectionDescription || ''}\n              allowEditing={this.props.allowEditing && !this.props.isWorking}\n              i18nPlaceholder={this.props.i18nDescriptionPlaceholder}\n              isTextArea={true}\n              onChange={this.props.onChangeDescription}\n            />\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"connection-details-header__propertyLabel\">\n            {this.props.i18nUsageLabel}\n          </Grid.Col>\n          <Grid.Col\n            xs={10}\n            className=\"connection-details-header__propertyValue\"\n          >\n            {this.props.i18nUsageMessage}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class ConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: H.LocationDescriptor;\n}\n\nexport class ConnectionsListView extends React.Component<\n  IConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Alert } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IConnectorConfigurationFormValidationResult {\n  message: string;\n  type: 'error' | 'success';\n}\n\nexport interface IConnectorConfigurationFormProps {\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * Form level validationResults\n   */\n  validationResults?: IConnectorConfigurationFormValidationResult[];\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IConnectorConfigurationFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IConnectorConfigurationFormProps#i18nSubtitle}\n */\nexport class ConnectorConfigurationForm extends React.Component<\n  IConnectorConfigurationFormProps\n> {\n  public static defaultProps = {\n    validationResults: [],\n  };\n\n  public render() {\n    return (\n      <Container>\n        <form\n          className=\"form-horizontal required-pf\"\n          role=\"form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              {this.props.i18nFormTitle && (\n                <div className=\"card-pf-title\">{this.props.i18nFormTitle}</div>\n              )}\n              <div className=\"card-pf-body\">\n                {this.props.validationResults!.map((e, idx) => (\n                  <Alert key={idx} type={e.type}>\n                    {e.message}\n                  </Alert>\n                ))}\n                <Container>{this.props.children}</Container>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n","export interface ICiCdListPageItem {\n  name: string;\n  i18nUsesText: string;\n}\n\nexport interface ITagIntegrationEntry {\n  name: string;\n  selected: boolean;\n}\n\nexport enum TagNameValidationError {\n  NoErrors = 'NoErrors',\n  NoName = 'NoName',\n  NameInUse = 'NameInUse',\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, CardBody } from 'patternfly-react';\nimport * as React from 'react';\nimport './ApiConnectorDetailCard.css';\n\nexport interface IApiConnectorDetailCardProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetailCard extends React.Component<\n  IApiConnectorDetailCardProps\n> {\n  public render() {\n    return (\n      <Card className=\"api-connector-card\">\n        <CardBody>\n          <div className={'api-connector-card__content'}>\n            <div>\n              <img\n                className=\"api-connector-card__icon\"\n                src={this.props.icon}\n                alt={this.props.name}\n              />\n            </div>\n            <div\n              className=\"api-connector__title h2\"\n              data-testid=\"api-connector-card-title\"\n            >\n              {this.props.name}\n            </div>\n            <Text className=\"api-connector-card__description\">\n              {this.props.description}\n            </Text>\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorInfo extends React.Component {\n  public render() {\n    return <div>ApiConnectorInfo content goes here</div>;\n  }\n}\n","import * as React from 'react';\n\nexport class ApiConnectorReview extends React.Component {\n  public render() {\n    return <div>ApiConnectorReview content goes here</div>;\n  }\n}\n","import {\n  Card,\n  CardBody,\n  CardGrid,\n  CardHeading,\n  CardTitle,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ApiConnectorDetailCard } from './ApiConnectorDetailCard';\nimport { ApiConnectorInfo } from './ApiConnectorInfo';\nimport { ApiConnectorReview } from './ApiConnectorReview';\n\nexport interface IApiConnectorDetailProps {\n  description?: string;\n  icon?: string;\n  name: string;\n}\n\nexport class ApiConnectorDetail extends React.Component<\n  IApiConnectorDetailProps\n> {\n  public render() {\n    return (\n      <CardGrid fluid={true}>\n        <CardGrid.Row>\n          <CardGrid.Col xs={12} md={3}>\n            <ApiConnectorDetailCard\n              description={this.props.description}\n              icon={this.props.icon}\n              name={this.props.name}\n            />\n          </CardGrid.Col>\n          <CardGrid.Col xs={12} md={7}>\n            <Card>\n              <CardHeading>\n                <CardTitle>{this.props.name}</CardTitle>\n              </CardHeading>\n              <CardBody>\n                <ApiConnectorInfo />\n                <ApiConnectorReview />\n              </CardBody>\n            </Card>\n          </CardGrid.Col>\n        </CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IApiConnectorListItemProps {\n  apiConnectorDescription?: string;\n  apiConnectorId: string;\n  apiConnectorName: string;\n  apiConnectorIcon?: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nUsedByMessage: string;\n  onDelete: (apiConnectorId: string) => void;\n  onDetails: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport class ApiConnectorListItem extends React.Component<\n  IApiConnectorListItemProps\n> {\n  public constructor(props: IApiConnectorListItemProps) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public handleDelete() {\n    this.props.onDelete(this.props.apiConnectorId);\n  }\n\n  public handleDetails() {\n    this.props.onDetails(this.props.apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <ListViewItem\n        actions={\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getDetailsTooltip()} placement=\"top\">\n              <Button bsStyle=\"default\" onClick={this.handleDetails}>\n                {this.props.i18nDetails}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n              <Button\n                bsStyle=\"default\"\n                disabled={this.props.usedBy !== 0}\n                onClick={this.handleDelete}\n              >\n                {this.props.i18nDelete}\n              </Button>\n            </OverlayTrigger>\n          </div>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nUsedByMessage}\n          </ListViewInfoItem>,\n        ]}\n        description={\n          this.props.apiConnectorDescription\n            ? this.props.apiConnectorDescription\n            : ''\n        }\n        heading={this.props.apiConnectorName}\n        hideCloseIcon={true}\n        leftContent={\n          this.props.apiConnectorIcon ? (\n            <div className=\"blank-slate-pf-icon\">\n              <img\n                src={this.props.apiConnectorIcon}\n                alt={this.props.apiConnectorName}\n                width={46}\n              />\n            </div>\n          ) : null\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IApiConnectorListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkCreateApiConnector: string;\n  i18nLinkCreateApiConnectorTip?: string;\n  i18nName: string;\n  i18nTitle: string;\n  linkCreateApiConnector: string;\n}\n\nexport class ApiConnectorListView extends React.Component<\n  IApiConnectorListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getCreateConnectorTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink\n                href={this.props.linkCreateApiConnector}\n                as={'primary'}\n              >\n                {this.props.i18nLinkCreateApiConnector}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getCreateConnectorTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkCreateApiConnector}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateApiConnector}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n\n  private getCreateConnectorTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateApiConnectorTip\n          ? this.props.i18nLinkCreateApiConnectorTip\n          : this.props.i18nLinkCreateApiConnector}\n      </Tooltip>\n    );\n  }\n}\n","import { Title, TitleLevel } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeading,\n  CardTitle,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\nimport './ExtensionDetail.css';\n\nexport interface IExtensionDetailProps {\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The number of integrations that use this extension.\n   */\n  extensionUses: number;\n\n  /**\n   * The localized text of the cancel button used when deleting this extension.\n   */\n  i18nCancelText: string;\n\n  /**\n   * The localized text of the delete button.\n   */\n  i18nDelete: string;\n\n  /**\n   * The localized delete confirmation message.\n   */\n  i18nDeleteModalMessage: string;\n\n  /**\n   * The localized title of the delete dialog.\n   */\n  i18nDeleteModalTitle: string;\n\n  /**\n   * The localized tooltip of the delete button.\n   */\n  i18nDeleteTip?: string;\n\n  /**\n   * The localized message that displays the extension ID.\n   */\n  i18nIdMessage: string;\n\n  /**\n   * The localized text for the overview section title.\n   */\n  i18nOverviewSectionTitle: string;\n\n  /**\n   * The localized text of the supports section title.\n   */\n  i18nSupportsSectionTitle: string;\n\n  /**\n   * The localized text of the update button.\n   */\n  i18nUpdate: string;\n\n  /**\n   * The localized tooltip of the update button.\n   */\n  i18nUpdateTip?: string;\n\n  /**\n   * The localized text of the usage section title.\n   */\n  i18nUsageSectionTitle: string;\n\n  /**\n   * The JSX element that displayes the integrations used by this extension.\n   */\n  integrationsSection: JSX.Element;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  /**\n   * The callback for when the delete button is clicked.\n   */\n  onDelete: () => void;\n\n  /**\n   * The JSX element that displays the overview section.\n   */\n  overviewSection: JSX.Element;\n\n  /**\n   * The JSX element that displays the supports section.\n   */\n  supportsSection: JSX.Element;\n}\n\nexport interface IExtensionDetailState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionDetail extends React.Component<\n  IExtensionDetailProps,\n  IExtensionDetailState\n> {\n  public constructor(props: IExtensionDetailProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete();\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <Card matchHeight={true}>\n          <CardHeading>\n            <CardTitle>\n              <Row>\n                <Title\n                  size=\"xl\"\n                  className={'col-sm-8 extension-detail__extensionTitle'}\n                >\n                  {this.props.extensionName}\n                  <span className={'extension-detail__extensionId'}>\n                    {this.props.i18nIdMessage}\n                  </span>\n                </Title>\n                <div className=\"col-sm-4 text-right extension-detail__titleButtons\">\n                  <OverlayTrigger\n                    overlay={this.getUpdateTooltip()}\n                    placement=\"top\"\n                  >\n                    <ButtonLink\n                      href={this.props.linkUpdateExtension}\n                      as={'primary'}\n                    >\n                      {this.props.i18nUpdate}\n                    </ButtonLink>\n                  </OverlayTrigger>\n                  <OverlayTrigger\n                    overlay={this.getDeleteTooltip()}\n                    placement=\"top\"\n                  >\n                    <Button\n                      bsStyle=\"default\"\n                      disabled={this.props.extensionUses !== 0}\n                      onClick={this.showDeleteDialog}\n                    >\n                      {this.props.i18nDelete}\n                    </Button>\n                  </OverlayTrigger>\n                </div>\n              </Row>\n            </CardTitle>\n          </CardHeading>\n          <CardBody>\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nOverviewSectionTitle}\n            </Title>\n            {this.props.overviewSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nSupportsSectionTitle}\n            </Title>\n            {this.props.supportsSection}\n            <Title\n              size=\"md\"\n              headingLevel={TitleLevel.h3}\n              className=\"extension-detail__sectionHeading\"\n            >\n              {this.props.i18nUsageSectionTitle}\n            </Title>\n            {this.props.integrationsSection}\n          </CardBody>\n        </Card>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Alert, Card } from 'patternfly-react';\nimport * as React from 'react';\nimport { DndFileChooser } from '../Shared/DndFileChooser';\n\nexport interface IExtensionImportCardProps {\n  /**\n   * `true` if the dropzone should be disabled.\n   */\n  dndDisabled: boolean;\n\n  /**\n   * A localized alert message when a jar file cannot be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * The localized text that appears below the selected file information at the bottom of the drop area. This\n   * message should identify the accepted file extension.\n   */\n  i18nDndHelpMessage: string;\n\n  /**\n   * The localized text (may include HTML tags) that appears above the selected file information at the\n   * top of the drop area. This message should describe how the DnD works.\n   */\n  i18nDndInstructions: string;\n\n  /**\n   * The localized text that appears when no file has been selected.\n   */\n  i18nDndNoFileSelectedMessage: string;\n\n  /**\n   * The localized text for the label that appears before the selected file information.\n   */\n  i18nDndSelectedFileLabel: string;\n\n  /**\n   * A general, localized message for when a file upload failed. This message will be shown\n   * along with an error icon and appears next to the selected file message. If this property\n   * is set then `i18nDndUploadSuccessMessage` should not be set.\n   */\n  i18nDndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload was successful. This message will be shown\n   * along with an OK icon and appear next to the selected file message. If this property\n   * is set then `i18nDndUploadFailedMessage` should not be set.\n   */\n  i18nDndUploadSuccessMessage?: string;\n\n  /**\n   * The localized instructions text that appears above the DnD component.\n   */\n  i18nImportInstructions: string;\n\n  /**\n   * The localized title text that appears above the DnD component.\n   */\n  i18nTitle: string;\n\n  /**\n   * Callback for when one or more file uploads have been accepted. Caller should handler processing of the files.\n   */\n  onDndUploadAccepted(files: File[]): void;\n\n  /**\n   * The localized text (may include HTML tags) that appears when the file upload fails.\n   */\n  onDndUploadRejected(fileName: string): string;\n}\n\nexport class ExtensionImportCard extends React.Component<\n  IExtensionImportCardProps\n> {\n  public render() {\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <Text>{this.props.i18nImportInstructions}</Text>\n          {this.props.i18nAlertMessage ? (\n            <Alert type={'error'}>\n              <span>{this.props.i18nAlertMessage}</span>\n            </Alert>\n          ) : null}\n          <DndFileChooser\n            disableDropzone={this.props.dndDisabled}\n            fileExtensions={'.jar'}\n            i18nHelpMessage={this.props.i18nDndHelpMessage}\n            i18nInstructions={this.props.i18nDndInstructions}\n            i18nNoFileSelectedMessage={this.props.i18nDndNoFileSelectedMessage}\n            i18nSelectedFileLabel={this.props.i18nDndSelectedFileLabel}\n            i18nUploadFailedMessage={this.props.i18nDndUploadFailedMessage}\n            i18nUploadSuccessMessage={this.props.i18nDndUploadSuccessMessage}\n            onUploadAccepted={this.props.onDndUploadAccepted}\n            onUploadRejected={this.props.onDndUploadRejected}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import * as H from 'history';\nimport { Button, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport './ExtensionImportReview.css';\n\nexport interface IImportAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionImportReviewProps {\n  /**\n   * The extension actions.\n   */\n  actions?: IImportAction[];\n\n  /**\n   * The href that will be navigated to when the cancel button is clicked.\n   */\n  cancelLink: H.LocationDescriptor;\n\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The ID of the extension.\n   */\n  extensionId: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The unique, not for user consumption, identifier.\n   */\n  extensionUid: string;\n\n  /**\n   * The localized label for the list of actions.\n   */\n  i18nActionsLabel: string;\n\n  /**\n   * The localized text for the cancel button.\n   */\n  i18nCancel: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescriptionLabel: string;\n\n  /**\n   * The localized text identifying the extension type.\n   */\n  i18nExtensionTypeMessage: string;\n\n  /**\n   * The localized 'ID' label.\n   */\n  i18nIdLabel: string;\n\n  /**\n   * The localized text for the import button.\n   */\n  i18nImport: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nNameLabel: string;\n\n  /**\n   * The localized title.\n   */\n  i18nTitle: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nTypeLabel: string;\n\n  /**\n   * Obtains a localized message with the action name and description.\n   * @param name the action name\n   * @param description the action description\n   */\n  i18nActionText(name: string, description: string): string;\n\n  /**\n   * Callback for when the import button is clicked.\n   * @param extensionUid the UID of the extension being imported/installed\n   */\n  onImport(extensionUid: string): void;\n}\n\n/**\n * A component that displays the extension import review information.\n */\nexport class ExtensionImportReview extends React.Component<\n  IExtensionImportReviewProps\n> {\n  public constructor(props: IExtensionImportReviewProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getActions(): JSX.Element {\n    if (!this.props.actions) {\n      return <Grid.Col />;\n    }\n\n    return (\n      <Container>\n        {this.props.actions\n          ? this.props.actions.map((action, index) =>\n              index === 0 ? (\n                <Grid.Col\n                  key={0}\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.i18nActionText(\n                      action.name,\n                      action.description\n                    ),\n                  }}\n                />\n              ) : (\n                <Grid.Row key={index}>\n                  <Grid.Col key={0} xs={2} />\n                  <Grid.Col\n                    key={1}\n                    dangerouslySetInnerHTML={{\n                      __html: this.props.i18nActionText(\n                        action.name,\n                        action.description\n                      ),\n                    }}\n                  />\n                </Grid.Row>\n              )\n            )\n          : null}\n      </Container>\n    );\n  }\n\n  public handleImport() {\n    return this.props.onImport(this.props.extensionUid);\n  }\n\n  public render() {\n    return (\n      <Grid className=\"extension-import-review__container\">\n        <Grid.Row className=\"extension-import-review__title\">\n          {this.props.i18nTitle}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nIdLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionId}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nNameLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nDescriptionLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nTypeLabel}\n          </Grid.Col>\n          <Grid.Col className=\"extension-import-review__propertyValue\">\n            {this.props.i18nExtensionTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-import-review__propertyLabel\">\n            {this.props.i18nActionsLabel}\n          </Grid.Col>\n          {this.getActions()}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xsOffset={2}>\n            <Grid.Row>\n              <Grid.Col>\n                <Container className=\"extension-import-review__buttonBar\">\n                  <Button bsStyle=\"primary\" onClick={this.handleImport}>\n                    {this.props.i18nImport}\n                  </Button>\n                  <ButtonLink\n                    className=\"extension-import-review__cancelButton\"\n                    href={this.props.cancelLink}\n                    as={'default'}\n                  >\n                    {this.props.i18nCancel}\n                  </ButtonLink>\n                </Container>\n              </Grid.Col>\n            </Grid.Row>\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IExtensionIntegration {\n  id: string; // used to create link to integration details page\n  name: string;\n  description: string;\n}\n\nexport interface IExtensionIntegrationsTableProps {\n  i18nDescription: string;\n  i18nName: string;\n  i18nUsageMessage: string;\n  onSelectIntegration: (integrationId: string) => void;\n  data: IExtensionIntegration[];\n}\n\nexport class ExtensionIntegrationsTable extends React.Component<\n  IExtensionIntegrationsTableProps\n> {\n  public getColumns() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const clickableValueFormat = (\n      value: string,\n      { rowData }: { rowData: any }\n    ) => {\n      // rowData is an Integration type so 'name' property is what makes the integration unique\n      const onClick = () => this.onIntegrationSelected(rowData.id);\n      return (\n        <Table.Cell>\n          <a href=\"javascript:void(0)\" onClick={onClick}>\n            {value}\n          </a>\n        </Table.Cell>\n      );\n    };\n\n    // Creates 2 columns:\n    // 1. first column is integration name\n    // 2. second column is optional integration description.\n    return [\n      {\n        cell: {\n          formatters: [clickableValueFormat],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nName,\n        },\n        property: 'name', // must match the name of the IntegrationOverview.name property\n      },\n      {\n        cell: {\n          formatters: [(value: string) => <Table.Cell>{value}</Table.Cell>],\n        },\n        header: {\n          formatters: [headerFormat],\n          label: this.props.i18nDescription,\n        },\n        property: 'description', // must match the name of the IntegrationOverview.description property\n      },\n    ];\n  }\n\n  public onIntegrationSelected(integrationId: string) {\n    this.props.onSelectIntegration(integrationId);\n  }\n\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        <Row>\n          <div className=\"col-xs-offset-1 col-xs-11\">\n            <Text>{this.props.i18nUsageMessage}</Text>\n            {this.props.data.length !== 0 ? (\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={this.getColumns()}\n              >\n                <Table.Header />\n                <Table.Body rows={this.props.data} rowKey=\"name\" />\n              </Table.PfProvider>\n            ) : null}\n          </div>\n        </Row>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  Button,\n  ListViewInfoItem,\n  ListViewItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../Shared';\n\nexport interface IExtensionListItemProps {\n  detailsPageLink: H.LocationDescriptor;\n  extensionDescription?: string;\n  extensionIcon?: string;\n  extensionId: string;\n  extensionName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDeleteTip?: string;\n  i18nDetails: string;\n  i18nDetailsTip?: string;\n  i18nExtensionType: string;\n  i18nUpdate: string;\n  i18nUpdateTip?: string;\n  i18nUsedByMessage: string;\n\n  /**\n   * An href to use when the extension is being updated.\n   */\n  linkUpdateExtension: H.LocationDescriptor;\n\n  onDelete: (extensionId: string) => void;\n  usedBy: number;\n}\n\nexport interface IExtensionListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ExtensionListItem extends React.Component<\n  IExtensionListItemProps,\n  IExtensionListItemState\n> {\n  public constructor(props: IExtensionListItemProps) {\n    super(props);\n\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n\n    this.doCancel = this.doCancel.bind(this);\n    this.doDelete = this.doDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public doCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  public doDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    this.props.onDelete(this.props.extensionId);\n  }\n\n  public getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  public getDetailsTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nDetailsTip\n          ? this.props.i18nDetailsTip\n          : this.props.i18nDetails}\n      </Tooltip>\n    );\n  }\n\n  public getUpdateTooltip() {\n    return (\n      <Tooltip id=\"updateTip\">\n        {this.props.i18nUpdateTip\n          ? this.props.i18nUpdateTip\n          : this.props.i18nUpdate}\n      </Tooltip>\n    );\n  }\n\n  public showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          // extensionId={this.props.extensionId}\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.doCancel}\n          onConfirm={this.doDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger\n                overlay={this.getDetailsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.detailsPageLink} as={'default'}>\n                  {this.props.i18nDetails}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getUpdateTooltip()} placement=\"top\">\n                <ButtonLink\n                  href={this.props.linkUpdateExtension}\n                  as={'default'}\n                >\n                  {this.props.i18nUpdate}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger overlay={this.getDeleteTooltip()} placement=\"top\">\n                <Button\n                  bsStyle=\"default\"\n                  disabled={this.props.usedBy !== 0}\n                  onClick={this.showDeleteDialog}\n                >\n                  {this.props.i18nDelete}\n                </Button>\n              </OverlayTrigger>\n            </div>\n          }\n          additionalInfo={[\n            <ListViewInfoItem key={1}>\n              {this.props.i18nExtensionType}\n            </ListViewInfoItem>,\n            <ListViewInfoItem key={2}>\n              {this.props.i18nUsedByMessage}\n            </ListViewInfoItem>,\n          ]}\n          description={\n            this.props.extensionDescription\n              ? this.props.extensionDescription\n              : ''\n          }\n          heading={this.props.extensionName}\n          hideCloseIcon={true}\n          leftContent={\n            this.props.extensionIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.extensionIcon}\n                  alt={this.props.extensionName}\n                  width={46}\n                />\n              </div>\n            ) : null\n          }\n          stacked={true}\n        />\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IExtensionListViewProps extends IListViewToolbarProps {\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nLinkImportExtension: H.LocationDescriptor;\n  i18nLinkImportExtensionTip?: H.LocationDescriptor;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkImportExtension: H.LocationDescriptor;\n}\n\nexport class ExtensionListView extends React.Component<\n  IExtensionListViewProps\n> {\n  public getImportTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nLinkImportExtensionTip\n          ? this.props.i18nLinkImportExtensionTip\n          : this.props.i18nLinkImportExtension}\n      </Tooltip>\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger overlay={this.getImportTooltip()} placement=\"top\">\n              <ButtonLink href={this.props.linkImportExtension} as={'primary'}>\n                {this.props.i18nLinkImportExtension}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        <Container>\n          {this.props.i18nTitle !== '' && (\n            <Title size=\"lg\">{this.props.i18nTitle}</Title>\n          )}\n          {this.props.i18nDescription !== '' && (\n            <Text\n              dangerouslySetInnerHTML={{ __html: this.props.i18nDescription }}\n            />\n          )}\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : (\n            <EmptyState>\n              <EmptyState.Icon />\n              <EmptyState.Title>\n                {this.props.i18nEmptyStateTitle}\n              </EmptyState.Title>\n              <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n              <EmptyState.Action>\n                <OverlayTrigger\n                  overlay={this.getImportTooltip()}\n                  placement=\"top\"\n                >\n                  <ButtonLink\n                    href={this.props.linkImportExtension}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkImportExtension}\n                  </ButtonLink>\n                </OverlayTrigger>\n              </EmptyState.Action>\n            </EmptyState>\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport './ExtensionOverview.css';\n\nexport interface IExtensionOverviewProps {\n  /**\n   * The optional description of the extension.\n   */\n  extensionDescription?: string;\n\n  /**\n   * The name of the extension.\n   */\n  extensionName: string;\n\n  /**\n   * The localized 'Description' label.\n   */\n  i18nDescription: string;\n\n  /**\n   * The localized 'Last Update' label.\n   */\n  i18nLastUpdate: string;\n\n  /**\n   * The localized last update date.\n   */\n  i18nLastUpdateDate?: string;\n\n  /**\n   * The localized 'Name' label.\n   */\n  i18nName: string;\n\n  /**\n   * The localized 'Type' label.\n   */\n  i18nType: string;\n\n  /**\n   * The localized type message.\n   */\n  i18nTypeMessage: string;\n}\n\n/**\n * A component that displays the overview section of the extension details page.\n */\nexport class ExtensionOverview extends React.Component<\n  IExtensionOverviewProps\n> {\n  public render() {\n    return (\n      <Grid>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nName}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionName}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nDescription}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.extensionDescription\n              ? this.props.extensionDescription\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nType}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nTypeMessage}\n          </Grid.Col>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Col xs={2} className=\"extension-overview__propertyLabel\">\n            {this.props.i18nLastUpdate}\n          </Grid.Col>\n          <Grid.Col className=\"extension-overview__propertyValue\">\n            {this.props.i18nLastUpdateDate\n              ? this.props.i18nLastUpdateDate\n              : null}\n          </Grid.Col>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import { Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IAction {\n  description: string;\n  name: string;\n}\n\nexport interface IExtensionSupportsProps {\n  extensionActions: IAction[];\n}\n\n/**\n * A component that displays the support section of the extension details page.\n */\nexport class ExtensionSupports extends React.Component<\n  IExtensionSupportsProps\n> {\n  public render() {\n    return (\n      <div className=\"extension-group\">\n        {this.props.extensionActions.length !== 0 ? (\n          <Row>\n            <div className=\"col-xs-offset-1 col-xs-11\">\n              {this.props.extensionActions.map(\n                (action: IAction, index: number) => (\n                  <div key={index}>\n                    <strong>{action.name}</strong> - {action.description}\n                  </div>\n                )\n              )}\n            </div>\n          </Row>\n        ) : null}\n      </div>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IConnectionsMetricProps {\n  i18nTitle: string;\n}\n\nexport class ConnectionsMetric extends React.PureComponent<\n  IConnectionsMetricProps\n> {\n  public render() {\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title>{this.props.i18nTitle}</Card.Title>\n      </Card>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport * as H from 'history';\nimport { CardGrid, Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink, Container } from '../Layout';\nimport './Dashboard.css';\n\nexport interface IIntegrationsPageProps {\n  linkToIntegrations: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  linkToConnections: H.LocationDescriptor;\n  linkToConnectionCreation: H.LocationDescriptor;\n  integrationsOverview: JSX.Element;\n  connectionsOverview: JSX.Element;\n  messagesOverview: JSX.Element;\n  uptimeOverview: JSX.Element;\n  topIntegrations: JSX.Element;\n  integrationBoard: JSX.Element;\n  integrationUpdates: JSX.Element;\n  connections: JSX.Element;\n  i18nConnections: string;\n  i18nLinkCreateConnection: string;\n  i18nLinkCreateIntegration: string;\n  i18nLinkToConnections: string;\n  i18nLinkToIntegrations: string;\n  i18nTitle: string;\n}\n\nexport class Dashboard extends React.PureComponent<IIntegrationsPageProps> {\n  public render() {\n    return (\n      <Container>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nTitle}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <ButtonLink href={this.props.linkToIntegrations}>\n                    {this.props.i18nLinkToIntegrations}\n                  </ButtonLink>\n                  <ButtonLink\n                    href={this.props.linkToIntegrationCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateIntegration}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.integrationsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.connectionsOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.messagesOverview}\n            </CardGrid.Col>\n            <CardGrid.Col sm={6} md={3}>\n              {this.props.uptimeOverview}\n            </CardGrid.Col>\n          </CardGrid.Row>\n        </CardGrid>\n        <Grid fluid={true}>\n          <Grid.Row>\n            <Grid.Col sm={12}>{this.props.topIntegrations}</Grid.Col>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationBoard}\n            </Grid.Col>\n            <Grid.Col sm={12} md={6}>\n              {this.props.integrationUpdates}\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <Grid fluid={true} style={{ marginTop: '20px' }}>\n          <Grid.Row>\n            <Grid.Col sm={12}>\n              <div className={'Dashboard-header'}>\n                <Title size=\"lg\" className={'Dashboard-header__title'}>\n                  {this.props.i18nConnections}\n                </Title>\n                <div className=\"Dashboard-header__actions\">\n                  <Link to={this.props.linkToConnections}>\n                    {this.props.i18nLinkToConnections}\n                  </Link>\n                  <ButtonLink\n                    href={this.props.linkToConnectionCreation}\n                    as={'primary'}\n                  >\n                    {this.props.i18nLinkCreateConnection}\n                  </ButtonLink>\n                </div>\n              </div>\n            </Grid.Col>\n          </Grid.Row>\n        </Grid>\n        <CardGrid fluid={true} matchHeight={true}>\n          <CardGrid.Row>{this.props.connections}</CardGrid.Row>\n        </CardGrid>\n      </Container>\n    );\n  }\n}\n","import { Card, DonutChart, patternfly } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationBoardProps {\n  pendingIntegrations: number;\n  runningIntegrations: number;\n  stoppedIntegrations: number;\n  i18nIntegrationStatePending: string;\n  i18nIntegrationStateRunning: string;\n  i18nIntegrationStateStopped: string;\n  i18nIntegrations: string;\n  i18nTitle: string;\n  i18nTotal: string;\n}\n\nexport class IntegrationBoard extends React.PureComponent<\n  IIntegrationBoardProps\n> {\n  public render() {\n    const data = {\n      colors: {\n        Pending: patternfly.pfPaletteColors.black200,\n        Published: patternfly.pfPaletteColors.blue400,\n        Stopped: patternfly.pfPaletteColors.black300,\n      },\n      columns: [\n        [\n          this.props.i18nIntegrationStateRunning,\n          this.props.runningIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStateStopped,\n          this.props.stoppedIntegrations,\n        ],\n        [\n          this.props.i18nIntegrationStatePending,\n          this.props.pendingIntegrations,\n        ],\n      ],\n      type: 'donut',\n    };\n\n    return (\n      <Card>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>\n          <DonutChart\n            id=\"integration-board\"\n            size={{ height: 120 }}\n            data={data}\n            tooltip={{\n              contents: patternfly.pfDonutTooltipContents,\n              show: true,\n            }}\n            title={{\n              secondary: this.props.i18nIntegrations,\n              type: this.props.i18nTotal,\n            }}\n            legend={{ show: true, position: 'right' }}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IRecentUpdatesProps {\n  i18nTitle: string;\n}\n\nexport class RecentUpdatesCard extends React.Component<IRecentUpdatesProps> {\n  public render() {\n    return (\n      <Card accented={false}>\n        <Card.Heading>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdEditDialogProps {\n  i18nTitle: string;\n  i18nDescription: string;\n  tagName: string;\n  i18nInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  validationError: TagNameValidationError;\n  onHide: () => void;\n  onValidate: (name: string) => void;\n  onSave: (newName: string) => void;\n}\n\nexport interface ICiCdEditDialogState {\n  tagName: string;\n}\n\nexport class CiCdEditDialog extends React.Component<\n  ICiCdEditDialogProps,\n  ICiCdEditDialogState\n> {\n  constructor(props: ICiCdEditDialogProps) {\n    super(props);\n    this.state = {\n      tagName: this.props.tagName,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const name = event.target.value.trim();\n    this.setState({ tagName: name }, () => this.props.onValidate(name));\n  }\n  public handleClick() {\n    this.props.onSave(this.state.tagName);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={\n          <form className=\"form-horizontal\">\n            <p>{this.props.i18nDescription}</p>\n            <div\n              className={\n                this.props.validationError === TagNameValidationError.NoErrors\n                  ? 'form-group'\n                  : 'form-group has-error'\n              }\n            >\n              <label className=\"col-sm-3 control-label\" htmlFor=\"tagNameInput\">\n                {this.props.i18nInputLabel}\n              </label>\n              <div className=\"col-sm-9\">\n                <input\n                  id=\"tagNameInput\"\n                  className=\"form-control\"\n                  type=\"text\"\n                  defaultValue={this.props.tagName}\n                  onChange={this.handleChange}\n                />\n                {this.props.validationError ===\n                  TagNameValidationError.NoErrors && (\n                  <span className=\"help-block\">\n                    &nbsp;{/* todo: pad out the area */}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NoName && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNoNameError}\n                  </span>\n                )}\n                {this.props.validationError ===\n                  TagNameValidationError.NameInUse && (\n                  <span className=\"help-block\">\n                    {this.props.i18nNameInUseError}\n                  </span>\n                )}\n              </div>\n            </div>\n          </form>\n        }\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={\n                this.state.tagName === '' ||\n                this.props.validationError !== TagNameValidationError.NoErrors\n              }\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        onHide={this.props.onHide}\n        title={this.props.i18nTitle}\n      />\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListProps {\n  children: any;\n}\n\nexport class CiCdList extends React.Component<ICiCdListProps> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Button, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListEmptyState {\n  onAddNew: () => void;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nAddNewButtonText: string;\n}\n\nexport class CiCdListEmptyState extends React.Component<ICiCdListEmptyState> {\n  public render() {\n    return (\n      <EmptyState>\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <Button\n            bsStyle=\"primary\"\n            bsSize=\"large\"\n            onClick={this.props.onAddNew}\n          >\n            {this.props.i18nAddNewButtonText}\n          </Button>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ICiCdListItemProps {\n  onEditClicked: (name: string) => void;\n  onRemoveClicked: (name: string) => void;\n  i18nEditButtonText: string;\n  i18nRemoveButtonText: string;\n  /**\n   * Text string for the number of integrations using this tag\n   */\n  i18nUsesText: string;\n  /**\n   * Environment name\n   */\n  name: string;\n}\n\nexport class CiCdListItem extends React.Component<ICiCdListItemProps> {\n  constructor(props: ICiCdListItemProps) {\n    super(props);\n    this.handleEditClicked = this.handleEditClicked.bind(this);\n    this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n  }\n  public handleEditClicked() {\n    this.props.onEditClicked(this.props.name);\n  }\n  public handleRemoveClicked() {\n    this.props.onRemoveClicked(this.props.name);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.props.i18nUsesText}\n        additionalInfo={[]}\n        actions={\n          <div>\n            <Button onClick={this.handleEditClicked}>\n              {this.props.i18nEditButtonText}\n            </Button>\n            <Button onClick={this.handleRemoveClicked}>\n              {this.props.i18nRemoveButtonText}\n            </Button>\n          </div>\n        }\n      />\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface ICiCdListViewProps extends IListViewToolbarProps {\n  i18nAddNewButtonText: string;\n  onAddNew: () => void;\n}\n\nexport class CiCdListView extends React.Component<ICiCdListViewProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            {this.props.resultsCount !== 0 && (\n              <Button className=\"btn btn-primary\" onClick={this.props.onAddNew}>\n                {this.props.i18nAddNewButtonText}\n              </Button>\n            )}\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IListViewToolbarProps,\n  SimplePageHeader,\n} from '../../Shared';\nimport { CiCdEditDialog } from './CiCdEditDialog';\nimport { CiCdListView } from './CiCdListView';\nimport { TagNameValidationError } from './CiCdUIModels';\n\nexport interface ICiCdManagePageUIChildrenProps {\n  openAddDialog: () => void;\n  openEditDialog: (name: string) => void;\n  openRemoveDialog: (name: string) => void;\n}\n\nexport interface ICiCdManagePageUIProps extends IListViewToolbarProps {\n  i18nAddTagDialogTitle: string;\n  i18nAddTagDialogDescription: string;\n  i18nEditTagDialogTitle: string;\n  i18nEditTagDialogDescription: string;\n  i18nAddNewButtonText: string;\n  i18nTagInputLabel: string;\n  i18nSaveButtonText: string;\n  i18nCancelButtonText: string;\n  i18nConfirmCancelButtonText: string;\n  i18nConfirmRemoveButtonText: string;\n  i18nRemoveConfirmationMessage: (name: string) => string;\n  i18nRemoveConfirmationTitle: string;\n  i18nRemoveConfirmationDetailMessage: string;\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoNameError: string;\n  i18nNameInUseError: string;\n  nameValidationError: TagNameValidationError;\n  onValidateItem: (name: string) => void;\n  onEditItem: (oldName: string, newName: string) => void;\n  onAddItem: (name: string) => void;\n  onRemoveItem: (name: string) => void;\n  children: (props: ICiCdManagePageUIChildrenProps) => any;\n}\n\nexport interface ICiCdManagePageUIState {\n  showAddDialog: boolean;\n  showEditDialog: boolean;\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n}\n\nexport class CiCdManagePageUI extends React.Component<\n  ICiCdManagePageUIProps,\n  ICiCdManagePageUIState\n> {\n  public constructor(props: ICiCdManagePageUIProps) {\n    super(props);\n    this.state = {\n      showAddDialog: false,\n      showEditDialog: false,\n      showRemoveDialog: false,\n    };\n    this.openAddDialog = this.openAddDialog.bind(this);\n    this.closeAddDialog = this.closeAddDialog.bind(this);\n    this.openEditDialog = this.openEditDialog.bind(this);\n    this.closeEditDialog = this.closeEditDialog.bind(this);\n    this.openRemoveDialog = this.openRemoveDialog.bind(this);\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public handleSave(name: string) {\n    if (this.state.showEditDialog) {\n      this.closeEditDialog();\n      this.props.onEditItem(this.state.currentItemName!, name);\n    }\n    if (this.state.showAddDialog) {\n      this.closeAddDialog();\n      this.props.onAddItem(name);\n    }\n    if (this.state.showRemoveDialog) {\n      this.closeRemoveDialog();\n      this.props.onRemoveItem(name);\n    }\n  }\n  public handleRemoveConfirm() {\n    this.handleSave(this.state.currentItemName!);\n  }\n  public openRemoveDialog(name: string) {\n    this.setState({ currentItemName: name, showRemoveDialog: true });\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public openAddDialog() {\n    this.setState({ showAddDialog: true });\n  }\n  public closeAddDialog() {\n    this.setState({ showAddDialog: false });\n  }\n  public openEditDialog(name: string) {\n    this.setState({ currentItemName: name, showEditDialog: true });\n  }\n  public closeEditDialog() {\n    this.setState({ showEditDialog: false });\n  }\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"pf-u-my-md\"\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        {this.state.showAddDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nAddTagDialogTitle}\n            i18nDescription={this.props.i18nAddTagDialogDescription}\n            tagName={''}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeAddDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showEditDialog && (\n          <CiCdEditDialog\n            i18nTitle={this.props.i18nEditTagDialogTitle}\n            i18nDescription={this.props.i18nEditTagDialogDescription}\n            tagName={this.state.currentItemName!}\n            i18nInputLabel={this.props.i18nTagInputLabel}\n            i18nSaveButtonText={this.props.i18nSaveButtonText}\n            i18nCancelButtonText={this.props.i18nCancelButtonText}\n            i18nNoNameError={this.props.i18nNoNameError}\n            i18nNameInUseError={this.props.i18nNameInUseError}\n            validationError={this.props.nameValidationError}\n            onHide={this.closeEditDialog}\n            onSave={this.handleSave}\n            onValidate={this.props.onValidateItem}\n          />\n        )}\n        {this.state.showRemoveDialog && (\n          <ConfirmationDialog\n            buttonStyle={ConfirmationButtonStyle.NORMAL}\n            icon={ConfirmationIconType.DANGER}\n            i18nCancelButtonText={this.props.i18nConfirmCancelButtonText}\n            i18nConfirmButtonText={this.props.i18nConfirmRemoveButtonText}\n            i18nConfirmationMessage={this.props.i18nRemoveConfirmationMessage(\n              this.state.currentItemName!\n            )}\n            i18nTitle={this.props.i18nRemoveConfirmationTitle}\n            i18nDetailsMessage={this.props.i18nRemoveConfirmationDetailMessage}\n            showDialog={this.state.showRemoveDialog}\n            onCancel={this.closeRemoveDialog}\n            onConfirm={this.handleRemoveConfirm}\n          />\n        )}\n        <CiCdListView\n          activeFilters={this.props.activeFilters}\n          currentFilterType={this.props.currentFilterType}\n          currentSortType={this.props.currentSortType}\n          currentValue={this.props.currentValue}\n          filterTypes={this.props.filterTypes}\n          isSortAscending={this.props.isSortAscending}\n          resultsCount={this.props.resultsCount}\n          sortTypes={this.props.sortTypes}\n          onUpdateCurrentValue={this.props.onUpdateCurrentValue}\n          onValueKeyPress={this.props.onValueKeyPress}\n          onFilterAdded={this.props.onFilterAdded}\n          onSelectFilterType={this.props.onSelectFilterType}\n          onFilterValueSelected={this.props.onFilterValueSelected}\n          onRemoveFilter={this.props.onRemoveFilter}\n          onClearFilters={this.props.onClearFilters}\n          onToggleCurrentSortDirection={this.props.onToggleCurrentSortDirection}\n          onUpdateCurrentSortType={this.props.onUpdateCurrentSortType}\n          i18nResultsCount={this.props.i18nResultsCount}\n          i18nAddNewButtonText={this.props.i18nAddNewButtonText}\n          onAddNew={this.openAddDialog}\n        >\n          {this.props.children({\n            openAddDialog: this.openAddDialog,\n            openEditDialog: this.openEditDialog,\n            openRemoveDialog: this.openRemoveDialog,\n          })}\n        </CiCdListView>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={68}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 68,\n      width: '100%',\n    }}\n  >\n    <rect\n      x=\"15\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n  </ContentLoader>\n);\n\nexport class CiCdListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"environments-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Button } from 'patternfly-react';\nimport * as React from 'react';\nimport { Dialog } from '../../Shared';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\n\nexport interface ITagIntegrationDialogChildrenProps {\n  handleChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n}\n\nexport interface ITagIntegrationDialogProps {\n  i18nTitle: string;\n  i18nCancelButtonText: string;\n  i18nSaveButtonText: string;\n  onHide: () => void;\n  onSave: (items: ITagIntegrationEntry[]) => void;\n  children: (props: ITagIntegrationDialogChildrenProps) => any;\n}\nexport interface ITagIntegrationDialogState {\n  disableSave: boolean;\n}\n\nexport class TagIntegrationDialog extends React.Component<\n  ITagIntegrationDialogProps,\n  ITagIntegrationDialogState\n> {\n  private itemsDraft: ITagIntegrationEntry[] | undefined;\n  constructor(props: ITagIntegrationDialogProps) {\n    super(props);\n    this.state = {\n      disableSave: true,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) {\n    const disableSave = initialItems\n      .map(\n        (item, index) =>\n          item.name === items[index].name &&\n          item.selected === items[index].selected\n      )\n      .reduce((acc, current) => acc && current, true);\n    this.itemsDraft = items;\n    this.setState({ disableSave });\n  }\n  public handleClick() {\n    this.props.onSave(this.itemsDraft!);\n  }\n  public render() {\n    return (\n      <Dialog\n        body={this.props.children({\n          handleChange: this.handleChange,\n        })}\n        footer={\n          <>\n            <Button onClick={this.props.onHide}>\n              {this.props.i18nCancelButtonText}\n            </Button>\n            <Button\n              bsStyle={'primary'}\n              onClick={this.handleClick}\n              disabled={this.state.disableSave}\n            >\n              {this.props.i18nSaveButtonText}\n            </Button>\n          </>\n        }\n        title={this.props.i18nTitle}\n        onHide={this.props.onHide}\n      />\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITagIntegrationListItemProps {\n  selected: boolean;\n  name: string;\n  onChange: (name: string, selected: boolean) => void;\n}\n\nexport class TagIntegrationListItem extends React.Component<\n  ITagIntegrationListItemProps\n> {\n  constructor(props: ITagIntegrationListItemProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.onChange(this.props.name, event.target.checked);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleChange}\n          />\n        }\n        heading={this.props.name}\n        description={''}\n        additionalInfo={[]}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport { EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\n\nexport interface ITagIntegrationDialogEmptyStateProps {\n  href: H.LocationDescriptor;\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nGoToManageCiCdButtonText: string;\n}\n\nexport class TagIntegrationDialogEmptyState extends React.Component<\n  ITagIntegrationDialogEmptyStateProps\n> {\n  public render() {\n    return (\n      <EmptyState\n        style={\n          {\n            background: 'inherit',\n            border: 'none',\n          } /* todo component specific override */\n        }\n      >\n        <EmptyState.Icon />\n        <EmptyState.Title>{this.props.i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{this.props.i18nInfo}</EmptyState.Info>\n        <EmptyState.Action>\n          <ButtonLink as=\"primary\" size=\"lg\" href={this.props.href}>\n            {this.props.i18nGoToManageCiCdButtonText}\n          </ButtonLink>\n        </EmptyState.Action>\n      </EmptyState>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { CiCdList } from './CiCdList';\nimport { ITagIntegrationEntry } from './CiCdUIModels';\nimport { TagIntegrationDialogEmptyState } from './TagIntegrationDialogEmptyState';\nimport { TagIntegrationListItem } from './TagIntegrationListItem';\n\nexport interface ITagIntegrationDialogBodyProps {\n  manageCiCdHref: H.LocationDescriptor;\n  initialItems: ITagIntegrationEntry[];\n  onChange: (\n    items: ITagIntegrationEntry[],\n    initialItems: ITagIntegrationEntry[]\n  ) => void;\n  i18nEmptyStateTitle: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateButtonText: string;\n}\n\nexport interface ITagIntegrationDialogBodyState {\n  items: ITagIntegrationEntry[];\n}\n\nexport class TagIntegrationDialogBody extends React.Component<\n  ITagIntegrationDialogBodyProps,\n  ITagIntegrationDialogBodyState\n> {\n  constructor(props: ITagIntegrationDialogBodyProps) {\n    super(props);\n    this.state = {\n      items: this.props.initialItems,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  public handleChange(name: string, selected: boolean) {\n    const items = this.props.initialItems.map(item =>\n      item.name === name ? { name, selected } : item\n    );\n    this.props.onChange(items, this.props.initialItems);\n  }\n  public render() {\n    return (\n      <>\n        {this.state.items.length > 0 && (\n          <>\n            <CiCdList>\n              {this.state.items.map((item, index) => (\n                <TagIntegrationListItem\n                  key={index}\n                  name={item.name}\n                  selected={item.selected}\n                  onChange={this.handleChange}\n                />\n              ))}\n            </CiCdList>\n          </>\n        )}\n        {this.state.items.length === 0 && (\n          <TagIntegrationDialogEmptyState\n            href={this.props.manageCiCdHref}\n            i18nTitle={this.props.i18nEmptyStateTitle}\n            i18nInfo={this.props.i18nEmptyStateInfo}\n            i18nGoToManageCiCdButtonText={this.props.i18nEmptyStateButtonText}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { DndFileChooser, SimplePageHeader } from '../../Shared';\n\nexport interface IImportPageUIProps {\n  i18nPageTitle: string;\n  i18nPageDescription: string;\n  i18nNoFileSelectedMessage: string;\n  i18nSelectedFileLabel: string;\n  i18nInstructions: string;\n  i18nUploadFailedMessages?: string[];\n  i18nUploadSuccessMessages?: string[];\n  i18nHelpMessage: string;\n  onUploadRejected(fileName: string): string;\n  onUploadAccepted(file: File[]): void;\n}\n\nexport class ImportPageUI extends React.Component<IImportPageUIProps> {\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          i18nTitle={this.props.i18nPageTitle}\n          i18nDescription={this.props.i18nPageDescription}\n        />\n        <DndFileChooser\n          allowMultiple={true}\n          fileExtensions={'.zip'}\n          onUploadRejected={this.props.onUploadRejected}\n          disableDropzone={false}\n          onUploadAccepted={this.props.onUploadAccepted}\n          i18nNoFileSelectedMessage={this.props.i18nNoFileSelectedMessage}\n          i18nSelectedFileLabel={this.props.i18nSelectedFileLabel}\n          i18nInstructions={this.props.i18nInstructions}\n          i18nUploadFailedMessages={this.props.i18nUploadFailedMessages}\n          i18nUploadSuccessMessages={this.props.i18nUploadSuccessMessages}\n          i18nHelpMessage={this.props.i18nHelpMessage}\n        />\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport { DropdownKebab } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationAction {\n  href?: H.LocationDescriptor;\n  onClick?: (e: React.MouseEvent<any>) => any;\n  label: string | JSX.Element;\n}\n\nexport interface IIntegrationActionsProps {\n  integrationId: string;\n  actions: IIntegrationAction[];\n  detailsHref?: H.LocationDescriptor;\n}\n\nexport class IntegrationActions extends React.Component<\n  IIntegrationActionsProps\n> {\n  public render() {\n    return (\n      <>\n        <ButtonLink href={this.props.detailsHref} as={'primary'}>\n          View\n        </ButtonLink>\n        <DropdownKebab\n          id={`integration-${this.props.integrationId}-action-menu`}\n          pullRight={true}\n        >\n          {this.props.actions.map((a, idx) => (\n            <li role={'presentation'} key={idx}>\n              {a.href ? (\n                <Link\n                  to={a.href}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </Link>\n              ) : (\n                <a\n                  href={'javascript:void(0)'}\n                  onClick={a.onClick}\n                  role={'menuitem'}\n                  tabIndex={idx + 1}\n                >\n                  {a.label}\n                </a>\n              )}\n            </li>\n          ))}\n        </DropdownKebab>\n      </>\n    );\n  }\n}\n","import { Button, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationDetailActivityProps {\n  i18nBtnRefresh: string;\n  i18nLastRefresh: string;\n  i18nViewLogOpenShift: string;\n  linkToOpenShiftLog: string;\n}\n\nexport class IntegrationDetailActivity extends React.Component<\n  IIntegrationDetailActivityProps\n> {\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"pull-right\">\n            <Link to={this.props.linkToOpenShiftLog}>\n              {this.props.i18nViewLogOpenShift}\n            </Link>\n            {'  |  '}\n            {this.props.i18nLastRefresh}\n            {'  '}\n            <Button>{this.props.i18nBtnRefresh}</Button>\n          </div>\n        </Container>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Col, Icon, ListView, Row, Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemProps {\n  date: string;\n  errorCount: number;\n  i18nErrorsFound: string;\n  i18nHeaderStep?: string;\n  i18nHeaderTime?: string;\n  i18nHeaderDuration?: string;\n  i18nHeaderDurationUnit?: string;\n  i18nHeaderStatus?: string;\n  i18nHeaderOutput?: string;\n  i18nNoErrors: string;\n  i18nNoOutput?: string;\n  i18nNoSteps: string;\n  i18nVersion: string;\n  steps: JSX.Element[];\n  time: string;\n  version?: number;\n}\n\nexport class IntegrationDetailActivityItem extends React.Component<\n  IIntegrationDetailActivityItemProps\n> {\n  public render() {\n    const headerFormat = (value: string) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n\n    const cellFormat = (value: string) => <Table.Cell>{value}</Table.Cell>;\n\n    return (\n      <ListView.Item\n        key={1}\n        actions={\n          <>\n            {this.props.errorCount > 0 ? (\n              <span>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {'  '}\n                {this.props.i18nErrorsFound}\n              </span>\n            ) : (\n              <span>\n                <Icon type=\"pf\" name=\"ok\" />\n                {'  '}\n                {this.props.i18nNoErrors}\n              </span>\n            )}\n          </>\n        }\n        heading={this.props.date}\n        description={this.props.time}\n        additionalInfo={[\n          <React.Fragment key={'not-really-needed'}>\n            {this.props.i18nVersion}\n            {'  '}\n            {this.props.version}\n          </React.Fragment>,\n        ]}\n      >\n        <Row>\n          {this.props.steps ? (\n            <Col sm={11}>\n              <Table.PfProvider\n                striped={true}\n                bordered={true}\n                hover={true}\n                columns={[\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'step',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Step',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'time',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Time',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'duration',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Duration',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'status',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Status',\n                    },\n                  },\n                  {\n                    cell: {\n                      formatters: [cellFormat],\n                      property: 'output',\n                    },\n                    header: {\n                      formatters: [headerFormat],\n                      label: 'Output',\n                    },\n                  },\n                ]}\n              >\n                <Table.Header />\n                {this.props.steps}\n              </Table.PfProvider>\n            </Col>\n          ) : (\n            <Col sm={11}>\n              <span>{this.props.i18nNoSteps}</span>\n            </Col>\n          )}\n        </Row>\n      </ListView.Item>\n    );\n  }\n}\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailActivityItemStepsProps {\n  name?: string;\n  time?: string;\n  duration?: number;\n  status?: string;\n  output?: string;\n}\n\nexport class IntegrationDetailActivityItemSteps extends React.Component<\n  IIntegrationDetailActivityItemStepsProps\n> {\n  public render() {\n    return (\n      <>\n        <Table.Body\n          rows={[\n            {\n              duration: this.props.duration,\n              output: this.props.output,\n              status: this.props.status,\n              step: this.props.name,\n              time: this.props.time,\n            },\n          ]}\n          rowKey={this.props.name}\n        />\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailDescriptionProps {\n  description?: string;\n  i18nNoDescription?: string;\n}\n\nexport class IntegrationDetailDescription extends React.PureComponent<\n  IIntegrationDetailDescriptionProps\n> {\n  public render() {\n    return (\n      <div>\n        <Text>\n          {this.props.description\n            ? this.props.description\n            : this.props.i18nNoDescription}\n          &nbsp;\n          <Icon name={'pencil'} />\n        </Text>\n      </div>\n    );\n  }\n}\n","import { Title } from '@patternfly/react-core';\nimport { Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailEditableNameProps {\n  name?: string;\n}\n\nexport class IntegrationDetailEditableName extends React.PureComponent<\n  IIntegrationDetailEditableNameProps\n> {\n  public render() {\n    return (\n      <>\n        {this.props.name ? (\n          <>\n            <Title size=\"lg\">{this.props.name}&nbsp;</Title>\n            <Icon name={'pencil'} />\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n","import { Grid, ListView, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport { IIntegrationAction } from './IntegrationActions';\nimport './IntegrationDetailHistoryListView.css';\n\nexport interface IIntegrationDetailHistoryListViewProps {\n  actions?: IIntegrationAction[];\n  hasHistory: boolean;\n  isDraft: boolean;\n  i18nTextDraft?: string;\n  i18nTextHistory?: string;\n}\n\nexport class IntegrationDetailHistoryListView extends React.Component<\n  IIntegrationDetailHistoryListViewProps\n> {\n  public render() {\n    return (\n      <Grid\n        fluid={true}\n        key={1}\n        className=\"integration-detail-history-list-view\"\n      >\n        {this.props.isDraft ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {this.props.i18nTextDraft}:\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              <ListViewItem\n                key={1}\n                heading={this.props.i18nTextDraft}\n                actions={\n                  this.props.actions\n                    ? this.props.actions.map((a, idx) => (\n                        <ButtonLink key={idx} to={a.href} onClick={a.onClick}>\n                          {a.label}\n                        </ButtonLink>\n                      ))\n                    : null\n                }\n                stacked={false}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n\n        {this.props.children && this.props.hasHistory ? (\n          <Grid.Row className=\"show-grid\">\n            <Grid.Col\n              xs={2}\n              md={2}\n              className=\"integration-detail-history-list-view__description\"\n            >\n              {<span>{this.props.i18nTextHistory}:</span>}\n            </Grid.Col>\n            <Grid.Col xs={10} md={10}>\n              {this.props.children ? (\n                <ListView>{this.props.children}</ListView>\n              ) : null}\n            </Grid.Col>\n          </Grid.Row>\n        ) : null}\n      </Grid>\n    );\n  }\n}\n","import { ListView, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailHistoryListViewItemProps {\n  /**\n   * If the integration is a draft, it renders a set of actionable buttons,\n   * labeled 'Edit' and 'Publish'\n   * If the integration is not a draft, it renders a dropdown actions menu\n   * based on the IntegrationActions component\n   */\n  actions: any;\n  /**\n   * The current state of the integration.\n   */\n  currentState: string;\n  /**\n   * The last date the integration was updated.\n   */\n  updatedAt?: number;\n  /**\n   * The version of the integration deployment.\n   */\n  version?: number;\n  /**\n   * The localized text for displaying the last published date.\n   */\n  i18nTextLastPublished?: string;\n  /**\n   * The localized text used to display the version of the integration.\n   */\n  i18nTextVersion?: string;\n}\n\nexport class IntegrationDetailHistoryListViewItem extends React.Component<\n  IIntegrationDetailHistoryListViewItemProps\n> {\n  public render() {\n    function getIntegrationState(currentState: string) {\n      const states = {\n        Error: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              size={'sm'}\n              className=\"pficon pficon-error-circle-o\"\n            />\n          );\n        },\n        Pending: null,\n        Published: () => {\n          return (\n            <ListView.Icon\n              type=\"pf\"\n              name=\"ok\"\n              size={'sm'}\n              className=\"list-view-pf-icon-success\"\n            />\n          );\n        },\n        Unpublished: null,\n      };\n\n      return states[currentState] || null;\n    }\n\n    return (\n      <ListViewItem\n        actions={this.props.actions}\n        heading={\n          <span>\n            {<span>{this.props.i18nTextVersion}:</span>} {this.props.version}\n          </span>\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.i18nTextLastPublished}\n            {this.props.updatedAt}\n          </ListViewInfoItem>,\n        ]}\n        leftContent={getIntegrationState(this.props.currentState!)}\n        stacked={false}\n      />\n    );\n  }\n}\n","import * as React from 'react';\n\nimport { IntegrationDetailEditableName } from './IntegrationDetailEditableName';\n\nimport './IntegrationDetailInfo.css';\n\nexport interface IIntegrationDetailInfoProps {\n  name?: string;\n  version?: number;\n}\n\nexport class IntegrationDetailInfo extends React.PureComponent<\n  IIntegrationDetailInfoProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-detail-info\">\n        <IntegrationDetailEditableName name={this.props.name} />\n        {this.props.version ? (\n          <>\n            <span className=\"pficon pficon-ok\" />\n            &nbsp;Published version {this.props.version}\n          </>\n        ) : (\n          'Stopped'\n        )}\n      </div>\n    );\n  }\n}\n","import {\n  AggregateStatusCount,\n  AggregateStatusNotification,\n  AggregateStatusNotifications,\n  Card,\n  CardBody,\n  CardGrid,\n  CardTitle,\n  Col,\n  Icon,\n  Row,\n} from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailMetricsProps {\n  errorMessagesCount?: number;\n  okMessagesCount?: number;\n  totalMessages?: number;\n  uptimeStart: number;\n}\n\nexport class IntegrationDetailMetrics extends React.Component<\n  IIntegrationDetailMetricsProps\n> {\n  public render() {\n    const startAsDate = new Date(this.props.uptimeStart);\n    const startAsHuman = startAsDate.toLocaleString();\n\n    return (\n      <CardGrid>\n        <Row style={{ marginBottom: '20px', marginTop: '20px' }}>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon type=\"pf\" name=\"error-circle-o\" />\n                {this.props.errorMessagesCount}\n              </CardTitle>\n              <CardBody>Total Errors</CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <Icon name=\"shield\" />\n                Last Processed\n              </CardTitle>\n              <CardBody>\n                <h2>n/a</h2>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <CardTitle>\n                <AggregateStatusCount>\n                  {this.props.totalMessages}&nbsp;\n                </AggregateStatusCount>\n                Total Messages\n              </CardTitle>\n              <CardBody>\n                <AggregateStatusNotifications>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"ok\" />\n                    {this.props.okMessagesCount}&nbsp;\n                  </AggregateStatusNotification>\n                  <AggregateStatusNotification>\n                    <Icon type=\"pf\" name=\"error-circle-o\" />\n                    {this.props.errorMessagesCount}\n                  </AggregateStatusNotification>\n                </AggregateStatusNotifications>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs={6} sm={3} md={3}>\n            <Card accented={true} aggregated={true} matchHeight={true}>\n              <Card.Title className={'text-left'}>\n                <small className={'pull-right'}>Since {startAsHuman}</small>\n                <div>Uptime</div>\n              </Card.Title>\n              <Card.Body>\n                <></>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </CardGrid>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorActionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  actions: any;\n}\n\nexport class IntegrationEditorActionsListItem extends React.Component<\n  IIntegrationEditorActionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseActionProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of actions, to be used in the integration\n * editor.\n * @see [i18nTitle]{@link IIntegrationEditorChooseActionProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseActionProps#i18nSubtitle}\n */\nexport class IntegrationEditorChooseAction extends React.Component<\n  IIntegrationEditorChooseActionProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorChooseConnection {\n  /**\n   * The main title of the content, shown before the connections.\n   */\n  i18nTitle: string;\n  /**\n   * The description of the content, shown before the connections.\n   */\n  i18nSubtitle: string;\n}\n\n/**\n * A component to render a list of connections, to be used in the integration\n * editor.\n *\n * @see [i18nTitle]{@link IIntegrationEditorChooseConnection#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorChooseConnection#i18nSubtitle}\n */\nexport class IntegrationEditorChooseConnection extends React.Component<\n  IIntegrationEditorChooseConnection\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"xl\">{this.props.i18nTitle}</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <ListView>{this.props.children}</ListView>\n        </Container>\n      </>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorConnectionsListItemProps {\n  integrationName: string;\n  integrationDescription: string;\n  icon: any;\n  actions: any;\n}\n\nexport class IntegrationEditorConnectionsListItem extends React.Component<\n  IIntegrationEditorConnectionsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={this.props.integrationDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n      />\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorFormProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized form title.\n   */\n  i18nFormTitle?: string;\n  /**\n   * The callback fired when submitting the form.\n   * @param e\n   */\n  handleSubmit: (e?: any) => void;\n}\n\n/**\n * A component to render a save form, to be used in the integration\n * editor. This does *not* build the form itself, form's field should be passed\n * as the `children` value.\n * @see [i18nTitle]{@link IIntegrationEditorFormProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorFormProps#i18nSubtitle}\n */\nexport class IntegrationEditorForm extends React.Component<\n  IIntegrationEditorFormProps\n> {\n  public render() {\n    return (\n      <>\n        <Container className=\"pf-u-my-md\">\n          <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n          <Text>{this.props.i18nSubtitle}</Text>\n        </Container>\n        <Container>\n          <form\n            className=\"form-horizontal required-pf\"\n            role=\"form\"\n            onSubmit={this.props.handleSubmit}\n          >\n            <div className=\"row row-cards-pf\">\n              <div className=\"card-pf\">\n                {this.props.i18nFormTitle && (\n                  <div className=\"card-pf-title\">\n                    {this.props.i18nFormTitle}\n                  </div>\n                )}\n                <div className=\"card-pf-body\">\n                  <Container>{this.props.children}</Container>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Container>\n      </>\n    );\n  }\n}\n","import { Text, Title } from '@patternfly/react-core';\nimport * as React from 'react';\nimport { Container } from '../Layout';\n\nexport interface IIntegrationEditorNothingToConfigureProps {\n  /**\n   * The internationalized title.\n   */\n  i18nTitle: string;\n  /**\n   * The internationalized subtitle.\n   */\n  i18nSubtitle: string;\n  /**\n   * The internationalized alert to display.\n   */\n  i18nAlert: string;\n}\n\n/**\n * A component to render an alert for unconfigurable actions.\n * @see [i18nTitle]{@link IIntegrationEditorNothingToConfigureProps#i18nTitle}\n * @see [i18nSubtitle]{@link IIntegrationEditorNothingToConfigureProps#i18nSubtitle}\n * @see [i18nAlert]{@link IIntegrationEditorNothingToConfigureProps#i18nAlert}\n */\nexport class IntegrationEditorNothingToConfigure extends React.Component<\n  IIntegrationEditorNothingToConfigureProps\n> {\n  public render() {\n    return (\n      <Container>\n        <Title size=\"lg\">{this.props.i18nTitle} - Choose Action</Title>\n        <Text>{this.props.i18nSubtitle}</Text>\n        <Container>\n          <div className=\"row row-cards-pf\">\n            <div className=\"card-pf\">\n              <div className=\"card-pf-body\">\n                <Container>\n                  <Text className=\"alert alert-info\">\n                    <span className=\"pficon pficon-info\" />\n                    {this.props.i18nAlert}\n                  </Text>\n                </Container>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationEditorStepsList extends React.Component<{}> {\n  public render() {\n    return (\n      <ListView style={{ background: 'transparent' }}>\n        {this.props.children}\n      </ListView>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorStepsListItemProps {\n  stepName: string;\n  stepDescription: string;\n  actions: any;\n  icon: any;\n}\n\nexport class IntegrationEditorStepsListItem extends React.Component<\n  IIntegrationEditorStepsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.stepName}\n        description={this.props.stepDescription}\n        leftContent={this.props.icon}\n        stacked={true}\n        hideCloseIcon={true}\n      />\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport './IntegrationFlowAddStep.css';\n\nexport interface IIntegrationFlowAddStepProps {\n  showDetails: boolean;\n  addStepHref?: H.LocationDescriptor;\n  i18nAddStep?: string;\n}\n\nexport interface IIntegrationFlowAddStepState {\n  showTooltip: boolean;\n}\n\nexport class IntegrationFlowAddStep extends React.Component<\n  IIntegrationFlowAddStepProps,\n  IIntegrationFlowAddStepState\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public state = {\n    showTooltip: false,\n  };\n\n  public containerRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IIntegrationFlowAddStepProps) {\n    super(props);\n    this.showTooltip = this.showTooltip.bind(this);\n    this.hideTooltip = this.hideTooltip.bind(this);\n    this.toggleTooltip = this.toggleTooltip.bind(this);\n  }\n\n  public showTooltip() {\n    this.setState({\n      showTooltip: true,\n    });\n  }\n\n  public hideTooltip() {\n    this.setState({\n      showTooltip: false,\n    });\n  }\n\n  public toggleTooltip() {\n    this.setState({\n      showTooltip: !this.state.showTooltip,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={'integration-flow-add-step'}\n        onMouseEnter={this.showTooltip}\n        onMouseLeave={this.hideTooltip}\n        onTouchStart={this.toggleTooltip}\n      >\n        {this.props.addStepHref && (\n          <div\n            className={'integration-flow-add-step__iconWrapper'}\n            ref={this.containerRef}\n          >\n            <Link to={this.props.addStepHref}>\n              <div className={'integration-flow-add-step__icon'}>\n                <i\n                  className=\"fa fa-plus-square\"\n                  title={this.props.i18nAddStep}\n                />\n              </div>\n            </Link>\n          </div>\n        )}\n        {this.props.showDetails && this.props.children}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport { OverlayTrigger, Tooltip } from 'patternfly-react';\nimport * as React from 'react';\nimport './IntegrationFlowStep.css';\n\nexport interface IIntegrationFlowStepProps {\n  /**\n   * The icon to show. Can be anything but must fit a circle of 55px of diameter.\n   */\n  icon: any;\n  /**\n   * Set to true to render the extended details for the step. Usually set to match\n   * the expanded state of the parent container.\n   */\n  showDetails: boolean;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  i18nTooltip: string;\n  /**\n   * Set to true to set this step as active. This will highlight the icon circle.\n   */\n  active?: boolean;\n}\n\nexport class IntegrationFlowStep extends React.Component<\n  IIntegrationFlowStepProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    const tooltip = (\n      <Tooltip id={'integration-flow-step'}>{this.props.i18nTooltip}</Tooltip>\n    );\n    const icon = (\n      <div className={'integration-flow-step__icon'}>{this.props.icon}</div>\n    );\n    return (\n      <div\n        className={classnames('integration-flow-step', {\n          'is-active': this.props.active,\n          'is-expanded': this.props.showDetails,\n        })}\n      >\n        {this.props.showDetails ? (\n          <>\n            <div className={'integration-flow-step__iconWrapper'}>{icon}</div>\n            {this.props.children}\n          </>\n        ) : (\n          <div className={'integration-flow-step__iconWrapper'}>\n            <OverlayTrigger\n              overlay={tooltip}\n              placement=\"right\"\n              trigger={['hover', 'focus']}\n              rootClose={false}\n            >\n              {icon}\n            </OverlayTrigger>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport './IntegrationFlowStepDetails.css';\n\nconst Title: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__title'}>{children}</div>\n);\n\nconst GenericDescription: React.FunctionComponent = ({ children }) => (\n  <div className={'integration-flow-step-details__body'}>{children}</div>\n);\n\ninterface IStepOverviewProps {\n  nameI18nLabel: string;\n  name: string;\n  actionI18nLabel: string;\n  action: string;\n  dataTypeI18nLabel: string;\n  dataType: string;\n}\n\nconst StepOverview: React.FunctionComponent<IStepOverviewProps> = ({\n  nameI18nLabel,\n  name,\n  actionI18nLabel,\n  action,\n  dataTypeI18nLabel,\n  dataType,\n}) => (\n  <div className={'integration-flow-step-details__body'}>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{nameI18nLabel}</dt>\n      <dd>{name}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{actionI18nLabel}</dt>\n      <dd>{action}</dd>\n    </dl>\n    <dl className={'integration-flow-step-details__overview'}>\n      <dt>{dataTypeI18nLabel}</dt>\n      <dd>{dataType}</dd>\n    </dl>\n  </div>\n);\n\nexport interface IntegrationFlowStepDetailsChildrenProps {\n  Title: React.FunctionComponent;\n  GenericDescription: React.FunctionComponent;\n  StepOverview: React.FunctionComponent<IStepOverviewProps>;\n}\n\nexport interface IntegrationFlowStepDetailsProps {\n  active?: boolean;\n  children(props: IntegrationFlowStepDetailsChildrenProps): any;\n}\n\n/**\n * A render prop component that provides the right components than can be used\n * inside a step element of the integration editor sidebar.\n */\nexport class IntegrationFlowStepDetails extends React.Component<\n  IntegrationFlowStepDetailsProps\n> {\n  public static defaultProps = {\n    active: false,\n  };\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-flow-step-details', {\n          'is-active': this.props.active,\n        })}\n      >\n        {this.props.children({\n          GenericDescription,\n          StepOverview,\n          Title,\n        })}\n      </div>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepGenericProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The content of the extended information table.\n   */\n  description: string;\n}\n\n/**\n * A component to show an unconfigured (or being configured) step in the\n * sidebar of the integration editor.\n *\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [i18nTitle]{@link IIntegrationFlowStepGenericProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [description]{@link IIntegrationFlowStepGenericProps#description}\n * @see [href]{@link IIntegrationFlowStepProps#href}\n */\nexport const IntegrationFlowStepGeneric: React.FunctionComponent<\n  IIntegrationFlowStepGenericProps\n> = ({\n  icon,\n  active = false,\n  i18nTitle,\n  i18nTooltip,\n  showDetails,\n  description,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, GenericDescription }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <GenericDescription>{description}</GenericDescription>\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport './IntegrationIcon.css';\n\nexport interface IIntegrationIconProps {\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n}\nexport const IntegrationIcon: React.FunctionComponent<\n  IIntegrationIconProps\n> = ({ startConnectionIcon, finishConnectionIcon }) => (\n  <div className={'integration-icon'}>\n    <img src={startConnectionIcon} className={'integration-icon__icon'} />\n    <i className=\"fa fa-angle-right integration-icon__divider\" />\n    <img src={finishConnectionIcon} className={'integration-icon__icon'} />\n  </div>\n);\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ERROR,\n  IntegrationState,\n  PENDING,\n  PUBLISHED,\n  UNPUBLISHED,\n} from './models';\n\nexport interface IIntegrationStatusProps {\n  currentState?: IntegrationState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class IntegrationStatus extends React.Component<\n  IIntegrationStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === ERROR\n        ? 'danger'\n        : this.props.currentState === PUBLISHED ||\n          this.props.currentState === PENDING\n        ? 'primary'\n        : 'default';\n    let label = PENDING; // it's a parachute\n    switch (this.props.currentState) {\n      case PUBLISHED:\n        label = this.props.i18nPublished;\n        break;\n      case UNPUBLISHED:\n        label = this.props.i18nUnpublished;\n        break;\n      case ERROR:\n        label = this.props.i18nError;\n        break;\n    }\n    return <Label type={labelType}>{label}</Label>;\n  }\n}\n","// Integration states\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const PENDING = 'Pending';\nexport const ERROR = 'Error';\n\nexport type IntegrationState =\n  | 'Published'\n  | 'Unpublished'\n  | 'Pending'\n  | 'Error';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n\nexport interface IIntegrationDetailHistoryItem {\n  updatedAt: string;\n  version: number;\n}\n\nexport interface IIntegrationDetailHistory {\n  draft: boolean;\n  items: IIntegrationDetailHistoryItem[];\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../Shared/ProgressWithLink';\nimport { IntegrationState, PUBLISHED, UNPUBLISHED } from './models';\n\nimport './IntegrationStatusDetail.css';\n\nexport interface IIntegrationStatusDetailProps {\n  targetState: IntegrationState;\n  value?: string;\n  currentStep?: number;\n  totalSteps?: number;\n  logUrl?: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationStatusDetail extends React.Component<\n  IIntegrationStatusDetailProps\n> {\n  public render() {\n    let fallbackText = this.props.i18nProgressPending;\n    switch (this.props.targetState) {\n      case PUBLISHED:\n        fallbackText = this.props.i18nProgressStarting;\n        break;\n      case UNPUBLISHED:\n        fallbackText = this.props.i18nProgressStopping;\n        break;\n    }\n    return (\n      <div\n        data-testid=\"integration-status-detail\"\n        className={'integration-status-detail'}\n      >\n        {this.props.value && this.props.currentStep && this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.value}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {fallbackText}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Grid, Icon } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './IntegrationStepsHorizontalItem.css';\n\nexport interface IIntegrationStepsHorizontalItemProps {\n  /**\n   * The name of the connector used for the step.\n   */\n  name?: string;\n  /**\n   * The icon of the step.\n   */\n  icon?: string;\n  /**\n   * The boolean value that determines if the step\n   * is the first in the steps array.\n   */\n  isFirst?: boolean;\n}\n\nexport class IntegrationStepsHorizontalItem extends React.Component<\n  IIntegrationStepsHorizontalItemProps\n> {\n  public render() {\n    return (\n      <div className=\"integration-steps-horizontal-item\">\n        {this.props.isFirst === false ? (\n          <Grid.Col\n            sm={1}\n            md={1}\n            className=\"integration-steps-horizontal-item__arrow\"\n          >\n            <Icon name={'angle-right'} className=\"step-arrow\" />\n          </Grid.Col>\n        ) : null}\n        <Grid.Col\n          sm={1}\n          md={1}\n          className=\"integration-steps-horizontal-item__icon\"\n        >\n          <img src={this.props.icon} className=\"step-icon\" />\n          <p>{this.props.name}</p>\n        </Grid.Col>\n      </div>\n    );\n  }\n}\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationStepsHorizontalView extends React.Component {\n  public render() {\n    return (\n      <Grid fluid={true} xs={2}>\n        <Grid.Row className=\"show-grid\">{this.props.children}</Grid.Row>\n      </Grid>\n    );\n  }\n}\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\nimport './IntegrationVerticalFlow.css';\n\nexport interface IIntegrationVerticalFlowProps {\n  /**\n   * A render prop that receives the expanded state of the container.\n   * @see [props.expanded]{@link IIntegrationVerticalFlowState#expanded}\n   */\n  children(props: IIntegrationVerticalFlowState): any;\n}\n\nexport interface IIntegrationVerticalFlowState {\n  /**\n   * The container expanded state.\n   */\n  expanded: boolean;\n}\n\n/**\n * A component to render an expandable container meant to be used to show an\n * integration's steps.\n * @see [children]{@link IIntegrationVerticalFlowProps#children}\n */\nexport class IntegrationVerticalFlow extends React.Component<\n  IIntegrationVerticalFlowProps,\n  IIntegrationVerticalFlowState\n> {\n  public static defaultProps = {\n    disabled: false,\n  };\n\n  public state = {\n    expanded: localStorage.getItem('iec-vertical-flow-expanded') === 'y',\n  };\n\n  constructor(props: IIntegrationVerticalFlowProps) {\n    super(props);\n    this.toggleExpanded = this.toggleExpanded.bind(this);\n  }\n\n  public toggleExpanded(): void {\n    const expanded = !this.state.expanded;\n    localStorage.setItem('iec-vertical-flow-expanded', expanded ? 'y' : 'n');\n    this.setState({\n      expanded,\n    });\n  }\n\n  public render() {\n    return (\n      <div\n        className={classnames('integration-vertical-flow', {\n          'is-expanded': this.state.expanded,\n        })}\n      >\n        <div className=\"integration-vertical-flow__body\">\n          {this.props.children(this.state)}\n        </div>\n        <div className=\"integration-vertical-flow__expand\">\n          <ButtonLink onClick={this.toggleExpanded} />\n        </div>\n      </div>\n    );\n  }\n}\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class IntegrationsList extends React.Component<{}> {\n  public render() {\n    return <ListView>{this.props.children}</ListView>;\n  }\n}\n","import { Icon, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationIcon } from './IntegrationIcon';\nimport { IntegrationStatus } from './IntegrationStatus';\nimport { IntegrationStatusDetail } from './IntegrationStatusDetail';\nimport { IntegrationState } from './models';\n\nexport interface IIntegrationsListItemProps {\n  integrationName: string;\n  currentState: IntegrationState;\n  targetState: IntegrationState;\n  isConfigurationRequired: boolean;\n  monitoringValue?: string;\n  monitoringCurrentStep?: number;\n  monitoringTotalSteps?: number;\n  monitoringLogUrl?: string;\n  startConnectionIcon: string;\n  finishConnectionIcon: string;\n  actions: any;\n  i18nConfigurationRequired: string;\n  i18nError: string;\n  i18nPublished: string;\n  i18nProgressPending: string;\n  i18nProgressStarting: string;\n  i18nProgressStopping: string;\n  i18nUnpublished: string;\n  i18nLogUrlText: string;\n}\n\nexport class IntegrationsListItem extends React.Component<\n  IIntegrationsListItemProps\n> {\n  public render() {\n    return (\n      <ListView.Item\n        actions={this.props.actions}\n        heading={this.props.integrationName}\n        description={\n          this.props.isConfigurationRequired ? (\n            <>\n              <Icon type={'pf'} name={'warning-triangle-o'} />\n              {this.props.i18nConfigurationRequired}\n            </>\n          ) : (\n            ''\n          )\n        }\n        additionalInfo={[\n          <ListView.InfoItem key={1}>\n            {this.props.currentState === 'Pending' ? (\n              <IntegrationStatusDetail\n                targetState={this.props.targetState}\n                value={this.props.monitoringValue}\n                currentStep={this.props.monitoringCurrentStep}\n                totalSteps={this.props.monitoringTotalSteps}\n                logUrl={this.props.monitoringLogUrl}\n                i18nProgressPending={this.props.i18nProgressPending}\n                i18nProgressStarting={this.props.i18nProgressStarting}\n                i18nProgressStopping={this.props.i18nProgressStopping}\n                i18nLogUrlText={this.props.i18nLogUrlText}\n              />\n            ) : (\n              <IntegrationStatus\n                currentState={this.props.currentState}\n                i18nPublished={this.props.i18nPublished}\n                i18nUnpublished={this.props.i18nUnpublished}\n                i18nError={this.props.i18nError}\n              />\n            )}\n          </ListView.InfoItem>,\n        ]}\n        leftContent={\n          <IntegrationIcon\n            startConnectionIcon={this.props.startConnectionIcon}\n            finishConnectionIcon={this.props.finishConnectionIcon}\n          />\n        }\n        stacked={true}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nfunction getRandom(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nconst ItemSkeleton = () => (\n  <ContentLoader\n    height={80}\n    width={500}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={{\n      height: 80,\n      width: '100%',\n    }}\n  >\n    <circle cx=\"35\" cy=\"40\" r=\"35\" />\n    <circle cx=\"115\" cy=\"40\" r=\"35\" />\n    <rect\n      x=\"185\"\n      y=\"20\"\n      rx=\"5\"\n      ry=\"5\"\n      width={400 * getRandom(0.6, 1)}\n      height=\"18\"\n    />\n    <rect\n      x=\"185\"\n      y=\"55\"\n      rx=\"5\"\n      ry=\"5\"\n      width={200 * getRandom(0.6, 1)}\n      height=\"15\"\n    />\n  </ContentLoader>\n);\n\nexport class IntegrationsListSkeleton extends React.PureComponent {\n  public render() {\n    return (\n      <>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n        <div\n          className={'list-group-item'}\n          data-testid=\"integration-list-skeleton\"\n        >\n          <div>\n            <ItemSkeleton />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Text } from '@patternfly/react-core';\nimport { Card, Label } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './DvConnectionCard.css';\n\nexport enum ConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport interface IDvConnectionCardProps {\n  name: string;\n  description: string;\n  dvStatus: string;\n  icon: string;\n  selected: boolean;\n  onSelectionChanged: (connName: string, isSelected: boolean) => void;\n}\nexport interface IDvConnectionCardState {\n  isSelected: boolean;\n}\n\nexport class DvConnectionCard extends React.PureComponent<\n  IDvConnectionCardProps,\n  IDvConnectionCardState\n> {\n  public constructor(props: IDvConnectionCardProps) {\n    super(props);\n    this.state = {\n      isSelected: props.selected, // initial item selection\n    };\n    this.toggleSelected = this.toggleSelected.bind(this);\n  }\n\n  public toggleSelected = (connName: string) => (event: any) => {\n    // User can only select active connections\n    if (this.props.dvStatus === ConnectionStatus.ACTIVE) {\n      this.setState({\n        isSelected: !this.state.isSelected,\n      });\n      this.props.onSelectionChanged(connName, !this.state.isSelected);\n    }\n  };\n\n  public render() {\n    return (\n      <div\n        className={'dv-connection-card'}\n        onClick={this.toggleSelected(this.props.name)}\n      >\n        <Card matchHeight={true} accented={this.state.isSelected}>\n          <Card.Body>\n            <div className=\"dv-connection-card__status\">\n              <Label\n                type={\n                  this.props.dvStatus === ConnectionStatus.ACTIVE\n                    ? 'success'\n                    : 'danger'\n                }\n              >\n                {this.props.dvStatus}\n              </Label>\n            </div>\n            <div className={'dv-connection-card__content'}>\n              <div className=\"dv-connection-card__icon\">\n                <img src={this.props.icon} alt={this.props.name} width={46} />\n              </div>\n              <div\n                className=\"dv-connection-card__title h2\"\n                data-testid=\"dv-connection-card-title\"\n              >\n                {this.props.name}\n              </div>\n              <Text className=\"dv-connection-card__description\">\n                {this.props.description}\n              </Text>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../Shared';\n\nexport interface IIntegrationsListViewProps extends IListViewToolbarProps {\n  linkToManageCiCd: H.LocationDescriptor;\n  linkToIntegrationImport: H.LocationDescriptor;\n  linkToIntegrationCreation: H.LocationDescriptor;\n  i18nManageCiCd: string;\n  i18nImport: string;\n  i18nLinkCreateConnection: string;\n}\n\nexport class IntegrationsListView extends React.Component<\n  IIntegrationsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToManageCiCd}>\n              {this.props.i18nManageCiCd}\n            </ButtonLink>\n            <ButtonLink href={this.props.linkToIntegrationImport}>\n              {this.props.i18nImport}\n            </ButtonLink>\n            <ButtonLink\n              href={this.props.linkToIntegrationCreation}\n              as={'primary'}\n            >\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Card, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\n\nimport './TopIntegrations.css';\n\nexport interface ITopIntegrationsProps {\n  i18nLast30Days: string;\n  i18nLast60Days: string;\n  i18nLast90Days: string;\n  i18nTitle: string;\n}\n\nexport class TopIntegrationsCard extends React.Component<\n  ITopIntegrationsProps\n> {\n  public render() {\n    return (\n      <Card accented={false} className={'TopIntegrationsCard'}>\n        <Card.Heading>\n          <Card.DropdownButton\n            id=\"cardDropdownButton1\"\n            title={this.props.i18nLast30Days}\n          >\n            <MenuItem eventKey=\"1\" active={true}>\n              {this.props.i18nLast30Days}\n            </MenuItem>\n            <MenuItem eventKey=\"2\">{this.props.i18nLast60Days}</MenuItem>\n            <MenuItem eventKey=\"3\">{this.props.i18nLast90Days}</MenuItem>\n          </Card.DropdownButton>\n          <Card.Title>{this.props.i18nTitle}</Card.Title>\n        </Card.Heading>\n        <Card.Body>{this.props.children}</Card.Body>\n      </Card>\n    );\n  }\n}\n","import { Card } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IUptimeMetricProps {\n  start: number;\n  i18nTitle: string;\n}\n\nexport class UptimeMetric extends React.PureComponent<IUptimeMetricProps> {\n  public render() {\n    const startAsDate = new Date(this.props.start);\n    const startAsHuman = startAsDate.toLocaleString();\n    return (\n      <Card accented={true} aggregated={true} matchHeight={true}>\n        <Card.Title className={'text-left'}>\n          <small className={'pull-right'}>since {startAsHuman}</small>\n          <div>{this.props.i18nTitle}</div>\n        </Card.Title>\n        <Card.Body>TODO</Card.Body>\n      </Card>\n    );\n  }\n}\n","import {\n  Button,\n  DropdownKebab,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../../Shared';\n\nexport interface IViewListItemProps {\n  viewDescription: string;\n  viewIcon?: string;\n  viewName: string;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteTip?: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  onDelete: (viewName: string) => void;\n  onEdit: (viewName: string) => void;\n}\n\nexport interface IViewListItemState {\n  showDeleteDialog: boolean;\n}\n\nexport class ViewListItem extends React.Component<\n  IViewListItemProps,\n  IViewListItemState\n> {\n  public constructor(props: IViewListItemProps) {\n    super(props);\n    this.state = {\n      showDeleteDialog: false, // initial visibility of delete dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.showDeleteDialog = this.showDeleteDialog.bind(this);\n  }\n\n  public render() {\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={ConfirmationButtonStyle.DANGER}\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={this.props.i18nDelete}\n          i18nConfirmationMessage={this.props.i18nDeleteModalMessage}\n          i18nTitle={this.props.i18nDeleteModalTitle}\n          icon={ConfirmationIconType.DANGER}\n          showDialog={this.state.showDeleteDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <Button bsStyle=\"default\" onClick={this.handleEdit}>\n                  {this.props.i18nEdit}\n                </Button>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`view-${this.props.viewName}-action-menu`}\n                pullRight={true}\n              >\n                <OverlayTrigger\n                  overlay={this.getDeleteTooltip()}\n                  placement=\"left\"\n                >\n                  <MenuItem onClick={this.showDeleteDialog}>\n                    {this.props.i18nDelete}\n                  </MenuItem>\n                </OverlayTrigger>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.viewName}\n          description={\n            this.props.viewDescription ? this.props.viewDescription : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.viewIcon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.viewIcon}\n                  alt={this.props.viewName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'cube'} />\n            )\n          }\n          stacked={false}\n        />\n      </>\n    );\n  }\n\n  private getDeleteTooltip() {\n    return (\n      <Tooltip id=\"deleteTip\">\n        {this.props.i18nDeleteTip\n          ? this.props.i18nDeleteTip\n          : this.props.i18nDelete}\n      </Tooltip>\n    );\n  }\n\n  private getEditTooltip() {\n    return (\n      <Tooltip id=\"editTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  private handleCancel() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n  }\n\n  private handleEdit = () => {\n    if (this.props.viewName) {\n      this.props.onEdit(this.props.viewName);\n    }\n  };\n\n  private showDeleteDialog() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  private handleDelete() {\n    this.setState({\n      showDeleteDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.viewName) {\n      this.props.onDelete(this.props.viewName);\n    }\n  }\n}\n","import * as H from 'history';\nimport {\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\nimport './ViewList.css';\n\nexport interface IViewsListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImportViews: string;\n  i18nImportViewsTip: string;\n  linkCreateViewHRef: H.LocationDescriptor;\n  linkImportViewsHRef: H.LocationDescriptor;\n  i18nCreateViewTip?: string;\n  i18nCreateView: string;\n  i18nDescription: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  onImportView: (name: string) => void;\n}\n\nexport class ViewList extends React.Component<IViewsListProps> {\n  public constructor(props: IViewsListProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportViewsTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkImportViewsHRef} as={'default'}>\n                {this.props.i18nImportViews}\n              </ButtonLink>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateViewTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                {this.props.i18nCreateView}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getImportViewsTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink\n                  href={this.props.linkImportViewsHRef}\n                  as={'default'}\n                  className={'view-list-empty-state-import'}\n                >\n                  {this.props.i18nImportViews}\n                </ButtonLink>\n              </OverlayTrigger>\n              <OverlayTrigger\n                overlay={this.getCreateViewTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateViewHRef} as={'primary'}>\n                  {this.props.i18nCreateView}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n\n  private getCreateViewTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nCreateViewTip\n          ? this.props.i18nCreateViewTip\n          : this.props.i18nCreateView}\n      </Tooltip>\n    );\n  }\n\n  private getImportViewsTooltip() {\n    return (\n      <Tooltip id=\"importViewsTip\">\n        {this.props.i18nImportViewsTip\n          ? this.props.i18nImportViewsTip\n          : this.props.i18nImportViews}\n      </Tooltip>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGrid extends React.Component {\n  public render() {\n    return (\n      <CardGrid fluid={true} matchHeight={true}>\n        <CardGrid.Row>{this.props.children}</CardGrid.Row>\n      </CardGrid>\n    );\n  }\n}\n","import { CardGrid } from 'patternfly-react';\nimport * as React from 'react';\n\nexport class DvConnectionsGridCell extends React.Component {\n  public render() {\n    return (\n      <CardGrid.Col xs={6} md={3}>\n        {this.props.children}\n      </CardGrid.Col>\n    );\n  }\n}\n","import * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IDvConnectionsListViewProps extends IListViewToolbarProps {\n  linkToConnectionCreate: H.LocationDescriptor;\n  i18nLinkCreateConnection: string;\n}\n\nexport class DvConnectionsListView extends React.Component<\n  IDvConnectionsListViewProps\n> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <ButtonLink href={this.props.linkToConnectionCreate} as={'primary'}>\n              {this.props.i18nLinkCreateConnection}\n            </ButtonLink>\n          </div>\n        </ListViewToolbar>\n        <Container>{this.props.children}</Container>\n      </>\n    );\n  }\n}\n","import { Label, ListViewInfoItem, ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IViewInfoListItemProps {\n  name: string;\n  description?: string;\n  connectionName: string;\n  nodePath: string[];\n  selected: boolean;\n  i18nUpdate: string;\n  isUpdateView: boolean;\n  onSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport interface IViewInfoListItemState {\n  itemSelected: boolean;\n}\n\nexport class ViewInfoListItem extends React.Component<\n  IViewInfoListItemProps,\n  IViewInfoListItemState\n> {\n  public constructor(props: IViewInfoListItemProps) {\n    super(props);\n    this.state = {\n      itemSelected: props.selected, // initial item selection\n    };\n    this.handleCheckboxToggle = this.handleCheckboxToggle.bind(this);\n  }\n\n  public temp() {\n    const tDescription = this.props.description;\n    const tConnectionName = this.props.connectionName;\n    return tDescription + tConnectionName;\n  }\n\n  public getNodePathStr() {\n    let path = '';\n    for (const segment of this.props.nodePath) {\n      path += '/' + segment;\n    }\n    return path;\n  }\n\n  public handleCheckboxToggle = (viewName: string) => (event: any) => {\n    this.setState({\n      itemSelected: !this.state.itemSelected,\n    });\n    this.props.onSelectionChanged(viewName, !this.state.itemSelected);\n  };\n\n  public render() {\n    return (\n      <ListViewItem\n        heading={this.props.name}\n        description={this.getNodePathStr()}\n        checkboxInput={\n          <input\n            type=\"checkbox\"\n            value=\"\"\n            defaultChecked={this.props.selected}\n            onChange={this.handleCheckboxToggle(this.props.name)}\n          />\n        }\n        additionalInfo={[\n          <ListViewInfoItem key={1}>\n            {this.props.isUpdateView === true ? (\n              <Label type=\"warning\">{this.props.i18nUpdate}</Label>\n            ) : (\n              ''\n            )}\n          </ListViewInfoItem>,\n        ]}\n        hideCloseIcon={true}\n        stacked={false}\n      />\n    );\n  }\n}\n","import { EmptyState, ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../../Shared';\n\nexport interface IViewInfoListProps extends IListViewToolbarProps {\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n}\n\nexport class ViewInfoList extends React.Component<IViewInfoListProps> {\n  public render() {\n    return (\n      <>\n        <ListViewToolbar {...this.props}>\n          <div />\n        </ListViewToolbar>\n        {this.props.children ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import * as H from 'history';\nimport {\n  //  Button,\n  DropdownKebab,\n  ListView,\n  ListViewIcon,\n  ListViewItem,\n  MenuItem,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  VirtualizationPublishStatus,\n  VirtualizationPublishStatusDetail,\n} from '../';\nimport { ButtonLink } from '../../Layout';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n} from '../../Shared';\nimport {\n  BUILDING,\n  CONFIGURING,\n  DEPLOYING,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\n\nexport interface IVirtualizationListItemProps {\n  currentPublishedState: VirtualizationPublishState;\n  detailsPageLink: H.LocationDescriptor;\n  i18nCancelText: string;\n  i18nDelete: string;\n  i18nDeleteModalMessage: string;\n  i18nDeleteModalTitle: string;\n  i18nDraft: string;\n  i18nError: string;\n  i18nEdit: string;\n  i18nEditTip?: string;\n  i18nExport: string;\n  i18nPublish: string;\n  i18nPublished: string;\n  i18nPublishLogUrlText: string;\n  i18nPublishInProgress: string;\n  i18nUnpublish: string;\n  i18nUnpublishModalMessage: string;\n  i18nUnpublishModalTitle: string;\n  icon?: string;\n  onDelete: (virtualizationName: string) => void;\n  onExport: (virtualizationName: string) => void;\n  onPublish: (virtualizationName: string) => void;\n  onUnpublish: (virtualizationName: string) => void;\n  publishingCurrentStep?: number;\n  publishingLogUrl?: string;\n  publishingTotalSteps?: number;\n  publishingStepText?: string;\n  serviceVdbName: string;\n  virtualizationName: string;\n  virtualizationDescription: string;\n}\n\nexport interface IVirtualizationListItemState {\n  showConfirmationDialog: boolean;\n}\n\nexport class VirtualizationListItem extends React.Component<\n  IVirtualizationListItemProps,\n  IVirtualizationListItemState\n> {\n  public constructor(props: IVirtualizationListItemProps) {\n    super(props);\n    this.state = {\n      showConfirmationDialog: false, // initial visibility of confirmation dialog\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleExport = this.handleExport.bind(this);\n    this.handleUnpublish = this.handleUnpublish.bind(this);\n    this.handlePublish = this.handlePublish.bind(this);\n    this.showConfirmationDialog = this.showConfirmationDialog.bind(this);\n  }\n\n  public getEditTooltip() {\n    return (\n      <Tooltip id=\"detailsTip\">\n        {this.props.i18nEditTip ? this.props.i18nEditTip : this.props.i18nEdit}\n      </Tooltip>\n    );\n  }\n\n  public handleCancel() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n  }\n\n  public handleDelete() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    // TODO: disable components while delete is processing\n    if (this.props.virtualizationName) {\n      this.props.onDelete(this.props.virtualizationName);\n    }\n  }\n\n  public handleExport() {\n    if (this.props.virtualizationName) {\n      this.props.onExport(this.props.virtualizationName);\n    }\n  }\n\n  public handlePublish() {\n    if (this.props.virtualizationName) {\n      this.props.onPublish(this.props.virtualizationName);\n    }\n  }\n\n  public handleUnpublish() {\n    this.setState({\n      showConfirmationDialog: false, // hide dialog\n    });\n\n    if (this.props.serviceVdbName) {\n      this.props.onUnpublish(this.props.serviceVdbName);\n    }\n  }\n\n  public showConfirmationDialog() {\n    this.setState({\n      showConfirmationDialog: true,\n    });\n  }\n\n  public handleAcceptConfirmation() {\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    if (isPublished) {\n      this.handleUnpublish();\n    } else {\n      this.handleDelete();\n    }\n  }\n\n  public render() {\n    // Determine published state\n    const isPublished =\n      this.props.currentPublishedState === RUNNING ? true : false;\n    const publishInProgress =\n      this.props.currentPublishedState === BUILDING ||\n      this.props.currentPublishedState === CONFIGURING ||\n      this.props.currentPublishedState === DEPLOYING ||\n      this.props.currentPublishedState === SUBMITTED\n        ? true\n        : false;\n\n    return (\n      <>\n        <ConfirmationDialog\n          buttonStyle={\n            isPublished\n              ? ConfirmationButtonStyle.WARNING\n              : ConfirmationButtonStyle.DANGER\n          }\n          i18nCancelButtonText={this.props.i18nCancelText}\n          i18nConfirmButtonText={\n            isPublished ? this.props.i18nUnpublish : this.props.i18nDelete\n          }\n          i18nConfirmationMessage={\n            isPublished\n              ? this.props.i18nUnpublishModalMessage\n              : this.props.i18nDeleteModalMessage\n          }\n          i18nTitle={\n            isPublished\n              ? this.props.i18nUnpublishModalTitle\n              : this.props.i18nDeleteModalTitle\n          }\n          icon={\n            isPublished\n              ? ConfirmationIconType.WARNING\n              : ConfirmationIconType.DANGER\n          }\n          showDialog={this.state.showConfirmationDialog}\n          onCancel={this.handleCancel}\n          onConfirm={this.handleDelete}\n        />\n        <ListViewItem\n          actions={\n            <div className=\"form-group\">\n              {publishInProgress ? (\n                <VirtualizationPublishStatusDetail\n                  logUrl={this.props.publishingLogUrl}\n                  stepText={this.props.publishingStepText}\n                  currentStep={this.props.publishingCurrentStep}\n                  totalSteps={this.props.publishingTotalSteps}\n                  i18nPublishInProgress={this.props.i18nPublishInProgress}\n                  i18nLogUrlText={this.props.i18nPublishLogUrlText}\n                />\n              ) : (\n                <VirtualizationPublishStatus\n                  currentState={this.props.currentPublishedState}\n                  i18nPublished={this.props.i18nPublished}\n                  i18nUnpublished={this.props.i18nDraft}\n                  i18nError={this.props.i18nError}\n                />\n              )}\n              <OverlayTrigger overlay={this.getEditTooltip()} placement=\"top\">\n                <ButtonLink href={this.props.detailsPageLink} as={'primary'}>\n                  {this.props.i18nEdit}\n                </ButtonLink>\n              </OverlayTrigger>\n              <DropdownKebab\n                id={`virtualization-${\n                  this.props.virtualizationName\n                }-action-menu`}\n                pullRight={true}\n              >\n                <MenuItem onClick={this.showConfirmationDialog}>\n                  {this.props.i18nDelete}\n                </MenuItem>\n                <MenuItem onClick={this.handleExport}>\n                  {this.props.i18nExport}\n                </MenuItem>\n                <MenuItem\n                  onClick={\n                    isPublished || publishInProgress\n                      ? this.handleUnpublish\n                      : this.handlePublish\n                  }\n                >\n                  {isPublished || publishInProgress\n                    ? this.props.i18nUnpublish\n                    : this.props.i18nPublish}\n                </MenuItem>\n              </DropdownKebab>\n            </div>\n          }\n          heading={this.props.virtualizationName}\n          description={\n            this.props.virtualizationDescription\n              ? this.props.virtualizationDescription\n              : ''\n          }\n          hideCloseIcon={true}\n          leftContent={\n            this.props.icon ? (\n              <div className=\"blank-slate-pf-icon\">\n                <img\n                  src={this.props.icon}\n                  alt={this.props.virtualizationName}\n                  width={46}\n                />\n              </div>\n            ) : (\n              <ListViewIcon name={'database'} />\n            )\n          }\n          stacked={true}\n        >\n          {this.props.children ? (\n            <ListView>{this.props.children}</ListView>\n          ) : null}\n        </ListViewItem>\n      </>\n    );\n  }\n}\n","export const NOTFOUND = 'NOTFOUND';\nexport const SUBMITTED = 'SUBMITTED';\nexport const CONFIGURING = 'CONFIGURING';\nexport const BUILDING = 'BUILDING';\nexport const DEPLOYING = 'DEPLOYING';\nexport const RUNNING = 'RUNNING';\nexport const FAILED = 'FAILED';\nexport const CANCELLED = 'CANCELLED';\n\nexport type VirtualizationPublishState =\n  | 'NOTFOUND'\n  | 'SUBMITTED'\n  | 'CONFIGURING'\n  | 'BUILDING'\n  | 'DEPLOYING'\n  | 'RUNNING'\n  | 'FAILED'\n  | 'CANCELLED';\n\n// Detailed state log link types\nexport const LOGS = 'LOGS';\nexport const EVENTS = 'EVENTS';\n\nexport type LinkType = 'LOGS' | 'EVENTS';\n","import * as H from 'history';\nimport {\n  Button,\n  EmptyState,\n  ListView,\n  OverlayTrigger,\n  Tooltip,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../../Layout';\nimport {\n  IListViewToolbarProps,\n  ListViewToolbar,\n  SimplePageHeader,\n} from '../../Shared';\n\nexport interface IVirtualizationListProps extends IListViewToolbarProps {\n  hasListData: boolean;\n  i18nCreateDataVirtualization: string;\n  i18nCreateDataVirtualizationTip?: string;\n  i18nDescription: string;\n  i18nEmptyStateInfo: string;\n  i18nEmptyStateTitle: string;\n  i18nImport: string;\n  i18nImportTip: string;\n  i18nLinkCreateVirtualization: string;\n  i18nLinkCreateVirtualizationTip?: string;\n  i18nName: string;\n  i18nNameFilterPlaceholder: string;\n  i18nTitle: string;\n  linkCreateHRef: H.LocationDescriptor;\n  onImport: (name: string) => void;\n}\n\nexport class VirtualizationList extends React.Component<\n  IVirtualizationListProps\n> {\n  public constructor(props: IVirtualizationListProps) {\n    super(props);\n    this.handleImport = this.handleImport.bind(this);\n  }\n\n  public getCreateVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"createTip\">\n        {this.props.i18nLinkCreateVirtualizationTip\n          ? this.props.i18nLinkCreateVirtualizationTip\n          : this.props.i18nLinkCreateVirtualization}\n      </Tooltip>\n    );\n  }\n\n  public getImportVirtualizationTooltip() {\n    return (\n      <Tooltip id=\"importTip\">\n        {this.props.i18nImportTip\n          ? this.props.i18nImportTip\n          : this.props.i18nImport}\n      </Tooltip>\n    );\n  }\n\n  public handleImport() {\n    this.props.onImport('');\n  }\n\n  public render() {\n    return (\n      <>\n        <SimplePageHeader\n          className=\"container-fluid pf-u-my-md\"\n          i18nTitle={this.props.i18nTitle}\n          i18nDescription={this.props.i18nDescription}\n        />\n        <ListViewToolbar {...this.props}>\n          <div className=\"form-group\">\n            <OverlayTrigger\n              overlay={this.getImportVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <Button\n                bsStyle=\"default\"\n                to={this.props.i18nImport}\n                onClick={this.handleImport}\n              >\n                {this.props.i18nImport}\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              overlay={this.getCreateVirtualizationTooltip()}\n              placement=\"top\"\n            >\n              <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                {this.props.i18nLinkCreateVirtualization}\n              </ButtonLink>\n            </OverlayTrigger>\n          </div>\n        </ListViewToolbar>\n        {this.props.hasListData ? (\n          <ListView>{this.props.children}</ListView>\n        ) : (\n          <EmptyState>\n            <EmptyState.Icon />\n            <EmptyState.Title>\n              {this.props.i18nEmptyStateTitle}\n            </EmptyState.Title>\n            <EmptyState.Info>{this.props.i18nEmptyStateInfo}</EmptyState.Info>\n            <EmptyState.Action>\n              <OverlayTrigger\n                overlay={this.getCreateVirtualizationTooltip()}\n                placement=\"top\"\n              >\n                <ButtonLink href={this.props.linkCreateHRef} as={'primary'}>\n                  {this.props.i18nLinkCreateVirtualization}\n                </ButtonLink>\n              </OverlayTrigger>\n            </EmptyState.Action>\n          </EmptyState>\n        )}\n      </>\n    );\n  }\n}\n","import { Label } from 'patternfly-react';\nimport * as React from 'react';\nimport {\n  BUILDING,\n  CANCELLED,\n  CONFIGURING,\n  DEPLOYING,\n  FAILED,\n  NOTFOUND,\n  RUNNING,\n  SUBMITTED,\n  VirtualizationPublishState,\n} from './models';\nimport './VirtualizationPublishStatus.css';\n\nexport interface IVirtualizationPublishStatusProps {\n  currentState?: VirtualizationPublishState;\n  i18nPublished: string;\n  i18nUnpublished: string;\n  i18nError: string;\n}\n\nexport class VirtualizationPublishStatus extends React.Component<\n  IVirtualizationPublishStatusProps\n> {\n  public render() {\n    const labelType =\n      this.props.currentState === FAILED\n        ? 'danger'\n        : this.props.currentState === RUNNING\n        ? 'primary'\n        : 'default';\n    let label = NOTFOUND; // default to not found\n    switch (this.props.currentState) {\n      case RUNNING:\n        label = this.props.i18nPublished;\n        break;\n      case CANCELLED:\n      case NOTFOUND:\n        label = this.props.i18nUnpublished;\n        break;\n      case FAILED:\n        label = this.props.i18nError;\n        break;\n      case SUBMITTED:\n      case CONFIGURING:\n      case BUILDING:\n        label = DEPLOYING;\n        break;\n    }\n    return (\n      <Label className={'virtualization-publish-status-label'} type={labelType}>\n        {label}\n      </Label>\n    );\n  }\n}\n","import { Spinner } from 'patternfly-react';\nimport * as React from 'react';\nimport { ProgressWithLink } from '../../Shared';\n\nimport './VirtualizationPublishStatusDetail.css';\n\nexport interface IVirtualizationPublishStatusDetailProps {\n  currentStep?: number;\n  totalSteps?: number;\n  stepText?: string;\n  logUrl?: string;\n  i18nPublishInProgress: string;\n  i18nLogUrlText: string;\n}\n\nexport class VirtualizationPublishStatusDetail extends React.Component<\n  IVirtualizationPublishStatusDetailProps\n> {\n  public render() {\n    return (\n      <div\n        data-testid=\"virtualization-publish-status-detail\"\n        className={'virtualization-publish-status-detail'}\n      >\n        {this.props.stepText &&\n        this.props.currentStep &&\n        this.props.totalSteps ? (\n          <ProgressWithLink\n            currentStep={this.props.currentStep}\n            totalSteps={this.props.totalSteps}\n            value={this.props.stepText}\n            logUrl={this.props.logUrl}\n            i18nLogUrlText={this.props.i18nLogUrlText}\n          />\n        ) : (\n          <>\n            <Spinner loading={true} inline={true} />\n            {this.props.i18nPublishInProgress}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import { Alert, Button, Col, Row } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppExpanderBodyProps {\n  showSuccess: boolean;\n  disableSave: boolean;\n  disableRemove: boolean;\n  onSave: () => void;\n  onRemove: () => void;\n  children: React.ReactNode;\n  i18nRemoveButtonText: string;\n  i18nSaveButtonText: string;\n  i18nAlertTitle: string;\n  i18nAlertDetail: string;\n}\n\nexport class OAuthAppExpanderBody extends React.Component<\n  IOAuthAppExpanderBodyProps\n> {\n  constructor(props: IOAuthAppExpanderBodyProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <>\n        {this.props.showSuccess && (\n          <Row>\n            <Col xs={11}>\n              <Alert type={'success'}>\n                <strong>{this.props.i18nAlertTitle}</strong>&nbsp;\n                {this.props.i18nAlertDetail}\n              </Alert>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            {this.props.children}\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} xsOffset={5}>\n            <>\n              <Button\n                bsStyle=\"primary\"\n                onClick={this.props.onSave}\n                disabled={this.props.disableSave}\n              >\n                {this.props.i18nSaveButtonText}\n              </Button>{' '}\n              <Button\n                onClick={this.props.onRemove}\n                disabled={this.props.disableRemove}\n              >\n                {this.props.i18nRemoveButtonText}\n              </Button>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import { ListViewItem } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListItemProps {\n  id: string;\n  configured: boolean;\n  children: React.ReactNode;\n  expanded: boolean;\n  icon: string;\n  i18nNotConfiguredText: string;\n  name: string;\n}\n\nexport class OAuthAppListItem extends React.Component<IOAuthAppListItemProps> {\n  constructor(props: IOAuthAppListItemProps) {\n    super(props);\n  }\n  public render() {\n    return (\n      <ListViewItem\n        key={this.props.id}\n        hideCloseIcon={true}\n        initExpanded={this.props.expanded}\n        heading={this.props.name}\n        leftContent={\n          <img\n            className={'list-pf-icon list-pf-icon-small'}\n            src={this.props.icon}\n          />\n        }\n        description={''}\n        additionalInfo={[\n          !this.props.configured && (\n            <i key={0}>{this.props.i18nNotConfiguredText}</i>\n          ),\n        ]}\n      >\n        {this.props.children}\n      </ListViewItem>\n    );\n  }\n}\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n * @param extraButtons - buttons to add between the cancel and the back/next\n */\nexport interface IConnectionCreatorProps {\n  header: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n  extraButtons?: React.ReactNode;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ConnectionCreatorLayout: React.FunctionComponent<\n  IConnectionCreatorProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n  extraButtons,\n}: IConnectionCreatorProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        {extraButtons && (\n          <div className={'wizard-pf-extrabuttons'}>{extraButtons}</div>\n        )}\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const ConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IApiConnectorListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ApiConnectorListSkeleton: React.FunctionComponent<\n  IApiConnectorListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface ICustomizationsExtensionListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ExtensionListSkeleton: React.FunctionComponent<\n  ICustomizationsExtensionListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Grid } from 'patternfly-react';\nimport * as React from 'react';\nimport { IntegrationStatus } from '../Integration';\nimport { IntegrationState } from '../Integration/models';\n\nexport interface IRecentUpdatesItem {\n  integrationName: string;\n  integrationCurrentState: IntegrationState;\n  integrationDate: number;\n  i18nError: string;\n  i18nPublished: string;\n  i18nUnpublished: string;\n}\n\nexport const RecentUpdatesItem: React.FunctionComponent<IRecentUpdatesItem> = ({\n  integrationName,\n  integrationCurrentState,\n  integrationDate,\n  i18nError,\n  i18nPublished,\n  i18nUnpublished,\n}) => (\n  <Grid.Row>\n    <Grid.Col sm={5}>{integrationName}</Grid.Col>\n    <Grid.Col sm={3}>\n      <IntegrationStatus\n        currentState={integrationCurrentState}\n        i18nError={i18nError}\n        i18nPublished={i18nPublished}\n        i18nUnpublished={i18nUnpublished}\n      />\n    </Grid.Col>\n    <Grid.Col sm={4}>{new Date(integrationDate).toLocaleString()}</Grid.Col>\n  </Grid.Row>\n);\n","import * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const RecentUpdatesSkeleton = (props: any) => (\n  <ContentLoader\n    height={150}\n    width={350}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"20\" y=\"5\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\n    <rect x=\"150\" y=\"5\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"5\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"10\" />\n    <rect x=\"150\" y=\"35\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"35\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"65\" rx=\"5\" ry=\"5\" width=\"95\" height=\"10\" />\n    <rect x=\"150\" y=\"65\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"65\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"95\" rx=\"5\" ry=\"5\" width=\"125\" height=\"10\" />\n    <rect x=\"150\" y=\"95\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"95\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n\n    <rect x=\"20\" y=\"125\" rx=\"5\" ry=\"5\" width=\"65\" height=\"10\" />\n    <rect x=\"150\" y=\"125\" rx=\"5\" ry=\"5\" width=\"30\" height=\"10\" />\n    <rect x=\"250\" y=\"125\" rx=\"5\" ry=\"5\" width=\"40\" height=\"10\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewListSkeleton: React.FunctionComponent<\n  IViewListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","import { Card, EmptyState } from 'patternfly-react';\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const DvConnectionSkeleton = (props: any) => (\n  <Card matchHeight={true}>\n    <Card.Body>\n      <EmptyState>\n        <ContentLoader\n          height={300}\n          width={200}\n          speed={2}\n          primaryColor=\"#f3f3f3\"\n          secondaryColor=\"#ecebeb\"\n          {...props}\n        >\n          <circle cx=\"100\" cy=\"50\" r=\"40\" />\n          <rect x=\"5\" y=\"125\" rx=\"5\" ry=\"5\" width=\"190\" height=\"30\" />\n          <rect x=\"25\" y=\"180\" rx=\"5\" ry=\"5\" width=\"150\" height=\"15\" />\n          <rect x=\"40\" y=\"205\" rx=\"5\" ry=\"5\" width=\"120\" height=\"15\" />\n        </ContentLoader>\n      </EmptyState>\n    </Card.Body>\n  </Card>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IViewInfoListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const ViewInfoListSkeleton: React.FunctionComponent<\n  IViewInfoListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../../../Layout';\nimport './ViewsCreateLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onCreateViews - Create views when complete.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IViewsCreateLayoutProps {\n  header: JSX.Element;\n  content: JSX.Element;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  onCreateViews?: () => Promise<any>;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the views create wizard. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const ViewsCreateLayout: React.FunctionComponent<\n  IViewsCreateLayoutProps\n> = ({\n  header,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  onCreateViews,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IViewsCreateLayoutProps) => {\n  return (\n    <div\n      className={classnames('wizard-pf-body views-create-layout', {\n        'has-footer': true,\n      })}\n    >\n      {header}\n      <div className=\"wizard-pf-row views-create-layout__body\">\n        <div\n          className={\n            'wizard-pf-main cards-pf views-create-layout__contentWrapper'\n          }\n        >\n          <div className=\"views-create-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer views-create-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={isLastStep ? onCreateViews : onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport interface IVirtualizationListSkeletonProps {\n  width: number;\n  style?: any;\n}\n\nexport const VirtualizationListSkeleton: React.FunctionComponent<\n  IVirtualizationListSkeletonProps\n> = ({ width, style }) => (\n  <ContentLoader\n    height={356}\n    width={width}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n    style={style}\n  >\n    <circle cx=\"30\" cy=\"40\" r=\"16\" />\n    <circle cx=\"70\" cy=\"40\" r=\"16\" />\n    <rect x=\"105\" y=\"35\" rx=\"5\" ry=\"5\" width=\"200\" height=\"15\" />\n    <rect x={width - 100} y=\"35\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"110\" r=\"16\" />\n    <circle cx=\"70\" cy=\"110\" r=\"16\" />\n    <rect x=\"105\" y=\"105\" rx=\"5\" ry=\"5\" width=\"180\" height=\"15\" />\n    <rect x={width - 100} y=\"105\" rx=\"5\" ry=\"5\" width=\"80\" height=\"15\" />\n\n    <circle cx=\"30\" cy=\"180\" r=\"16\" />\n    <circle cx=\"70\" cy=\"180\" r=\"16\" />\n    <rect x=\"105\" y=\"175\" rx=\"5\" ry=\"5\" width=\"195\" height=\"15\" />\n    <rect x={width - 100} y=\"175\" rx=\"5\" ry=\"5\" width=\"85\" height=\"15\" />\n  </ContentLoader>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\nexport interface IIntegrationActionSelectorCardProps {\n  content: JSX.Element;\n  title: string;\n}\n\nexport const IntegrationActionSelectorCard: React.FunctionComponent<\n  IIntegrationActionSelectorCardProps\n> = ({ content, title }) => (\n  <div className=\"card-pf\">\n    <div className=\"card-pf-title\">{title}</div>\n    <div className=\"card-pf-body\">{content}</div>\n  </div>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport classnames from 'classnames';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ButtonLink, Loader } from '../Layout';\nimport './IntegrationEditorLayout.css';\n\n/**\n * @param header - a PatternFly Wizard Steps component.\n * @param sidebar - the sidebar container takes the size of its content. If no\n * sidebar is defined, a layout with just the header, the footer and the body\n * will be shown.\n * @param content - the main content of the wizard. In case of overflow, only\n * the body will scroll.\n * @param onCancel - if passed, the Cancel button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onBack - if passed, the Back button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param onNext - if passed, the Next button will be render as a `button`\n * and this callback will be used as its `onClick` handler.\n * @param cancelHref - if passed, the Cancel button will be render as a `Link`\n * using this as its `to` parameter.\n * @param backHref - if passed, the Back button will be render as a `Link`\n * using this as its `to` parameter.\n * @param nextHref - if passed, the Next button will be render as a `Link`\n * using this as its `to` parameter.\n * @param isNextLoading - if set to true, a `Loading` component will be shown\n * inside the Next button before its label. The button will also be disabled.\n * @param isNextDisabled - if set to true, the Next button will be disabled.\n * @param isLastStep - if set to true, it changes the Next button label to\n * 'Done'.\n */\nexport interface IIntegrationEditorLayoutProps {\n  header: React.ReactNode;\n  sidebar?: React.ReactNode;\n  content: React.ReactNode;\n  onCancel?: (e: React.MouseEvent<any>) => void;\n  onBack?: (e: React.MouseEvent<any>) => void;\n  onNext?: (e: React.MouseEvent<any>) => void;\n  cancelHref?: H.LocationDescriptor;\n  backHref?: H.LocationDescriptor;\n  nextHref?: H.LocationDescriptor;\n  isNextDisabled?: boolean;\n  isNextLoading?: boolean;\n  isLastStep?: boolean;\n}\n\n/**\n * Provides the layout for the integration editor. It uses the PatternFly Wizard\n * component under the hood.\n * The footer is pre-defined and follows the PF Wizard pattern, with\n * Cancel/Previous/Next buttons.\n *\n * @todo in the CSS we use hardcoded values for the heights of various\n * elements of the page to be able to size the element to take all the available\n * height and show the right scrollbars.\n * We should really find a smarter way to handle this.\n */\nexport const IntegrationEditorLayout: React.FunctionComponent<\n  IIntegrationEditorLayoutProps\n> = ({\n  header,\n  sidebar,\n  content,\n  onCancel,\n  onBack,\n  onNext,\n  cancelHref,\n  backHref,\n  nextHref,\n  isNextLoading,\n  isNextDisabled,\n  isLastStep = false,\n}: IIntegrationEditorLayoutProps) => {\n  return (\n    <div\n      className={classnames(\n        'wizard-pf-body integration-editor-layout syn-scrollable',\n        {\n          'has-footer': true,\n        }\n      )}\n    >\n      {header}\n      <div className=\"wizard-pf-row integration-editor-layout__body syn-scrollable--body\">\n        <div className=\"wizard-pf-sidebar\">{sidebar}</div>\n        <div\n          className={\n            'wizard-pf-main cards-pf integration-editor-layout__contentWrapper'\n          }\n        >\n          <div className=\"integration-editor-layout__content\">{content}</div>\n        </div>\n      </div>\n      <div className=\"wizard-pf-footer integration-editor-layout__footer\">\n        <ButtonLink\n          onClick={onBack}\n          href={backHref}\n          className={'wizard-pf-back'}\n        >\n          <i className=\"fa fa-angle-left\" /> Back\n        </ButtonLink>\n        <ButtonLink\n          onClick={onNext}\n          href={nextHref}\n          as={'primary'}\n          className={'wizard-pf-next'}\n          disabled={isNextLoading || isNextDisabled}\n        >\n          {isNextLoading ? <Loader size={'xs'} inline={true} /> : null}\n          {isLastStep ? (\n            'Done'\n          ) : (\n            <>\n              Next <i className=\"fa fa-angle-right\" />\n            </>\n          )}\n        </ButtonLink>\n        <ButtonLink\n          onClick={onCancel}\n          href={cancelHref}\n          className={'wizard-pf-cancel'}\n        >\n          Cancel\n        </ButtonLink>\n      </div>\n    </div>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\nimport {\n  IIntegrationFlowStepProps,\n  IntegrationFlowStep,\n} from './IntegrationFlowStep';\nimport { IntegrationFlowStepDetails } from './IntegrationFlowStepDetails';\n\nexport interface IIntegrationFlowStepWithOverviewProps\n  extends IIntegrationFlowStepProps {\n  /**\n   * The title of the extended information table.\n   */\n  i18nTitle: string;\n  /**\n   * The name of the connection used for the step.\n   */\n  name: string;\n  /**\n   * The name of the action used for the step.\n   */\n  action: string;\n  /**\n   * The data-type set up for the step.\n   */\n  dataType: string;\n}\n\n/**\n * A component to show an already configured step in the sidebar of the\n * integration editor.\n *\n * @see [i18nTitle]{@link IIntegrationFlowStepWithOverviewProps#i18nTitle}\n * @see [i18nTooltip]{@link IIntegrationFlowStepProps#i18nTooltip}\n * @see [icon]{@link IIntegrationFlowStepProps#icon}\n * @see [active]{@link IIntegrationFlowStepProps#active}\n * @see [showDetails]{@link IIntegrationFlowStepProps#showDetails}\n * @see [name]{@link IIntegrationFlowStepWithOverviewProps#name}\n * @see [action]{@link IIntegrationFlowStepWithOverviewProps#action}\n * @see [dataType]{@link IIntegrationFlowStepWithOverviewProps#dataType}\n * @constructor\n */\nexport const IntegrationFlowStepWithOverview: React.FunctionComponent<\n  IIntegrationFlowStepWithOverviewProps\n> = ({\n  i18nTitle,\n  i18nTooltip,\n  icon,\n  active = false,\n  showDetails,\n  name,\n  action,\n  dataType,\n}) => (\n  <IntegrationFlowStep\n    icon={icon}\n    active={active}\n    i18nTooltip={i18nTooltip}\n    showDetails={showDetails}\n  >\n    <IntegrationFlowStepDetails active={active}>\n      {({ Title, StepOverview }) => (\n        <>\n          <Title>{i18nTitle}</Title>\n          <StepOverview\n            nameI18nLabel={'Name:'}\n            name={name}\n            actionI18nLabel={'Action:'}\n            action={action}\n            dataTypeI18nLabel={'Data Type:'}\n            dataType={dataType}\n          />\n        </>\n      )}\n    </IntegrationFlowStepDetails>\n  </IntegrationFlowStep>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\nimport { ButtonLink } from '../Layout';\n\nexport interface IIntegrationsListItemUnreadableProps {\n  integrationName: string;\n  i18nDescription: string;\n  rawObject: string;\n}\n\nexport const IntegrationsListItemUnreadable: React.FC<\n  IIntegrationsListItemUnreadableProps\n> = ({ integrationName, i18nDescription, rawObject }) => {\n  const onClick = () => window.alert(rawObject);\n  return (\n    <ListView.Item\n      heading={integrationName}\n      actions={<ButtonLink onClick={onClick}>Integration JSON</ButtonLink>}\n      description={i18nDescription}\n      stacked={true}\n    />\n  );\n};\n","import {\n  Nav,\n  NavList,\n  Page,\n  PageHeader,\n  PageSection,\n  PageSidebar,\n} from '@patternfly/react-core';\nimport * as React from 'react';\n\nexport interface ILayoutBase {\n  pictograph: any;\n  appNav: any;\n  verticalNav: any[];\n  logoHref: string;\n  showNavigation: boolean;\n  onNavigationCollapse(): void;\n  onNavigationExpand(): void;\n}\n\nexport interface ILayoutState {\n  isNavOpen: boolean;\n}\n\nexport const AppLayout: React.FunctionComponent<ILayoutBase> = ({\n  pictograph,\n  appNav,\n  verticalNav,\n  logoHref,\n  showNavigation,\n  onNavigationCollapse,\n  onNavigationExpand,\n  children,\n}) => {\n  const onNavToggle = showNavigation\n    ? onNavigationCollapse\n    : onNavigationExpand;\n  return (\n    <Page\n      header={\n        <PageHeader\n          logo={pictograph}\n          logoProps={{ href: logoHref }}\n          toolbar={appNav}\n          showNavToggle={true}\n          isNavOpen={showNavigation}\n          onNavToggle={onNavToggle}\n        />\n      }\n      sidebar={\n        <PageSidebar\n          nav={\n            <Nav>\n              <NavList>{verticalNav}</NavList>\n            </Nav>\n          }\n          isNavOpen={showNavigation}\n        />\n      }\n    >\n      <PageSection>{children}</PageSection>\n    </Page>\n  );\n};\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport { Breadcrumb as PfBreadcrumb } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * A component to show breadcrumbs. All its children will be wrapped in a tag\n * that will automatically handle the active/inactive state by setting the\n * appropriate class to the wrapper.\n *\n * It's suggested to use only anchors or spans as children node.\n */\nexport const Breadcrumb: React.FunctionComponent = ({ children }) => (\n  <PfBreadcrumb\n    style={{\n      background: '#fff',\n      margin: 0,\n      paddingLeft: '15px',\n    }}\n  >\n    {React.Children.map(children, (c, idx) => (\n      <li\n        className={React.Children.count(children) - 1 === idx ? 'active' : ''}\n        key={idx}\n      >\n        {c}\n      </li>\n    ))}\n  </PfBreadcrumb>\n);\n","import { Nav } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface ITabBarProps {\n  [key: string]: any;\n}\n\nexport const TabBar: React.FunctionComponent<ITabBarProps> = ({\n  children,\n  ...props\n}) => (\n  <Nav bsClass=\"nav nav-tabs nav-tabs-pf\" {...props}>\n    {children}\n  </Nav>\n);\n","// tslint:disable react-unused-props-and-state\n// remove the above line after this goes GA https://github.com/Microsoft/tslint-microsoft-contrib/pull/824\nimport * as React from 'react';\n\ninterface IWizardStepProps {\n  isActive: boolean;\n  isDisabled: boolean;\n  isAlt?: boolean;\n  onClick?: () => any;\n  step: number;\n  title: string;\n  subSteps?: string[];\n  activeSubstep?: number;\n}\n\nexport const WizardStep: React.FunctionComponent<IWizardStepProps> = ({\n  isActive,\n  isDisabled,\n  isAlt = false,\n  onClick,\n  step,\n  title,\n  subSteps = [],\n  activeSubstep = 0,\n}) => (\n  <li\n    className={`${isAlt ? 'wizard-pf-step-alt' : 'wizard-pf-step'} ${\n      isActive ? 'active' : ''\n    } ${isDisabled ? 'disabled' : ''}`}\n    onClick={onClick}\n  >\n    <a>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-number`}>\n        {step}\n      </span>\n      <span className={`wizard-pf-step${isAlt ? '-alt' : ''}-title`}>\n        {title}\n      </span>\n      {!isAlt &&\n        subSteps.map((s, idx) => (\n          <span\n            className={`wizard-pf-step-title-substep ${\n              idx === activeSubstep ? 'active' : ''\n            }`}\n            key={idx}\n          >\n            {s}\n          </span>\n        ))}\n    </a>\n    {isAlt && isActive && (\n      <ul>\n        {subSteps.map((s, idx) => (\n          <li\n            className={`wizard-pf-step-alt-substep ${\n              idx === activeSubstep ? 'active' : 'disabled'\n            }`}\n            key={idx}\n          >\n            <a>{s}</a>\n          </li>\n        ))}\n      </ul>\n    )}\n  </li>\n);\n","import { Text, Title, TitleLevel } from '@patternfly/react-core';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Container } from '../../Layout';\n\nexport interface IOAuthAppHeaderProps {\n  i18nPageTitle: string;\n  i18nDescription: string;\n  i18nCallbackDescription: string;\n  callbackURI: string;\n  className?: string;\n}\n\nexport const OAuthAppHeader: React.FunctionComponent<IOAuthAppHeaderProps> = ({\n  i18nPageTitle,\n  i18nDescription,\n  i18nCallbackDescription,\n  callbackURI,\n  className,\n}) => (\n  <Container className={classnames('', className)}>\n    <Title size=\"3xl\" headingLevel={TitleLevel.h2}>\n      {i18nPageTitle}\n    </Title>\n    <Text dangerouslySetInnerHTML={{ __html: i18nDescription }} />\n    <Text>\n      {i18nCallbackDescription} : {callbackURI}\n    </Text>\n  </Container>\n);\n","import { ListView } from 'patternfly-react';\nimport * as React from 'react';\n\nexport interface IOAuthAppListProps {\n  children: any;\n}\n\nexport const OAuthAppList: React.FunctionComponent<IOAuthAppListProps> = ({\n  children,\n}) => <ListView>{children}</ListView>;\n","import * as React from 'react';\nimport { Container } from '../../Layout';\nimport { IListViewToolbarProps, ListViewToolbar } from '../../Shared';\n\nexport interface IOAuthAppListItemViewProps extends IListViewToolbarProps {\n  children: React.ReactNode;\n}\n\nexport const OAuthAppListItemView: React.FunctionComponent<\n  IOAuthAppListItemViewProps\n> = ({ children, ...rest }) => (\n  <>\n    <ListViewToolbar {...rest} />\n    <Container>{children}</Container>\n  </>\n);\n","import { Table } from 'patternfly-react';\nimport * as React from 'react';\n\n/**\n * This component wraps a generic table component and exposes a simple and\n * consistent methodology to customize basic presentation properties and provide\n * an interface of setting the row/column data within the table.\n */\n\nexport type IGenericTableFormatter = (value: any) => React.ReactNode;\n\nexport interface IGenericTableColumn {\n  cell: {\n    formatters: IGenericTableFormatter[];\n  };\n  header: {\n    formatters: IGenericTableFormatter[];\n    label: string;\n  };\n  property: string;\n}\n\nexport interface IGenericTableStyle {\n  striped?: boolean;\n  bordered?: boolean;\n  hover?: boolean;\n}\n\nexport interface IGenericTableData {\n  columns: IGenericTableColumn[];\n  rows: Array<{ [property: string]: any }>;\n  rowKey: string;\n}\n\nexport const DefaultHeaderFormat = (value: any) => (\n  <Table.Heading>{value}</Table.Heading>\n);\nexport const DefaultCellFormat = (value: any) => (\n  <Table.Cell>{value}</Table.Cell>\n);\n\nexport const GenericTable: React.FC<IGenericTableStyle & IGenericTableData> = ({\n  striped = true,\n  bordered = true,\n  hover = true,\n  columns,\n  rows,\n  rowKey,\n}) => (\n  <Table.PfProvider\n    striped={striped}\n    bordered={bordered}\n    hover={hover}\n    columns={columns}\n  >\n    <Table.Header />\n    <Table.Body rows={rows} rowKey={rowKey} />\n  </Table.PfProvider>\n);\n","import { Text } from '@patternfly/react-core';\nimport { EmptyState } from 'patternfly-react';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { ButtonLink, Container } from '../Layout';\n\nexport interface IUnrecoverableErrorProps {\n  i18nTitle: string;\n  i18nInfo: string;\n  i18nHelp: string;\n  i18nRefreshLabel: string;\n  i18nReportIssue: string;\n  i18nShowErrorInfoLabel?: string;\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n}\n\nexport const UnrecoverableError: React.FC<IUnrecoverableErrorProps> = ({\n  i18nTitle,\n  i18nInfo,\n  i18nHelp,\n  i18nRefreshLabel,\n  i18nReportIssue,\n  i18nShowErrorInfoLabel,\n  error,\n  errorInfo,\n}) => {\n  const [showErrorInfo, setShowErrorInfo] = useState(false);\n  const toggleErrorInfo = () => setShowErrorInfo(!showErrorInfo);\n  return (\n    <Container>\n      <EmptyState>\n        <EmptyState.Icon name={'error-circle-o'} />\n        <EmptyState.Title>{i18nTitle}</EmptyState.Title>\n        <EmptyState.Info>{i18nInfo}</EmptyState.Info>\n        <EmptyState.Help>{i18nHelp}</EmptyState.Help>\n        <EmptyState.Action>\n          <ButtonLink href={'.'} as={'primary'} size={'lg'}>\n            {i18nRefreshLabel}\n          </ButtonLink>\n        </EmptyState.Action>\n        <EmptyState.Action secondary={true}>\n          {error && (\n            <ButtonLink onClick={toggleErrorInfo}>\n              {i18nShowErrorInfoLabel}\n            </ButtonLink>\n          )}\n          <a\n            className={'btn btn-default'}\n            href={\n              'https://github.com/syndesisio/syndesis/issues/new?template=simple.md&labels=cat/bug&title=Error%20report'\n            }\n          >\n            {i18nReportIssue}\n          </a>\n        </EmptyState.Action>\n        {showErrorInfo && error && (\n          <EmptyState.Help style={{ textAlign: 'left' }}>\n            <Text>\n              {error.name}: {error.message}\n            </Text>\n            {errorInfo && <pre>{errorInfo.componentStack}</pre>}\n          </EmptyState.Help>\n        )}\n      </EmptyState>\n    </Container>\n  );\n};\n","import { WithEnvironments, WithIntegrationTags } from '@syndesis/api';\nimport {\n  CiCdList,\n  CiCdListSkeleton,\n  ITagIntegrationEntry,\n  TagIntegrationDialog,\n  TagIntegrationDialogBody,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { ApiError } from '../../../shared';\n\nexport interface ITagIntegrationDialogWrapperProps {\n  manageCiCdHref: H.LocationDescriptor;\n  targetIntegrationId: string;\n  onSave: () => void;\n  onHide: () => void;\n  tagIntegration: (\n    integrationId: string,\n    environments: string[]\n  ) => Promise<Response>;\n}\n\nexport class TagIntegrationDialogWrapper extends React.Component<\n  ITagIntegrationDialogWrapperProps\n> {\n  public constructor(props: ITagIntegrationDialogWrapperProps) {\n    super(props);\n    this.handleSave = this.handleSave.bind(this);\n  }\n  public handleSave(items: ITagIntegrationEntry[]) {\n    this.props.onSave();\n    const newEnvironments = items\n      .filter(item => item.selected)\n      .map(item => item.name);\n    this.props.tagIntegration(this.props.targetIntegrationId, newEnvironments);\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <TagIntegrationDialog\n            i18nTitle={t('integrations:MarkIntegrationForCiCd')}\n            i18nCancelButtonText={t('shared:Cancel')}\n            i18nSaveButtonText={t('shared:Save')}\n            onHide={this.props.onHide}\n            onSave={this.handleSave}\n          >\n            {({ handleChange }) => (\n              <WithIntegrationTags\n                integrationId={this.props.targetIntegrationId}\n              >\n                {({ data: tags, hasData: hasTags, error: tagError }) => (\n                  <WithEnvironments disableUpdates={true}>\n                    {({\n                      data: environments,\n                      hasData: hasEnvironments,\n                      error: environmentsError,\n                    }) => {\n                      return (\n                        <>\n                          <p>\n                            {t('integrations:TagThisIntegrationForRelease')}\n                          </p>\n                          <WithLoader\n                            error={tagError || environmentsError}\n                            loading={!hasTags && !hasEnvironments}\n                            loaderChildren={\n                              <CiCdList>\n                                <CiCdListSkeleton />\n                              </CiCdList>\n                            }\n                            errorChildren={<ApiError />}\n                          >\n                            {() => {\n                              const mappedItems = environments.map(item => ({\n                                name: item,\n                                selected: typeof tags[item] !== 'undefined',\n                              }));\n                              return (\n                                <TagIntegrationDialogBody\n                                  key={JSON.stringify(tags)}\n                                  initialItems={mappedItems}\n                                  onChange={handleChange}\n                                  manageCiCdHref={this.props.manageCiCdHref}\n                                  i18nEmptyStateTitle={t(\n                                    'integrations:NoEnvironmentsAvailable'\n                                  )}\n                                  i18nEmptyStateInfo={t(\n                                    'integrations:NoEnvironmentsAvailableInfo'\n                                  )}\n                                  i18nEmptyStateButtonText={t(\n                                    'integrations:GoToManageCiCd'\n                                  )}\n                                />\n                              );\n                            }}\n                          </WithLoader>\n                        </>\n                      );\n                    }}\n                  </WithEnvironments>\n                )}\n              </WithIntegrationTags>\n            )}\n          </TagIntegrationDialog>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  getFinishIcon,\n  getStartIcon,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationActions,\n  IntegrationsList,\n  IntegrationsListItem,\n  IntegrationsListItemUnreadable,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { AppContext, UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { TagIntegrationDialogWrapper } from './TagIntegrationDialogWrapper';\n\nexport interface IIntegrationsProps {\n  error: boolean;\n  loading: boolean;\n  integrations: IntegrationWithMonitoring[];\n}\n\nexport interface IIntegrationsState {\n  showActionPromptDialog: boolean;\n  showCiCdPromptDialog: boolean;\n  targetIntegrationId?: string;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  handleAction?: () => void;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\nexport class Integrations extends React.Component<\n  IIntegrationsProps,\n  IIntegrationsState\n> {\n  public constructor(props: IIntegrationsProps) {\n    super(props);\n    this.state = {\n      showActionPromptDialog: false,\n      showCiCdPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n    this.closeCiCdDialog = this.closeCiCdDialog.bind(this);\n  }\n  public closeCiCdDialog() {\n    this.setState({\n      showCiCdPromptDialog: false,\n    });\n  }\n  public handleActionCancel() {\n    this.setState({\n      showActionPromptDialog: false,\n    });\n  }\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showActionPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      handleAction: options.handleAction,\n      promptDialogButtonText: options.promptDialogButtonText,\n      promptDialogIcon: options.promptDialogIcon,\n      promptDialogText: options.promptDialogText,\n      promptDialogTitle: options.promptDialogTitle,\n      showActionPromptDialog: true,\n    });\n  }\n  public promptForCiCd(targetIntegrationId: string) {\n    this.setState({\n      showCiCdPromptDialog: true,\n      targetIntegrationId,\n    });\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <AppContext.Consumer>\n            {({ getPodLogUrl }) => (\n              <UIContext.Consumer>\n                {({ pushNotification }) => (\n                  <WithIntegrationHelpers>\n                    {({\n                      deleteIntegration,\n                      deployIntegration,\n                      exportIntegration,\n                      undeployIntegration,\n                      tagIntegration,\n                    }) => (\n                      <>\n                        {this.state.showCiCdPromptDialog && (\n                          <TagIntegrationDialogWrapper\n                            manageCiCdHref={resolvers.manageCicd.root()}\n                            tagIntegration={tagIntegration}\n                            targetIntegrationId={\n                              this.state.targetIntegrationId!\n                            }\n                            onSave={this.closeCiCdDialog}\n                            onHide={this.closeCiCdDialog}\n                          />\n                        )}\n                        {this.state.showActionPromptDialog && (\n                          <ConfirmationDialog\n                            buttonStyle={ConfirmationButtonStyle.NORMAL}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nConfirmButtonText={\n                              this.state.promptDialogButtonText!\n                            }\n                            i18nConfirmationMessage={\n                              this.state.promptDialogText!\n                            }\n                            i18nTitle={this.state.promptDialogTitle!}\n                            icon={this.state.promptDialogIcon!}\n                            showDialog={this.state.showActionPromptDialog}\n                            onCancel={this.handleActionCancel}\n                            onConfirm={this.handleAction}\n                          />\n                        )}\n                        <IntegrationsList>\n                          <WithLoader\n                            error={this.props.error}\n                            loading={this.props.loading}\n                            loaderChildren={<IntegrationsListSkeleton />}\n                            errorChildren={<ApiError />}\n                          >\n                            {() =>\n                              this.props.integrations.map(\n                                (mi: IntegrationWithMonitoring) => {\n                                  try {\n                                    const editAction: IIntegrationAction = {\n                                      href: resolvers.integration.edit.index({\n                                        flowId: mi.integration.flows![0].id!,\n                                        integration: mi.integration,\n                                      }),\n                                      label: 'Edit',\n                                    };\n                                    const startAction: IIntegrationAction = {\n                                      label: 'Start',\n                                      onClick: () =>\n                                        this.promptForAction({\n                                          handleAction: async () => {\n                                            pushNotification(\n                                              i18n.t(\n                                                'integrations:PublishingIntegrationMessage'\n                                              ),\n                                              'info'\n                                            );\n                                            try {\n                                              await deployIntegration(\n                                                mi.integration.id!,\n                                                mi.integration.version!,\n                                                false\n                                              );\n                                            } catch (err) {\n                                              pushNotification(\n                                                i18n.t(\n                                                  'integrations.PublishingIntegrationFailedMessage',\n                                                  { error: err }\n                                                ),\n                                                'warning'\n                                              );\n                                            }\n                                          },\n                                          promptDialogButtonStyle:\n                                            ConfirmationButtonStyle.NORMAL,\n                                          promptDialogButtonText: t(\n                                            'shared:Start'\n                                          ),\n                                          promptDialogIcon:\n                                            ConfirmationIconType.NONE,\n                                          promptDialogText: t(\n                                            'integrations:publishIntegrationModal',\n                                            { name: mi.integration.name }\n                                          ),\n                                          promptDialogTitle: t(\n                                            'integrations:publishIntegrationModalTitle'\n                                          ),\n                                        } as IPromptActionOptions),\n                                    };\n                                    const stopAction: IIntegrationAction = {\n                                      label: 'Stop',\n                                      onClick: () =>\n                                        this.promptForAction({\n                                          handleAction: async () => {\n                                            pushNotification(\n                                              i18n.t(\n                                                'integrations:UnpublishingIntegrationMessage'\n                                              ),\n                                              'info'\n                                            );\n                                            try {\n                                              undeployIntegration(\n                                                mi.integration.id!,\n                                                mi.integration.version!\n                                              );\n                                            } catch (err) {\n                                              pushNotification(\n                                                i18n.t(\n                                                  'integrations.UnpublishingIntegrationFailedMessage',\n                                                  { error: err }\n                                                ),\n                                                'warning'\n                                              );\n                                            }\n                                          },\n                                          promptDialogButtonStyle:\n                                            ConfirmationButtonStyle.NORMAL,\n                                          promptDialogButtonText: t(\n                                            'shared:Stop'\n                                          ),\n                                          promptDialogIcon:\n                                            ConfirmationIconType.NONE,\n                                          promptDialogText: t(\n                                            'integrations:unpublishIntegrationModal',\n                                            { name: mi.integration.name }\n                                          ),\n                                          promptDialogTitle: t(\n                                            'integrations:unpublishIntegrationModalTitle'\n                                          ),\n                                        } as IPromptActionOptions),\n                                    };\n                                    const deleteAction: IIntegrationAction = {\n                                      label: 'Delete',\n                                      onClick: () =>\n                                        this.promptForAction({\n                                          handleAction: async () => {\n                                            pushNotification(\n                                              i18n.t(\n                                                'integrations:DeletingIntegrationMessage'\n                                              ),\n                                              'info'\n                                            );\n                                            try {\n                                              await deleteIntegration(\n                                                mi.integration.id!\n                                              );\n                                            } catch (err) {\n                                              pushNotification(\n                                                i18n.t(\n                                                  'integrations.DeletingIntegrationFailedMessage',\n                                                  { error: err }\n                                                ),\n                                                'warning'\n                                              );\n                                            }\n                                          },\n                                          promptDialogButtonStyle:\n                                            ConfirmationButtonStyle.DANGER,\n                                          promptDialogButtonText: t(\n                                            'shared:Delete'\n                                          ),\n                                          promptDialogIcon:\n                                            ConfirmationIconType.DANGER,\n                                          promptDialogText: t(\n                                            'integrations:deleteIntegrationModal',\n                                            { name: mi.integration.name }\n                                          ),\n                                          promptDialogTitle: t(\n                                            'integrations:deleteIntegrationModalTitle'\n                                          ),\n                                        } as IPromptActionOptions),\n                                    };\n                                    const exportAction: IIntegrationAction = {\n                                      label: 'Export',\n                                      onClick: () =>\n                                        exportIntegration(\n                                          mi.integration.id!,\n                                          `${mi.integration.name}-export.zip`\n                                        ),\n                                    };\n                                    const ciCdAction: IIntegrationAction = {\n                                      label: 'Manage CI/CD',\n                                      onClick: () => {\n                                        this.promptForCiCd(mi.integration.id!);\n                                      },\n                                    };\n                                    const actions: IIntegrationAction[] = [];\n                                    if (canEdit(mi.integration)) {\n                                      actions.push(editAction);\n                                    }\n                                    if (canActivate(mi.integration)) {\n                                      actions.push(startAction);\n                                    }\n                                    if (canDeactivate(mi.integration)) {\n                                      actions.push(stopAction);\n                                    }\n                                    actions.push(deleteAction);\n                                    actions.push(exportAction);\n                                    actions.push(ciCdAction);\n                                    return (\n                                      <IntegrationsListItem\n                                        key={mi.integration.id}\n                                        integrationName={mi.integration.name}\n                                        currentState={\n                                          mi.integration!.currentState!\n                                        }\n                                        targetState={\n                                          mi.integration!.targetState!\n                                        }\n                                        isConfigurationRequired={\n                                          !!(\n                                            mi.integration!.board!.warnings ||\n                                            mi.integration!.board!.errors ||\n                                            mi.integration!.board!.notices\n                                          )\n                                        }\n                                        monitoringValue={\n                                          mi.monitoring &&\n                                          t(\n                                            'integrations:' +\n                                              mi.monitoring.detailedState.value\n                                          )\n                                        }\n                                        monitoringCurrentStep={\n                                          mi.monitoring &&\n                                          mi.monitoring.detailedState\n                                            .currentStep\n                                        }\n                                        monitoringTotalSteps={\n                                          mi.monitoring &&\n                                          mi.monitoring.detailedState.totalSteps\n                                        }\n                                        monitoringLogUrl={getPodLogUrl(\n                                          mi.monitoring\n                                        )}\n                                        startConnectionIcon={getStartIcon(\n                                          process.env.PUBLIC_URL,\n                                          mi.integration\n                                        )}\n                                        finishConnectionIcon={getFinishIcon(\n                                          process.env.PUBLIC_URL,\n                                          mi.integration\n                                        )}\n                                        actions={\n                                          <IntegrationActions\n                                            integrationId={mi.integration!.id!}\n                                            actions={actions}\n                                            detailsHref={resolvers.integration.details(\n                                              {\n                                                integrationId: mi.integration\n                                                  .id!,\n                                              }\n                                            )}\n                                          />\n                                        }\n                                        i18nConfigurationRequired={t(\n                                          'integrations:ConfigurationRequired'\n                                        )}\n                                        i18nError={t('shared:Error')}\n                                        i18nPublished={t('shared:Published')}\n                                        i18nUnpublished={t(\n                                          'shared:Unpublished'\n                                        )}\n                                        i18nProgressPending={t(\n                                          'shared:Pending'\n                                        )}\n                                        i18nProgressStarting={t(\n                                          'integrations:progressStarting'\n                                        )}\n                                        i18nProgressStopping={t(\n                                          'integrations:progressStopping'\n                                        )}\n                                        i18nLogUrlText={t('shared:viewLogs')}\n                                      />\n                                    );\n                                  } catch (e) {\n                                    return (\n                                      <IntegrationsListItemUnreadable\n                                        key={mi.integration.id}\n                                        integrationName={\n                                          (mi &&\n                                            mi.integration &&\n                                            mi.integration.name) ||\n                                          'An integration'\n                                        }\n                                        i18nDescription={\n                                          \"Sorry, we can't display more information about this integration right now.\"\n                                        }\n                                        rawObject={JSON.stringify(\n                                          mi.integration,\n                                          null,\n                                          2\n                                        )}\n                                      />\n                                    );\n                                  }\n                                }\n                              )\n                            }\n                          </WithLoader>\n                        </IntegrationsList>\n                      </>\n                    )}\n                  </WithIntegrationHelpers>\n                )}\n              </UIContext.Consumer>\n            )}\n          </AppContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n  /**\n   * Optional. The one-based active sub-step number.\n   */\n  subStep?: number;\n}\n\nexport interface IIntegrationCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IIntegrationCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IIntegrationCreatorBreadcrumbsProps#subStep}\n */\nexport class IntegrationCreatorBreadcrumbs extends React.Component<\n  IIntegrationCreatorBreadcrumbsProps,\n  IIntegrationCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                'Choose connection',\n                'Choose action',\n                'Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Start connection'}\n              subSteps={[\n                '1A. Choose connection',\n                '1B. Choose action',\n                '1C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Finish connection'}\n              subSteps={[\n                '2A. Choose connection',\n                '2B. Choose action',\n                '2C. Configure action',\n              ]}\n              activeSubstep={this.props.subStep}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 4}\n              isDisabled={this.props.step < 4}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Create an integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { IntegrationDeploymentOverview } from '@syndesis/models';\nimport {\n  IntegrationActions,\n  IntegrationDetailHistoryListViewItem,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\n\nexport interface IIntegrationDetailDeploymentsProps {\n  actions: any;\n  deployments: IntegrationDeploymentOverview[];\n  integrationId: string;\n  updatedAt: number;\n  version: number;\n}\n\nexport class IntegrationDetailHistory extends React.Component<\n  IIntegrationDetailDeploymentsProps\n> {\n  public render() {\n    const deployments = this.props.deployments ? this.props.deployments : [];\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t =>\n          deployments.map((deployment, idx) => {\n            return (\n              <IntegrationDetailHistoryListViewItem\n                key={idx}\n                actions={\n                  <IntegrationActions\n                    integrationId={this.props.integrationId}\n                    actions={this.props.actions}\n                  />\n                }\n                currentState={deployment.currentState!}\n                i18nTextLastPublished={t('integrations:detail:lastPublished')}\n                i18nTextVersion={t('shared:Version')}\n                updatedAt={deployment.updatedAt}\n                version={deployment.version}\n              />\n            );\n          })\n        }\n      </Translation>\n    );\n  }\n}\n","import { getIntegrationStepIcon, getSteps } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport {\n  IntegrationStepsHorizontalItem,\n  IntegrationStepsHorizontalView,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationDetailStepsProps {\n  integration: Integration;\n}\n\nexport class IntegrationDetailSteps extends React.Component<\n  IIntegrationDetailStepsProps\n> {\n  public render() {\n    const flowId = this.props.integration.flows![0].id!;\n    const steps = getSteps(this.props.integration, flowId);\n\n    return (\n      <IntegrationStepsHorizontalView>\n        {steps.map((s, idx) => {\n          const isFirst = idx === 0;\n          const stepName = s.connection!\n            ? s.connection!.connector!.name\n            : s.name;\n\n          return (\n            <React.Fragment key={idx}>\n              <IntegrationStepsHorizontalItem\n                name={stepName}\n                icon={getIntegrationStepIcon(\n                  process.env.PUBLIC_URL,\n                  this.props.integration,\n                  flowId,\n                  idx\n                )}\n                isFirst={isFirst}\n              />\n            </React.Fragment>\n          );\n        })}\n      </IntegrationStepsHorizontalView>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IIntegrationEditorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * editor flow.\n * @see [step]{@link IIntegrationEditorBreadcrumbsProps#step}\n */\nexport class IntegrationEditorBreadcrumbs extends React.Component<\n  IIntegrationEditorBreadcrumbsProps,\n  IIntegrationEditorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IIntegrationEditorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Save the integration'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Add to integration'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={4}\n              title={'Save the integration'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport {\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IIntegrationEditorSidebarProps {\n  /**\n   * the list of steps to render.\n   */\n  steps: Step[];\n  /**\n   * the zero-based index of a configured step that should be highlighted as\n   * active.\n   * This should not be set in conjunction with [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n   */\n  activeIndex?: number;\n  /**\n   * the zero-based index where a new step is being added.\n   * This should not be set in conjunction with [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n   */\n  addAtIndex?: number;\n  /**\n   * the icon to show in the circle of the step that is being added.\n   */\n  addIcon?: any;\n  /**\n   * The title of the information table shown for the step that is being added,\n   * in the extended view.\n   */\n  addI18nTitle?: string;\n  /**\n   * The text to show on the tooltip that opens when hovering with the mouse on\n   * the icon.\n   */\n  addI18nTooltip?: string;\n  /**\n   * The description of the information table shown for the step that is being\n   * added, in the extended view.\n   */\n  addI18nDescription?: string;\n}\n\n/**\n * This component shows the steps of an integration in a vertical fashion. It's\n * meant to be used as the sidebar of the `IntegrationEditorLayout` component.\n * Steps are rendered as circles, showing the step's connection icon.\n *\n * It offers two visualization, a compact one where just the icons are shown,\n * and an expanded one where additional information about the step are shown in\n * a table next to the step's circle.\n *\n * It can also show a step that is being added to the integration by providing\n * its position and some information about the configuration step.\n *\n * @see [steps]{@link IIntegrationEditorSidebarProps#steps}\n * @see [activeIndex]{@link IIntegrationEditorSidebarProps#activeIndex}\n * @see [addAtIndex]{@link IIntegrationEditorSidebarProps#addAtIndex}\n * @see [addIcon]{@link IIntegrationEditorSidebarProps#addIcon}\n * @see [addI18nTitle]{@link IIntegrationEditorSidebarProps#addI18nTitle}\n * @see [addI18nTooltip]{@link IIntegrationEditorSidebarProps#addI18nTooltip}\n * @see [addI18nDescription]{@link IIntegrationEditorSidebarProps#addI18nDescription}\n */\nexport class IntegrationEditorSidebar extends React.Component<\n  IIntegrationEditorSidebarProps\n> {\n  public render() {\n    return (\n      <IntegrationVerticalFlow>\n        {({ expanded }) =>\n          this.props.steps.map((s, idx) => {\n            const isActive = idx === this.props.activeIndex;\n            const hasAddStep = this.props.addAtIndex === idx + 1;\n            const isAfterActiveAddStep = this.props.addAtIndex! - 1 < idx;\n            const position = isAfterActiveAddStep ? idx + 2 : idx + 1;\n\n            const activeAddStep = (\n              <IntegrationFlowStepGeneric\n                icon={this.props.addIcon || <i className={'fa fa-plus'} />}\n                i18nTitle={this.props.addI18nTitle!}\n                i18nTooltip={this.props.addI18nTooltip!}\n                active={true}\n                showDetails={expanded}\n                description={this.props.addI18nDescription!}\n              />\n            );\n            return (\n              <React.Fragment key={idx}>\n                {s.stepKind === 'endpoint' && (\n                  <IntegrationFlowStepWithOverview\n                    icon={\n                      <img\n                        src={getConnectionIcon(\n                          process.env.PUBLIC_URL,\n                          s.connection!\n                        )}\n                        width={24}\n                        height={24}\n                      />\n                    }\n                    i18nTitle={`${position}. ${s.action!.name}`}\n                    i18nTooltip={`${position}. ${s.action!.name}`}\n                    active={isActive}\n                    showDetails={expanded}\n                    name={s.connection!.connector!.name}\n                    action={s.action!.name}\n                    dataType={'TODO'}\n                  />\n                )}\n                {hasAddStep ? activeAddStep : null}\n              </React.Fragment>\n            );\n          })\n        }\n      </IntegrationVerticalFlow>\n    );\n  }\n}\n","export * from './Integrations';\nexport * from './IntegrationCreatorBreadcrumbs';\nexport * from './IntegrationDetailHistory';\nexport * from './IntegrationDetailSteps';\nexport * from './IntegrationEditorBreadcrumbs';\nexport * from './IntegrationEditorSidebar';\nexport * from './IntegrationEditorStepAdder';\n","import { include } from 'named-urls';\n\nexport default include('/customizations', {\n  apiConnectors: include('api-connector', {\n    apiConnector: ':apiConnectorId',\n    create: include('create/swagger-connector', {\n      review: 'review',\n      save: 'save',\n      security: 'security',\n      upload: 'upload',\n    }),\n    list: '',\n  }),\n  extensions: include('extensions', {\n    extension: include(':extensionId', {\n      details: '',\n      update: 'update',\n    }),\n    import: 'import',\n    list: '',\n  }),\n  root: '',\n});\n","module.exports = __webpack_public_path__ + \"static/media/syndesis_logo_full_darkbkg.9c467d96.svg\";","import { include } from 'named-urls';\n\nexport default include('/data', {\n  root: '',\n  virtualizations: include('virtualizations', {\n    create: 'create',\n    import: 'import',\n    list: '',\n    virtualization: include(':virtualizationId', {\n      metrics: 'metrics',\n      relationship: 'relationship',\n      root: '',\n      sqlClient: 'sqlClient',\n      views: include('views', {\n        importSource: include('importSource', {\n          root: '',\n          selectConnection: 'selectConnection',\n          selectViews: 'selectViews',\n        }),\n        root: '',\n      }),\n    }),\n  }),\n});\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { Connection, Connector } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\nexport default {\n  connections: makeResolverNoParams(routes.connections),\n  connection: {\n    details: makeResolver<{ connection: Connection }>(\n      routes.connection.details,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n    edit: makeResolver<{ connection: Connection }>(\n      routes.connection.edit,\n      ({ connection }) => ({\n        params: {\n          connectionId: connection.id,\n        },\n        state: {\n          connection,\n        },\n      })\n    ),\n  },\n  create: {\n    selectConnector: makeResolverNoParams(routes.create.selectConnector),\n    configureConnector: makeResolver<{\n      connector: Connector;\n    }>(routes.create.configureConnector, ({ connector }) => ({\n      params: {\n        connectorId: connector.id,\n      },\n      state: {\n        connector,\n      },\n    })),\n    review: makeResolver<{\n      connector: Connector;\n      configuredProperties: { [key: string]: string };\n    }>(routes.create.review, ({ connector, configuredProperties }) => ({\n      state: {\n        connector,\n        configuredProperties,\n      },\n    })),\n  },\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppContext {\n  config: IConfigFile;\n  getPodLogUrl: (\n    monitoring: IntegrationMonitoring | undefined\n  ) => string | undefined;\n}\n\nexport const AppContextDefaultValue = {} as IAppContext;\n\nexport const AppContext = React.createContext<IAppContext>(\n  AppContextDefaultValue\n);\n","import { INotificationType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IUIContext {\n  hideNavigation(): void;\n  showNavigation(): void;\n  pushNotification(msg: string, type: INotificationType): void;\n}\n\nexport const UIContextDefaultValue = {} as IUIContext;\n\nexport const UIContext = React.createContext<IUIContext>(UIContextDefaultValue);\n","import {\n  AppLayout,\n  AppTopMenu,\n  INotification,\n  INotificationType,\n  Notifications,\n  PfDropdownItem,\n  PfVerticalNavItem,\n} from '@syndesis/ui';\nimport { WithRouter } from '@syndesis/utils';\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { PageNotFound, WithErrorBoundary } from '../shared';\nimport { IAppRoute } from './App';\nimport logo from './syndesis_logo_full_darkbkg.svg';\nimport { UIContext } from './UIContext';\n\nexport interface IAppUIProps {\n  routes: IAppRoute[];\n}\n\nexport const UI: React.FunctionComponent<IAppUIProps> = ({ routes }) => {\n  const [showNavigation, setShowNavigation] = useState(true);\n  const onHideNavigation = () => setShowNavigation(false);\n  const onShowNavigation = () => setShowNavigation(true);\n\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n  const pushNotification = (msg: string, type: INotificationType) => {\n    setNotifications([\n      ...notifications,\n      {\n        key: Date.now().toString(),\n        message: msg,\n        type,\n      },\n    ]);\n  };\n  const onRemoveNotification = (notification: INotification) => {\n    setNotifications(\n      notifications.filter((n: INotification) => n.key !== notification.key)\n    );\n  };\n\n  return (\n    <UIContext.Provider\n      value={{\n        hideNavigation: onHideNavigation,\n        pushNotification,\n        showNavigation: onShowNavigation,\n      }}\n    >\n      <Translation ns={['app', 'shared']}>\n        {t => (\n          <AppLayout\n            appNav={\n              <AppTopMenu username={'developer'}>\n                <PfDropdownItem>\n                  <Link\n                    to={'/logout'}\n                    className=\"pf-c-dropdown__menu-item\"\n                    children={t('Logout')}\n                  />\n                </PfDropdownItem>\n              </AppTopMenu>\n            }\n            verticalNav={routes.map(({ exact, icon, label, to }, index) => (\n              <PfVerticalNavItem\n                exact={exact}\n                icon={icon}\n                label={t(label)}\n                to={to}\n                key={index}\n                data-testid={`navbar-link-${to}`}\n              />\n            ))}\n            pictograph={\n              <img src={logo} alt=\"Syndesis\" style={{ minWidth: '164px' }} />\n            }\n            logoHref={'/'}\n            showNavigation={showNavigation}\n            onNavigationCollapse={onHideNavigation}\n            onNavigationExpand={onShowNavigation}\n          >\n            <Notifications\n              notifications={notifications}\n              notificationTimerDelay={8000}\n              removeNotificationAction={onRemoveNotification}\n            />\n            <WithRouter>\n              {({ match }) => (\n                <WithErrorBoundary key={match.url}>\n                  <Switch>\n                    {routes.map(({ to, exact, component }, index) => (\n                      <Route\n                        path={to}\n                        exact={exact}\n                        component={component}\n                        key={index}\n                      />\n                    ))}\n                    <Route component={PageNotFound} />\n                  </Switch>\n                </WithErrorBoundary>\n              )}\n            </WithRouter>\n          </AppLayout>\n        )}\n      </Translation>\n    </UIContext.Provider>\n  );\n};\n","import { IntegrationMonitoring } from '@syndesis/models';\nimport * as React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './App.css';\nimport { AppContext } from './AppContext';\nimport { UI } from './UI';\nimport { IConfigFile } from './WithConfig';\n\nexport interface IAppRoute {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n  exact?: boolean;\n  icon: string;\n  label: string;\n  to: string;\n}\n\nexport interface IAppBaseProps {\n  config: IConfigFile;\n  routes: IAppRoute[];\n}\n\nexport const App: React.FunctionComponent<IAppBaseProps> = ({\n  config,\n  routes,\n}) => {\n  const logout = () => {\n    // do nothing\n  };\n\n  const getPodLogUrl = (\n    monitoring: IntegrationMonitoring | undefined\n  ): string | undefined => {\n    if (\n      !config ||\n      !monitoring ||\n      !monitoring.linkType ||\n      !monitoring.namespace ||\n      !monitoring.podName\n    ) {\n      return undefined;\n    }\n    const baseUrl = `${config.consoleUrl}/project/${\n      monitoring.namespace\n    }/browse/pods/${monitoring.podName}?tab=`;\n    switch (monitoring.linkType) {\n      case 'LOGS':\n        return baseUrl + 'logs';\n      case 'EVENTS':\n        return baseUrl + 'events';\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        config,\n        getPodLogUrl,\n        logout,\n      }}\n    >\n      <UI routes={routes} />\n    </AppContext.Provider>\n  );\n};\n","export * from './App';\nexport * from './AppContext';\nexport * from './UIContext';\n","import { IFormDefinition, IFormDefinitionProperty } from '@syndesis/auto-form';\nimport {\n  IConfigurationProperties,\n  IConfigurationProperty,\n} from '@syndesis/models';\n\n/**\n * Maps an API map of ConfigurationProperty objects to\n * an autoform IFormDefinition object.  Use on properties\n * objects from backend responses to ensure they're mapped\n * properly\n *\n * @param properties\n */\nexport function toFormDefinition(properties: IConfigurationProperties) {\n  if (!properties) {\n    throw new Error('Undefined value passed to form definition converter');\n  }\n  const answer: IFormDefinition = {};\n  Object.keys(properties).forEach(key => {\n    answer[key] = toFormDefinitionProperty(properties[key]);\n  });\n  return answer;\n}\n\n/**\n * Maps an API ConfigurationProperty object to an autoform IFormDefinitionPropertyObject\n * @param property\n */\nexport function toFormDefinitionProperty(property: IConfigurationProperty) {\n  const {\n    cols,\n    max,\n    min,\n    multiple,\n    rows,\n    controlHint,\n    controlTooltip,\n    labelHint,\n    labelTooltip,\n    ...formDefinitionProperty\n  } = property as any; // needed, ConfigurationProperty is a lie\n  return {\n    ...formDefinitionProperty,\n    controlHint: controlHint || controlTooltip,\n    fieldAttributes: {\n      cols,\n      max,\n      min,\n      multiple,\n      rows,\n    },\n    labelHint: labelHint || labelTooltip,\n  } as IFormDefinitionProperty;\n}\n","const ALPHABET =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nconst RANDOMNESS: number[] = [];\nlet lastTimestamp = 0;\n\n/**\n * Generates lexically sortable unique keys based on:\n *\n * https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html\n *\n * You can also consider the generated kys to be like UUIDS except:\n * (1) strictly increment from the generating node's point of view\n * (2) loosely increment based on relative machine time when viewed across nodes.\n */\nexport function key() {\n  // first time setup.. initialize the randomness...\n  if (RANDOMNESS.length === 0) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i] = Math.floor(Math.random() * 64);\n    }\n  }\n\n  // we build the resulting key backwards. The most significant bits at the front of the key.\n  let result = '';\n  const timestamp = new Date().getTime();\n\n  // Lets encode the random part of the key. (72 bits of randomness)\n  // 72/6 = 12 base64 characters.\n\n  // increment randomness when we being called too keys too quickly.\n  if (timestamp === lastTimestamp) {\n    for (let i = 0; i < 12; i++) {\n      RANDOMNESS[i]++;\n      if (RANDOMNESS[i] === 64) {\n        RANDOMNESS[i] = 0; // we need to carry to the next random byte.\n      } else {\n        break; // done incrementing.\n      }\n    }\n  }\n\n  for (let i = 0; i < 12; i++) {\n    result = ALPHABET.charAt(RANDOMNESS[i]) + result;\n  }\n\n  // Base64 encodes 6 bits of data per character. We want to encode\n  // 6 bytes of the timestamp (48 bits), 48/6 = 8 base64 chars for the ts part\n  // the key.\n  let remainingTimestamp = timestamp;\n  for (let i = 0; i < 8; i++) {\n    result = ALPHABET.charAt(remainingTimestamp % 64) + result;\n    remainingTimestamp = Math.floor(remainingTimestamp / 64);\n  }\n\n  lastTimestamp = timestamp;\n  return result;\n}\n","import { IActiveFilter, IFilterType, ISortType } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IWithListViewToolbarHelpers\n  extends IWithListViewToolbarHelpersState {\n  onClearFilters(event: React.MouseEvent<HTMLAnchorElement>): void;\n  onFilterAdded(title: string, value: string): void;\n  onFilterValueSelected(filterValue: { id: string; title: string }): void;\n  onRemoveFilter(filter: IActiveFilter): void;\n  onSelectFilterType(filterType: IFilterType): void;\n  onToggleCurrentSortDirection(): void;\n  onUpdateCurrentSortType(sortType: string): void;\n  onUpdateCurrentValue(event: Event): void;\n  onValueKeyPress(keyEvent: KeyboardEvent): void;\n}\n\nexport interface IWithListViewToolbarHelpersProps {\n  defaultFilterType: IFilterType;\n  defaultSortType: ISortType;\n  children(props: IWithListViewToolbarHelpers): any;\n}\n\nexport interface IWithListViewToolbarHelpersState {\n  activeFilters: IActiveFilter[];\n  currentFilterType: IFilterType;\n  currentSortType: string;\n  currentValue: any;\n  filterCategory: any;\n  isSortAscending: boolean;\n}\n\nexport class WithListViewToolbarHelpers extends React.Component<\n  IWithListViewToolbarHelpersProps,\n  IWithListViewToolbarHelpersState\n> {\n  constructor(props: IWithListViewToolbarHelpersProps) {\n    super(props);\n    this.state = {\n      activeFilters: [] as IActiveFilter[],\n      currentFilterType: this.props.defaultFilterType,\n      currentSortType: this.props.defaultSortType.title,\n      currentValue: '',\n      filterCategory: null,\n      isSortAscending: true,\n    };\n  }\n\n  public onUpdateCurrentValue = (event: Event) => {\n    this.setState({ currentValue: (event.target as HTMLInputElement).value });\n  };\n\n  public onValueKeyPress = (keyEvent: KeyboardEvent) => {\n    const { currentValue, currentFilterType } = this.state;\n\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.onFilterAdded(currentFilterType.title, currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  };\n\n  public onFilterAdded = (title: string, value: string) => {\n    const { activeFilters } = this.state;\n    this.setState({\n      activeFilters: [\n        ...activeFilters,\n        {\n          title,\n          value,\n        } as IActiveFilter,\n      ],\n    });\n  };\n\n  public onSelectFilterType = (filterType: IFilterType) => {\n    const { currentFilterType } = this.state;\n    if (currentFilterType !== filterType) {\n      this.setState({ currentValue: '', currentFilterType: filterType });\n    }\n  };\n\n  public onFilterValueSelected = (filterValue: {\n    id: string;\n    title: string;\n  }) => {\n    const { currentFilterType } = this.state;\n\n    this.setState({ currentValue: filterValue.title });\n    if (filterValue) {\n      this.onFilterAdded(currentFilterType.title, filterValue.title);\n    }\n  };\n\n  public onRemoveFilter = (filter: IActiveFilter) => {\n    const { activeFilters } = this.state;\n\n    const index = activeFilters.indexOf(filter);\n    if (index > -1) {\n      const updated = [\n        ...activeFilters.slice(0, index),\n        ...activeFilters.slice(index + 1),\n      ];\n      this.setState({ activeFilters: updated });\n    }\n  };\n\n  public onClearFilters = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    this.setState({ activeFilters: [] });\n  };\n\n  public onToggleCurrentSortDirection = () => {\n    const { isSortAscending } = this.state;\n\n    this.setState({ isSortAscending: !isSortAscending });\n  };\n\n  public onUpdateCurrentSortType = (sortType: string) => {\n    const { currentSortType } = this.state;\n\n    if (currentSortType !== sortType) {\n      this.setState({\n        currentSortType: sortType,\n        isSortAscending: true,\n      });\n    }\n  };\n\n  public render() {\n    return this.props.children({\n      onClearFilters: this.onClearFilters,\n      onFilterAdded: this.onFilterAdded,\n      onFilterValueSelected: this.onFilterValueSelected,\n      onRemoveFilter: this.onRemoveFilter,\n      onSelectFilterType: this.onSelectFilterType,\n      onToggleCurrentSortDirection: this.onToggleCurrentSortDirection,\n      onUpdateCurrentSortType: this.onUpdateCurrentSortType,\n      onUpdateCurrentValue: this.onUpdateCurrentValue,\n      onValueKeyPress: this.onValueKeyPress,\n      ...this.state,\n    });\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithLoaderProps {\n  /**\n   * If true, the [errorChildren]{@link IWithLoaderProps#errorChildren} will be\n   * rendered.\n   */\n  error: boolean;\n  /**\n   * If true, the [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n   * will be rendered.\n   */\n  loading: boolean;\n  /**\n   * The minimum amount of time to wait before invoking the [children]{@link IWithLoaderProps#children}\n   * render prop. If high enough, it will avoid a flash of loading component.\n   * Defaults to 500ms.\n   */\n  minWait?: number;\n  /**\n   * The content to render when data is loading.\n   */\n  loaderChildren: JSX.Element;\n  /**\n   * The content to render when error occurred while loading data.\n   */\n  errorChildren: JSX.Element;\n\n  /**\n   * A render prop that will be invoked if both [loading]{@link IWithLoaderProps#loading}\n   * and [error]{@link IWithLoaderProps#error} are `false`.\n   */\n  children(): any;\n}\n\nexport interface IWithLoaderState {\n  loaded: boolean;\n}\n\n/**\n * A component to handle asynchronous data-loading. It will show the provided\n * loader component for a minimum amount of time - to avoid flash of loading\n * component - before invoking the children render prop.\n * It will also handle the error state rendering the provided error component\n * in case of errors loading the data.\n *\n * @see [error]{@link IWithLoaderProps#error}\n * @see [loading]{@link IWithLoaderProps#loading}\n * @see [minWait]{@link IWithLoaderProps#minWait}\n * @see [loaderChildren]{@link IWithLoaderProps#loaderChildren}\n * @see [errorChildren]{@link IWithLoaderProps#errorChildren}\n * @see [children]{@link IWithLoaderProps#children}\n */\nexport class WithLoader extends React.PureComponent<\n  IWithLoaderProps,\n  IWithLoaderState\n> {\n  public static defaultProps = {\n    minWait: 500,\n  };\n\n  protected waitTimeout?: number;\n\n  constructor(props: IWithLoaderProps) {\n    super(props);\n    this.state = {\n      loaded: !this.props.loading,\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IWithLoaderProps) {\n    this.setState({\n      loaded: !nextProps.loading,\n    });\n  }\n\n  public componentDidUpdate(prevProps: IWithLoaderProps) {\n    if (!this.props.loading && !this.waitTimeout) {\n      this.setTimeout();\n    }\n  }\n\n  public render() {\n    if (this.props.error) {\n      return this.props.errorChildren;\n    }\n    if (!this.state.loaded) {\n      return this.props.loaderChildren;\n    }\n    return this.props.children();\n  }\n\n  protected setTimeout() {\n    this.clearTimeout();\n    this.waitTimeout = window.setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, this.props.minWait!);\n  }\n\n  protected clearTimeout() {\n    if (this.waitTimeout) {\n      clearTimeout(this.waitTimeout);\n      this.waitTimeout = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { Route, RouteChildrenProps } from 'react-router';\n\nexport interface IWithRouteDataProps<P, S> {\n  /**\n   * A render propr that will receive the route params and state.\n   * @param params - the route params, with type `P`.\n   * @param state - the route state, with type `S`.\n   * @param route - the raw route object, as provided by the `Route` component.\n   */\n  children(params: P, state: S, route: RouteChildrenProps): any;\n}\n\n/**\n * A render-prop component that returns a route params - with type `P` - and\n * state - with type `S`.\n * *Warning:* this component doesn't provide any assurance on the returned shape\n * of neither the params nor the state objects.\n * @see [children]{@link IWithRouteDataProps#children}\n */\nexport class WithRouteData<P, S> extends React.Component<\n  IWithRouteDataProps<P, S>\n> {\n  public render() {\n    return (\n      <Route>\n        {route => {\n          if (!route.match) {\n            throw new Error(\"Route doesn't have a match\");\n          }\n          const params: P = route.match.params || ({} as P);\n          const state: S = route.location.state || ({} as S);\n          return this.props.children(params, state, route);\n        }}\n      </Route>\n    );\n  }\n}\n","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nexport interface IWithRouterProps extends RouteComponentProps {\n  children(router: RouteComponentProps): any;\n}\n\nexport class WithRouterBase extends React.Component<IWithRouterProps> {\n  public render() {\n    const { children, ...props } = this.props;\n    return children(props);\n  }\n}\n\nexport const WithRouter = withRouter<IWithRouterProps>(WithRouterBase);\n","import { reverse } from 'named-urls';\n\nexport interface IRoute<P, S> {\n  params?: P;\n  state?: S;\n  route?: string;\n}\n\nexport interface IResolvedRoute<P, S> extends IRoute<P, S> {\n  pathname: string;\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolver<T, P = any, S = any>(\n  defaultRoute: string,\n  mapper: (data: T) => IRoute<P, S>\n) {\n  return (data: T): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper(data);\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * Use `mapper` to write the business logic required to convert the `data` object\n * to the basic params that can be passed in an url (strings and numbers), and to\n * set the state object that will be pushed in the history together with the url.\n * @param defaultRoute\n * @param mapper\n */\nexport function makeResolverNoParamsWithDefaults<P = any, S = any>(\n  defaultRoute: string,\n  mapper: () => IRoute<P, S>\n) {\n  return (): IResolvedRoute<P, S> => {\n    const { params, route, state } = mapper();\n    return {\n      params,\n      pathname: reverse(route || defaultRoute, params || {}),\n      route: route || defaultRoute,\n      state,\n    };\n  };\n}\n\n/**\n * Creates a function that takes a route and some `data` `T` that returns the\n * reversed URL.\n * @param route\n */\nexport function makeResolverNoParams(route: string) {\n  return (): IResolvedRoute<null, null> => ({\n    pathname: reverse(route),\n    route,\n  });\n}\n","import { OptionalInt } from '@syndesis/models';\n\n/**\n *\n * @param value the value being used\n * @returns the `OptionalInt` object created from the specified value\n */\nexport function createOptionalInt(value: number): OptionalInt {\n  return { present: true, asInt: value };\n}\n\n/**\n * @param optional the `OptionalInt` whose value is being requested\n * @param defaultValue the value to return if no value exists\n * @returns the int value (defaults to zero)\n */\nexport function optionalIntValue(\n  optional: OptionalInt | undefined,\n  defaultValue: number = 0\n): number {\n  if (optional && optional.present) {\n    const value = optional.asInt;\n    return value ? value : defaultValue;\n  }\n\n  return defaultValue;\n}\n\n/**\n * @param optional the value whose value is being checked\n * @returns true if the optional exists and there is a value\n */\nexport function optionalIntHasValue(\n  optional: OptionalInt | undefined\n): boolean {\n  return optional && optional.present ? optional.present : false;\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { include } from 'named-urls';\n\nexport default include('/connections', {\n  connections: '',\n  connection: include(':connectionId', {\n    edit: 'edit',\n    details: '',\n  }),\n  create: include('create', {\n    selectConnector: 'connection-basics',\n    configureConnector: 'configure-fields/:connectorId',\n    review: 'review',\n    root: '',\n  }),\n});\n","import { IFormControl } from '../models';\n\nexport function getValidationState({ form, field }: IFormControl) {\n  return form.touched[field.name] && form.errors[field.name]\n    ? 'error'\n    : form.touched[field.name]\n    ? 'success'\n    : null;\n}\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormInputComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      placeholder={props.property.placeholder}\n      type={props.type || 'text'}\n      onChange={props.field.onChange}\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nfunction getSelectedValues(select: HTMLSelectElement) {\n  return Array.from(select.selectedOptions).map(option => option.value);\n}\n\nexport const FormSelectComponent: React.FunctionComponent<\n  IFormControl\n> = props => {\n  const isMultiple =\n    props.property.fieldAttributes && props.property.fieldAttributes.multiple;\n  const { onChange, onBlur, ...field } = props.field;\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isMultiple) {\n      const newValue = getSelectedValues(event.currentTarget);\n      props.form.setFieldValue(props.field.name, newValue);\n    } else {\n      onChange(event);\n    }\n  };\n  return (\n    <FormGroup\n      controlId={field.name}\n      validationState={getValidationState(props)}\n    >\n      <ControlLabel>{props.property.displayName}</ControlLabel>\n      {props.property.labelHint && (\n        <ControlLabel>\n          <FieldLevelHelp content={props.property.labelHint} />\n        </ControlLabel>\n      )}\n      <FormControl\n        {...props.property.fieldAttributes}\n        {...props.field}\n        onChange={handleChange}\n        onBlur={handleChange}\n        data-testid={props.field.name}\n        disabled={props.form.isSubmitting || props.property.disabled}\n        componentClass=\"select\"\n        title={props.property.controlHint}\n      >\n        {props.property.enum &&\n          props.property.enum.map((opt: any) => (\n            <option key={opt.value} value={opt.value}>\n              {opt.label}\n            </option>\n          ))}\n      </FormControl>\n      <HelpBlock>\n        {props.property.description}\n        {props.form.errors[props.field.name]}\n      </HelpBlock>\n    </FormGroup>\n  );\n};\n","import {\n  ControlLabel,\n  FieldLevelHelp,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormTextAreaComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <ControlLabel>{props.property.displayName}</ControlLabel>\n    {props.property.labelHint && (\n      <ControlLabel>\n        <FieldLevelHelp content={props.property.labelHint} />\n      </ControlLabel>\n    )}\n    <FormControl\n      {...props.property.fieldAttributes}\n      {...props.field}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      componentClass=\"textarea\"\n      title={props.property.controlHint}\n    />\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import {\n  Checkbox,\n  FieldLevelHelp,\n  FormGroup,\n  HelpBlock,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\nexport const FormCheckboxComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <FormGroup\n    controlId={props.field.name}\n    validationState={getValidationState(props)}\n  >\n    <Checkbox\n      {...props.property.fieldAttributes}\n      {...props.field}\n      id={props.field.name}\n      checked={props.field.value}\n      data-testid={props.field.name}\n      disabled={props.form.isSubmitting || props.property.disabled}\n      title={props.property.controlHint}\n    >\n      {props.property.displayName}\n      {props.property.labelHint && (\n        <FieldLevelHelp\n          className={'inline-block'}\n          content={props.property.labelHint}\n        />\n      )}\n    </Checkbox>\n    <HelpBlock>\n      {props.property.description}\n      {props.form.errors[props.field.name]}\n    </HelpBlock>\n  </FormGroup>\n);\n","import * as React from 'react';\nimport { IFormControl } from '../models';\n\nexport const FormHiddenComponent: React.FunctionComponent<\n  IFormControl\n> = props => (\n  <div>\n    <input\n      {...props.property.fieldAttributes}\n      {...props.field}\n      type={props.type}\n      id={props.name}\n      data-testid={props.name}\n    />\n    {props.form.touched[props.field.name] &&\n      props.form.errors[props.field.name] && (\n        <div className=\"error\">{props.form.errors[props.field.name]}</div>\n      )}\n  </div>\n);\n","import {\n  ControlLabel,\n  DropdownButton,\n  FieldLevelHelp,\n  Form,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n} from 'patternfly-react';\nimport * as React from 'react';\nimport { IFormControl } from '../models';\nimport { getValidationState } from './helpers';\n\ninterface IDuration {\n  label: string;\n  value: number;\n}\n\nconst durations = [\n  {\n    label: 'Milliseconds',\n    value: 1,\n  },\n  {\n    label: 'Seconds',\n    value: 1000,\n  },\n  {\n    label: 'Minutes',\n    value: 60000,\n  },\n  {\n    label: 'Hours',\n    value: 3600000,\n  },\n  {\n    label: 'Days',\n    value: 86400000,\n  },\n] as IDuration[];\n\nfunction calculateDuration(duration: IDuration, initialValue: number) {\n  return initialValue / duration.value;\n}\n\nfunction calculateValue(duration: IDuration, value: number) {\n  return value * duration.value;\n}\n\nexport interface IFormDurationComponentState {\n  duration: IDuration;\n}\n\nexport class FormDurationComponent extends React.Component<\n  IFormControl,\n  IFormDurationComponentState\n> {\n  private inputField: HTMLInputElement = undefined as any;\n  constructor(props: IFormControl) {\n    super(props);\n    // find the highest duration that keeps the duration above 1\n    const index =\n      durations.findIndex(d => !(this.props.field.value / d.value >= 1.0)) - 1;\n    // if the index is invalid than we use the highest available duration.\n    const duration = durations[index] || durations[durations.length - 1];\n    this.state = {\n      duration,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.receiveInputRef = this.receiveInputRef.bind(this);\n  }\n  public receiveInputRef(ref: HTMLInputElement) {\n    this.inputField = ref;\n  }\n  public handleOnSelect(eventKey: number, event: React.ChangeEvent) {\n    const newDuration =\n      durations.find(duration => duration.value === eventKey) || durations[0];\n    this.setState({\n      duration: newDuration,\n    });\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(newDuration, this.inputField.valueAsNumber),\n      true\n    );\n  }\n  public handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public handleBlur(event: React.ChangeEvent<HTMLInputElement>) {\n    this.props.form.setFieldValue(\n      this.props.field.name,\n      calculateValue(this.state.duration, event.target.valueAsNumber),\n      true\n    );\n  }\n  public render() {\n    return (\n      <FormGroup\n        controlId={this.props.field.name}\n        validationState={getValidationState(this.props)}\n      >\n        <ControlLabel>{this.props.property.displayName}</ControlLabel>\n        {this.props.property.labelHint && (\n          <ControlLabel>\n            <FieldLevelHelp content={this.props.property.labelHint} />\n          </ControlLabel>\n        )}\n        <Form.InputGroup>\n          <Form.FormControl\n            min={0}\n            {...this.props.property.fieldAttributes}\n            data-testid={this.props.field.name}\n            type={'number'}\n            defaultValue={calculateDuration(\n              this.state.duration,\n              this.props.field.value\n            )}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n            onChange={this.handleChange}\n            onBlur={this.handleBlur}\n            inputRef={this.receiveInputRef}\n            title={this.props.property.controlHint}\n          />\n          <DropdownButton\n            id={this.props.field.name + '-duration'}\n            componentClass={Form.InputGroup.Button}\n            title={this.state.duration.label}\n            onSelect={this.handleOnSelect}\n            disabled={\n              this.props.form.isSubmitting || this.props.property.disabled\n            }\n          >\n            {durations.map((duration, index) => (\n              <MenuItem key={index} eventKey={duration.value}>\n                {duration.label}\n              </MenuItem>\n            ))}\n          </DropdownButton>\n        </Form.InputGroup>\n        <HelpBlock>\n          {this.props.property.description}\n          {this.props.form.errors[this.props.field.name]}\n        </HelpBlock>\n      </FormGroup>\n    );\n  }\n}\n","import { Field } from 'formik';\nimport * as React from 'react';\nimport { IFormDefinition, IFormDefinitionProperty } from './models';\nimport {\n  FormCheckboxComponent,\n  FormDurationComponent,\n  FormHiddenComponent,\n  FormInputComponent,\n  FormSelectComponent,\n  FormTextAreaComponent,\n} from './widgets';\n\nexport interface INamedConfigurationProperty extends IFormDefinitionProperty {\n  name: string;\n}\n\nexport interface IRenderFieldProps {\n  property: INamedConfigurationProperty;\n  value: any;\n  [name: string]: any;\n}\n\nexport interface IFormBuilderProps<T> {\n  definition: IFormDefinition;\n  initialValue: T;\n  i18nRequiredProperty: string;\n  onSave: (value: T | any, actions: any) => void;\n  children(props: IFormBuilderChildrenProps<T>): any;\n}\n\nexport interface IFormBuilderChildrenProps<T> {\n  fields: INamedConfigurationProperty[];\n  getField: (props: IRenderFieldProps) => any;\n  initialValue: T;\n  onSave: (value: T, actions: any) => void;\n}\n\nexport class FormBuilder<T> extends React.Component<IFormBuilderProps<T>> {\n  /**\n   * Converts a property configuration to some kind of input field\n   * @param props\n   */\n  public getField = (props: IRenderFieldProps): any => {\n    // Massage the value in the definition to an input type\n    const type = this.massageType(props.property);\n    const componentTypemaps = {\n      checkbox: FormCheckboxComponent,\n      duration: FormDurationComponent,\n      hidden: FormHiddenComponent,\n      select: FormSelectComponent,\n      textarea: FormTextAreaComponent,\n    };\n    const validate = (value: any) => {\n      if (props.property.required && !value) {\n        return this.props.i18nRequiredProperty;\n      }\n      return undefined;\n    };\n    return (\n      <Field\n        key={props.property.name}\n        name={props.property.name}\n        type={type}\n        validate={validate}\n        {...props}\n        component={componentTypemaps[type] || FormInputComponent}\n      />\n    );\n  };\n\n  public render() {\n    const fields = this.enrichAndOrderProperties(this.props.definition);\n    const massagedValue = this.sanitizeValues(\n      this.props.definition,\n      this.props.initialValue\n    );\n    return this.props.children({\n      fields,\n      getField: this.getField,\n      initialValue: massagedValue,\n      onSave: this.props.onSave,\n    });\n  }\n\n  /**\n   * Ensure that the input values match the property definitions\n   */\n  private sanitizeValues(definition: IFormDefinition, initialValue: any): T {\n    return Object.keys(definition).reduce((result, key): any => {\n      const prop = definition[key];\n      let value = this.massageValue(prop, initialValue[key]);\n      if (value == null) {\n        value = this.massageValue(prop, prop.defaultValue);\n      }\n      return { ...result, [key]: value };\n    }, {}) as T;\n  }\n\n  /**\n   * Add the 'name' field from the property ID and sort them by the 'order' property\n   */\n  private enrichAndOrderProperties(definition: IFormDefinition) {\n    return Object.keys(definition)\n      .map(key => ({\n        ...definition[key],\n        name: key,\n        required: this.massageRequired(definition[key]),\n        type: this.massageType(definition[key]),\n      }))\n      .sort((a, b) => {\n        const aOrder = (a.order || 0) as number;\n        const bOrder = (b.order || 0) as number;\n        return aOrder - bOrder;\n      });\n  }\n\n  /**\n   * Converts various values passed into the property type to known input types\n   *\n   * @param property\n   */\n  private massageType(property: IFormDefinitionProperty) {\n    let type = property.type || 'text';\n    switch (type) {\n      case 'int':\n      case 'integer':\n      case 'long':\n        type = 'number';\n        break;\n      case 'string':\n        type = 'text';\n        break;\n      case 'boolean':\n        type = 'checkbox';\n    }\n    if (property.enum && property.enum.length) {\n      type = 'select';\n    }\n    if (property.secret) {\n      type = 'password';\n    }\n    return type;\n  }\n\n  /**\n   * Ensure that the 'required' property is false for checkboxes and hidden fields\n   *\n   * This is a candidate for removal in the future, as it's a workaround\n   *\n   * @param property\n   */\n  private massageRequired(property: IFormDefinitionProperty): any {\n    switch (property.type) {\n      case 'boolean':\n      case 'checkbox':\n      case 'hidden':\n        return false;\n      default:\n        return property.required;\n    }\n  }\n\n  /**\n   * Converts the given value from a string to the type defined in the property definition\n   *\n   * This is a candidate for removal as it's a workaround\n   *\n   * @param property\n   * @param value\n   */\n  private massageValue(property: IFormDefinitionProperty, value?: string) {\n    if (value === undefined || value === null) {\n      return value;\n    }\n    switch (property.type) {\n      case 'number':\n        return parseInt(value, 10);\n      case 'boolean':\n      case 'checkbox':\n        return String(value).toLocaleLowerCase() === 'true';\n      default:\n        return value;\n    }\n  }\n}\n","import { Formik, FormikErrors } from 'formik';\nimport * as React from 'react';\nimport { FormBuilder } from './FormBuilder';\nimport { IFormDefinition, IFormErrors } from './models';\n\nexport interface IAutoFormProps<T> {\n  /**\n   * A map of configuration properties as returned by the Syndesis API\n   */\n  definition: IFormDefinition;\n  /**\n   * The initial value that should be set on the form\n   */\n  initialValue: T;\n  /**\n   * String to be displayed when a required field isn't set\n   */\n  i18nRequiredProperty: string;\n  /**\n   * Callback function that will be called when the form is submitted\n   */\n  onSave: (value: T, actions: any) => void;\n  /**\n   * Validation function called whenever a change or blur event occurs on the form\n   */\n  validate?: (value: T | any) => IFormErrors | Promise<any> | undefined;\n  /**\n   * Child component that will receive the form fields and submit handler\n   */\n  children: (state: IAutoFormChildrenProps) => any;\n}\n\nexport interface IAutoFormChildrenProps {\n  /**\n   * Fragment containing all of the form fields\n   */\n  fields: JSX.Element;\n  /**\n   * Function to trigger a form submit which will then trigger onSave\n   */\n  handleSubmit: (e?: any) => void;\n  dirty: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n  isValidating: boolean;\n  resetForm: (nextValues?: any) => void;\n  submitForm: () => void;\n  validateForm: () => Promise<FormikErrors<any>>;\n  values: any;\n  errors: any;\n}\n\nexport class AutoForm<T> extends React.Component<IAutoFormProps<T>> {\n  public render() {\n    return (\n      <FormBuilder\n        definition={this.props.definition}\n        initialValue={this.props.initialValue}\n        onSave={this.props.onSave}\n        i18nRequiredProperty={this.props.i18nRequiredProperty}\n      >\n        {({ initialValue, fields, onSave, getField }) => (\n          <Formik<T>\n            initialValues={initialValue}\n            onSubmit={onSave}\n            validate={this.props.validate}\n          >\n            {({\n              handleSubmit,\n              values,\n              touched,\n              dirty,\n              errors,\n              isValid,\n              isValidating,\n              isSubmitting,\n              resetForm,\n              validateForm,\n              submitForm,\n            }) =>\n              this.props.children({\n                dirty,\n                errors,\n                fields: (\n                  <React.Fragment>\n                    {fields.map(property =>\n                      getField({\n                        errors,\n                        property,\n                        touched,\n                        value: (values || {})[property.name],\n                      })\n                    )}\n                  </React.Fragment>\n                ),\n                handleSubmit,\n                isSubmitting,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              })\n            }\n          </Formik>\n        )}\n      </FormBuilder>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface IConnectionCreatorBreadcrumbsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IConnectionCreatorBreadcrumbsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IConnectionCreatorBreadcrumbsProps#step}\n * @see [subStep]{@link IConnectionCreatorBreadcrumbsProps#subStep}\n */\nexport class ConnectionCreatorBreadcrumbs extends React.Component<\n  IConnectionCreatorBreadcrumbsProps,\n  IConnectionCreatorBreadcrumbsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IConnectionCreatorBreadcrumbsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={'Select connector'}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={'Configure connection'}\n            />\n            <WizardStep\n              isActive={this.props.step === 3}\n              isDisabled={this.props.step < 3}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={3}\n              title={'Name connection'}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectionHelpers } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { UIContext } from '../../../app';\nimport { ApiError } from '../../../shared';\n\nexport interface IConnectionsProps {\n  error: boolean;\n  includeConnectionMenu: boolean;\n  loading: boolean;\n  connections: Connection[];\n  getConnectionHref(connection: Connection): H.LocationDescriptor;\n  getConnectionEditHref(connection: Connection): H.LocationDescriptor;\n}\n\nexport class Connections extends React.Component<IConnectionsProps> {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <Translation ns={['connections', 'shared']}>\n              {t => (\n                <WithConnectionHelpers>\n                  {({ deleteConnection }) => {\n                    const doDelete = async (\n                      connectionId: string,\n                      connectionName: string\n                    ) => {\n                      try {\n                        await deleteConnection(connectionId);\n                        pushNotification(\n                          t('connectionDeletedSuccess', { connectionName }),\n                          'success'\n                        );\n                      } catch (error) {\n                        const details = error.message ? error.message : '';\n                        pushNotification(\n                          t('connectionDeletedFailed', {\n                            connectionName,\n                            details,\n                          }),\n                          'error'\n                        );\n                      }\n                    };\n                    return (\n                      <ConnectionsGrid>\n                        <WithLoader\n                          error={this.props.error}\n                          loading={this.props.loading}\n                          loaderChildren={\n                            <>\n                              {new Array(5).fill(0).map((_, index) => (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionSkeleton />\n                                </ConnectionsGridCell>\n                              ))}\n                            </>\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            this.props.connections.map((c, index) => {\n                              const handleDelete = (): void => {\n                                doDelete(c.id!, c.name); // must have an ID if deleting\n                              };\n\n                              return (\n                                <ConnectionsGridCell key={index}>\n                                  <ConnectionCard\n                                    name={c.name}\n                                    description={c.description || ''}\n                                    icon={getConnectionIcon(\n                                      process.env.PUBLIC_URL,\n                                      c\n                                    )}\n                                    href={this.props.getConnectionHref(c)}\n                                    menuProps={\n                                      this.props.includeConnectionMenu\n                                        ? {\n                                            editHref: this.props.getConnectionEditHref(\n                                              c\n                                            ),\n                                            i18nCancelLabel: t('shared:Cancel'),\n                                            i18nDeleteLabel: t('shared:Delete'),\n                                            i18nDeleteModalMessage: t(\n                                              'deleteModalMessage',\n                                              { connectionName: c.name }\n                                            ),\n                                            i18nDeleteModalTitle: t(\n                                              'deleteModalTitle'\n                                            ),\n                                            i18nEditLabel: t('shared:Edit'),\n                                            i18nMenuTitle: t(\n                                              'connectionCardMenuTitle'\n                                            ),\n                                            i18nViewLabel: t('shared:View'),\n                                            isDeleteEnabled:\n                                              (c.uses as number) === 0,\n                                            onDelete: handleDelete,\n                                          }\n                                        : undefined\n                                    }\n                                  />\n                                </ConnectionsGridCell>\n                              );\n                            })\n                          }\n                        </WithLoader>\n                      </ConnectionsGrid>\n                    );\n                  }}\n                </WithConnectionHelpers>\n              )}\n            </Translation>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Connection } from '@syndesis/models';\nimport {\n  ConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../resolvers';\nimport { Connections, IConnectionsProps } from './Connections';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedConnections = connections;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IConnectionsWithToolbarProps extends IConnectionsProps {\n  children?: any;\n}\n\nexport class ConnectionsWithToolbar extends React.Component<\n  IConnectionsWithToolbarProps\n> {\n  public static defaultProps = {\n    includeHidden: false,\n  };\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                this.props.connections,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <ConnectionsListView\n                  linkToConnectionCreate={resolvers.create.selectConnector()}\n                  filterTypes={filterTypes}\n                  sortTypes={sortTypes}\n                  resultsCount={filteredAndSortedConnections.length}\n                  {...helpers}\n                  i18nLinkCreateConnection={t('shared:linkCreateConnection')}\n                  i18nResultsCount={t('shared:resultsCount', {\n                    count: filteredAndSortedConnections.length,\n                  })}\n                >\n                  {this.props.children}\n                  <Connections\n                    error={this.props.error}\n                    includeConnectionMenu={true}\n                    loading={this.props.loading}\n                    connections={filteredAndSortedConnections}\n                    getConnectionHref={this.props.getConnectionHref}\n                    getConnectionEditHref={this.props.getConnectionEditHref}\n                  />\n                </ConnectionsListView>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport { IConnectorConfigurationFormValidationResult } from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConnectorFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  fields: JSX.Element;\n  /**\n   * true if the form has been modified.\n   */\n  dirty: boolean;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being validated. Can be used to enable/disable the\n   * validate button.\n   */\n  isValidating: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the current values of the form fields\n   */\n  values: { [key: string]: string };\n\n  validationResults: IConnectorConfigurationFormValidationResult[];\n\n  resetForm: (nextValues?: any) => void;\n\n  handleSubmit: (e?: any) => void;\n  /**\n   * the callback to trigger to validate the form against the backend.\n   */\n  validateForm(): any;\n  /**\n   * the callback to trigger to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IWithConnectorFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConnectorFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connector: Connector;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onSave]{@link IWithConnectorFormProps#onSave}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * true to have the fields rendered as read-only.\n   */\n  disabled?: boolean;\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConnectorFormChildrenProps#form}\n   * @see [isValid]{@link IWithConnectorFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConnectorFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConnectorFormChildrenProps#submitForm}\n   */\n  children(props: IWithConnectorFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   */\n  onSave(props: { [key: string]: string }, action: any): any;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConnectorFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConnectorFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConnectorFormProps#values}\n */\nexport class WithConnectorForm extends React.Component<\n  IWithConnectorFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  public render() {\n    const definition = Object.keys(this.props.connector.properties!).reduce(\n      (def, key) => {\n        const d = this.props.connector.properties![key];\n        def[key] = {\n          ...d,\n          disabled: this.props.disabled,\n        };\n        return def;\n      },\n      {}\n    );\n    return (\n      <WithConnectionHelpers>\n        {({ validateConfiguration }) => {\n          let shouldValidateAgainstBackend = false;\n          let validationResults: IConnectorConfigurationFormValidationResult[] = [];\n          const validateFormAgainstBackend = async (values: {\n            [key: string]: string;\n          }) => {\n            validationResults = [];\n            if (shouldValidateAgainstBackend) {\n              const errors: { [key: string]: string } = {};\n              const status = await validateConfiguration(\n                this.props.connector.id!,\n                values\n              );\n              (\n                (\n                  status.find(obj => obj.scope === 'PARAMETERS') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).forEach(obj => {\n                obj.parameters.forEach(p => (errors[p] = obj.description));\n              });\n              validationResults = (\n                (\n                  status.find(obj => obj.scope === 'CONNECTIVITY') || {\n                    errors: [],\n                  }\n                ).errors || []\n              ).map(\n                obj =>\n                  ({\n                    message: obj.description,\n                    type: 'error',\n                  } as IConnectorConfigurationFormValidationResult)\n              );\n              if (Object.keys(errors).length) {\n                throw errors;\n              }\n              if (validationResults.length === 0) {\n                validationResults = [\n                  {\n                    message: `${\n                      this.props.connector.name\n                    } has been successfully validated`,\n                    type: 'success',\n                  } as IConnectorConfigurationFormValidationResult,\n                ];\n              }\n            }\n          };\n\n          return (\n            <AutoForm<{ [key: string]: string }>\n              i18nRequiredProperty={'* Required field'}\n              definition={toFormDefinition(definition)}\n              initialValue={this.props.initialValue!}\n              validate={validateFormAgainstBackend}\n              onSave={this.props.onSave}\n            >\n              {({\n                fields,\n                handleSubmit,\n                isSubmitting,\n                dirty,\n                isValid,\n                isValidating,\n                resetForm,\n                submitForm,\n                validateForm,\n                values,\n              }) => {\n                const enableValidationAgainstBackend = async () => {\n                  shouldValidateAgainstBackend = true;\n                  await validateForm();\n                  shouldValidateAgainstBackend = false;\n                };\n\n                return this.props.children({\n                  dirty,\n                  fields,\n                  handleSubmit,\n                  isSubmitting,\n                  isValid,\n                  isValidating,\n                  resetForm,\n                  submitForm,\n                  validateForm: enableValidationAgainstBackend,\n                  validationResults,\n                  values,\n                });\n              }}\n            </AutoForm>\n          );\n        }}\n      </WithConnectionHelpers>\n    );\n  }\n}\n","export * from './ConnectionCreatorBreadcrumbs';\nexport * from './Connections';\nexport * from './ConnectionsWithToolbar';\nexport * from './WithConnectorForm';\n","module.exports = __webpack_public_path__ + \"atlasmap-runtime.js\";","module.exports = __webpack_public_path__ + \"atlasmap-polyfills.js\";","module.exports = __webpack_public_path__ + \"atlasmap-styles.js\";","module.exports = __webpack_public_path__ + \"atlasmap-scripts.js\";","module.exports = __webpack_public_path__ + \"atlasmap-vendor.js\";","module.exports = __webpack_public_path__ + \"atlasmap-main.js\";","import * as React from 'react';\n\nexport interface IConfigFile {\n  apiBase: string;\n  apiEndpoint: string;\n  title: string;\n  consoleUrl: string;\n  project: string;\n  datamapper: {\n    baseMappingServiceUrl: string;\n    baseJavaInspectionServiceUrl: string;\n    baseXMLInspectionServiceUrl: string;\n    baseJSONInspectionServiceUrl: string;\n    disableMappingPreviewMode: boolean;\n  };\n  datavirt: {\n    dvUrl: string;\n  };\n  features: {\n    logging: boolean;\n  };\n  branding: {\n    logoWhiteBg: string;\n    logoDarkBg: string;\n    appName: string;\n    favicon32: string;\n    favicon16: string;\n    touchIcon: string;\n    productBuild: boolean;\n  };\n}\n\nexport interface IWithConfigProps {\n  children(props: IWithConfigState): any;\n}\n\nexport interface IWithConfigState {\n  loading: boolean;\n  error: boolean;\n  config?: IConfigFile;\n}\n\nexport class WithConfig extends React.Component<\n  IWithConfigProps,\n  IWithConfigState\n> {\n  public state = {\n    error: false,\n    loading: true,\n  };\n\n  public async componentDidMount() {\n    try {\n      const configResponse = await fetch(\n        `${process.env.PUBLIC_URL}/config.json`\n      );\n      const config = await configResponse.json();\n      this.setState({\n        config,\n        loading: false,\n      });\n    } catch (e) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  public render() {\n    return this.props.children(this.state);\n  }\n}\n","import {\n  getConnectionIcon,\n  IValidationResult,\n  WithConnection,\n  WithConnectionHelpers,\n} from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ConnectionDetailsForm,\n  ConnectionDetailsHeader,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport { WithConnectorForm } from '../components';\n\nexport interface IConnectionDetailsRouteParams {\n  connectionId: string;\n}\n\nexport interface IConnectionDetailsRouteState {\n  connection?: Connection;\n}\n\nexport interface IConnectionDetailsPageProps {\n  edit: boolean;\n}\n\nexport interface IConnectionDetailsPageState {\n  isWorking: boolean;\n}\n\nexport class ConnectionDetailsPage extends React.Component<\n  IConnectionDetailsPageProps,\n  IConnectionDetailsPageState\n> {\n  public state = {\n    isWorking: false,\n  };\n\n  public getUsedByMessage(connection: Connection): string {\n    // TODO: Schema is currently wrong as it has 'uses' as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = connection.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('connections:usedByOne');\n    }\n\n    return i18n.t('connections:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          return (\n            <WithRouteData<\n              IConnectionDetailsRouteParams,\n              IConnectionDetailsRouteState\n            >>\n              {({ connectionId }, { connection }, { history, location }) => (\n                <Translation ns={['connections', 'shared']}>\n                  {t => (\n                    <WithConnectionHelpers>\n                      {({ updateConnection, saveConnection, validateName }) => {\n                        return (\n                          <WithConnection\n                            id={connectionId}\n                            initialValue={connection}\n                            key={location.key}\n                          >\n                            {({ data, hasData, error }) => {\n                              const save = async ({\n                                name,\n                                description,\n                                configuredProperties,\n                              }: {\n                                name?: string;\n                                description?: string;\n                                configuredProperties?: {\n                                  [key: string]: string;\n                                };\n                              }): Promise<boolean> => {\n                                const updatedConnection = updateConnection(\n                                  data,\n                                  name,\n                                  description,\n                                  configuredProperties\n                                );\n                                try {\n                                  await saveConnection(updatedConnection);\n                                  history.push(\n                                    resolvers.connections.connection.details({\n                                      connection: updatedConnection,\n                                    })\n                                  );\n                                  return true;\n                                } catch (error) {\n                                  pushNotification(\n                                    t('errorSavingConnection'),\n                                    'error'\n                                  );\n                                  return false;\n                                }\n                              };\n\n                              const saveDescription = async (\n                                description: string\n                              ): Promise<boolean> => {\n                                this.setState({ isWorking: true });\n                                const saved = await save({ description });\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveName = async (\n                                name: string\n                              ): Promise<boolean> => {\n                                let saved = false;\n                                this.setState({ isWorking: true });\n                                const validation = await doValidateName(name);\n                                if (validation === true) {\n                                  saved = await save({ name });\n                                } else {\n                                  pushNotification(validation, 'error');\n                                }\n                                this.setState({ isWorking: false });\n                                return saved;\n                              };\n\n                              const saveConnector = async (\n                                configuredProperties: { [key: string]: string },\n                                actions: any\n                              ): Promise<void> => {\n                                this.setState({ isWorking: true });\n                                await save({ configuredProperties });\n                                actions.setSubmitting(false);\n                                this.setState({ isWorking: false });\n                              };\n\n                              /**\n                               * Backend validation only occurs when save has been called.\n                               * @param proposedName the name to validate\n                               */\n                              const doValidateName = async (\n                                proposedName: string\n                              ): Promise<true | string> => {\n                                // make sure name has a value\n                                if (proposedName === '') {\n                                  return t(\n                                    'shared:requiredFieldMessage'\n                                  ) as string;\n                                }\n\n                                const response: IValidationResult = await validateName(\n                                  connection!,\n                                  proposedName\n                                );\n\n                                if (!response.isError) {\n                                  return true;\n                                }\n\n                                if (response.error === 'UniqueProperty') {\n                                  const msg = t('duplicateNameError');\n                                  return msg\n                                    ? msg\n                                    : 'connections:duplicateNameError';\n                                }\n\n                                return response.message\n                                  ? response.message\n                                  : t('errorValidatingName')\n                                  ? t('errorValidatingName')!\n                                  : 'connections:errorValidatingName'; // return missing i18n key\n                              };\n\n                              const cancelEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.details({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              const startEditing = () => {\n                                history.push(\n                                  resolvers.connections.connection.edit({\n                                    connection: data,\n                                  })\n                                );\n                              };\n\n                              return (\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<Loader />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    return (\n                                      <WithConnectorForm\n                                        connector={data.connector!}\n                                        initialValue={data.configuredProperties}\n                                        disabled={!this.props.edit}\n                                        onSave={saveConnector}\n                                      >\n                                        {({\n                                          fields,\n                                          handleSubmit,\n                                          validationResults,\n                                          dirty,\n                                          isSubmitting,\n                                          isValid,\n                                          isValidating,\n                                          validateForm,\n                                        }) => (\n                                          <>\n                                            <Breadcrumb>\n                                              <Link\n                                                to={resolvers.dashboard.root()}\n                                              >\n                                                {t('shared:Home')}\n                                              </Link>\n                                              <Link\n                                                to={resolvers.connections.connections()}\n                                              >\n                                                {t('shared:Connections')}\n                                              </Link>\n                                              <span>\n                                                {t('connectionDetailPageTitle')}\n                                              </span>\n                                            </Breadcrumb>\n                                            <ConnectionDetailsHeader\n                                              allowEditing={true}\n                                              connectionDescription={\n                                                data.description\n                                              }\n                                              connectionIcon={getConnectionIcon(\n                                                process.env.PUBLIC_URL,\n                                                data\n                                              )}\n                                              connectionName={data.name}\n                                              i18nDescriptionLabel={t(\n                                                'shared:Description'\n                                              )}\n                                              i18nDescriptionPlaceholder={t(\n                                                'descriptionPlaceholder'\n                                              )}\n                                              i18nNamePlaceholder={t(\n                                                'namePlaceholder'\n                                              )}\n                                              i18nUsageLabel={t('shared:Usage')}\n                                              i18nUsageMessage={this.getUsedByMessage(\n                                                data\n                                              )}\n                                              isWorking={this.state.isWorking}\n                                              onChangeDescription={\n                                                saveDescription\n                                              }\n                                              onChangeName={saveName}\n                                            />\n                                            <ConnectionDetailsForm\n                                              i18nCancelLabel={t(\n                                                'shared:Cancel'\n                                              )}\n                                              i18nEditLabel={t('shared:Edit')}\n                                              i18nSaveLabel={t('shared:Save')}\n                                              i18nTitle={t(\n                                                'detailsSectionTitle',\n                                                {\n                                                  connectionName: data.name,\n                                                }\n                                              )}\n                                              i18nValidateLabel={t(\n                                                'shared:Validate'\n                                              )}\n                                              handleSubmit={handleSubmit}\n                                              isValid={!dirty || isValid}\n                                              isWorking={\n                                                isSubmitting || isValidating\n                                              }\n                                              validationResults={\n                                                validationResults\n                                              }\n                                              isEditing={this.props.edit}\n                                              onCancelEditing={cancelEditing}\n                                              onStartEditing={startEditing}\n                                              onValidate={validateForm}\n                                            >\n                                              {fields}\n                                            </ConnectionDetailsForm>\n                                          </>\n                                        )}\n                                      </WithConnectorForm>\n                                    );\n                                  }}\n                                </WithLoader>\n                              );\n                            }}\n                          </WithConnection>\n                        );\n                      }}\n                    </WithConnectionHelpers>\n                  )}\n                </Translation>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport * as React from 'react';\nimport { PageTitle } from '../../../shared';\nimport { ConnectionsWithToolbar } from '../components';\nimport resolvers from '../resolvers';\n\nexport class ConnectionsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnections>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Connections'} />\n            <ConnectionsWithToolbar\n              error={error}\n              includeConnectionMenu={true}\n              loading={!hasData}\n              connections={data.connectionsForDisplay}\n              getConnectionHref={connection =>\n                resolvers.connection.details({ connection })\n              }\n              getConnectionEditHref={connection =>\n                resolvers.connection.edit({ connection })\n              }\n            />\n          </>\n        )}\n      </WithConnections>\n    );\n  }\n}\n","import { WithConnector } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ButtonLink,\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ConnectionCreatorBreadcrumbs,\n  WithConnectorForm,\n} from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface IConfigurationPageRouteParams {\n  connectorId: string;\n}\n\nexport interface IConfigurationPageRouteState {\n  connector?: Connector;\n}\n\nexport default class ConfigurationPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IConfigurationPageRouteParams,\n        IConfigurationPageRouteState\n      >>\n        {({ connectorId }, { connector }, { history }) => (\n          <WithConnector id={connectorId} initialValue={connector}>\n            {({ data, hasData, error }) => (\n              <WithLoader\n                error={error}\n                loading={!hasData}\n                loaderChildren={<Loader />}\n                errorChildren={<ApiError />}\n              >\n                {() => {\n                  const onSave = (configuredProperties: {\n                    [key: string]: string;\n                  }) => {\n                    history.push(\n                      resolvers.create.review({\n                        configuredProperties,\n                        connector: data,\n                      })\n                    );\n                  };\n                  return (\n                    <WithConnectorForm connector={data} onSave={onSave}>\n                      {({\n                        fields,\n                        handleSubmit,\n                        validationResults,\n                        submitForm,\n                        isSubmitting,\n                        isValid,\n                        isValidating,\n                        validateForm,\n                      }) => {\n                        return (\n                          <>\n                            <PageTitle title={'Configure connection'} />\n                            <ConnectionCreatorLayout\n                              header={<ConnectionCreatorBreadcrumbs step={2} />}\n                              content={\n                                <ConnectorConfigurationForm\n                                  i18nFormTitle={data.name}\n                                  handleSubmit={handleSubmit}\n                                  validationResults={validationResults}\n                                >\n                                  {fields}\n                                </ConnectorConfigurationForm>\n                              }\n                              backHref={resolvers.create.selectConnector()}\n                              cancelHref={resolvers.connections()}\n                              onNext={submitForm}\n                              isNextDisabled={isSubmitting}\n                              extraButtons={\n                                <ButtonLink\n                                  onClick={validateForm}\n                                  disabled={!isValid || isValidating}\n                                >\n                                  Validate\n                                  {isValidating && (\n                                    <>\n                                      &nbsp;\n                                      <Loader size={'sm'} inline={true} />\n                                    </>\n                                  )}\n                                </ButtonLink>\n                              }\n                            />\n                          </>\n                        );\n                      }}\n                    </WithConnectorForm>\n                  );\n                }}\n              </WithLoader>\n            )}\n          </WithConnector>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { getConnectionIcon, WithConnectors } from '@syndesis/api';\nimport { IConnectionWithIconFile } from '@syndesis/models';\nimport {\n  ConnectionCard,\n  ConnectionCreatorLayout,\n  ConnectionsGrid,\n  ConnectionsGridCell,\n  ConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport default class ConnectorsPage extends React.Component {\n  public render() {\n    return (\n      <WithConnectors>\n        {({ data, hasData, error }) => (\n          <>\n            <PageTitle title={'Select connector'} />\n            <ConnectionCreatorLayout\n              header={<ConnectionCreatorBreadcrumbs step={1} />}\n              content={\n                <ConnectionsGrid>\n                  <WithLoader\n                    error={error}\n                    loading={!hasData}\n                    loaderChildren={\n                      <>\n                        {new Array(5).fill(0).map((_, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionSkeleton />\n                          </ConnectionsGridCell>\n                        ))}\n                      </>\n                    }\n                    errorChildren={<ApiError />}\n                  >\n                    {() =>\n                      data.connectorsForDisplay\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .map((connector, index) => (\n                          <ConnectionsGridCell key={index}>\n                            <ConnectionCard\n                              name={connector.name}\n                              description={connector.description || ''}\n                              icon={getConnectionIcon(\n                                process.env.PUBLIC_URL,\n                                connector as IConnectionWithIconFile\n                              )}\n                              href={resolvers.create.configureConnector({\n                                connector,\n                              })}\n                            />\n                          </ConnectionsGridCell>\n                        ))\n                    }\n                  </WithLoader>\n                </ConnectionsGrid>\n              }\n              cancelHref={resolvers.connections()}\n            />\n          </>\n        )}\n      </WithConnectors>\n    );\n  }\n}\n","import ConfigurationPage from './ConfigurationPage';\nimport ConnectorsPage from './ConnectorsPage';\nimport ReviewPage from './ReviewPage';\n\nexport const create = {\n  ConfigurationPage,\n  ConnectorsPage,\n  ReviewPage,\n};\n","import { WithConnectionHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Connector } from '@syndesis/models';\nimport {\n  ConnectionCreatorLayout,\n  ConnectorConfigurationForm,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { UIContext } from '../../../../app';\nimport { PageTitle } from '../../../../shared';\nimport { ConnectionCreatorBreadcrumbs } from '../../components';\nimport resolvers from '../../resolvers';\n\nexport interface ISaveForm {\n  name: string;\n  description?: string;\n}\n\nexport interface IReviewPageRouteState {\n  connector: Connector;\n  configuredProperties: { [key: string]: string };\n}\n\nexport default class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => (\n          <WithRouteData<null, IReviewPageRouteState>>\n            {(_, { connector, configuredProperties }, { history }) => (\n              <WithConnectionHelpers>\n                {({ createConnection, saveConnection }) => {\n                  const onSave = async (\n                    { name, description }: ISaveForm,\n                    actions: any\n                  ) => {\n                    try {\n                      const connection = createConnection(\n                        connector,\n                        name,\n                        description || '',\n                        configuredProperties\n                      );\n                      await saveConnection(connection);\n                      actions.setSubmitting(false);\n                      pushNotification(\n                        `<strong>Connection created</strong> Connection <strong>${name}</strong> successfully created`,\n                        'success'\n                      );\n                      history.push(resolvers.connections());\n                    } catch (e) {\n                      // TODO notification or inline message?\n                    }\n                  };\n                  const definition: IFormDefinition = {\n                    name: {\n                      defaultValue: '',\n                      displayName: 'Name',\n                      required: true,\n                      type: 'string',\n                    },\n                    /* tslint:disable-next-line:object-literal-sort-keys */\n                    description: {\n                      defaultValue: '',\n                      displayName: 'Description',\n                      type: 'textarea',\n                    },\n                  };\n                  return (\n                    <AutoForm<ISaveForm>\n                      i18nRequiredProperty={'* Required field'}\n                      definition={definition}\n                      initialValue={{\n                        description: '',\n                        name: '',\n                      }}\n                      onSave={onSave}\n                    >\n                      {({\n                        fields,\n                        handleSubmit,\n                        isSubmitting,\n                        isValid,\n                        submitForm,\n                      }) => (\n                        <ConnectionCreatorLayout\n                          header={<ConnectionCreatorBreadcrumbs step={3} />}\n                          content={\n                            <>\n                              <PageTitle title={'Name connection'} />\n                              <ConnectorConfigurationForm\n                                i18nFormTitle={'Name connection'}\n                                handleSubmit={handleSubmit}\n                              >\n                                {fields}\n                              </ConnectorConfigurationForm>\n                            </>\n                          }\n                          cancelHref={resolvers.connections()}\n                          backHref={resolvers.create.configureConnector({\n                            connector,\n                          })}\n                          onNext={submitForm}\n                          isNextDisabled={!isValid}\n                          isNextLoading={isSubmitting}\n                          isLastStep={true}\n                        />\n                      )}\n                    </AutoForm>\n                  );\n                }}\n              </WithConnectionHelpers>\n            )}\n          </WithRouteData>\n        )}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport { create } from './pages';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nexport default class ConnectionsCreatorApp extends React.Component {\n  public render() {\n    return (\n      <WithClosedNavigation>\n        <Breadcrumb>\n          <Link to={resolvers.connections()}>Connections</Link>\n          <span>Create connection</span>\n        </Breadcrumb>\n        <Switch>\n          <Route\n            path={routes.create.selectConnector}\n            exact={true}\n            component={create.ConnectorsPage}\n          />\n          <Route\n            path={routes.create.configureConnector}\n            exact={true}\n            component={create.ConfigurationPage}\n          />\n          <Route\n            path={routes.create.review}\n            exact={true}\n            component={create.ReviewPage}\n          />\n        </Switch>\n      </WithClosedNavigation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport ConnectionsCreatorApp from './ConnectionsCreatorApp';\nimport { ConnectionDetailsPage, ConnectionsPage } from './pages';\nimport routes from './routes';\n\nexport class ConnectionsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.create.root} component={ConnectionsCreatorApp} />\n        <Route\n          path={routes.connections}\n          exact={true}\n          component={ConnectionsPage}\n        />\n        <Route\n          path={routes.connection.edit}\n          exact={true}\n          children={<ConnectionDetailsPage edit={true} />}\n        />\n        <Route\n          path={routes.connection.details}\n          exact={true}\n          children={<ConnectionDetailsPage edit={false} />}\n        />\n      </Switch>\n    );\n  }\n}\n","import { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport routes from '../routes';\n\n/**\n * A component that displays a nav bar with 2 items:\n *\n * 1. a link to the page that displays a list of API Connectors, and\n * 2. a link to the page that displays a list of extensions.\n *\n * @see [ApiConnectorsPage]{@link ../pages/ApiConnectorsPage}\n * @see [ExtensionsPage]{@link ../pages/ExtensionsPage}\n */\nexport default class CustomizationsNavBar extends React.Component {\n  public render() {\n    return (\n      <Translation ns={['customizations', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('apiConnector.apiConnectorsPageTitle')}\n                to={routes.apiConnectors.list}\n              />\n              <TabBarItem\n                label={t('extension.extensionsPageTitle')}\n                to={routes.extensions.list}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithApiConnectors } from '@syndesis/api';\nimport { Connector } from '@syndesis/models';\nimport {\n  ApiConnectorListItem,\n  ApiConnectorListSkeleton,\n  ApiConnectorListView,\n  Container,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport {\n  optionalIntValue,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport routes from '../routes';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedApiConnectors(\n  apiConnectors: Connector[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = apiConnectors;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((api: Connector) =>\n      api.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisApi, thatApi) => {\n    if (isSortAscending) {\n      return thisApi.name.localeCompare(thatApi.name);\n    }\n\n    // sort descending\n    return thatApi.name.localeCompare(thisApi.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ApiConnectorsPage extends React.Component {\n  public filterUndefinedId(api: Connector): boolean {\n    return api.id !== undefined;\n  }\n\n  public getUsedByMessage(api: Connector): string {\n    const numUsedBy = optionalIntValue(api.uses);\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public handleDelete(apiConnectorId: string) {\n    // TODO: implement handleDelete\n    alert('Delete API client connector ' + apiConnectorId);\n  }\n\n  public handleDetails(apiConnectorId: string) {\n    // TODO: implement handleDetails\n    alert('Show details of API client connector ' + apiConnectorId);\n  }\n\n  public render() {\n    return (\n      <WithApiConnectors>\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedApiConnectors(\n                data.items,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending\n              );\n\n              return (\n                <Translation ns={['customizations', 'shared']}>\n                  {t => (\n                    <>\n                      <CustomizationsNavBar />\n                      <Container className=\"pf-u-my-md\">\n                        <h1 className=\"pf-c-title pf-m-xl\">\n                          {t('apiConnector.apiConnectorsPageTitle')}\n                        </h1>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: t(\n                              'apiConnector.apiConnectorsPageDescription'\n                            ),\n                          }}\n                        />\n                      </Container>\n                      <ApiConnectorListView\n                        filterTypes={filterTypes}\n                        sortTypes={sortTypes}\n                        {...this.state}\n                        linkCreateApiConnector={\n                          routes.apiConnectors.create.upload\n                        }\n                        resultsCount={filteredAndSorted.length}\n                        {...helpers}\n                        i18nTitle={''}\n                        i18nDescription={''}\n                        i18nEmptyStateInfo={t('apiConnector.emptyStateInfo')}\n                        i18nEmptyStateTitle={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnector={t(\n                          'apiConnector.CreateApiConnector'\n                        )}\n                        i18nLinkCreateApiConnectorTip={t(\n                          'apiConnector.createApiConnectorTip'\n                        )}\n                        i18nName={t('shared:Name')}\n                        i18nResultsCount={t('shared:resultsCount', {\n                          count: filteredAndSorted.length,\n                        })}\n                      >\n                        <WithLoader\n                          error={error}\n                          loading={!hasData}\n                          loaderChildren={\n                            <ApiConnectorListSkeleton\n                              width={800}\n                              style={{\n                                backgroundColor: '#FFF',\n                                marginTop: 30,\n                              }}\n                            />\n                          }\n                          errorChildren={<ApiError />}\n                        >\n                          {() =>\n                            filteredAndSorted\n                              .filter((api: Connector) =>\n                                this.filterUndefinedId(api)\n                              )\n                              .map((api: Connector, index: number) => (\n                                <ApiConnectorListItem\n                                  key={index}\n                                  apiConnectorId={api.id as string}\n                                  apiConnectorDescription={api.description}\n                                  apiConnectorIcon={api.icon}\n                                  apiConnectorName={api.name}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDetails={t('shared:Details')}\n                                  i18nDetailsTip={t(\n                                    'apiConnector.detailsApiConnectorTip'\n                                  )}\n                                  i18nUsedByMessage={this.getUsedByMessage(api)}\n                                  onDelete={this.handleDelete}\n                                  onDetails={this.handleDetails}\n                                  usedBy={optionalIntValue(api.uses)}\n                                />\n                              ))\n                          }\n                        </WithLoader>\n                      </ApiConnectorListView>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithApiConnectors>\n    );\n  }\n}\n","import { WithExtensionIntegrations } from '@syndesis/api';\nimport {\n  ExtensionIntegrationsTable,\n  IExtensionIntegration,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\n\nexport interface IExtensionIntegrationsProps {\n  extensionId: string;\n  uses: number;\n  onSelectIntegration: (integrationId: string) => void;\n}\n\n/**\n * A component that lists the integrations that uses a specific extension.\n */\nexport default class ExtensionIntegrations extends React.Component<\n  IExtensionIntegrationsProps\n> {\n  public getUsageMessage(uses: number): string {\n    if (uses === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', {\n      count: uses,\n    });\n  }\n\n  public render() {\n    return (\n      <WithExtensionIntegrations extensionId={this.props.extensionId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Translation ns={['customizations', 'shared']}>\n                {t => (\n                  <ExtensionIntegrationsTable\n                    i18nDescription={t('shared:Description')}\n                    i18nName={t('shared:Name')}\n                    i18nUsageMessage={this.getUsageMessage(this.props.uses)}\n                    onSelectIntegration={this.props.onSelectIntegration}\n                    data={data as IExtensionIntegration[]}\n                  />\n                )}\n              </Translation>\n            )}\n          </WithLoader>\n        )}\n      </WithExtensionIntegrations>\n    );\n  }\n}\n","import { WithExtension, WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ExtensionDetail,\n  ExtensionOverview,\n  ExtensionSupports,\n  IAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../../resolvers';\nimport ExtensionIntegrations from '../shared/ExtensionIntegrations';\n\n/**\n * @param extensionId - the ID of the extension whose details are being shown by this page.\n */\nexport interface IExtensionDetailRouteParams {\n  extensionId: string;\n}\n\n/**\n * @param extension - the extension whose details are being shown by this page. If\n * exists, it must equal to the [extensionId]{@link IExtensionDetailRouteParams#extensionId}.\n * This is used to immediately show the details to the user, without\n * any loader; the backend will be called nonetheless to ensure that we are\n * working with the latest data available. This will be used when navigating from the\n * [ExtensionPage]{@link ExtensionsPage}.\n */\nexport interface IExtensionDetailRouteState {\n  extension?: Extension;\n}\n\nexport default class ExtensionDetailsPage extends React.Component {\n  public getTypeMessage(type: string): string {\n    if ('Steps' === type) {\n      return i18n.t('customizations:extension.StepExtension');\n    }\n\n    if ('Connectors' === type) {\n      return i18n.t('customizations:extension.ConnectorExtension');\n    }\n\n    if ('Libraries' === type) {\n      return i18n.t('customizations:extension.LibraryExtension');\n    }\n\n    return i18n.t('customizations:extension.unknownExtensionType');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IExtensionDetailRouteParams, IExtensionDetailRouteState>>\n        {({ extensionId }, { extension }, { history }) => {\n          const handleSelectIntegration = (selectedIntegrationId: string) => {\n            // redirect to the integration detail page\n            history.push(\n              resolvers.integrations.integration.details({\n                integrationId: selectedIntegrationId,\n              })\n            );\n          };\n          return (\n            <WithExtensionHelpers>\n              {({ deleteExtension }) => {\n                const handleDelete = async () => {\n                  await deleteExtension(extensionId);\n                  // TODO: post toast notification\n                  // display extensions list page\n                  history.push(resolvers.customizations.extensions.list());\n                };\n                return (\n                  <WithExtension\n                    extensionId={extensionId}\n                    initialValue={extension}\n                  >\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<ApiError />}\n                      >\n                        {() => (\n                          <Translation ns={['customizations', 'shared']}>\n                            {t => (\n                              <>\n                                <Breadcrumb>\n                                  <Link to={resolvers.dashboard.root()}>\n                                    {t('shared:Home')}\n                                  </Link>\n                                  <Link to={resolvers.customizations.root()}>\n                                    {t('shared:Customizations')}\n                                  </Link>\n                                  <Link\n                                    to={resolvers.customizations.extensions.list()}\n                                  >\n                                    {t('shared:Extensions')}\n                                  </Link>\n                                  <span>\n                                    {t('extension.extensionDetailPageTitle')}\n                                  </span>\n                                </Breadcrumb>\n                                <ExtensionDetail\n                                  extensionName={data.name}\n                                  // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                  extensionUses={data.uses as number}\n                                  i18nCancelText={t('shared:Cancel')}\n                                  i18nDelete={t('shared:Delete')}\n                                  i18nDeleteModalMessage={t(\n                                    'extension.deleteModalMessage',\n                                    { name: data.name }\n                                  )}\n                                  i18nDeleteModalTitle={t(\n                                    'extension.deleteModalTitle'\n                                  )}\n                                  i18nDeleteTip={t(\n                                    'extension.deleteExtensionTip'\n                                  )}\n                                  i18nIdMessage={t('extension.idMessage', {\n                                    id: data.extensionId!,\n                                  })}\n                                  i18nOverviewSectionTitle={t(\n                                    'extension.overviewSectionTitle'\n                                  )}\n                                  i18nSupportsSectionTitle={\n                                    data.extensionType === 'Steps'\n                                      ? t(\n                                          'extension.supportedStepsSectionTitle'\n                                        )\n                                      : data.extensionType === 'Connectors'\n                                      ? t(\n                                          'extension.supportedConnectorsSectionTitle'\n                                        )\n                                      : t(\n                                          'extension.supportedLibrariesSectionTitle'\n                                        )\n                                  }\n                                  i18nUpdate={t('shared:Update')}\n                                  i18nUpdateTip={t(\n                                    'extension.updateExtensionTip'\n                                  )}\n                                  i18nUsageSectionTitle={t(\n                                    'extension.usageSectionTitle'\n                                  )}\n                                  integrationsSection={\n                                    <ExtensionIntegrations\n                                      extensionId={data.id!}\n                                      uses={\n                                        // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                        data.uses as number\n                                      }\n                                      onSelectIntegration={\n                                        handleSelectIntegration\n                                      }\n                                    />\n                                  }\n                                  linkUpdateExtension={resolvers.customizations.extensions.extension.update(\n                                    { extension: data }\n                                  )}\n                                  onDelete={handleDelete}\n                                  overviewSection={\n                                    <ExtensionOverview\n                                      extensionDescription={data.description}\n                                      extensionName={data.name}\n                                      i18nDescription={t('shared:Description')}\n                                      i18nLastUpdate={t('extension.LastUpdate')}\n                                      i18nLastUpdateDate={\n                                        data.lastUpdated\n                                          ? new Date(\n                                              data.lastUpdated\n                                            ).toLocaleString()\n                                          : ''\n                                      }\n                                      i18nName={t('shared:Name')}\n                                      i18nType={t('shared:Type')}\n                                      i18nTypeMessage={this.getTypeMessage(\n                                        data.extensionType\n                                      )}\n                                    />\n                                  }\n                                  supportsSection={\n                                    <ExtensionSupports\n                                      extensionActions={data.actions.map(\n                                        (action: Action) =>\n                                          ({\n                                            description: action.description,\n                                            name: action.name,\n                                          } as IAction)\n                                      )}\n                                    />\n                                  }\n                                />\n                              </>\n                            )}\n                          </Translation>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithExtension>\n                );\n              }}\n            </WithExtensionHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport i18n from '../../i18n';\n\n/**\n * Obtains a localized extension type name.\n * @param extension the extension whose type name is being requested\n */\nexport function getExtensionTypeName(extension: Extension) {\n  const type = extension.extensionType;\n\n  if ('Steps' === type) {\n    return i18n.t('customizations:extension.StepExtension');\n  }\n\n  if ('Connectors' === type) {\n    return i18n.t('customizations:extension.ConnectorExtension');\n  }\n\n  if ('Libraries' === type) {\n    return i18n.t('customizations:extension.LibraryExtension');\n  }\n\n  return i18n.t('customizations:extension.unknownExtensionType');\n}\n","import { WithExtensionHelpers } from '@syndesis/api';\nimport { Action, Extension } from '@syndesis/models';\nimport {\n  Breadcrumb,\n  ButtonLink,\n  Container,\n  ExtensionImportCard,\n  ExtensionImportReview,\n  IImportAction,\n  Loader,\n} from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { UIContext } from '../../../app';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport './ExtensionImportPage.css';\n\nexport interface IExtensionImportRouteProps {\n  extensionId?: string;\n}\n\nexport interface IExtensionImportPageState {\n  /**\n   * `true` if the dropzone should be disabled. Defaults to `false`. When the review component is being\n   * shown, the dropzone is disabled.\n   */\n  disableDropzone: boolean;\n\n  /**\n   * A general, localized message for when a file upload is rejected. This is shown in the DnD dropzone.\n   */\n  dndUploadFailedMessage?: string;\n\n  /**\n   * A general, localized message for when a file upload is accepted. This is shown in the DnD dropzone.\n   */\n  dndUploadSuccessMessage?: string;\n\n  /**\n   * The existing extension being updated or the extension created by processing the uploaded file.\n   */\n  extension?: Extension;\n\n  /**\n   * A localized error message indicating that the jar file uploading could not be processed as an extension.\n   */\n  i18nAlertMessage?: string;\n\n  /**\n   * `true` if the extension *.jar file is being processed by the server. Defaults to `false`.\n   */\n  loading: boolean;\n}\n\nexport default class ExtensionImportPage extends React.Component<\n  {},\n  IExtensionImportPageState\n> {\n  public constructor(props: IExtensionImportRouteProps) {\n    super(props);\n    this.state = { disableDropzone: false, loading: false };\n  }\n\n  /**\n   * Obtains a localized label for the extension actions.\n   */\n  public getActionsLabel(): string {\n    if (this.state.extension) {\n      switch (this.state.extension.extensionType) {\n        case 'Steps':\n          return i18n.t('shared:Steps');\n        default:\n          break;\n      }\n    }\n\n    return i18n.t('shared:Actions');\n  }\n\n  /**\n   * Obtains a localized message describing the action.\n   * @param name the action name\n   * @param description the action description\n   */\n  public getActionText(name: string, description: string): string {\n    return i18n.t('customizations:action', {\n      actionDescription: description,\n      actionName: name,\n    });\n  }\n\n  public render() {\n    return (\n      <UIContext.Consumer>\n        {({ pushNotification }) => {\n          const onDndUploadRejectedHandler = (failedFileName: string) => {\n            const text = i18n.t(\n              'customizations:extension.importUploadFailedAlertMessage',\n              {\n                fileName: failedFileName,\n              }\n            );\n            pushNotification(text, 'error');\n            return text;\n          };\n          return (\n            <WithRouteData<IExtensionImportRouteProps, null>>\n              {({ extensionId }, _, { history }) => (\n                <WithExtensionHelpers>\n                  {({ importExtension, uploadExtension }) => {\n                    const onDndUploadAcceptedHandler = async (\n                      files: File[]\n                    ) => {\n                      try {\n                        // set state before call to backend\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: true,\n                          dndUploadFailedMessage: undefined,\n                          dndUploadSuccessMessage: undefined,\n                          i18nAlertMessage: undefined,\n                          loading: true,\n                        });\n\n                        // make server call to update existing or to create a new extension\n                        const uploaded = extensionId\n                          ? await uploadExtension(files[0], extensionId)\n                          : await uploadExtension(files[0]);\n\n                        pushNotification(\n                          `${uploaded.id} was uploaded`,\n                          'success'\n                        );\n\n                        // set state based on successful upload\n                        this.setState({\n                          ...this.state,\n                          dndUploadSuccessMessage: i18n.t(\n                            'customizations:extension.importUploadSuccessMessage'\n                          ),\n                          extension: uploaded,\n                          loading: false,\n                        });\n                      } catch (e) {\n                        // set state based on failed upload\n                        this.setState({\n                          ...this.state,\n                          disableDropzone: false,\n                          dndUploadFailedMessage: i18n.t(\n                            'customizations:extension.importUploadFailedMessage'\n                          ),\n                          i18nAlertMessage: i18n.t(\n                            'customizations:extension.importInvalidFileMessage'\n                          ),\n                          loading: false,\n                        });\n                      }\n                    };\n                    const handleImport = async (importExtensionId: string) => {\n                      try {\n                        await importExtension(importExtensionId);\n                        history.push(\n                          resolvers.customizations.extensions.list()\n                        );\n                      } catch (e) {\n                        // TODO: post notification\n                      }\n                    };\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <Container className=\"col-sm-11\">\n                              <Breadcrumb>\n                                <Link to={resolvers.dashboard.root()}>\n                                  {t('shared:Home')}\n                                </Link>\n                                <Link to={resolvers.customizations.root()}>\n                                  {t('shared:Customizations')}\n                                </Link>\n                                <Link\n                                  to={resolvers.customizations.extensions.list()}\n                                >\n                                  {t('shared:Extensions')}\n                                </Link>\n                                <span>\n                                  {t('extension.extensionImportPageTitle')}\n                                </span>\n                              </Breadcrumb>\n                            </Container>\n                            <Container\n                              className={\n                                'extension-import-page__actionContainer col-sm-1'\n                              }\n                            >\n                              <ButtonLink\n                                className={'extension-import-page__action'}\n                                href={resolvers.customizations.extensions.list()}\n                                as={'default'}\n                              >\n                                {t('shared:Cancel')}\n                              </ButtonLink>\n                            </Container>\n                            {this.state.loading ? <Loader /> : null}\n                            <ExtensionImportCard\n                              dndDisabled={this.state.disableDropzone}\n                              i18nAlertMessage={this.state.i18nAlertMessage}\n                              i18nDndHelpMessage={t(\n                                'extension.importHelpMessage'\n                              )}\n                              i18nDndInstructions={t(\n                                'extension.importDndInstructions'\n                              )}\n                              i18nDndNoFileSelectedMessage={t(\n                                'extension.importNoFileSelectedMessage'\n                              )}\n                              i18nDndSelectedFileLabel={t(\n                                'extension.importSelectedFileLabel'\n                              )}\n                              i18nDndUploadFailedMessage={\n                                this.state.dndUploadFailedMessage\n                              }\n                              i18nDndUploadSuccessMessage={\n                                this.state.dndUploadSuccessMessage\n                              }\n                              i18nImportInstructions={t(\n                                'extension.importUpdateMessage'\n                              )}\n                              i18nTitle={t('extension.ImportExtension')}\n                              onDndUploadAccepted={onDndUploadAcceptedHandler}\n                              onDndUploadRejected={onDndUploadRejectedHandler}\n                            />\n                            {this.state.extension &&\n                            this.state.extension.id &&\n                            this.state.extension.extensionId ? (\n                              <ExtensionImportReview\n                                actions={this.state.extension.actions.map(\n                                  (action: Action) =>\n                                    ({\n                                      description: action.description,\n                                      name: action.name,\n                                    } as IImportAction)\n                                )}\n                                cancelLink={resolvers.customizations.extensions.list()}\n                                extensionDescription={\n                                  this.state.extension.description\n                                }\n                                extensionId={this.state.extension.extensionId}\n                                extensionName={this.state.extension.name}\n                                extensionUid={this.state.extension.id}\n                                i18nActionsLabel={this.getActionsLabel()}\n                                i18nCancel={i18n.t('shared:Cancel')}\n                                i18nDescriptionLabel={i18n.t(\n                                  'shared:Description'\n                                )}\n                                i18nExtensionTypeMessage={getExtensionTypeName(\n                                  this.state.extension\n                                )}\n                                i18nIdLabel={i18n.t('shared:ID')}\n                                i18nImport={i18n.t(\n                                  'customizations:extension.ImportExtension'\n                                )}\n                                i18nNameLabel={i18n.t('shared:Name')}\n                                i18nTitle={i18n.t(\n                                  'customizations:extension.ImportReview'\n                                )}\n                                i18nTypeLabel={i18n.t('shared:Type')}\n                                i18nActionText={this.getActionText}\n                                onImport={handleImport}\n                              />\n                            ) : (\n                              <Container />\n                            )}\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithExtensionHelpers>\n              )}\n            </WithRouteData>\n          );\n        }}\n      </UIContext.Consumer>\n    );\n  }\n}\n","import { WithExtensionHelpers, WithExtensions } from '@syndesis/api';\nimport { Extension } from '@syndesis/models';\nimport {\n  Container,\n  ExtensionListItem,\n  ExtensionListSkeleton,\n  ExtensionListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { getExtensionTypeName } from '../customizationsUtils';\nimport resolvers from '../resolvers';\nimport CustomizationsNavBar from '../shared/CustomizationsNavBar';\n\nfunction getFilteredAndSortedExtensions(\n  extensions: Extension[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = extensions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((extension: Extension) =>\n      extension.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisExtension, thatExtension) => {\n    if (isSortAscending) {\n      return thisExtension.name.localeCompare(thatExtension.name);\n    }\n\n    // sort descending\n    return thatExtension.name.localeCompare(thisExtension.name);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport default class ExtensionsPage extends React.Component {\n  public filterUndefinedId(extension: Extension): boolean {\n    return extension.id !== undefined;\n  }\n\n  public getUsedByMessage(extension: Extension): string {\n    // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n    const numUsedBy = extension.uses as number;\n\n    if (numUsedBy === 1) {\n      return i18n.t('customizations:usedByOne');\n    }\n\n    return i18n.t('customizations:usedByMulti', { count: numUsedBy });\n  }\n\n  public render() {\n    return (\n      <WithExtensionHelpers>\n        {({ deleteExtension }) => {\n          const handleDelete = async (extensionId: string) => {\n            await deleteExtension(extensionId);\n            // TODO: post toast notification\n          };\n          return (\n            <WithExtensions>\n              {({ data, hasData, error }) => (\n                <WithListViewToolbarHelpers\n                  defaultFilterType={filterByName}\n                  defaultSortType={sortByName}\n                >\n                  {helpers => {\n                    const filteredAndSorted = getFilteredAndSortedExtensions(\n                      data.items,\n                      helpers.activeFilters,\n                      helpers.currentSortType,\n                      helpers.isSortAscending\n                    );\n\n                    return (\n                      <Translation ns={['customizations', 'shared']}>\n                        {t => (\n                          <>\n                            <CustomizationsNavBar />\n                            <Container className=\"pf-u-my-md\">\n                              <h1 className=\"pf-c-title pf-m-xl\">\n                                {t('extension.extensionsPageTitle')}\n                              </h1>\n                              <p\n                                dangerouslySetInnerHTML={{\n                                  __html: t(\n                                    'extension.extensionsPageDescription'\n                                  ),\n                                }}\n                              />\n                            </Container>\n                            <ExtensionListView\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              linkImportExtension={resolvers.extensions.import()}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nTitle={''}\n                              i18nDescription={''}\n                              i18nEmptyStateInfo={t(\n                                'extension.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'extension.emptyStateTitle'\n                              )}\n                              i18nLinkImportExtension={t(\n                                'extension.ImportExtension'\n                              )}\n                              i18nLinkImportExtensionTip={t(\n                                'extension.importExtensionTip'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <ExtensionListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted\n                                    .filter((extension: Extension) =>\n                                      this.filterUndefinedId(extension)\n                                    )\n                                    .map(\n                                      (extension: Extension, index: number) => (\n                                        <ExtensionListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.extensions.extension.details(\n                                            { extension }\n                                          )}\n                                          extensionDescription={\n                                            extension.description\n                                          }\n                                          extensionIcon={extension.icon}\n                                          extensionId={extension.id!}\n                                          extensionName={extension.name}\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'extension.deleteModalMessage',\n                                            { name: extension.name }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'extension.deleteModalTitle'\n                                          )}\n                                          i18nDeleteTip={t(\n                                            'extension.deleteExtensionTip'\n                                          )}\n                                          i18nDetails={t('shared:Details')}\n                                          i18nDetailsTip={t(\n                                            'extension.detailsExtensionTip'\n                                          )}\n                                          i18nExtensionType={getExtensionTypeName(\n                                            extension\n                                          )}\n                                          i18nUpdate={t('shared:Update')}\n                                          i18nUpdateTip={t(\n                                            'extension.updateExtensionTip'\n                                          )}\n                                          i18nUsedByMessage={this.getUsedByMessage(\n                                            extension\n                                          )}\n                                          linkUpdateExtension={resolvers.extensions.extension.update(\n                                            { extension }\n                                          )}\n                                          onDelete={handleDelete}\n                                          usedBy={\n                                            // TODO: Schema is currently wrong as it has 'uses` as an OptionalInt. Remove cast when schema is fixed.\n                                            extension.uses as number\n                                          }\n                                        />\n                                      )\n                                    )\n                                }\n                              </WithLoader>\n                            </ExtensionListView>\n                          </>\n                        )}\n                      </Translation>\n                    );\n                  }}\n                </WithListViewToolbarHelpers>\n              )}\n            </WithExtensions>\n          );\n        }}\n      </WithExtensionHelpers>\n    );\n  }\n}\n","import {\n  Connection,\n  ProjectedColumn,\n  RestDataService,\n  SchemaNode,\n  ViewDefinition,\n  ViewEditorState,\n  ViewInfo,\n  VirtualizationPublishingDetails,\n  VirtualizationSourceStatus,\n} from '@syndesis/models';\n\nconst PREVIEW_VDB_NAME = 'PreviewVdb';\nconst SCHEMA_MODEL_SUFFIX = 'schemamodel';\n\nexport enum DvConnectionStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n}\n\nexport enum DvConnectionSelection {\n  SELECTED = 'SELECTED',\n  NOTSELECTED = 'NOTSELECTED',\n}\n\n/**\n * Get the name of the preview VDB used for preview queries\n */\nexport function getPreviewVdbName(): string {\n  return PREVIEW_VDB_NAME;\n}\n\n/**\n * Recursively flattens the tree structure of SchemaNodes,\n * into an array of ViewInfos\n * @param viewInfos the array of ViewInfos\n * @param schemaNode the SchemaNode from which the ViewInfo is generated\n * @param nodePath path for current SchemaNode\n * @param selectedViewNames names of views which are selected\n * @param existingViewNames names of views which exist (marked as update)\n */\nexport function generateViewInfos(\n  viewInfos: ViewInfo[],\n  schemaNode: SchemaNode,\n  nodePath: string[],\n  selectedViewNames: string[],\n  existingViewNames: string[]\n): void {\n  if (schemaNode) {\n    // Generate source path from nodePath array\n    const sourcePath: string[] = [];\n    for (const seg of nodePath) {\n      sourcePath.push(seg);\n    }\n\n    // Creates ViewInfo if the SchemaNode is queryable\n    if (schemaNode.queryable === true) {\n      const vwName = schemaNode.connectionName + '_' + schemaNode.name;\n      // Determine whether ViewInfo should be selected\n      const selectedState =\n        selectedViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Deteremine whether ViewInfo is an update\n      const hasExistingView =\n        existingViewNames.findIndex(viewName => viewName === vwName) === -1\n          ? false\n          : true;\n      // Create ViewInfo\n      const view: ViewInfo = {\n        connectionName: schemaNode.connectionName,\n        isUpdate: hasExistingView,\n        nodePath: sourcePath,\n        selected: selectedState,\n        viewName: vwName,\n        viewSourceNode: schemaNode,\n      };\n      viewInfos.push(view);\n    }\n    // Update path for next level\n    sourcePath.push(schemaNode.name);\n    // Process this nodes children\n    if (schemaNode.children && schemaNode.children.length > 0) {\n      for (const childNode of schemaNode.children) {\n        generateViewInfos(\n          viewInfos,\n          childNode,\n          sourcePath,\n          selectedViewNames,\n          existingViewNames\n        );\n      }\n    }\n  }\n}\n\n/**\n * Generates ViewEditorStates for the supplied ViewInfos\n * @param serviceVdbName the name of the virtualization vdb\n * @param viewInfos the array of ViewInfos\n */\nexport function generateViewEditorStates(\n  serviceVdbName: string,\n  viewInfos: ViewInfo[]\n): ViewEditorState[] {\n  const editorStates: ViewEditorState[] = [];\n  for (const viewInfo of viewInfos) {\n    const srcPaths: string[] = [];\n    const path =\n      'connection=' +\n      viewInfo.connectionName +\n      '/' +\n      viewInfo.viewSourceNode.path;\n    srcPaths.push(path);\n\n    // All columns are projected\n    const projCols: ProjectedColumn[] = [];\n    const projCol: ProjectedColumn = {\n      name: 'ALL',\n      selected: true,\n      type: 'ALL',\n    };\n    projCols.push(projCol);\n\n    // View Definition\n    // TODO: need to supply the description here instead of generate\n    const viewDefn: ViewDefinition = {\n      compositions: [],\n      isComplete: true,\n      keng__description: viewInfo.viewName + ' description',\n      projectedColumns: projCols,\n      sourcePaths: srcPaths,\n      viewName: viewInfo.viewName,\n    };\n\n    // ViewEditorState which is supplied to the user profile\n    const editorState: ViewEditorState = {\n      id: serviceVdbName + '.' + viewInfo.viewName,\n      viewDefinition: viewDefn,\n    };\n    editorStates.push(editorState);\n  }\n  return editorStates;\n}\n\n/**\n * Generate array of DvConnections.  Takes the incoming connections and updates the 'options',\n * based on the Virtualization connection status and selection state\n * @param conns the connections\n * @param virtualizationsSourceStatuses the available virtualization sources\n * @param selectedConn name of a selected connection\n */\nexport function generateDvConnections(\n  conns: Connection[],\n  virtualizationsSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string\n): Connection[] {\n  const dvConns: Connection[] = [];\n  for (const conn of conns) {\n    let connStatus = DvConnectionStatus.INACTIVE;\n    const virtSrcStatus = virtualizationsSourceStatuses.find(\n      virtStatus => virtStatus.sourceName === conn.name\n    );\n    if (\n      virtSrcStatus &&\n      virtSrcStatus.vdbState === 'ACTIVE' &&\n      virtSrcStatus.schemaState === 'ACTIVE'\n    ) {\n      connStatus = DvConnectionStatus.ACTIVE;\n    }\n\n    let selectionState = DvConnectionSelection.NOTSELECTED;\n    if (conn.name === selectedConn) {\n      selectionState = DvConnectionSelection.SELECTED;\n    }\n    conn.options = { dvStatus: connStatus, dvSelected: selectionState };\n    dvConns.push(conn);\n  }\n  return dvConns;\n}\n\n/**\n * Get the Connection DV status.  DV uses the options on a connection to set status\n * @param connection the connection\n */\nexport function getDvConnectionStatus(conn: Connection): string {\n  let dvState: string = DvConnectionStatus.INACTIVE;\n  if (conn.options && conn.options.dvStatus) {\n    dvState = conn.options.dvStatus;\n  }\n  return dvState;\n}\n\n/**\n * Determine if the Connection is selected with the DV wizard.  DV uses the options on a connection to set selection\n * @param connection the connection\n */\nexport function isDvConnectionSelected(conn: Connection) {\n  let isSelected = false;\n  if (\n    conn.options &&\n    conn.options.dvSelected &&\n    conn.options.dvSelected === DvConnectionSelection.SELECTED\n  ) {\n    isSelected = true;\n  }\n  return isSelected;\n}\n\n/**\n * Get publishing state details for the specified virtualization\n * @param virtualization the RestDataService\n */\nexport function getPublishingDetails(\n  virtualization: RestDataService\n): VirtualizationPublishingDetails {\n  // Determine published state\n  const publishStepDetails: VirtualizationPublishingDetails = {\n    state: virtualization.publishedState,\n    stepNumber: 0,\n    stepText: '',\n    stepTotal: 4,\n  };\n  switch (virtualization.publishedState) {\n    case 'CONFIGURING':\n      publishStepDetails.stepNumber = 1;\n      publishStepDetails.stepText = 'Configuring';\n      break;\n    case 'BUILDING':\n      publishStepDetails.stepNumber = 2;\n      publishStepDetails.stepText = 'Building';\n      break;\n    case 'DEPLOYING':\n      publishStepDetails.stepNumber = 3;\n      publishStepDetails.stepText = 'Deploying';\n      break;\n    case 'RUNNING':\n      publishStepDetails.stepNumber = 4;\n      publishStepDetails.stepText = 'Published';\n      break;\n  }\n  if (virtualization.publishLogUrl) {\n    publishStepDetails.logUrl = virtualization.publishLogUrl;\n  }\n  return publishStepDetails;\n}\n\n/**\n * Generate preview SQL for the specified view definition\n * @param viewDefinition the ViewDefinition\n */\nexport function getPreviewSql(viewDefinition: ViewDefinition): string {\n  // TODO: This assumes a single source view.  Will need to expand capability later\n  const sourcePath = viewDefinition.sourcePaths[0];\n  if (sourcePath) {\n    return 'SELECT * FROM ' + getPreviewTableName(sourcePath) + ';';\n  }\n  return '';\n}\n\n/**\n * Generates the table name for the preview query, given the source path.\n * Example sourcePath: (connection=pgConn/schema=public/table=account)\n * @param sourcePath the path for the view source\n */\nfunction getPreviewTableName(sourcePath: string): string {\n  // Assemble the name, utilizing the schema model suffix\n  return (\n    getConnectionName(sourcePath).toLowerCase() +\n    SCHEMA_MODEL_SUFFIX +\n    '.' +\n    getNodeName(sourcePath)\n  );\n}\n\n/**\n * Get the connection name from the supplied source path.  connection is always the first segment.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getConnectionName(sourcePath: string): string {\n  // Connection name is the value of the first segment\n  return sourcePath.split('/')[0].split('=')[1];\n}\n\n/**\n * Get the node name from the supplied source path.\n * Example sourcePath: 'connection=pgConn/schema=public/table=account'\n * @param sourcePath the view definition sourcePath\n */\nfunction getNodeName(sourcePath: string): string {\n  const segments = sourcePath.split('/');\n  // Node name is the value of the last segment\n  return segments[segments.length - 1].split('=')[1];\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ApiConnectorsPage from './pages/ApiConnectorsPage';\nimport ExtensionDetailsPage from './pages/ExtensionDetailsPage';\nimport ExtensionImportPage from './pages/ExtensionImportPage';\nimport ExtensionsPage from './pages/ExtensionsPage';\nimport routes from './routes';\n\nexport default class CustomizationApp extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.apiConnectors.list}\n        />\n        <Route\n          path={routes.apiConnectors.list}\n          exact={true}\n          component={ApiConnectorsPage}\n        />\n        <Route\n          path={routes.extensions.list}\n          exact={true}\n          component={ExtensionsPage}\n        />\n        <Route\n          path={routes.extensions.import}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n        // **This route must appear after import page**\n        <Route\n          path={routes.extensions.extension.details}\n          exact={true}\n          component={ExtensionDetailsPage}\n        />\n        <Route\n          path={routes.extensions.extension.update}\n          exact={true}\n          component={ExtensionImportPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport CustomizationsApp from './CustomizationsApp';\nimport routes from './routes';\n\nexport class CustomizationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route path={routes.root} component={CustomizationsApp} />\n      </Switch>\n    );\n  }\n}\n","import { WithRouter } from '@syndesis/utils';\nimport * as React from 'react';\nimport Loadable from 'react-loadable';\nimport { ModuleLoader } from '../../shared';\n\nconst LoadableDashboardPage = Loadable({\n  loader: () => import(/* webpackChunkName: \"Dashboard\" */ './DashboardApp'),\n  loading: ModuleLoader,\n});\n\nexport class DashboardModule extends React.Component {\n  public render() {\n    return (\n      <WithRouter>\n        {({ match }) => <LoadableDashboardPage baseurl={match.url} />}\n      </WithRouter>\n    );\n  }\n}\n","import customizations from './customizations/routes';\nimport dashboard from './dashboard/routes';\nimport data from './data/routes';\nimport integrations from './integrations/routes';\nimport settings from './settings/routes';\n\nexport default {\n  customizations,\n  dashboard,\n  data,\n  integrations,\n  settings,\n};\n","import { WithVirtualization } from '@syndesis/api';\nimport { Container, Loader } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\n\nexport interface IWithVirtualizationDetailHeaderProps {\n  virtualizationId: string;\n}\n\nexport class HeaderView extends React.Component<\n  IWithVirtualizationDetailHeaderProps\n> {\n  public constructor(props: IWithVirtualizationDetailHeaderProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <WithVirtualization virtualizationId={this.props.virtualizationId}>\n        {({ data, hasData, error }) => (\n          <WithLoader\n            error={error}\n            loading={!hasData}\n            loaderChildren={<Loader />}\n            errorChildren={<ApiError />}\n          >\n            {() => (\n              <Container>\n                <h2>{data.keng__id}</h2>\n                <h3>{data.tko__description}</h3>\n              </Container>\n            )}\n          </WithLoader>\n        )}\n      </WithVirtualization>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param virtualization - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationNavBarProps#virtualization}.\n */\n\nexport interface IVirtualizationNavBarProps {\n  virtualization: RestDataService;\n}\n\n/**\n * A component that displays a nav bar with 4 items:\n *\n * 1. a link to the page that displays a list of Views\n * 2. a link to the page that displays relationships\n * 3. a link to the page that displays the SQL Query editor\n * 4. a link to the page that dispays metrics\n *\n */\nexport class VirtualizationNavBar extends React.Component<\n  IVirtualizationNavBarProps\n> {\n  public render() {\n    const virtualization = this.props.virtualization;\n    return (\n      <Translation ns={['data', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={t('data:virtualization.views')}\n                to={resolvers.virtualizations.views.root({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.relationship')}\n                to={resolvers.virtualizations.relationship({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.sqlClient')}\n                to={resolvers.virtualizations.sqlClient({\n                  virtualization,\n                })}\n              />\n              <TabBarItem\n                label={t('data:virtualization.metrics')}\n                to={resolvers.virtualizations.metrics({\n                  virtualization,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WizardStep, WizardSteps } from '@syndesis/ui';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\n\nexport interface IViewsCreateStepsProps {\n  /**\n   * The one-based active step number.\n   */\n  step: number;\n}\n\nexport interface IViewsCreateStepsState {\n  /**\n   * Indicates if the user clicked on a step. Used to show\n   * sub-steps when browsing from a mobile device.\n   */\n  active: boolean;\n}\n\n/**\n * A component to display the PatternFly Wizard Steps specific to the integration\n * creator flow.\n * @see [step]{@link IViewsCreateStepsProps#step}\n * @see [subStep]{@link IViewsCreateStepsProps#subStep}\n */\nexport class ViewsCreateSteps extends React.Component<\n  IViewsCreateStepsProps,\n  IViewsCreateStepsState\n> {\n  public state = {\n    active: false,\n  };\n\n  constructor(props: IViewsCreateStepsProps) {\n    super(props);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  public toggleActive() {\n    this.setState({\n      active: !this.state.active,\n    });\n  }\n\n  public render() {\n    return (\n      <WizardSteps\n        active={this.state.active}\n        mainSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n        altSteps={\n          <>\n            <WizardStep\n              isActive={this.props.step === 1}\n              isDisabled={this.props.step < 1}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={1}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep1')}\n            />\n            <WizardStep\n              isActive={this.props.step === 2}\n              isDisabled={this.props.step < 2}\n              isAlt={true}\n              onClick={this.toggleActive}\n              step={2}\n              title={i18n.t('data:virtualization.importDataSourceWizardStep2')}\n            />\n          </>\n        }\n      />\n    );\n  }\n}\n","import { WithVirtualizationConnectionSchema } from '@syndesis/api';\nimport { SchemaNode, ViewInfo } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewInfoList,\n  ViewInfoListItem,\n  ViewInfoListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { generateViewInfos } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedViewInfos(\n  schemaNodes: SchemaNode[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean,\n  selectedViewNames: string[],\n  existingViewNames: string[]\n) {\n  const viewInfos: ViewInfo[] = [];\n  if (schemaNodes && schemaNodes.length > 0) {\n    generateViewInfos(\n      viewInfos,\n      schemaNodes[0],\n      [],\n      selectedViewNames,\n      existingViewNames\n    );\n  }\n\n  let filteredAndSorted = viewInfos;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((viewInfo: ViewInfo) =>\n      viewInfo.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisViewInfo, thatViewInfo) => {\n    if (isSortAscending) {\n      return thisViewInfo.viewName.localeCompare(thatViewInfo.viewName);\n    }\n\n    // sort descending\n    return thatViewInfo.viewName.localeCompare(thisViewInfo.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nexport interface IViewInfosContentProps {\n  connectionName: string;\n  existingViewNames: string[];\n  onViewSelected: (view: ViewInfo) => void;\n  onViewDeselected: (viewName: string) => void;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class ViewInfosContent extends React.Component<IViewInfosContentProps> {\n  public displayedViews: ViewInfo[] = [];\n  public selectedViewNames: string[] = [];\n\n  public constructor(props: IViewInfosContentProps) {\n    super(props);\n    this.handleViewSelectionChange = this.handleViewSelectionChange.bind(this);\n  }\n\n  public handleViewSelectionChange(name: string, selected: boolean) {\n    if (selected) {\n      for (const viewInfo of this.displayedViews) {\n        if (viewInfo.viewName === name) {\n          this.props.onViewSelected(viewInfo);\n        }\n      }\n    } else {\n      this.props.onViewDeselected(name);\n    }\n  }\n\n  public render() {\n    return (\n      <WithVirtualizationConnectionSchema\n        connectionId={this.props.connectionName}\n      >\n        {({ data, hasData, error }) => (\n          <WithListViewToolbarHelpers\n            defaultFilterType={filterByName}\n            defaultSortType={sortByName}\n          >\n            {helpers => {\n              const filteredAndSorted = getFilteredAndSortedViewInfos(\n                data,\n                helpers.activeFilters,\n                helpers.currentSortType,\n                helpers.isSortAscending,\n                this.selectedViewNames,\n                this.props.existingViewNames\n              );\n              this.displayedViews = filteredAndSorted;\n\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <ViewInfoList\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      {...this.state}\n                      resultsCount={filteredAndSorted.length}\n                      {...helpers}\n                      i18nEmptyStateInfo={t(\n                        'virtualization.emptyStateInfoMessage'\n                      )}\n                      i18nEmptyStateTitle={t('virtualization.emptyStateTitle')}\n                      i18nName={t('shared:Name')}\n                      i18nNameFilterPlaceholder={t(\n                        'shared:nameFilterPlaceholder'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSorted.length,\n                      })}\n                    >\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={\n                          <ViewInfoListSkeleton\n                            width={800}\n                            style={{\n                              backgroundColor: '#FFF',\n                              marginTop: 30,\n                            }}\n                          />\n                        }\n                        errorChildren={<ApiError />}\n                      >\n                        {() =>\n                          filteredAndSorted.map(\n                            (viewInfo: ViewInfo, index: number) => (\n                              <ViewInfoListItem\n                                key={index}\n                                connectionName={viewInfo.connectionName}\n                                name={viewInfo.viewName}\n                                nodePath={viewInfo.nodePath}\n                                selected={viewInfo.selected}\n                                i18nUpdate={t('shared:Update')}\n                                isUpdateView={viewInfo.isUpdate}\n                                onSelectionChanged={\n                                  this.handleViewSelectionChange\n                                }\n                              />\n                            )\n                          )\n                        }\n                      </WithLoader>\n                    </ViewInfoList>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithListViewToolbarHelpers>\n        )}\n      </WithVirtualizationConnectionSchema>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { DropdownButton, MenuItem } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { getPreviewSql } from './VirtualizationUtils';\n\nexport interface IViewSqlFormProps {\n  /**\n   * @param views the array of view definitions for the current virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n\n  /**\n   * @param onQueryResultsChanged the parameter function called by the parent component to that returns\n   * the promotes the value of the latest query results\n   */\n  onQueryResultsChanged: (queryResults: QueryResults) => void;\n}\n\nexport interface IViewSqlFormState {\n  queryResults: QueryResults;\n  querySql: string;\n  selectedView?: ViewDefinition;\n}\n\nexport class ViewSqlForm extends React.Component<\n  IViewSqlFormProps,\n  IViewSqlFormState\n> {\n  public static queryResultsEmpty: QueryResults = {\n    columns: [],\n    rows: [],\n  };\n\n  public constructor(props: IViewSqlFormProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: '',\n    };\n\n    this.updateQueryResults = this.updateQueryResults.bind(this);\n    this.viewSelected = this.viewSelected.bind(this);\n  }\n\n  public updateQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({ queryResults: results })\n        : this.setState({ queryResults: ViewSqlForm.queryResultsEmpty });\n    }\n\n    this.props.onQueryResultsChanged(this.state.queryResults);\n  }\n\n  public viewSelected() {\n    const viewSql = getPreviewSql(this.props.views[0]);\n    // TODO: change the defaultValue in the SqlStatement text area\n    // to reflect the newly selected view name (if changed)\n    // Maybe even show a text field showing the selected component depending on the PF4 widget type\n    this.setState({\n      queryResults: ViewSqlForm.queryResultsEmpty,\n      querySql: viewSql,\n      selectedView: this.props.views[0],\n    });\n  }\n\n  public render() {\n    const formDefinition = {\n      rowLimit: {\n        componentProperty: true,\n        defaultValue: '10',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowLimitDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowLimit'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 3,\n        required: true,\n        secret: false,\n        type: 'number',\n      },\n      rowOffset: {\n        componentProperty: true,\n        defaultValue: '1',\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormRowOffsetDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormRowOffset'),\n        javaType: 'java.lang.Integer',\n        kind: 'property',\n        order: 4,\n        required: false,\n        secret: false,\n        type: 'number',\n      },\n      sqlStatement: {\n        componentProperty: true,\n        defaultValue: this.state.querySql,\n        deprecated: false,\n        description: i18n.t(\n          'data:virtualization.viewSqlFormSqlStatementDescription'\n        ),\n        displayName: i18n.t('data:virtualization.viewSqlFormSqlStatement'),\n        height: 300,\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 2,\n        required: true,\n        secret: false,\n        type: 'textarea',\n      },\n    } as IFormDefinition;\n\n    return (\n      // TODO need to retrieve real user here\n      <WithVirtualizationHelpers username=\"developer\">\n        {({ queryVirtualization }) => {\n          const doSubmit = async (value: any) => {\n            const results: QueryResults = await queryVirtualization(\n              this.props.targetVdb,\n              value.sqlStatement,\n              value.rowLimit,\n              value.rowOffset\n            );\n            this.updateQueryResults(results);\n          };\n          return (\n            // NOTE: This is a fake SELECTOR widget (i.e. dropdown menu) just to show a selector-like UI component\n            // TODO replace DropdownButton with\n            <>\n              <Container>\n                <DropdownButton\n                  bsStyle=\"default\"\n                  title={\n                    // TODO: i18n translations\n                    this.props.views.length > 0\n                      ? 'Select View...'\n                      : 'No Views Defined'\n                  }\n                  id=\"dropdown-example\"\n                  onClick={this.viewSelected}\n                >\n                  {this.props.views.map((view, index) => (\n                    <MenuItem key={index}>{view.viewName}</MenuItem>\n                  ))}\n                </DropdownButton>\n              </Container>\n              <Container>\n                <AutoForm\n                  definition={formDefinition}\n                  initialValue={''}\n                  i18nRequiredProperty={'*Required'}\n                  onSave={doSubmit}\n                >\n                  {({ fields, handleSubmit }) => (\n                    <React.Fragment>\n                      {fields}\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit\n                      </button>\n                    </React.Fragment>\n                  )}\n                </AutoForm>\n              </Container>\n            </>\n          );\n        }}\n      </WithVirtualizationHelpers>\n    );\n  }\n}\n","import { QueryResults, ViewDefinition } from '@syndesis/models';\nimport { Container, GenericTable } from '@syndesis/ui';\n// tslint:disable-next-line:no-implicit-dependencies\nimport { EmptyState, Grid, Table } from 'patternfly-react';\nimport * as React from 'react';\nimport i18n from '../../../i18n';\nimport { ViewSqlForm } from '../shared/';\n\nexport interface IViewSqlFormAndTableProps {\n  /**\n   * @param views the list of ViewDefinitions for the virtualization\n   */\n  views: ViewDefinition[];\n\n  /**\n   * @param targetVdb the name of the vdb to query\n   */\n  targetVdb: string;\n}\n\nexport interface IViewSqlFormAndTableState {\n  queryResults: QueryResults;\n}\n\nexport class ViewSqlFormAndTable extends React.Component<\n  IViewSqlFormAndTableProps,\n  IViewSqlFormAndTableState\n> {\n  public constructor(props: IViewSqlFormAndTableProps) {\n    super(props);\n    this.state = {\n      queryResults: ViewSqlForm.queryResultsEmpty,\n    };\n\n    this.setQueryResults = this.setQueryResults.bind(this);\n  }\n\n  public setQueryResults(results: QueryResults) {\n    {\n      results && results.columns.length > 0\n        ? this.setState({\n            queryResults: results,\n          })\n        : this.setState({\n            queryResults: ViewSqlForm.queryResultsEmpty,\n          });\n    }\n  }\n\n  public render() {\n    const defaultCellFormat = (value: any) => (\n      <Table.Heading>{value}</Table.Heading>\n    );\n    const defaultHeaderFormat = (value: any) => (\n      <Table.Cell>{value}</Table.Cell>\n    );\n\n    return (\n      <Grid.Row>\n        <Grid.Col md={6}>\n          <Container>\n            <ViewSqlForm\n              views={this.props.views}\n              targetVdb={this.props.targetVdb}\n              onQueryResultsChanged={this.setQueryResults}\n            />\n          </Container>\n        </Grid.Col>\n        <Grid.Col md={6}>\n          <Container>\n            {this.state.queryResults.rows.length > 0 ? (\n              <GenericTable\n                columns={this.state.queryResults.columns.map(c => ({\n                  cell: {\n                    formatters: [defaultCellFormat],\n                  },\n                  header: {\n                    formatters: [defaultHeaderFormat],\n                    label: c.label,\n                  },\n                  property: c.name,\n                }))}\n                rows={this.state.queryResults.rows\n                  .map(row => row.row)\n                  .map(row =>\n                    row.reduce(\n                      // tslint:disable-next-line:no-shadowed-variable\n                      (row, r, idx) => ({\n                        ...row,\n                        [this.state.queryResults.columns[idx].name]: r,\n                      }),\n                      {}\n                    )\n                  )}\n                rowKey={\n                  this.state.queryResults.columns.length > 0\n                    ? this.state.queryResults.columns[0].name\n                    : ''\n                }\n                {...this.props}\n              />\n            ) : (\n              <EmptyState>\n                <EmptyState.Title>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateTitle'\n                  )}\n                </EmptyState.Title>\n                <EmptyState.Info>\n                  {i18n.t(\n                    'data:virtualization.queryResultsTableEmptyStateInfo'\n                  )}\n                </EmptyState.Info>\n              </EmptyState>\n            )}\n          </Container>\n        </Grid.Col>\n      </Grid.Row>\n    );\n  }\n}\n","import { getConnectionIcon } from '@syndesis/api';\nimport { Connection } from '@syndesis/models';\nimport {\n  DvConnectionCard,\n  DvConnectionsGrid,\n  DvConnectionsGridCell,\n  DvConnectionSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { ApiError } from '../../../shared';\nimport {\n  getDvConnectionStatus,\n  isDvConnectionSelected,\n} from './VirtualizationUtils';\n\nexport interface IDvConnectionsProps {\n  error: boolean;\n  loading: boolean;\n  connections: Connection[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n}\n\nexport class DvConnections extends React.Component<IDvConnectionsProps> {\n  public constructor(props: IDvConnectionsProps) {\n    super(props);\n    this.handleConnSourceSelectionChanged = this.handleConnSourceSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnSourceSelectionChanged(name: string, isSelected: boolean) {\n    this.props.onConnectionSelectionChanged(name, isSelected);\n  }\n\n  public render() {\n    return (\n      <DvConnectionsGrid>\n        <WithLoader\n          error={this.props.error}\n          loading={this.props.loading}\n          loaderChildren={\n            <>\n              {new Array(5).fill(0).map((_, index) => (\n                <DvConnectionsGridCell key={index}>\n                  <DvConnectionSkeleton />\n                </DvConnectionsGridCell>\n              ))}\n            </>\n          }\n          errorChildren={<ApiError />}\n        >\n          {() =>\n            this.props.connections.map((c, index) => (\n              <DvConnectionsGridCell key={index}>\n                <DvConnectionCard\n                  name={c.name}\n                  description={c.description || ''}\n                  dvStatus={getDvConnectionStatus(c)}\n                  icon={getConnectionIcon(process.env.PUBLIC_URL, c)}\n                  selected={isDvConnectionSelected(c)}\n                  onSelectionChanged={this.handleConnSourceSelectionChanged}\n                />\n              </DvConnectionsGridCell>\n            ))\n          }\n        </WithLoader>\n      </DvConnectionsGrid>\n    );\n  }\n}\n","import { WithConnections } from '@syndesis/api';\nimport { Connection, VirtualizationSourceStatus } from '@syndesis/models';\nimport {\n  DvConnectionsListView,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\nimport { DvConnections } from './DvConnections';\nimport { generateDvConnections } from './VirtualizationUtils';\n\nfunction getFilteredAndSortedConnections(\n  connections: Connection[],\n  dvSourceStatuses: VirtualizationSourceStatus[],\n  selectedConn: string,\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  // Connections are adjusted to supply dvStatus and selection\n  let filteredAndSortedConnections = generateDvConnections(\n    connections,\n    dvSourceStatuses,\n    selectedConn\n  );\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedConnections = filteredAndSortedConnections.filter(\n      (c: Connection) => c.name.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSortedConnections = filteredAndSortedConnections.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      return left.name.localeCompare(right.name);\n    }\n  );\n\n  return filteredAndSortedConnections;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IDvConnectionsWithToolbarProps {\n  error: boolean;\n  loading: boolean;\n  dvSourceStatuses: VirtualizationSourceStatus[];\n  onConnectionSelectionChanged: (name: string, selected: boolean) => void;\n  children?: any;\n}\nexport interface IDvConnectionsWithToolbarState {\n  selectedConnection: any;\n}\n\nexport class DvConnectionsWithToolbar extends React.Component<\n  IDvConnectionsWithToolbarProps,\n  IDvConnectionsWithToolbarState\n> {\n  public constructor(props: IDvConnectionsWithToolbarProps) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    this.props.onConnectionSelectionChanged(name, selected);\n  }\n\n  public render() {\n    return (\n      <Translation ns={['shared']}>\n        {t => (\n          <WithConnections>\n            {({ data, hasData, error }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedConnections = getFilteredAndSortedConnections(\n                    data.connectionsForDisplay,\n                    this.props.dvSourceStatuses,\n                    this.state.selectedConnection,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n\n                  return (\n                    <DvConnectionsListView\n                      linkToConnectionCreate={resolvers.connections.create.selectConnector()}\n                      filterTypes={filterTypes}\n                      sortTypes={sortTypes}\n                      resultsCount={filteredAndSortedConnections.length}\n                      {...helpers}\n                      i18nLinkCreateConnection={t(\n                        'shared:linkCreateConnection'\n                      )}\n                      i18nResultsCount={t('shared:resultsCount', {\n                        count: filteredAndSortedConnections.length,\n                      })}\n                    >\n                      {this.props.children}\n                      <DvConnections\n                        error={this.props.error}\n                        loading={this.props.loading}\n                        connections={filteredAndSortedConnections}\n                        onConnectionSelectionChanged={\n                          this.handleConnectionSelectionChanged\n                        }\n                      />\n                    </DvConnectionsListView>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithConnections>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithVirtualizationConnectionStatuses } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { DvConnectionsWithToolbar, ViewsCreateSteps } from '../../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard\n */\nexport interface ISelectConnectionRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n */\nexport interface ISelectConnectionRouteState {\n  virtualization: RestDataService;\n}\n\nexport interface ISelectConnectionPageState {\n  selectedConnection: any;\n}\n\nexport class SelectConnectionPage extends React.Component<\n  {},\n  ISelectConnectionPageState\n> {\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      selectedConnection: '', // initial selected connection empty\n    };\n    this.handleConnectionSelectionChanged = this.handleConnectionSelectionChanged.bind(\n      this\n    );\n  }\n\n  public handleConnectionSelectionChanged(name: string, selected: boolean) {\n    const selConn = selected ? name : '';\n    this.setState({\n      selectedConnection: selConn,\n    });\n  }\n\n  public render() {\n    const connectionId: string = this.state.selectedConnection;\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <ViewsCreateLayout\n            header={<ViewsCreateSteps step={1} />}\n            content={\n              <WithVirtualizationConnectionStatuses>\n                {({ data, hasData, error }) => (\n                  <DvConnectionsWithToolbar\n                    error={error}\n                    loading={!hasData}\n                    dvSourceStatuses={data}\n                    onConnectionSelectionChanged={\n                      this.handleConnectionSelectionChanged\n                    }\n                  />\n                )}\n              </WithVirtualizationConnectionStatuses>\n            }\n            cancelHref={resolvers.data.virtualizations.views.root({\n              virtualization,\n            })}\n            nextHref={resolvers.data.virtualizations.views.importSource.selectViews(\n              {\n                connectionId,\n                virtualization,\n              }\n            )}\n            isNextDisabled={this.state.selectedConnection.length < 1}\n            isNextLoading={false}\n            isLastStep={false}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService, ViewEditorState, ViewInfo } from '@syndesis/models';\nimport { ViewsCreateLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport resolvers from '../../../resolvers';\nimport { ViewInfosContent, ViewsCreateSteps } from '../../shared';\nimport { generateViewEditorStates } from '../../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization for the wizard.\n */\nexport interface ISelectViewsRouteParams {\n  virtualizationId: string;\n}\n\n/**\n * @param virtualization - the virtualization for the wizard.\n * @param connectionId - the id of the selected connection\n */\nexport interface ISelectViewsRouteState {\n  virtualization: RestDataService;\n  connectionId: string;\n}\n\nexport interface ISelectViewsPageState {\n  hasSelectedTables: boolean;\n}\n\nexport class SelectViewsPage extends React.Component<\n  {},\n  ISelectViewsPageState\n> {\n  public selectedViews: ViewInfo[] = []; // Maintains list of selected views\n\n  public constructor(props: {}) {\n    super(props);\n    this.state = {\n      hasSelectedTables: false, // initialize selected tables state\n    };\n    this.handleAddView = this.handleAddView.bind(this);\n    this.handleRemoveView = this.handleRemoveView.bind(this);\n  }\n\n  public getExistingViewNames(editorStates: ViewEditorState[]) {\n    const viewNames: string[] = [];\n    for (const editorState of editorStates) {\n      viewNames.push(editorState.viewDefinition.viewName);\n    }\n    return viewNames;\n  }\n\n  public handleAddView(view: ViewInfo) {\n    this.selectedViews.push(view);\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public handleRemoveView(viewName: string) {\n    const index = this.selectedViews.findIndex(\n      view => view.viewName === viewName\n    );\n\n    if (index !== -1) {\n      this.selectedViews.splice(index, 1);\n    }\n    this.setState({\n      hasSelectedTables: this.selectedViews.length > 0,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<ISelectViewsRouteParams, ISelectViewsRouteState>>\n        {(\n          { virtualizationId },\n          { virtualization, connectionId },\n          { history }\n        ) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ refreshVirtualizationViews }) => {\n              const handleCreateViews = async () => {\n                const viewEditorStates = generateViewEditorStates(\n                  virtualization.serviceVdbName,\n                  this.selectedViews\n                );\n                await refreshVirtualizationViews(\n                  virtualization.keng__id,\n                  viewEditorStates\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewsCreateLayout\n                      header={<ViewsCreateSteps step={2} />}\n                      content={\n                        <ViewInfosContent\n                          connectionName={connectionId}\n                          existingViewNames={this.getExistingViewNames(data)}\n                          onViewSelected={this.handleAddView}\n                          onViewDeselected={this.handleRemoveView}\n                        />\n                      }\n                      cancelHref={resolvers.data.virtualizations.views.root({\n                        virtualization,\n                      })}\n                      backHref={resolvers.data.virtualizations.views.importSource.selectConnection(\n                        { virtualization }\n                      )}\n                      onCreateViews={handleCreateViews}\n                      isNextDisabled={!this.state.hasSelectedTables}\n                      isNextLoading={false}\n                      isLastStep={true}\n                    />\n                  )}\n                </WithViewEditorStates>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport { WithClosedNavigation } from '../../shared';\nimport resolvers from '../resolvers';\nimport routes from '../routes';\nimport { SelectConnectionPage, SelectViewsPage } from './pages/views';\n\nexport interface ICreateViewsAppRouteState {\n  virtualization: RestDataService;\n}\n\nexport default class CreateViewsApp extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<null, ICreateViewsAppRouteState>>\n        {(_, { virtualization }) => (\n          <WithClosedNavigation>\n            <Breadcrumb>\n              <Link to={resolvers.dashboard.root()}>\n                {i18n.t('shared:Home')}\n              </Link>\n              <Link to={resolvers.data.root()}>\n                {i18n.t('shared:DataVirtualizations')}\n              </Link>\n              <Link\n                to={resolvers.data.virtualizations.views.root({\n                  virtualization,\n                })}\n              >\n                {virtualization.keng__id}\n              </Link>\n              <span>{i18n.t('data:virtualization.importDataSource')}</span>\n            </Breadcrumb>\n            <Switch>\n              {/* step 1 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectConnection\n                }\n                exact={true}\n                component={SelectConnectionPage}\n              />\n              {/* step 2 */}\n              <Route\n                path={\n                  routes.data.virtualizations.virtualization.views.importSource\n                    .selectViews\n                }\n                exact={true}\n                component={SelectViewsPage}\n              />\n            </Switch>\n          </WithClosedNavigation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport resolvers from '../../resolvers';\n\nexport class VirtualizationCreatePage extends React.Component {\n  public render() {\n    const formDefinition = {\n      virtDescription: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t(\n          'data:virtualization.virtualizationDescriptionDisplay'\n        ),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 1,\n        required: false,\n        secret: false,\n        type: 'textarea',\n      },\n      virtName: {\n        componentProperty: true,\n        deprecated: false,\n        displayName: i18n.t('data:virtualization.virtualizationNameDisplay'),\n        javaType: 'java.lang.String',\n        kind: 'property',\n        order: 0,\n        required: true,\n        secret: false,\n        type: 'string',\n      },\n    } as IFormDefinition;\n    const validate = (v: { virtName: string }) => {\n      const errors: any = {};\n      // TODO Incorporate service call to validate virtualization name\n      if (v.virtName.includes('?')) {\n        errors.virtName = 'Virtualization name contains an illegal character';\n      }\n      return errors;\n    };\n\n    return (\n      <WithRouteData<null, null>>\n        {(p, s, { history }) => (\n          // TODO need to retrieve real user here\n          <WithVirtualizationHelpers username=\"developer\">\n            {({ createVirtualization }) => {\n              const handleCreate = async (value: any) => {\n                const virtualization = await createVirtualization(\n                  value.virtName,\n                  value.virtDescription\n                );\n                // TODO: post toast notification\n                history.push(\n                  resolvers.data.virtualizations.views.root({ virtualization })\n                );\n              };\n              return (\n                <Translation ns={['data', 'shared']}>\n                  {t => (\n                    <>\n                      <Breadcrumb>\n                        <Link to={resolvers.dashboard.root()}>\n                          {t('shared:Home')}\n                        </Link>\n                        <Link to={resolvers.data.root()}>\n                          {t('shared:DataVirtualizations')}\n                        </Link>\n                        <span>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </span>\n                      </Breadcrumb>\n                      <Container>\n                        <h1>\n                          {t(\n                            'data:virtualization.createDataVirtualizationTitle'\n                          )}\n                        </h1>\n                        <AutoForm\n                          definition={formDefinition}\n                          initialValue={''}\n                          i18nRequiredProperty={t(\n                            'data:virtualization.requiredPropertyText'\n                          )}\n                          validate={validate}\n                          onSave={handleCreate}\n                        >\n                          {({ fields, handleSubmit }) => (\n                            <React.Fragment>\n                              {fields}\n                              <button\n                                type=\"button\"\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                              >\n                                {t('shared:Create')}\n                              </button>\n                            </React.Fragment>\n                          )}\n                        </AutoForm>\n                      </Container>\n                    </>\n                  )}\n                </Translation>\n              );\n            }}\n          </WithVirtualizationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationMetricsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationMetricsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationMetricsPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationMetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationMetricsPageRouteParams,\n        IVirtualizationMetricsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.metrics')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Metrics are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport { Breadcrumb, Container } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationRelationshipPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationRelationshipPageRouteState#virtualizationId}.\n */\n\nexport interface IVirtualizationRelationshipPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationRelationshipPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationRelationshipPageRouteParams,\n        IVirtualizationRelationshipPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <div>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.relationship')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <VirtualizationNavBar virtualization={virtualization} />\n                  <Container>\n                    <h3>Relationships are not yet implemented</h3>\n                  </Container>\n                </div>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithVirtualizationHelpers, WithVirtualizations } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  VirtualizationList,\n  VirtualizationListItem,\n  VirtualizationListSkeleton,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport resolvers from '../resolvers';\nimport { getPublishingDetails } from '../shared/VirtualizationUtils';\n\nfunction getFilteredAndSortedVirtualizations(\n  virtualizations: RestDataService[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = virtualizations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter(\n      (virtualization: RestDataService) =>\n        virtualization.keng__id.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort(\n    (thisVirtualization, thatVirtualization) => {\n      if (isSortAscending) {\n        return thisVirtualization.keng__id.localeCompare(\n          thatVirtualization.keng__id\n        );\n      }\n\n      // sort descending\n      return thatVirtualization.keng__id.localeCompare(\n        thisVirtualization.keng__id\n      );\n    }\n  );\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport function getVirtualizationsHref(baseUrl: string): string {\n  return `${baseUrl}`;\n}\n\nexport class VirtualizationsPage extends React.Component {\n  public filterUndefinedId(virtualization: RestDataService): boolean {\n    return virtualization.keng__id !== undefined;\n  }\n\n  public handleImportVirt(virtualizationName: string) {\n    // TODO: implement handleImportVirt\n    alert('Import virtualization ' + virtualizationName);\n  }\n\n  public handleExportVirtualization() {\n    // TODO: implement handleExportVirtualization\n    alert('Export virtualization ');\n  }\n\n  public render() {\n    return (\n      <WithVirtualizations>\n        {({ data, hasData, error, read }) => {\n          return (\n            // TODO need to retrieve real username here\n            <WithVirtualizationHelpers username=\"developer\">\n              {({\n                deleteVirtualization,\n                publishVirtualization,\n                unpublishServiceVdb,\n              }) => {\n                const handleDelete = async (virtualizationName: string) => {\n                  await deleteVirtualization(virtualizationName).then(read);\n                  // TODO: post toast notification\n                };\n                const handlePublish = async (virtualizationName: string) => {\n                  await publishVirtualization(virtualizationName);\n                  // TODO: post toast notification\n                };\n                const handleUnpublish = async (serviceVdbName: string) => {\n                  await unpublishServiceVdb(serviceVdbName);\n                  // TODO: post toast notification\n                };\n                return (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSorted = getFilteredAndSortedVirtualizations(\n                        data,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <Translation ns={['data', 'shared']}>\n                          {t => (\n                            <VirtualizationList\n                              filterTypes={filterTypes}\n                              sortTypes={sortTypes}\n                              resultsCount={filteredAndSorted.length}\n                              {...helpers}\n                              i18nCreateDataVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nCreateDataVirtualizationTip={t(\n                                'virtualization.createDataVirtualizationTip'\n                              )}\n                              i18nDescription={t(\n                                'virtualization.virtualizationsPageDescription'\n                              )}\n                              i18nEmptyStateInfo={t(\n                                'virtualization.emptyStateInfoMessage'\n                              )}\n                              i18nEmptyStateTitle={t(\n                                'virtualization.emptyStateTitle'\n                              )}\n                              i18nImport={t('shared:Import')}\n                              i18nImportTip={t(\n                                'virtualization.importVirtualizationTip'\n                              )}\n                              i18nLinkCreateVirtualization={t(\n                                'virtualization.createDataVirtualization'\n                              )}\n                              i18nName={t('shared:Name')}\n                              i18nNameFilterPlaceholder={t(\n                                'shared:nameFilterPlaceholder'\n                              )}\n                              i18nResultsCount={t('shared:resultsCount', {\n                                count: filteredAndSorted.length,\n                              })}\n                              i18nTitle={t(\n                                'virtualization.virtualizationsPageTitle'\n                              )}\n                              linkCreateHRef={resolvers.virtualizations.create()}\n                              onImport={this.handleImportVirt}\n                              hasListData={data.length > 0}\n                            >\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <VirtualizationListSkeleton\n                                    width={800}\n                                    style={{\n                                      backgroundColor: '#FFF',\n                                      marginTop: 30,\n                                    }}\n                                  />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() =>\n                                  filteredAndSorted.map(\n                                    (\n                                      virtualization: RestDataService,\n                                      index: number\n                                    ) => {\n                                      const publishingDetails = getPublishingDetails(\n                                        virtualization\n                                      );\n                                      return (\n                                        <VirtualizationListItem\n                                          key={index}\n                                          detailsPageLink={resolvers.virtualizations.views.root(\n                                            { virtualization }\n                                          )}\n                                          virtualizationName={\n                                            virtualization.keng__id\n                                          }\n                                          virtualizationDescription={\n                                            virtualization.tko__description\n                                              ? virtualization.tko__description\n                                              : ''\n                                          }\n                                          serviceVdbName={\n                                            virtualization.serviceVdbName\n                                          }\n                                          i18nCancelText={t('shared:Cancel')}\n                                          i18nDelete={t('shared:Delete')}\n                                          i18nDeleteModalMessage={t(\n                                            'virtualization.deleteModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nDeleteModalTitle={t(\n                                            'virtualization.deleteModalTitle'\n                                          )}\n                                          i18nDraft={t('shared:Draft')}\n                                          i18nEdit={t('shared:Edit')}\n                                          i18nEditTip={t(\n                                            'virtualization.editDataVirtualizationTip'\n                                          )}\n                                          i18nError={t('shared:Error')}\n                                          i18nExport={t('shared:Export')}\n                                          i18nPublish={t('shared:Publish')}\n                                          i18nPublished={t(\n                                            'virtualization.publishedDataVirtualization'\n                                          )}\n                                          i18nUnpublish={t('shared:Unpublish')}\n                                          i18nUnpublishModalMessage={t(\n                                            'virtualization.unpublishModalMessage',\n                                            { name: virtualization.keng__id }\n                                          )}\n                                          i18nUnpublishModalTitle={t(\n                                            'virtualization.unpublishModalTitle'\n                                          )}\n                                          onDelete={handleDelete}\n                                          onExport={\n                                            this.handleExportVirtualization\n                                          }\n                                          onUnpublish={handleUnpublish}\n                                          onPublish={handlePublish}\n                                          currentPublishedState={\n                                            publishingDetails.state\n                                          }\n                                          publishingLogUrl={\n                                            publishingDetails.logUrl\n                                          }\n                                          publishingCurrentStep={\n                                            publishingDetails.stepNumber\n                                          }\n                                          publishingTotalSteps={\n                                            publishingDetails.stepTotal\n                                          }\n                                          publishingStepText={\n                                            publishingDetails.stepText\n                                          }\n                                          i18nPublishInProgress={t(\n                                            'virtualization.publishInProgress'\n                                          )}\n                                          i18nPublishLogUrlText={t(\n                                            'shared:viewLogs'\n                                          )}\n                                        />\n                                      );\n                                    }\n                                  )\n                                }\n                              </WithLoader>\n                            </VirtualizationList>\n                          )}\n                        </Translation>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                );\n              }}\n            </WithVirtualizationHelpers>\n          );\n        }}\n      </WithVirtualizations>\n    );\n  }\n}\n","import { WithViewEditorStates } from '@syndesis/api';\nimport { RestDataService, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport resolvers from '../../resolvers';\nimport {\n  HeaderView,\n  ViewSqlFormAndTable,\n  VirtualizationNavBar,\n} from '../shared/';\nimport { getPreviewVdbName } from '../shared/VirtualizationUtils';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationSqlClientPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * NOTE that this SQL query page requires\n *  1) a list of View children of the Virtualization\n *    - This list will need to be retrieved (already in the VirtualizationViewsPage)\n *  2) Views list needs to populate the View selector DropdownButton's MenuItems\n *  3) If # Views == 0\n *    - Define Example SQL statement and show query results in EMPTY STATE mode\n *  4) if # Views > 0\n *    - Select the first view\n *    - Enter a simple SQL statement like:  \"SELECT * FROM view1\"\n */\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationSqlClientPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationSqlClientPageRouteState {\n  virtualization: RestDataService;\n}\n\nexport class VirtualizationSqlClientPage extends React.Component<\n  IVirtualizationSqlClientPageRouteState\n> {\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationSqlClientPageRouteParams,\n        IVirtualizationSqlClientPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => (\n          <Translation ns={['data', 'shared']}>\n            {t => (\n              <>\n                <Breadcrumb>\n                  <Link to={resolvers.dashboard.root()}>\n                    {t('shared:Home')}\n                  </Link>\n                  <Link to={resolvers.data.root()}>\n                    {t('shared:DataVirtualizations')}\n                  </Link>\n                  <span>\n                    {virtualizationId + ' '}\n                    {t('data:virtualization.sqlClient')}\n                  </span>\n                </Breadcrumb>\n                <HeaderView virtualizationId={virtualizationId} />\n                <VirtualizationNavBar virtualization={virtualization} />\n                <WithViewEditorStates\n                  idPattern={virtualization.serviceVdbName + '*'}\n                >\n                  {({ data, hasData, error }) => (\n                    <ViewSqlFormAndTable\n                      views={data.map(\n                        (editorState: ViewEditorState) =>\n                          editorState.viewDefinition\n                      )}\n                      targetVdb={getPreviewVdbName()}\n                    />\n                  )}\n                </WithViewEditorStates>\n              </>\n            )}\n          </Translation>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithViewEditorStates, WithVirtualizationHelpers } from '@syndesis/api';\nimport { RestDataService } from '@syndesis/models';\nimport { ViewDefinition, ViewEditorState } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../i18n';\nimport { ApiError } from '../../../shared';\nimport { HeaderView } from '../shared';\nimport { VirtualizationNavBar } from '../shared';\n\nimport {\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  ViewList,\n  ViewListItem,\n  ViewListSkeleton,\n} from '@syndesis/ui';\nimport {\n  WithListViewToolbarHelpers,\n  WithLoader,\n  WithRouteData,\n} from '@syndesis/utils';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../../resolvers';\n\n/**\n * @param virtualizationId - the ID of the virtualization whose details are being shown by this page.\n */\nexport interface IVirtualizationViewsPageRouteParams {\n  virtualizationId: string;\n  virtualization: RestDataService;\n}\n\n/**\n * @param virtualizationId - the virtualization whose details are being shown by this page. If\n * exists, it must equal to the [virtualizationId]{@link IVirtualizationViewsPageRouteParams#virtualizationId}.\n */\n\nexport interface IVirtualizationViewsPageRouteState {\n  virtualization: RestDataService;\n}\n\nfunction getFilteredAndSortedViewDefns(\n  viewDefinitions: ViewDefinition[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSorted = viewDefinitions;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSorted = filteredAndSorted.filter((view: ViewDefinition) =>\n      view.viewName.toLowerCase().includes(valueToLower)\n    );\n  });\n\n  filteredAndSorted = filteredAndSorted.sort((thisView, thatView) => {\n    if (isSortAscending) {\n      return thisView.viewName.localeCompare(thatView.viewName);\n    }\n\n    // sort descending\n    return thatView.viewName.localeCompare(thisView.viewName);\n  });\n\n  return filteredAndSorted;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes: IFilterType[] = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport class VirtualizationViewsPage extends React.Component<\n  IVirtualizationViewsPageRouteParams,\n  IVirtualizationViewsPageRouteState\n> {\n  public filterUndefinedId(view: ViewDefinition): boolean {\n    return view.viewName !== undefined;\n  }\n\n  public handleImportView(viewName: string) {\n    // TODO: implement handleImportView\n    alert('Import view ' + viewName);\n  }\n\n  public handleEditView() {\n    // TODO: implement handleEdit\n    alert('Edit view ');\n  }\n\n  public render() {\n    return (\n      <WithRouteData<\n        IVirtualizationViewsPageRouteParams,\n        IVirtualizationViewsPageRouteState\n      >>\n        {({ virtualizationId }, { virtualization }, { history }) => {\n          return (\n            <Translation ns={['data', 'shared']}>\n              {t => (\n                <>\n                  <Breadcrumb>\n                    <Link to={resolvers.dashboard.root()}>\n                      {t('shared:Home')}\n                    </Link>\n                    <Link to={resolvers.data.root()}>\n                      {t('shared:DataVirtualizations')}\n                    </Link>\n                    <span>\n                      {virtualizationId + ' '}\n                      {t('data:virtualization.views')}\n                    </span>\n                  </Breadcrumb>\n                  <HeaderView virtualizationId={virtualizationId} />\n                  <WithViewEditorStates\n                    idPattern={virtualization.serviceVdbName + '*'}\n                  >\n                    {({ data, hasData, error, read }) => {\n                      return (\n                        // TODO need to retrieve real username here\n                        <WithVirtualizationHelpers username=\"developer\">\n                          {({ deleteView }) => {\n                            const handleDeleteView = async (\n                              viewName: string\n                            ) => {\n                              await deleteView(virtualization, viewName).then(\n                                read\n                              );\n                              // TODO: post toast notification\n                            };\n                            return (\n                              <WithListViewToolbarHelpers\n                                defaultFilterType={filterByName}\n                                defaultSortType={sortByName}\n                              >\n                                {helpers => {\n                                  const viewDefns = data.map(\n                                    (editorState: ViewEditorState) =>\n                                      editorState.viewDefinition\n                                  );\n                                  const filteredAndSorted = getFilteredAndSortedViewDefns(\n                                    viewDefns,\n                                    helpers.activeFilters,\n                                    helpers.currentSortType,\n                                    helpers.isSortAscending\n                                  );\n                                  return (\n                                    <>\n                                      <VirtualizationNavBar\n                                        virtualization={virtualization}\n                                      />\n                                      <ViewList\n                                        filterTypes={filterTypes}\n                                        sortTypes={sortTypes}\n                                        {...this.state}\n                                        resultsCount={filteredAndSorted.length}\n                                        {...helpers}\n                                        i18nDescription={t(\n                                          'data:virtualization.viewsPageDescription'\n                                        )}\n                                        i18nEmptyStateInfo={t(\n                                          'data:virtualization.viewEmptyStateInfo'\n                                        )}\n                                        i18nEmptyStateTitle={t(\n                                          'data:virtualization.viewEmptyStateTitle'\n                                        )}\n                                        i18nImportViews={t(\n                                          'data:virtualization.importDataSource'\n                                        )}\n                                        i18nImportViewsTip={t(\n                                          'data:virtualization.importDataSourceTip'\n                                        )}\n                                        i18nCreateView={t(\n                                          'data:virtualization.createView'\n                                        )}\n                                        i18nCreateViewTip={t(\n                                          'data:virtualization.createViewTip'\n                                        )}\n                                        i18nName={t('shared:Name')}\n                                        i18nNameFilterPlaceholder={t(\n                                          'shared:nameFilterPlaceholder'\n                                        )}\n                                        i18nResultsCount={t(\n                                          'shared:resultsCount',\n                                          {\n                                            count: filteredAndSorted.length,\n                                          }\n                                        )}\n                                        // TODO - Point to views.create when available\n                                        linkCreateViewHRef={resolvers.data.virtualizations.create()}\n                                        linkImportViewsHRef={resolvers.data.virtualizations.views.importSource.selectConnection(\n                                          { virtualization }\n                                        )}\n                                        onImportView={this.handleImportView}\n                                        hasListData={data.length > 0}\n                                      />\n                                      <WithLoader\n                                        error={error}\n                                        loading={!hasData}\n                                        loaderChildren={\n                                          <ViewListSkeleton\n                                            width={800}\n                                            style={{\n                                              backgroundColor: '#FFF',\n                                              marginTop: 30,\n                                            }}\n                                          />\n                                        }\n                                        errorChildren={<ApiError />}\n                                      >\n                                        {() =>\n                                          filteredAndSorted\n                                            .filter((view: ViewDefinition) =>\n                                              this.filterUndefinedId(view)\n                                            )\n                                            .map(\n                                              (\n                                                view: ViewDefinition,\n                                                index: number\n                                              ) => (\n                                                <ViewListItem\n                                                  key={index}\n                                                  viewName={view.viewName}\n                                                  viewDescription={\n                                                    view.keng__description\n                                                  }\n                                                  i18nCancelText={t(\n                                                    'shared:Cancel'\n                                                  )}\n                                                  i18nDelete={t(\n                                                    'shared:Delete'\n                                                  )}\n                                                  i18nDeleteModalMessage={t(\n                                                    'virtualization.deleteViewModalMessage',\n                                                    {\n                                                      name: view.viewName,\n                                                    }\n                                                  )}\n                                                  i18nDeleteModalTitle={t(\n                                                    'virtualization.deleteModalTitle'\n                                                  )}\n                                                  i18nEdit={t('shared:Edit')}\n                                                  i18nEditTip={t(\n                                                    'view.editViewTip'\n                                                  )}\n                                                  onDelete={handleDeleteView}\n                                                  onEdit={this.handleEditView}\n                                                />\n                                              )\n                                            )\n                                        }\n                                      </WithLoader>\n                                    </>\n                                  );\n                                }}\n                              </WithListViewToolbarHelpers>\n                            );\n                          }}\n                        </WithVirtualizationHelpers>\n                      );\n                    }}\n                  </WithViewEditorStates>\n                </>\n              )}\n            </Translation>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport CreateViewsApp from './CreateViewsApp';\nimport {\n  VirtualizationCreatePage,\n  VirtualizationMetricsPage,\n  VirtualizationRelationshipPage,\n  VirtualizationsPage,\n  VirtualizationSqlClientPage,\n  VirtualizationViewsPage,\n} from './pages';\nimport routes from './routes';\n\nexport class DataModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect\n          path={routes.root}\n          exact={true}\n          to={routes.virtualizations.list}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.importSource.root}\n          component={CreateViewsApp}\n        />\n        <Route\n          path={routes.virtualizations.create}\n          exact={true}\n          component={VirtualizationCreatePage}\n        />\n        <Route\n          path={routes.virtualizations.list}\n          exact={true}\n          component={VirtualizationsPage}\n        />\n        <Redirect\n          path={routes.virtualizations.virtualization.root}\n          exact={true}\n          to={routes.virtualizations.virtualization.views.root}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.views.root}\n          exact={true}\n          component={VirtualizationViewsPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.relationship}\n          exact={true}\n          component={VirtualizationRelationshipPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.sqlClient}\n          exact={true}\n          component={VirtualizationSqlClientPage}\n        />\n        <Route\n          path={routes.virtualizations.virtualization.metrics}\n          exact={true}\n          component={VirtualizationMetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import {\n  getConnectionIcon,\n  getExtensionIcon,\n  getStepKindIcon,\n} from '@syndesis/api';\nimport {\n  ConnectionOverview,\n  Extension,\n  Step,\n  StepKind,\n} from '@syndesis/models';\nimport * as H from 'history';\nimport { IAddStepPageProps } from './AddStepPage';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\n\ntype StepKindHrefCallback = (\n  step: Step,\n  p: ISelectConnectionRouteParams | IAddStepPageProps,\n  s: ISelectConnectionRouteState | undefined\n) => H.LocationDescriptorObject;\n\nexport function toUIStepKind(step: Step): IUIStep['uiStepKind'] {\n  if ((step as ConnectionOverview).connectorId === 'api-provider') {\n    return 'api-provider';\n  }\n  return step.stepKind;\n}\n\nexport interface IGetStepHrefs {\n  apiProviderHref: StepKindHrefCallback;\n  connectionHref: StepKindHrefCallback;\n  filterHref: StepKindHrefCallback;\n  extensionHref: StepKindHrefCallback;\n  mapperHref: StepKindHrefCallback;\n  templateHref: StepKindHrefCallback;\n  stepHref: StepKindHrefCallback;\n}\nexport const getStepHref = (\n  step: Step,\n  params: ISelectConnectionRouteParams | IAddStepPageProps,\n  state: ISelectConnectionRouteState | undefined,\n  hrefs: IGetStepHrefs\n) => {\n  switch (toUIStepKind(step)) {\n    case 'api-provider':\n      return hrefs.apiProviderHref(step, params, state);\n    case 'expressionFilter':\n    case 'ruleFilter':\n      return hrefs.filterHref(step, params, state);\n    case 'extension':\n      return hrefs.extensionHref(step, params, state);\n    case 'mapper':\n      return hrefs.mapperHref(step, params, state);\n    case 'headers':\n      throw new Error(`Can't handle stepKind ${step.stepKind}`);\n    case 'template':\n      return hrefs.templateHref(step, params, state);\n    case 'choice':\n    case 'split':\n    case 'aggregate':\n    case 'log':\n      return hrefs.stepHref(step, params, state);\n    case 'endpoint':\n    case 'connector':\n    default:\n      return hrefs.connectionHref(step as ConnectionOverview, params, state);\n  }\n};\n\nexport function toStepKindCollection(\n  connections: ConnectionOverview[],\n  extensions: Extension[],\n  steps: StepKind[]\n): IUIStep[] {\n  return [\n    ...connections.map(\n      c =>\n        ({\n          ...c,\n          description: c.description || '',\n          icon: getConnectionIcon(process.env.PUBLIC_URL, c),\n          properties: undefined,\n          uiStepKind:\n            c.connectorId === 'api-provider' ? 'api-provider' : 'endpoint',\n        } as IUIStep)\n    ),\n    ...extensions.reduce(\n      (extentionsByAction, extension) => {\n        extension.actions.forEach(a => {\n          let properties = {};\n          if (\n            a.descriptor &&\n            Array.isArray(a.descriptor.propertyDefinitionSteps)\n          ) {\n            properties = a.descriptor.propertyDefinitionSteps.reduce(\n              (acc, current) => {\n                return { ...acc, ...current.properties };\n              },\n              {}\n            );\n          }\n          if (a.actionType === 'step') {\n            extentionsByAction.push({\n              action: a,\n              configuredProperties: undefined,\n              description: a.description || '',\n              extension,\n              icon: `${process.env.PUBLIC_URL}${getExtensionIcon(extension)}`,\n              name: a.name,\n              properties,\n              stepKind: 'extension',\n              uiStepKind: 'extension',\n            });\n          }\n        });\n        return extentionsByAction;\n      },\n      [] as IUIStep[]\n    ),\n    ...steps.map(s => ({\n      ...s,\n      icon: `${process.env.PUBLIC_URL}${getStepKindIcon(s.stepKind)}`,\n      uiStepKind: s.stepKind,\n    })),\n  ]\n    .filter(s => !!s.uiStepKind) // this should never happen\n    .sort((a, b) => a.name.localeCompare(b.name));\n}\n","import { getSteps } from '@syndesis/api';\nimport { Step } from '@syndesis/models';\nimport { Container, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport { IntegrationEditorStepAdder } from '../IntegrationEditorStepAdder';\nimport { IBaseRouteParams, IBaseRouteState } from './interfaces';\nimport { getStepHref, IGetStepHrefs } from './utils';\n\nexport interface IAddStepPageProps extends IGetStepHrefs {\n  cancelHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n  getEditAddStepHref: (\n    position: number,\n    p: IBaseRouteParams,\n    s: IBaseRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  nextHref: (p: IBaseRouteParams, s: IBaseRouteState) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the steps of an existing integration.\n *\n * This component expects a [state]{@link IBaseRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo make this page shareable by making the [integration]{@link IBaseRouteState#integration}\n * optinal and adding a WithIntegration component to retrieve the integration\n * from the backend\n */\nexport class AddStepPage extends React.Component<IAddStepPageProps> {\n  public render() {\n    return (\n      <WithRouteData<IBaseRouteParams, IBaseRouteState>>\n        {({ flowId }, { integration }) => (\n          <IntegrationEditorLayout\n            header={this.props.header}\n            content={\n              <>\n                <PageTitle title={'Save or add step'} />\n                <Container>\n                  <h1>Add to Integration</h1>\n                  <p>\n                    You can continue adding steps and connections to your\n                    integration as well.\n                  </p>\n                  <IntegrationEditorStepAdder\n                    steps={getSteps(integration, flowId)}\n                    addStepHref={position =>\n                      this.props.getEditAddStepHref(\n                        position,\n                        { flowId },\n                        { integration }\n                      )\n                    }\n                    configureStepHref={(position: number, step: Step) =>\n                      getStepHref(\n                        step,\n                        { flowId, position: `${position}` },\n                        { integration },\n                        this.props\n                      )\n                    }\n                  />\n                </Container>\n              </>\n            }\n            cancelHref={this.props.cancelHref({ flowId }, { integration })}\n            nextHref={this.props.nextHref({ flowId }, { integration })}\n          />\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class ReviewPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Review actions'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class EditPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Provide API Definition'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\n\nexport class UploadPage extends React.Component {\n  public render() {\n    return (\n      <>\n        <PageTitle title={'Start integration with an API call'} />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis\n          illo, iusto nesciunt nostrum omnis pariatur rerum vero voluptates.\n          Accusamus aliquid corporis deleniti ea earum ipsa optio, quidem quod\n          ut! Placeat.\n        </p>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { ReviewPage } from './api-provider/EditPage';\nimport { EditPage } from './api-provider/ReviewPage';\nimport { UploadPage } from './api-provider/UploadPage';\nimport { ConfigureActionPage } from './endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './endpoint/SelectActionPage';\n\nexport interface IEndpointEditorAppProps {\n  selectActionPath: string;\n  selectActionChildren: React.ReactElement<SelectActionPage>;\n  configureActionPath: string;\n  configureActionChildren: React.ReactElement<ConfigureActionPage>;\n  describeDataPath: string;\n  describeDataChildren: React.ReactNode;\n}\nexport const EndpointEditorApp: React.FunctionComponent<\n  IEndpointEditorAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.selectActionPath}\n        exact={true}\n        children={props.selectActionChildren}\n      />\n      <Route\n        path={props.configureActionPath}\n        exact={true}\n        children={props.configureActionChildren}\n      />\n      <Route\n        path={props.describeDataPath}\n        exact={true}\n        children={props.describeDataChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IApiProviderAppProps {\n  uploadPath: string;\n  uploadChildren: React.ReactElement<UploadPage>;\n  reviewPath: string;\n  reviewChildren: React.ReactElement<ReviewPage>;\n  editPath: string;\n  editChildren: React.ReactElement<EditPage>;\n}\nexport const ApiProviderApp: React.FunctionComponent<\n  IApiProviderAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.uploadPath}\n        exact={true}\n        children={props.uploadChildren}\n      />\n      <Route\n        path={props.reviewPath}\n        exact={true}\n        children={props.reviewChildren}\n      />\n      <Route path={props.editPath} exact={true} children={props.editChildren} />\n    </Switch>\n  );\n};\n\nexport interface ITemplateAppProps {\n  templatePath: string;\n  templateChildren: React.ReactNode;\n}\nexport const TemplateApp: React.FunctionComponent<\n  ITemplateAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.templatePath}\n        exact={true}\n        children={props.templateChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IBasicFilterAppProps {\n  filterPath: string;\n  filterChildren: React.ReactNode;\n}\nexport const BasicFilterApp: React.FunctionComponent<\n  IBasicFilterAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.filterPath}\n        exact={true}\n        children={props.filterChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IDataMapperAppProps {\n  mapperPath: string;\n  mapperChildren: React.ReactNode;\n}\nexport const DataMapperApp: React.FunctionComponent<\n  IDataMapperAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.mapperPath}\n        exact={true}\n        children={props.mapperChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IStepAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const StepApp: React.FunctionComponent<IStepAppProps> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IExtensionAppProps {\n  configurePath: string;\n  configureChildren: React.ReactNode;\n}\nexport const ExtensionApp: React.FunctionComponent<\n  IExtensionAppProps\n> = props => {\n  return (\n    <Switch>\n      <Route\n        path={props.configurePath}\n        exact={true}\n        children={props.configureChildren}\n      />\n    </Switch>\n  );\n};\n\nexport interface IEditorAppProps {\n  selectStepPath?: string;\n  selectStepChildren?: React.ReactNode;\n  endpointEditor: IEndpointEditorAppProps;\n  apiProvider: IApiProviderAppProps;\n  template: ITemplateAppProps;\n  dataMapper: IDataMapperAppProps;\n  basicFilter: IBasicFilterAppProps;\n  step: IStepAppProps;\n  extension: IExtensionAppProps;\n}\nexport const EditorApp: React.FunctionComponent<IEditorAppProps> = props => {\n  return (\n    <Switch>\n      {props.selectStepPath && props.selectStepChildren ? (\n        <Route\n          path={props.selectStepPath}\n          exact={true}\n          children={props.selectStepChildren}\n        />\n      ) : null}\n\n      <Route path={props.endpointEditor.selectActionPath}>\n        <EndpointEditorApp\n          selectActionPath={props.endpointEditor.selectActionPath}\n          selectActionChildren={props.endpointEditor.selectActionChildren}\n          configureActionPath={props.endpointEditor.configureActionPath}\n          configureActionChildren={props.endpointEditor.configureActionChildren}\n          describeDataPath={props.endpointEditor.describeDataPath}\n          describeDataChildren={props.endpointEditor.describeDataChildren}\n        />\n      </Route>\n      <Route path={props.apiProvider.uploadPath}>\n        <ApiProviderApp\n          uploadPath={props.apiProvider.uploadPath}\n          uploadChildren={props.apiProvider.uploadChildren}\n          reviewPath={props.apiProvider.reviewPath}\n          reviewChildren={props.apiProvider.reviewChildren}\n          editPath={props.apiProvider.editPath}\n          editChildren={props.apiProvider.editChildren}\n        />\n      </Route>\n      <Route path={props.template.templatePath}>\n        <TemplateApp\n          templatePath={props.template.templatePath}\n          templateChildren={props.template.templateChildren}\n        />\n      </Route>\n      <Route path={props.dataMapper.mapperPath}>\n        <DataMapperApp\n          mapperPath={props.dataMapper.mapperPath}\n          mapperChildren={props.dataMapper.mapperChildren}\n        />\n      </Route>\n      <Route path={props.basicFilter.filterPath}>\n        <BasicFilterApp\n          filterPath={props.basicFilter.filterPath}\n          filterChildren={props.basicFilter.filterChildren}\n        />\n      </Route>\n      <Route path={props.step.configurePath}>\n        <StepApp\n          configurePath={props.step.configurePath}\n          configureChildren={props.step.configureChildren}\n        />\n      </Route>\n      <Route path={props.extension.configurePath}>\n        <ExtensionApp\n          configurePath={props.extension.configurePath}\n          configureChildren={props.extension.configureChildren}\n        />\n      </Route>\n    </Switch>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { Container, TabBar, TabBarItem } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport resolvers from '../resolvers';\n\n/**\n * @param integration - the integration being displayed. If it\n * exists, it must equal to the [integrationId]{@link IIntegrationDetailNavBarProps#integration}.\n */\nexport interface IIntegrationDetailNavBarProps {\n  integration: Integration;\n}\n\n/**\n * A component that displays a nav bar with 3 items, only showing 1 for now:\n *\n * 1. a link to the page that displays the integration with the Details tab enabled,\n * 2. a link to the page that displays the integration with the Activity tab enabled, and\n * 3. a link to the page that displays the integration with the Metrics tab enabled.\n *\n *\n * @see [DetailsPage]{@link ../pages/detail/DetailsPage}\n * @see [ActivityPage]{@link ../pages/detail/ActivityPage}\n * @see [MetricsPage]{@link ../pages/detail/MetricsPage}\n */\nexport class IntegrationDetailNavBar extends React.Component<\n  IIntegrationDetailNavBarProps\n> {\n  public render() {\n    const integration = this.props.integration;\n    return (\n      <Translation ns={['integration', 'shared']}>\n        {t => (\n          <Container\n            style={{\n              background: '#fff',\n            }}\n          >\n            <TabBar>\n              <TabBarItem\n                label={'Details'}\n                to={resolvers.integration.details({\n                  integrationId: integration.id!,\n                })}\n              />\n              <TabBarItem\n                label={'Activity'}\n                to={resolvers.integration.activity({\n                  integration,\n                })}\n              />\n              <TabBarItem\n                label={'Metrics'}\n                to={resolvers.integration.metrics({\n                  integration,\n                })}\n              />\n            </TabBar>\n          </Container>\n        )}\n      </Translation>\n    );\n  }\n}\n","import {\n  getActionById,\n  getActionDescriptor,\n  getActionStep,\n  getActionStepDefinition,\n  getActionSteps,\n  getConnectionConnector,\n  getConnectorActions,\n} from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { Action, ConnectionOverview } from '@syndesis/models';\nimport {\n  IntegrationEditorForm,\n  IntegrationEditorNothingToConfigure,\n} from '@syndesis/ui';\nimport { toFormDefinition } from '@syndesis/utils';\nimport * as React from 'react';\n\nexport interface IWithConfigurationFormChildrenProps {\n  /**\n   * the form (embedded in the right UI elements)\n   */\n  form: JSX.Element;\n  /**\n   * true if the form contains valid values. Can be used to enable/disable the\n   * submit button.\n   */\n  isValid: boolean;\n  /**\n   * true if the form is being submitted. Can be used to enable/disable the\n   * submit button.\n   */\n  isSubmitting: boolean;\n  /**\n   * the callback to fire to submit the form.\n   */\n  submitForm(): any;\n}\n\nexport interface IOnUpdatedIntegrationProps {\n  /**\n   * the action object that has been configured.\n   */\n  action: Action;\n  /**\n   * true if the configuration is not complete because there are other steps,\n   * false otherwise.\n   * If true the form should be re-rendered with an incremented\n   * [configurationStep]{@link IWithConfigurationFormProps#configurationStep}.\n   */\n  moreConfigurationSteps: boolean;\n  /**\n   * the configured values.\n   */\n  values: { [key: string]: string } | null;\n}\n\nexport interface IWithConfigurationFormProps {\n  /**\n   * the connection object that contains the action with the provided\n   * [actionId]{@link IWithConfigurationFormProps#actionId}. Used to retrieve\n   * the form definition.\n   */\n  connection: ConnectionOverview;\n  /**\n   * the ID of the action that needs to be configured.\n   */\n  actionId: string;\n  /**\n   * for actions whose configuration must be performed in multiple steps,\n   * indicates the current step.\n   */\n  configurationStep: number;\n  /**\n   * the values to assign to the form once rendered. These can come either from\n   * an existing integration or from the [onUpdatedIntegration]{@link IWithConfigurationFormProps#onUpdatedIntegration}\n   * callback.\n   */\n  initialValue?: { [key: string]: string };\n\n  /**\n   * the render prop that will receive the ready-to-be-rendered form and some\n   * helpers.\n   *\n   * @see [form]{@link IWithConfigurationFormChildrenProps#form}\n   * @see [isValid]{@link IWithConfigurationFormChildrenProps#isValid}\n   * @see [isSubmitting]{@link IWithConfigurationFormChildrenProps#isSubmitting}\n   * @see [onSubmit]{@link IWithConfigurationFormChildrenProps#submitForm}\n   */\n  children(props: IWithConfigurationFormChildrenProps): any;\n\n  /**\n   * the callback that is fired after the form submit with valid values.\n   *\n   * @see [action]{@link IOnUpdatedIntegrationProps#action}\n   * @see [moreConfigurationSteps]{@link IOnUpdatedIntegrationProps#moreConfigurationSteps}\n   * @see [values]{@link IOnUpdatedIntegrationProps#values}\n   */\n  onUpdatedIntegration(props: IOnUpdatedIntegrationProps): Promise<void>;\n}\n\n/**\n * A component to generate a configuration form for a given action and values.\n *\n * @see [action]{@link IWithConfigurationFormProps#action}\n * @see [moreConfigurationSteps]{@link IWithConfigurationFormProps#moreConfigurationSteps}\n * @see [values]{@link IWithConfigurationFormProps#values}\n */\nexport class WithConfigurationForm extends React.Component<\n  IWithConfigurationFormProps\n> {\n  public static defaultProps = {\n    initialValue: {},\n  };\n\n  constructor(props: IWithConfigurationFormProps) {\n    super(props);\n  }\n\n  public renderConfigurationForm(action: Action): JSX.Element | null {\n    try {\n      const descriptor = getActionDescriptor(action);\n      const steps = getActionSteps(descriptor);\n      const step = getActionStep(steps, this.props.configurationStep);\n      const definition = getActionStepDefinition(step);\n      const moreConfigurationSteps =\n        this.props.configurationStep < steps.length - 1;\n      const onSave = async (\n        values: { [key: string]: string },\n        actions: any\n      ): Promise<void> => {\n        await this.props.onUpdatedIntegration({\n          action,\n          moreConfigurationSteps,\n          values,\n        });\n        actions.setSubmitting(false);\n      };\n      return (\n        <AutoForm<{ [key: string]: string }>\n          i18nRequiredProperty={'* Required field'}\n          definition={toFormDefinition(definition)}\n          initialValue={this.props.initialValue!}\n          onSave={onSave}\n          key={this.props.configurationStep}\n        >\n          {({ fields, handleSubmit, isSubmitting, isValid, submitForm }) =>\n            this.props.children({\n              form: (\n                <IntegrationEditorForm\n                  i18nTitle={'Configure action'}\n                  i18nSubtitle={\n                    'Fill in the required information for the selected action.'\n                  }\n                  i18nFormTitle={`${action.name} - ${action.description}`}\n                  handleSubmit={handleSubmit}\n                >\n                  {fields}\n                </IntegrationEditorForm>\n              ),\n              isSubmitting,\n              isValid,\n              submitForm,\n            })\n          }\n        </AutoForm>\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  public renderNoPropertiesInfo(action: Action) {\n    const submitForm = () => {\n      this.props.onUpdatedIntegration({\n        action,\n        moreConfigurationSteps: false,\n        values: null,\n      });\n    };\n    return this.props.children({\n      form: (\n        <IntegrationEditorNothingToConfigure\n          i18nTitle={'Configure action'}\n          i18nSubtitle={\n            'Fill in the required information for the selected action.'\n          }\n          i18nAlert={'There are no properties to configure for this action.'}\n        />\n      ),\n      isSubmitting: false,\n      isValid: true,\n      submitForm,\n    });\n  }\n\n  public render() {\n    const action = getActionById(\n      getConnectorActions(getConnectionConnector(this.props.connection)),\n      this.props.actionId\n    );\n    return (\n      this.renderConfigurationForm(action) ||\n      this.renderNoPropertiesInfo(action)\n    );\n  }\n}\n","import { getSteps, WithIntegrationHelpers } from '@syndesis/api';\nimport { Connection, Integration, Step } from '@syndesis/models';\nimport { IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../../shared';\nimport {\n  IOnUpdatedIntegrationProps,\n  WithConfigurationForm,\n} from '../../../shared';\nimport {\n  IConfigureActionRouteParams,\n  IConfigureActionRouteState,\n} from '../interfaces';\n\nexport interface IConfigureActionPageProps {\n  backHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  mode: 'adding' | 'editing';\n  nextStepHref: (\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n  sidebar: (props: {\n    connection: Connection;\n    steps: Step[];\n    activeIndex: number;\n  }) => React.ReactNode;\n  postConfigureHref: (\n    integration: Integration,\n    p: IConfigureActionRouteParams,\n    s: IConfigureActionRouteState\n  ) => H.LocationDescriptorObject;\n}\n\n/**\n * This page shows the configuration form for a given action.\n *\n * Submitting the form will update an *existing* integration step in\n * the [position specified in the params]{@link IConfigureActionRouteParams#position}\n * of the first flow, set up as specified by the form values.\n *\n * This component expects some [url params]{@link IConfigureActionRouteParams}\n * and [state]{@link IConfigureActionRouteState} to be properly set in\n * the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class ConfigureActionPage extends React.Component<\n  IConfigureActionPageProps\n> {\n  public render() {\n    return (\n      <WithIntegrationHelpers>\n        {({ addConnection, updateConnection }) => (\n          <WithRouteData<\n            IConfigureActionRouteParams,\n            IConfigureActionRouteState\n          >>\n            {(\n              { actionId, flowId, step = '0', position },\n              {\n                configuredProperties,\n                connection,\n                integration,\n                updatedIntegration,\n              },\n              { history }\n            ) => {\n              const stepAsNumber = parseInt(step, 10);\n              const positionAsNumber = parseInt(position, 10);\n              const onUpdatedIntegration = async ({\n                action,\n                moreConfigurationSteps,\n                values,\n              }: IOnUpdatedIntegrationProps) => {\n                updatedIntegration = await (this.props.mode === 'adding' &&\n                  stepAsNumber === 0\n                  ? addConnection\n                  : updateConnection)(\n                  updatedIntegration || integration,\n                  connection,\n                  action,\n                  flowId,\n                  positionAsNumber,\n                  values\n                );\n                if (moreConfigurationSteps) {\n                  history.push(\n                    this.props.nextStepHref(\n                      {\n                        actionId,\n                        flowId,\n                        position,\n                        step: `${stepAsNumber + 1}`,\n                      },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                } else {\n                  history.push(\n                    this.props.postConfigureHref(\n                      updatedIntegration,\n                      { actionId, flowId, step, position },\n                      {\n                        configuredProperties,\n                        connection,\n                        integration,\n                        updatedIntegration,\n                      }\n                    )\n                  );\n                }\n              };\n\n              return (\n                <WithConfigurationForm\n                  connection={connection}\n                  actionId={actionId}\n                  configurationStep={stepAsNumber}\n                  initialValue={configuredProperties}\n                  onUpdatedIntegration={onUpdatedIntegration}\n                >\n                  {({ form, submitForm, isSubmitting }) => (\n                    <>\n                      <PageTitle title={'Configure the action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection,\n                          steps: getSteps(\n                            updatedIntegration || integration,\n                            flowId\n                          ),\n                        })}\n                        content={form}\n                        backHref={this.props.backHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        cancelHref={this.props.cancelHref(\n                          { actionId, flowId, step, position },\n                          {\n                            configuredProperties,\n                            connection,\n                            integration,\n                            updatedIntegration,\n                          }\n                        )}\n                        onNext={submitForm}\n                        isNextLoading={isSubmitting}\n                      />\n                    </>\n                  )}\n                </WithConfigurationForm>\n              );\n            }}\n          </WithRouteData>\n        )}\n      </WithIntegrationHelpers>\n    );\n  }\n}\n","import { getSteps, WithConnection } from '@syndesis/api';\nimport { IConnectionWithIconFile, Step } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorActionsListItem,\n  IntegrationEditorChooseAction,\n  IntegrationEditorLayout,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../../shared';\nimport {\n  ISelectActionRouteParams,\n  ISelectActionRouteState,\n} from '../interfaces';\n\nexport interface ISelectActionPageProps {\n  backHref?: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: {\n    steps: Step[];\n    activeIndex: number;\n    connection: IConnectionWithIconFile;\n  }) => React.ReactNode;\n  selectHref: (\n    actionId: string,\n    p: ISelectActionRouteParams,\n    s: ISelectActionRouteState\n  ) => H.LocationDescriptor;\n}\n\n/**\n * This page shows the list of actions of a connection containing either a\n * **to** or **from pattern, depending on the specified [position]{@link ISelectActionRouteParams#position}.\n *\n * This component expects some [params]{@link ISelectActionRouteParams} and\n * [state]{@link ISelectActionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectActionPage extends React.Component<ISelectActionPageProps> {\n  public render() {\n    return (\n      <WithRouteData<ISelectActionRouteParams, ISelectActionRouteState>>\n        {({ connectionId, flowId, position }, { connection, integration }) => {\n          const positionAsNumber = parseInt(position, 10);\n          return (\n            <WithConnection id={connectionId} initialValue={connection}>\n              {({ data, hasData, error }) => (\n                <WithLoader\n                  error={error}\n                  loading={!hasData}\n                  loaderChildren={<Loader />}\n                  errorChildren={<ApiError />}\n                >\n                  {() => (\n                    <>\n                      <PageTitle title={'Choose an action'} />\n                      <IntegrationEditorLayout\n                        header={this.props.header}\n                        sidebar={this.props.sidebar({\n                          activeIndex: positionAsNumber,\n                          connection: connection as IConnectionWithIconFile,\n                          steps: getSteps(integration, flowId),\n                        })}\n                        content={\n                          <IntegrationEditorChooseAction\n                            i18nTitle={`${connection.name} - Choose Action`}\n                            i18nSubtitle={\n                              'Choose an action for the selected connectionName.'\n                            }\n                          >\n                            {(positionAsNumber > 0\n                              ? data.actionsWithTo\n                              : data.actionsWithFrom\n                            )\n                              .sort((a, b) => a.name.localeCompare(b.name))\n                              .map((a, idx) => (\n                                <IntegrationEditorActionsListItem\n                                  key={idx}\n                                  integrationName={a.name}\n                                  integrationDescription={\n                                    a.description || 'No description available.'\n                                  }\n                                  actions={\n                                    <ButtonLink\n                                      href={this.props.selectHref(\n                                        a.id!,\n                                        { connectionId, flowId, position },\n                                        { connection, integration }\n                                      )}\n                                    >\n                                      Select\n                                    </ButtonLink>\n                                  }\n                                />\n                              ))}\n                          </IntegrationEditorChooseAction>\n                        }\n                        backHref={\n                          this.props.backHref\n                            ? this.props.backHref(\n                                { connectionId, flowId, position },\n                                { connection, integration }\n                              )\n                            : undefined\n                        }\n                        cancelHref={this.props.cancelHref(\n                          { connectionId, flowId, position },\n                          { connection, integration }\n                        )}\n                      />\n                    </>\n                  )}\n                </WithLoader>\n              )}\n            </WithConnection>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { setIntegrationName, WithIntegrationHelpers } from '@syndesis/api';\nimport { AutoForm, IFormDefinition } from '@syndesis/auto-form';\nimport { Integration } from '@syndesis/models';\nimport { IntegrationEditorForm, IntegrationEditorLayout } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { PageTitle } from '../../../../shared';\nimport {\n  ISaveIntegrationForm,\n  ISaveIntegrationRouteParams,\n  ISaveIntegrationRouteState,\n} from './interfaces';\n\nexport interface ISaveIntegrationPageProps {\n  backHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISaveIntegrationRouteParams,\n    s: ISaveIntegrationRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  postSaveHref: (i: Integration) => H.LocationDescriptorObject;\n}\n\n/**\n * This page asks for the details of the integration, and saves it.\n *\n * This component expects a [state]{@link ISaveIntegrationRouteState} to be\n * properly set in the route object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n *\n * @todo toast notifications.\n * @todo redirect to the integration detail page once available.\n */\nexport class SaveIntegrationPage extends React.Component<\n  ISaveIntegrationPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISaveIntegrationRouteParams, ISaveIntegrationRouteState>>\n        {({ flowId }, { integration }, { history }) => (\n          <WithIntegrationHelpers>\n            {({ saveIntegration }) => {\n              const onSave = async (\n                { name, description }: ISaveIntegrationForm,\n                actions: any\n              ) => {\n                const updatedIntegration = setIntegrationName(\n                  integration,\n                  name\n                );\n                // TODO: set the description\n                await saveIntegration(updatedIntegration);\n                actions.setSubmitting(false);\n                // TODO: toast notification\n                history.push(this.props.postSaveHref(updatedIntegration));\n              };\n              const definition: IFormDefinition = {\n                name: {\n                  defaultValue: '',\n                  displayName: 'Name',\n                  order: 0,\n                  required: true,\n                  type: 'string',\n                },\n                // tslint:disable-next-line\n                description: {\n                  defaultValue: '',\n                  displayName: 'Description',\n                  order: 1,\n                  type: 'textarea',\n                },\n              };\n              return (\n                <AutoForm<ISaveIntegrationForm>\n                  i18nRequiredProperty={'* Required field'}\n                  definition={definition}\n                  initialValue={{\n                    description: integration.description,\n                    name: integration.name,\n                  }}\n                  onSave={onSave}\n                >\n                  {({\n                    fields,\n                    dirty,\n                    handleSubmit,\n                    isSubmitting,\n                    isValid,\n                    submitForm,\n                  }) => (\n                    <IntegrationEditorLayout\n                      header={this.props.header}\n                      content={\n                        <>\n                          <PageTitle title={'Save the integration'} />\n                          <IntegrationEditorForm\n                            i18nTitle={'Save the integration'}\n                            i18nSubtitle={\n                              'Update details about this integration.'\n                            }\n                            handleSubmit={handleSubmit}\n                          >\n                            {fields}\n                          </IntegrationEditorForm>\n                        </>\n                      }\n                      cancelHref={this.props.cancelHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      backHref={this.props.backHref(\n                        { flowId },\n                        { integration }\n                      )}\n                      onNext={submitForm}\n                      isNextDisabled={dirty && !isValid}\n                      isNextLoading={isSubmitting}\n                      isLastStep={true}\n                    />\n                  )}\n                </AutoForm>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  getEmptyIntegration,\n  getSteps,\n  visibleStepsByPosition,\n  WithConnections,\n  WithExtensions,\n  WithSteps,\n} from '@syndesis/api';\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ButtonLink,\n  IntegrationEditorChooseConnection,\n  IntegrationEditorConnectionsListItem,\n  IntegrationEditorLayout,\n  IntegrationsListSkeleton,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as H from 'history';\nimport * as React from 'react';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport {\n  ISelectConnectionRouteParams,\n  ISelectConnectionRouteState,\n  IUIStep,\n} from './interfaces';\nimport { getStepHref, IGetStepHrefs, toStepKindCollection } from './utils';\n\nexport interface ISelectConnectionPageProps extends IGetStepHrefs {\n  backHref?: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  cancelHref: (\n    p: ISelectConnectionRouteParams,\n    s: ISelectConnectionRouteState\n  ) => H.LocationDescriptor;\n  header: React.ReactNode;\n  sidebar: (props: { steps: Step[]; activeIndex: number }) => React.ReactNode;\n}\n\n/**\n * This page shows the list of connections containing actions with a **to**\n * pattern.\n *\n * This component expects some [params]{@link ISelectConnectionRouteParams} and\n * [state]{@link ISelectConnectionRouteState} to be properly set in the route\n * object.\n *\n * **Warning:** this component will throw an exception if the route state is\n * undefined.\n */\nexport class SelectConnectionPage extends React.Component<\n  ISelectConnectionPageProps\n> {\n  public render() {\n    return (\n      <WithRouteData<ISelectConnectionRouteParams, ISelectConnectionRouteState>>\n        {(params, state) => {\n          const { flowId, position } = params;\n          const { integration = getEmptyIntegration() } = state;\n          const positionAsNumber = parseInt(position, 10) || 0;\n          const integrationSteps = getSteps(integration, flowId);\n          return (\n            <>\n              <PageTitle title={'Choose a connection'} />\n              <IntegrationEditorLayout\n                header={this.props.header}\n                sidebar={this.props.sidebar({\n                  activeIndex: positionAsNumber,\n                  steps: integrationSteps,\n                })}\n                content={\n                  <WithConnections>\n                    {({\n                      data: connectionsData,\n                      hasData: hasConnectionsData,\n                      error: connectionsError,\n                    }) => (\n                      <WithExtensions>\n                        {({\n                          data: extensionsData,\n                          hasData: hasExtensionsData,\n                          error: extensionsError,\n                        }) => (\n                          <WithSteps>\n                            {({ items: steps }) => (\n                              <IntegrationEditorChooseConnection\n                                i18nTitle={'Choose a connection'}\n                                i18nSubtitle={\n                                  'Click the connection that completes the integration. If the connection you need is not available, click Create Connection.'\n                                }\n                              >\n                                <WithLoader\n                                  error={connectionsError || extensionsError}\n                                  loading={\n                                    !hasConnectionsData || !hasExtensionsData\n                                  }\n                                  loaderChildren={<IntegrationsListSkeleton />}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => {\n                                    const stepKinds = toStepKindCollection(\n                                      positionAsNumber === 0\n                                        ? connectionsData.connectionsWithFromAction\n                                        : connectionsData.connectionsWithToAction,\n                                      extensionsData.items,\n                                      steps\n                                    );\n                                    const visibleSteps = visibleStepsByPosition(\n                                      stepKinds as StepKind[],\n                                      positionAsNumber\n                                    ) as IUIStep[];\n                                    return (\n                                      <>\n                                        {visibleSteps.map(\n                                          (step, idx: number) => (\n                                            <IntegrationEditorConnectionsListItem\n                                              key={idx}\n                                              integrationName={step.name}\n                                              integrationDescription={\n                                                step.description ||\n                                                'No description available.'\n                                              }\n                                              icon={\n                                                <img\n                                                  src={step.icon}\n                                                  width={24}\n                                                  height={24}\n                                                />\n                                              }\n                                              actions={\n                                                <ButtonLink\n                                                  href={getStepHref(\n                                                    step,\n                                                    params,\n                                                    state,\n                                                    this.props\n                                                  )}\n                                                >\n                                                  Select\n                                                </ButtonLink>\n                                              }\n                                            />\n                                          )\n                                        )}\n                                        <IntegrationEditorConnectionsListItem\n                                          integrationName={''}\n                                          integrationDescription={''}\n                                          icon={''}\n                                          actions={\n                                            <ButtonLink href={'#'}>\n                                              Create connection\n                                            </ButtonLink>\n                                          }\n                                        />\n                                      </>\n                                    );\n                                  }}\n                                </WithLoader>\n                              </IntegrationEditorChooseConnection>\n                            )}\n                          </WithSteps>\n                        )}\n                      </WithExtensions>\n                    )}\n                  </WithConnections>\n                }\n                backHref={\n                  this.props.backHref\n                    ? this.props.backHref(params, state)\n                    : undefined\n                }\n                cancelHref={this.props.cancelHref(params, state)}\n              />\n            </>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  IntegrationFlowStepGeneric,\n  IntegrationFlowStepWithOverview,\n  IntegrationVerticalFlow,\n} from '@syndesis/ui';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationCreatorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.create.configure.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.create.configure.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.configure.editStep.basicFilter}\n    extensionHref={resolvers.create.configure.editStep.extension}\n    mapperHref={resolvers.create.configure.editStep.dataMapper}\n    templateHref={resolvers.create.configure.editStep.template}\n    stepHref={resolvers.create.configure.editStep.step}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    nextHref={(p, s) =>\n      resolvers.create.configure.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={4} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst startStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    apiProviderHref={resolvers.create.start.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.start.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.start.basicFilter}\n    extensionHref={resolvers.create.start.extension}\n    mapperHref={resolvers.create.start.dataMapper}\n    templateHref={resolvers.create.start.template}\n    stepHref={resolvers.create.start.step}\n    sidebar={() => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'1. Start'}\n              i18nTooltip={'Start'}\n              active={true}\n              showDetails={expanded}\n              description={'Choose a connection'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst startStepSelectActionPage = (\n  <SelectActionPage\n    backHref={resolvers.create.start.selectStep}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} />}\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Choose an action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.start.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst startStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.start.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={1} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.start.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => (\n          <>\n            <IntegrationFlowStepGeneric\n              icon={\n                <img\n                  src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                  width={24}\n                  height={24}\n                />\n              }\n              i18nTitle={`1. ${connection.connector!.name}`}\n              i18nTooltip={`1. ${connection.name}`}\n              active={true}\n              showDetails={expanded}\n              description={'Configure the action'}\n            />\n            <IntegrationFlowStepWithOverview\n              icon={<i className={'fa fa-plus'} />}\n              i18nTitle={'2. Finish'}\n              i18nTooltip={'Finish'}\n              active={false}\n              showDetails={expanded}\n              name={'n/a'}\n              action={'n/a'}\n              dataType={'n/a'}\n            />\n          </>\n        )}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params, state) => {\n      return resolvers.create.finish.selectStep({\n        integration,\n        ...params,\n        position: '1',\n      });\n    }}\n  />\n);\n\nconst finishStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    apiProviderHref={resolvers.create.finish.apiProvider.upload}\n    connectionHref={(connection, params, state) =>\n      resolvers.create.finish.connection.selectAction({\n        connection,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.create.finish.basicFilter}\n    extensionHref={resolvers.create.finish.extension}\n    mapperHref={resolvers.create.finish.dataMapper}\n    templateHref={resolvers.create.finish.template}\n    stepHref={resolvers.create.finish.step}\n    sidebar={({ steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={<i className={'fa fa-plus'} />}\n                i18nTitle={'2. Finish'}\n                i18nTooltip={'Finish'}\n                active={true}\n                showDetails={expanded}\n                description={'Choose a connection'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n  />\n);\n\nconst finishStepSelectActionPage = (\n  <SelectActionPage\n    backHref={(p, s) => resolvers.create.finish.selectStep({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} />}\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Choose an action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst finishStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.finish.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={resolvers.list}\n    header={<IntegrationCreatorBreadcrumbs step={2} subStep={2} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.finish.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps }) => (\n      <IntegrationVerticalFlow>\n        {({ expanded }) => {\n          const startAction = steps[0];\n          return (\n            <>\n              <IntegrationFlowStepWithOverview\n                icon={\n                  <img\n                    src={getConnectionIcon(\n                      process.env.PUBLIC_URL,\n                      startAction.connection!\n                    )}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`1. ${startAction.connection!.name}`}\n                i18nTooltip={`1. ${startAction.connection!.name}`}\n                active={false}\n                showDetails={expanded}\n                name={startAction.connection!.connector!.name}\n                action={startAction.connection!.name!}\n                dataType={'TODO'}\n              />\n              <IntegrationFlowStepGeneric\n                icon={\n                  <img\n                    src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n                    width={24}\n                    height={24}\n                  />\n                }\n                i18nTitle={`2. ${connection.connector!.name}`}\n                i18nTooltip={`2. ${connection.name}`}\n                active={true}\n                showDetails={expanded}\n                description={'Configure the action'}\n              />\n            </>\n          );\n        }}\n      </IntegrationVerticalFlow>\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst addStepSelectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    apiProviderHref={resolvers.create.configure.addStep.apiProvider.upload}\n    connectionHref={(connection, p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.create.configure.addStep.basicFilter}\n    extensionHref={resolvers.create.configure.addStep.extension}\n    mapperHref={resolvers.create.configure.addStep.dataMapper}\n    templateHref={resolvers.create.configure.addStep.template}\n    stepHref={resolvers.create.configure.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.create.configure.index({ ...p, ...s })}\n    header={<IntegrationCreatorBreadcrumbs step={3} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.create.configure.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.create.configure.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration creator app. This is shown when an user clicks\n * the \"Create integration\" button somewhere in the app.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationCreatorApp: React.FunctionComponent = () => {\n  return (\n    <WithClosedNavigation>\n      <Breadcrumb>\n        <Link to={resolvers.list()}>Integrations</Link>\n        <span>New integration</span>\n      </Breadcrumb>\n      <Switch>\n        {/* start step */}\n        <Route path={routes.create.start.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.start.selectStep}\n            selectStepChildren={startStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.start.connection.selectAction,\n              selectActionChildren: startStepSelectActionPage,\n              configureActionPath:\n                routes.create.start.connection.configureAction,\n              configureActionChildren: startStepConfigureActionPage,\n              describeDataPath: routes.create.start.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.start.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.start.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.start.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.start.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.start.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.start.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.start.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.start.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* finish step */}\n        <Route path={routes.create.finish.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.finish.selectStep}\n            selectStepChildren={finishStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath: routes.create.finish.connection.selectAction,\n              selectActionChildren: finishStepSelectActionPage,\n              configureActionPath:\n                routes.create.finish.connection.configureAction,\n              configureActionChildren: finishStepConfigureActionPage,\n              describeDataPath: routes.create.finish.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.finish.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.finish.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.finish.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.finish.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.finish.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.finish.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.finish.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.finish.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.index}\n          exact={true}\n          children={addStepPage}\n        />\n\n        {/* add step */}\n        <Route path={routes.create.configure.addStep.selectStep}>\n          <EditorApp\n            selectStepPath={routes.create.configure.addStep.selectStep}\n            selectStepChildren={addStepSelectConnectionPage}\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.addStep.connection.selectAction,\n              selectActionChildren: addStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.addStep.connection.configureAction,\n              configureActionChildren: addStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.addStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.addStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.addStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.addStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.addStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.addStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.addStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.addStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.addStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        {/* edit step */}\n        <Route path={routes.create.configure.editStep.selectStep}>\n          <EditorApp\n            endpointEditor={{\n              selectActionPath:\n                routes.create.configure.editStep.connection.selectAction,\n              selectActionChildren: editStepSelectActionPage,\n              configureActionPath:\n                routes.create.configure.editStep.connection.configureAction,\n              configureActionChildren: editStepConfigureActionPage,\n              describeDataPath:\n                routes.create.configure.editStep.connection.describeData,\n              describeDataChildren: TODO,\n            }}\n            apiProvider={{\n              uploadPath: routes.create.configure.editStep.apiProvider.upload,\n              uploadChildren: <UploadPage />,\n              reviewPath: routes.create.configure.editStep.apiProvider.review,\n              reviewChildren: <ReviewPage />,\n              editPath: routes.create.configure.editStep.apiProvider.edit,\n              editChildren: <EditPage />,\n            }}\n            template={{\n              templatePath: routes.create.configure.editStep.template,\n              templateChildren: TODO,\n            }}\n            dataMapper={{\n              mapperPath: routes.create.configure.editStep.dataMapper,\n              mapperChildren: TODO,\n            }}\n            basicFilter={{\n              filterPath: routes.create.configure.editStep.basicFilter,\n              filterChildren: TODO,\n            }}\n            step={{\n              configurePath: routes.create.configure.editStep.step,\n              configureChildren: TODO,\n            }}\n            extension={{\n              configurePath: routes.create.configure.editStep.extension,\n              configureChildren: TODO,\n            }}\n          />\n        </Route>\n\n        <Route\n          path={routes.create.configure.saveAndPublish}\n          exact={true}\n          children={saveIntegrationPage}\n        />\n      </Switch>\n    </WithClosedNavigation>\n  );\n};\n","/* tslint:disable:object-literal-sort-keys */\nimport { getConnectionIcon } from '@syndesis/api';\nimport { Integration } from '@syndesis/models';\nimport { Breadcrumb } from '@syndesis/ui';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { WithClosedNavigation } from '../../shared';\nimport {\n  IntegrationEditorBreadcrumbs,\n  IntegrationEditorSidebar,\n} from './components';\nimport { AddStepPage } from './components/editor/AddStepPage';\nimport { ReviewPage } from './components/editor/api-provider/EditPage';\nimport { EditPage } from './components/editor/api-provider/ReviewPage';\nimport { UploadPage } from './components/editor/api-provider/UploadPage';\nimport { EditorApp } from './components/editor/EditorApp';\nimport { ConfigureActionPage } from './components/editor/endpoint/ConfigureActionPage';\nimport { SelectActionPage } from './components/editor/endpoint/SelectActionPage';\nimport { SaveIntegrationPage } from './components/editor/SaveIntegrationPage';\nimport { SelectConnectionPage } from './components/editor/SelectConnectionPage';\nimport resolvers from './resolvers';\nimport routes from './routes';\n\nconst addStepPage = (\n  <AddStepPage\n    cancelHref={resolvers.list}\n    getEditAddStepHref={(position, p, s) =>\n      resolvers.integration.edit.addStep.selectStep({\n        position: `${position}`,\n        ...p,\n        ...s,\n      })\n    }\n    apiProviderHref={resolvers.integration.edit.editStep.apiProvider.review}\n    connectionHref={(step, params, state) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId: step.action!.id!,\n        connection: step.connection!,\n        ...params,\n        ...state,\n      })\n    }\n    filterHref={resolvers.integration.edit.editStep.basicFilter}\n    extensionHref={resolvers.integration.edit.editStep.extension}\n    mapperHref={resolvers.integration.edit.editStep.dataMapper}\n    templateHref={resolvers.integration.edit.editStep.template}\n    stepHref={resolvers.integration.edit.editStep.step}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    nextHref={(p, s) =>\n      resolvers.integration.edit.saveAndPublish({\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst selectConnectionPage = (\n  <SelectConnectionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    apiProviderHref={(p, s) => ({ pathname: 'todo' })}\n    connectionHref={(connection, p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({\n        connection,\n        ...p,\n        ...s,\n      })\n    }\n    filterHref={resolvers.integration.edit.addStep.basicFilter}\n    extensionHref={resolvers.integration.edit.addStep.extension}\n    mapperHref={resolvers.integration.edit.addStep.dataMapper}\n    templateHref={resolvers.integration.edit.addStep.template}\n    stepHref={resolvers.integration.edit.addStep.step}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addI18nTitle={`${activeIndex + 1}. Start`}\n        addI18nTooltip={'Start'}\n        addI18nDescription={'Choose a connection'}\n      />\n    )}\n  />\n);\n\nconst saveIntegrationPage = (\n  <SaveIntegrationPage\n    backHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    cancelHref={resolvers.list}\n    header={<IntegrationEditorBreadcrumbs step={2} />}\n    postSaveHref={resolvers.list}\n  />\n);\n\nconst addStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Choose an action'}\n      />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst addStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.selectAction({ ...p, ...s })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'adding'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.addStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ connection, steps, activeIndex }) => (\n      <IntegrationEditorSidebar\n        steps={steps}\n        addAtIndex={activeIndex}\n        addIcon={\n          <img\n            src={getConnectionIcon(process.env.PUBLIC_URL, connection)}\n            height={24}\n            width={24}\n          />\n        }\n        addI18nTitle={`${activeIndex + 1}. ${connection.connector!.name}`}\n        addI18nTooltip={`${activeIndex + 1}. ${connection.name}`}\n        addI18nDescription={'Configure the action'}\n      />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nconst editStepSelectActionPage = (\n  <SelectActionPage\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    selectHref={(actionId, p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        actionId,\n        ...p,\n        ...s,\n      })\n    }\n  />\n);\n\nconst editStepConfigureActionPage = (\n  <ConfigureActionPage\n    backHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.selectAction({\n        ...p,\n        ...s,\n      })\n    }\n    cancelHref={(p, s) => resolvers.integration.edit.index({ ...p, ...s })}\n    header={<IntegrationEditorBreadcrumbs step={1} />}\n    mode={'editing'}\n    nextStepHref={(p, s) =>\n      resolvers.integration.edit.editStep.connection.configureAction({\n        ...p,\n        ...s,\n      })\n    }\n    sidebar={({ steps, activeIndex }) => (\n      <IntegrationEditorSidebar steps={steps} activeIndex={activeIndex} />\n    )}\n    postConfigureHref={(integration, params) =>\n      resolvers.integration.edit.index({\n        integration,\n        ...params,\n      })\n    }\n  />\n);\n\nexport interface IIntegrationEditorAppRouteState {\n  integration: Integration;\n}\n\nconst TODO: React.FunctionComponent = () => <>TODO</>;\n\n/**\n * Entry point for the integration editor app. This is shown when an user clicks\n * on the \"Edit\" button for any existing integration.\n *\n * Since all the creation routes will show the same breadcrumb and require the\n * left navigation bar to be closed to reclaim space, we do it here.\n *\n * Almost all of the routes *require* some state to be passed for them to\n * properly work, so an url that works for an user *will not work* for another.\n * If you try and open the same url on a different browser, the code will throw\n * an exception because of this.\n *\n * We should set up an error boundary[1] to catch these errors and tell the user\n * that he reached an invalid url, or redirect him to a safe page.\n *\n * [1] https://reactjs.org/docs/error-boundaries.html\n *\n * @todo add an error handler!\n * @todo i18n everywhere!\n */\nexport const IntegrationEditorApp: React.FunctionComponent = () => {\n  return (\n    <WithRouteData<null, IIntegrationEditorAppRouteState>>\n      {(_, { integration }) => (\n        <WithClosedNavigation>\n          <Breadcrumb>\n            <Link to={resolvers.list()}>Integrations</Link>\n            <Link\n              to={resolvers.integration.details({\n                integrationId: integration.id!,\n              })}\n            >\n              {integration.name}\n            </Link>\n            <span>Add to integration</span>\n          </Breadcrumb>\n          <Switch>\n            <Route\n              path={routes.integration.edit.index}\n              exact={true}\n              children={addStepPage}\n            />\n\n            {/* add step */}\n            <Route path={routes.integration.edit.addStep.selectStep}>\n              <EditorApp\n                selectStepPath={routes.integration.edit.addStep.selectStep}\n                selectStepChildren={selectConnectionPage}\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.addStep.connection.selectAction,\n                  selectActionChildren: addStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.addStep.connection.configureAction,\n                  configureActionChildren: addStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.addStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.addStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.addStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.addStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.addStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.addStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.addStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.addStep.step,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            {/* edit step */}\n            <Route path={routes.integration.edit.editStep.selectStep}>\n              <EditorApp\n                endpointEditor={{\n                  selectActionPath:\n                    routes.integration.edit.editStep.connection.selectAction,\n                  selectActionChildren: editStepSelectActionPage,\n                  configureActionPath:\n                    routes.integration.edit.editStep.connection.configureAction,\n                  configureActionChildren: editStepConfigureActionPage,\n                  describeDataPath:\n                    routes.integration.edit.editStep.connection.describeData,\n                  describeDataChildren: TODO,\n                }}\n                apiProvider={{\n                  uploadPath:\n                    routes.integration.edit.editStep.apiProvider.upload,\n                  uploadChildren: <UploadPage />,\n                  reviewPath:\n                    routes.integration.edit.editStep.apiProvider.review,\n                  reviewChildren: <ReviewPage />,\n                  editPath: routes.integration.edit.editStep.apiProvider.edit,\n                  editChildren: <EditPage />,\n                }}\n                template={{\n                  templatePath: routes.integration.edit.editStep.template,\n                  templateChildren: TODO,\n                }}\n                dataMapper={{\n                  mapperPath: routes.integration.edit.editStep.dataMapper,\n                  mapperChildren: TODO,\n                }}\n                basicFilter={{\n                  filterPath: routes.integration.edit.editStep.basicFilter,\n                  filterChildren: TODO,\n                }}\n                step={{\n                  configurePath: routes.integration.edit.editStep.step,\n                  configureChildren: TODO,\n                }}\n                extension={{\n                  configurePath: routes.integration.edit.editStep.extension,\n                  configureChildren: TODO,\n                }}\n              />\n            </Route>\n\n            <Route\n              path={routes.integration.edit.saveAndPublish}\n              exact={true}\n              children={saveIntegrationPage}\n            />\n          </Switch>\n        </WithClosedNavigation>\n      )}\n    </WithRouteData>\n  );\n};\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IActivityPageParams {\n  integrationId: string;\n}\n\nexport interface IActivityPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class ActivityPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IActivityPageParams, IActivityPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Activity page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import {\n  canActivate,\n  canDeactivate,\n  canEdit,\n  WithIntegration,\n  WithIntegrationHelpers,\n} from '@syndesis/api';\nimport { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IIntegrationAction,\n  IntegrationDetailDescription,\n  IntegrationDetailHistoryListView,\n  IntegrationDetailInfo,\n  Loader,\n} from '@syndesis/ui';\nimport { WithLoader, WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport {\n  IntegrationDetailHistory,\n  IntegrationDetailSteps,\n} from '../../components';\nimport resolvers from '../../resolvers';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsRouteParams {\n  integrationId: string;\n}\n\nexport interface IIntegrationDetailsRouteState {\n  integration?: IIntegrationOverviewWithDraft;\n}\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IIntegrationDetailsPageProps {\n  error: boolean;\n  integration: IIntegrationOverviewWithDraft;\n  integrationId: string;\n  loading: boolean;\n}\n\nexport interface IIntegrationDetailsPageState {\n  handleAction?: () => void;\n  integration?: IIntegrationOverviewWithDraft;\n  promptDialogButtonText?: string;\n  promptDialogIcon?: ConfirmationIconType;\n  promptDialogText?: string;\n  promptDialogTitle?: string;\n  showPromptDialog?: boolean;\n}\n\ninterface IPromptActionOptions {\n  promptDialogButtonStyle: ConfirmationButtonStyle;\n  promptDialogButtonText: string;\n  promptDialogIcon: ConfirmationIconType;\n  promptDialogText: string;\n  promptDialogTitle: string;\n  handleAction: () => void;\n}\n\n/**\n * This page shows the first, and default, tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class DetailsPage extends React.Component<\n  IIntegrationDetailsPageProps,\n  IIntegrationDetailsPageState\n> {\n  public constructor(props: IIntegrationDetailsPageProps) {\n    super(props);\n    this.state = {\n      showPromptDialog: false,\n    };\n    this.handleAction = this.handleAction.bind(this);\n    this.handleActionCancel = this.handleActionCancel.bind(this);\n    this.promptForAction = this.promptForAction.bind(this);\n  }\n\n  public handleActionCancel() {\n    this.setState({\n      showPromptDialog: false,\n    });\n  }\n\n  public handleAction() {\n    const action = this.state.handleAction;\n    this.setState({\n      showPromptDialog: false,\n    });\n    if (typeof action === 'function') {\n      action.apply(this);\n    } else {\n      throw Error('Undefined action set for confirmation dialog');\n    }\n  }\n\n  public promptForAction(options: IPromptActionOptions) {\n    this.setState({\n      ...options,\n      showPromptDialog: true,\n    });\n  }\n\n  public render() {\n    return (\n      <WithRouteData<IIntegrationDetailsRouteParams, null>>\n        {({ integrationId }) => {\n          return (\n            <WithIntegrationHelpers>\n              {({\n                deleteIntegration,\n                deployIntegration,\n                exportIntegration,\n                undeployIntegration,\n              }) => {\n                return (\n                  <WithIntegration integrationId={integrationId}>\n                    {({ data, hasData, error }) => (\n                      <WithLoader\n                        error={error}\n                        loading={!hasData}\n                        loaderChildren={<Loader />}\n                        errorChildren={<div>TODO</div>}\n                      >\n                        {() => (\n                          <div>\n                            <Translation ns={['integrations', 'shared']}>\n                              {t => {\n                                const deployments = data.deployments\n                                  ? data.deployments\n                                  : [];\n                                const editAction: IIntegrationAction = {\n                                  href: resolvers.integration.edit.index({\n                                    flowId: '0',\n                                    integration: data,\n                                  }),\n                                  label: 'Edit',\n                                };\n                                const startAction: IIntegrationAction = {\n                                  label: 'Start',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deployIntegration(\n                                          data.id!,\n                                          data.version!,\n                                          false\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Start'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:publishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:publishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const stopAction: IIntegrationAction = {\n                                  label: 'Stop',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        undeployIntegration(\n                                          data.id!,\n                                          data.version!\n                                        ),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.NORMAL,\n                                      promptDialogButtonText: t('shared:Stop'),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.NONE,\n                                      promptDialogText: t(\n                                        'integrations:unpublishIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:unpublishIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const deleteAction: IIntegrationAction = {\n                                  label: 'Delete',\n                                  onClick: () =>\n                                    this.promptForAction({\n                                      handleAction: () =>\n                                        deleteIntegration(data.id!),\n                                      promptDialogButtonStyle:\n                                        ConfirmationButtonStyle.DANGER,\n                                      promptDialogButtonText: t(\n                                        'shared:Delete'\n                                      ),\n                                      promptDialogIcon:\n                                        ConfirmationIconType.DANGER,\n                                      promptDialogText: t(\n                                        'integrations:deleteIntegrationModal',\n                                        { name: data.name }\n                                      ),\n                                      promptDialogTitle: t(\n                                        'integrations:deleteIntegrationModalTitle'\n                                      ),\n                                    } as IPromptActionOptions),\n                                };\n                                const exportAction: IIntegrationAction = {\n                                  label: 'Export',\n                                  onClick: () =>\n                                    exportIntegration(\n                                      data.id!,\n                                      `${data.name}-export.zip`\n                                    ),\n                                };\n\n                                const actions: IIntegrationAction[] = [];\n                                const draftActions: IIntegrationAction[] = [];\n                                if (canActivate(data)) {\n                                  data.isDraft\n                                    ? draftActions.push(startAction)\n                                    : actions.push(startAction);\n                                }\n                                if (canEdit(data)) {\n                                  data.isDraft\n                                    ? draftActions.push(editAction)\n                                    : actions.push(editAction);\n                                }\n                                if (canDeactivate(data)) {\n                                  actions.push(stopAction);\n                                }\n                                actions.push(deleteAction);\n                                actions.push(exportAction);\n\n                                return (\n                                  <>\n                                    <ConfirmationDialog\n                                      buttonStyle={\n                                        ConfirmationButtonStyle.NORMAL\n                                      }\n                                      i18nCancelButtonText={t('shared:Cancel')}\n                                      i18nConfirmButtonText={\n                                        this.state.promptDialogButtonText!\n                                      }\n                                      i18nConfirmationMessage={\n                                        this.state.promptDialogText!\n                                      }\n                                      i18nTitle={this.state.promptDialogTitle!}\n                                      icon={this.state.promptDialogIcon!}\n                                      showDialog={this.state.showPromptDialog!}\n                                      onCancel={this.handleActionCancel}\n                                      onConfirm={this.handleAction}\n                                    />\n                                    <IntegrationDetailInfo\n                                      name={data.name}\n                                      version={data.version}\n                                    />\n                                    <IntegrationDetailNavBar\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailSteps\n                                      integration={data}\n                                    />\n                                    <IntegrationDetailDescription\n                                      description={data.description}\n                                      i18nNoDescription={t(\n                                        'integrations:detail:noDescription'\n                                      )}\n                                    />\n                                    <IntegrationDetailHistoryListView\n                                      actions={draftActions}\n                                      hasHistory={deployments.length > 0}\n                                      isDraft={data.isDraft}\n                                      i18nTextDraft={t('shared:Draft')}\n                                      i18nTextHistory={t(\n                                        'integrations:detail:History'\n                                      )}\n                                      children={\n                                        <IntegrationDetailHistory\n                                          actions={actions}\n                                          deployments={deployments}\n                                          integrationId={data.id!}\n                                          updatedAt={data.updatedAt!}\n                                          version={data.version!}\n                                        />\n                                      }\n                                    />\n                                  </>\n                                );\n                              }}\n                            </Translation>\n                          </div>\n                        )}\n                      </WithLoader>\n                    )}\n                  </WithIntegration>\n                );\n              }}\n            </WithIntegrationHelpers>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\nimport { WithRouteData } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { IntegrationDetailNavBar } from '../../shared';\n\n/**\n * @integrationId - the ID of the integration for which details are being displayed.\n */\nexport interface IMetricsPageParams {\n  integrationId: string;\n}\n\nexport interface IMetricsPageState {\n  integration: Integration;\n}\n\n/**\n * This page shows the second tab of the Integration Detail page.\n *\n * This component expects either an integrationId in the URL,\n * or an integration object set via the state.\n *\n */\nexport class MetricsPage extends React.Component {\n  public render() {\n    return (\n      <WithRouteData<IMetricsPageParams, IMetricsPageState>>\n        {({ integrationId }, { integration }, { history }) => {\n          return (\n            <div>\n              <Translation ns={['integration', 'shared']}>\n                {t => <IntegrationDetailNavBar integration={integration} />}\n              </Translation>\n              <p>This is the Integration Detail Metrics page.</p>\n            </div>\n          );\n        }}\n      </WithRouteData>\n    );\n  }\n}\n","import { WithIntegrationHelpers } from '@syndesis/api';\nimport { Breadcrumb, ImportPageUI } from '@syndesis/ui';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nexport interface IImportPageState {\n  disableDropzone: boolean;\n  uploadFailedMessages?: string[];\n  uploadSuccessMessages?: string[];\n}\nexport class ImportPage extends React.Component<{}, IImportPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      disableDropzone: false,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithIntegrationHelpers>\n            {({ importIntegration }) => {\n              const handleUploadAccepted = async (files: File[]) => {\n                let uploadFails: string[] = [];\n                let uploadWins: string[] = [];\n                this.setState({\n                  disableDropzone: true,\n                  uploadFailedMessages: uploadFails,\n                  uploadSuccessMessages: uploadWins,\n                });\n                for (const file of files) {\n                  try {\n                    await importIntegration(file);\n                    uploadWins = uploadWins.concat([\n                      i18n.t('integrations:ImportUploadSuccessMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  } catch (err) {\n                    uploadFails = uploadFails.concat([\n                      i18n.t('integrations:ImportUploadFailedMessage', {\n                        fileName: file.name,\n                      }),\n                    ]);\n                  }\n                  this.setState({\n                    uploadFailedMessages: uploadFails,\n                    uploadSuccessMessages: uploadWins,\n                  });\n                }\n                this.setState({\n                  disableDropzone: false,\n                });\n              };\n              const handleUploadRejected = (failed: string) => {\n                return i18n.t('integrations:ImportUploadFailedAlertMessage', {\n                  fileName: failed,\n                });\n              };\n              return (\n                <>\n                  <PageTitle title={t('shared:Import')} />\n                  <Breadcrumb>\n                    <Link to={resolvers.list()}>\n                      {t('shared:Integrations')}\n                    </Link>\n                    <span>{t('integrations:ImportIntegration')}</span>\n                  </Breadcrumb>\n                  <ImportPageUI\n                    i18nPageTitle={t('integrations:ImportIntegration')}\n                    i18nPageDescription={t(\n                      'integrations:ImportIntegrationDescription'\n                    )}\n                    i18nNoFileSelectedMessage={t(\n                      'integrations:ImportNoFileSelectedMessage'\n                    )}\n                    i18nSelectedFileLabel={t(\n                      'integrations:ImportSelectedFileLabel'\n                    )}\n                    i18nInstructions={t(\n                      'integrations:ImportIntegrationInstructions'\n                    )}\n                    i18nHelpMessage={t('integrations:ImportHelpMessage')}\n                    i18nUploadSuccessMessages={this.state.uploadSuccessMessages}\n                    i18nUploadFailedMessages={this.state.uploadFailedMessages}\n                    onUploadRejected={handleUploadRejected}\n                    onUploadAccepted={handleUploadAccepted}\n                  />\n                </>\n              );\n            }}\n          </WithIntegrationHelpers>\n        )}\n      </Translation>\n    );\n  }\n}\n","import { WithConnections, WithMonitoredIntegrations } from '@syndesis/api';\nimport { Connection, IntegrationWithMonitoring } from '@syndesis/models';\nimport {\n  IActiveFilter,\n  IFilterType,\n  IntegrationsListView,\n  ISortType,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { PageTitle } from '../../../shared';\nimport { Integrations } from '../components';\nimport resolvers from '../resolvers';\n\nfunction getFilteredAndSortedIntegrations(\n  integrations: IntegrationWithMonitoring[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let filteredAndSortedIntegrations = integrations;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    filteredAndSortedIntegrations = filteredAndSortedIntegrations.filter(\n      (mi: IntegrationWithMonitoring) => {\n        if (filter.title === 'Name') {\n          return mi.integration.name.toLowerCase().includes(valueToLower);\n        }\n        if (filter.title === 'Connection') {\n          const connectionNames = mi.integration!.flows!.reduce(\n            (acc, flow) => [\n              ...acc,\n              ...flow\n                .steps!.filter(s => s.connection)\n                .map(s => s.connection!.name.toLowerCase()),\n            ],\n            [] as string[]\n          );\n          return connectionNames.reduce(\n            (found, n) => found || n.includes(valueToLower),\n            false\n          );\n        }\n        return false;\n      }\n    );\n  });\n\n  filteredAndSortedIntegrations = filteredAndSortedIntegrations.sort(\n    (miA, miB) => {\n      const left = isSortAscending ? miA : miB;\n      const right = isSortAscending ? miB : miA;\n      if (currentSortType === 'Name') {\n        return left.integration.name.localeCompare(right.integration.name);\n      }\n      return left.integration!.currentState!.localeCompare(\n        right.integration!.currentState!\n      );\n    }\n  );\n\n  return filteredAndSortedIntegrations;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterByConnection = {\n  filterType: 'select',\n  filterValues: [],\n  id: 'connection',\n  placeholder: i18n.t('filterByConnectionPlaceholder'),\n  title: i18n.t('shared:Connection'),\n};\n\nfunction getFilterTypes(connections: Connection[]): IFilterType[] {\n  return [\n    filterByName,\n    {\n      ...filterByConnection,\n      filterValues: connections.map(c => ({\n        id: c.id,\n        title: c.name,\n      })),\n    } as IFilterType,\n  ];\n}\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortByStatus = {\n  id: 'status',\n  isNumeric: false,\n  title: i18n.t('shared:Status'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName, sortByStatus];\n\nexport class IntegrationsPage extends React.Component {\n  public render() {\n    return (\n      <WithMonitoredIntegrations>\n        {({ data: integrationsData, hasData, error }) => (\n          <WithConnections>\n            {({ data: connectionsData }) => (\n              <Translation ns={['integrations', 'shared']}>\n                {t => (\n                  <WithListViewToolbarHelpers\n                    defaultFilterType={filterByName}\n                    defaultSortType={sortByName}\n                  >\n                    {helpers => {\n                      const filteredAndSortedIntegrations = getFilteredAndSortedIntegrations(\n                        integrationsData.items,\n                        helpers.activeFilters,\n                        helpers.currentSortType,\n                        helpers.isSortAscending\n                      );\n\n                      return (\n                        <>\n                          <PageTitle title={t('shared:Integrations')} />\n                          <IntegrationsListView\n                            linkToIntegrationImport={resolvers.import()}\n                            linkToManageCiCd={resolvers.manageCicd.root()}\n                            linkToIntegrationCreation={resolvers.create.start.selectStep()}\n                            filterTypes={getFilterTypes(\n                              connectionsData.connectionsForDisplay\n                            )}\n                            sortTypes={sortTypes}\n                            resultsCount={filteredAndSortedIntegrations.length}\n                            {...helpers}\n                            i18nImport={t('shared:Import')}\n                            i18nManageCiCd={t('integrations:ManageCiCd')}\n                            i18nLinkCreateConnection={t(\n                              'shared:linkCreateIntegration'\n                            )}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedIntegrations.length,\n                            })}\n                          >\n                            <Integrations\n                              error={error}\n                              loading={!hasData}\n                              integrations={filteredAndSortedIntegrations}\n                            />\n                          </IntegrationsListView>\n                        </>\n                      );\n                    }}\n                  </WithListViewToolbarHelpers>\n                )}\n              </Translation>\n            )}\n          </WithConnections>\n        )}\n      </WithMonitoredIntegrations>\n    );\n  }\n}\n","import {\n  DataMapperAdapter,\n  DocumentType,\n  InspectionType,\n} from '@syndesis/atlasmap-adapter';\nimport { Breadcrumb, ButtonLink, Container } from '@syndesis/ui';\nimport * as React from 'react';\n\nexport interface ITestAtlasmapPageState {\n  mappings?: string;\n}\n\nexport class TestAtlasmapPage extends React.Component<\n  {},\n  ITestAtlasmapPageState\n> {\n  public state: ITestAtlasmapPageState = {};\n\n  constructor(props: {}) {\n    super(props);\n    this.onReset = this.onReset.bind(this);\n    this.onMappings = this.onMappings.bind(this);\n  }\n\n  public onReset() {\n    this.setState({\n      mappings: undefined,\n    });\n  }\n\n  public onMappings(mappings: string) {\n    this.setState({\n      mappings,\n    });\n  }\n\n  public render() {\n    return (\n      <>\n        <Container>\n          <div className=\"toolbar-pf row\">\n            <div className=\"col-sm-12\">\n              <div className=\"toolbar-pf-actions\">\n                <div className=\"form-group\">\n                  <Breadcrumb>\n                    <span>Home</span>\n                    <span>Library</span>\n                    <span>Data</span>\n                  </Breadcrumb>\n                </div>\n                <div className=\"toolbar-pf-action-right\">\n                  <div className=\"form-group\" style={{ marginTop: '5px' }}>\n                    <ButtonLink>Cancel</ButtonLink>\n                    <ButtonLink\n                      disabled={!this.state.mappings}\n                      onClick={this.onReset}\n                    >\n                      Reset\n                    </ButtonLink>\n                    <ButtonLink as={'success'} disabled={!this.state.mappings}>\n                      Save\n                    </ButtonLink>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Container>\n        <div\n          style={{\n            display: 'flex',\n            flexFlow: 'column',\n            height: 'calc(100% - 57px)',\n          }}\n        >\n          <DataMapperAdapter\n            documentId={'-LRMAUOoTSCTd3Eg7_bi'}\n            inputName={'SQL Result'}\n            inputDescription={'Result of SQL [SELECT * from TODO]'}\n            inputDocumentType={DocumentType.JSON}\n            inputInspectionType={InspectionType.SCHEMA}\n            inputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}'\n            }\n            outputName={'add_lead Parameter'}\n            outputDescription={'Parameters of Stored Procedure \"add_lead\"'}\n            outputDocumentType={DocumentType.JSON}\n            outputInspectionType={InspectionType.SCHEMA}\n            outputDataShape={\n              '{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}'\n            }\n            mappings={this.state.mappings}\n            onMappings={this.onMappings}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { WithEnvironmentHelpers, WithEnvironments } from '@syndesis/api';\nimport {\n  Breadcrumb,\n  CiCdList,\n  CiCdListEmptyState,\n  CiCdListItem,\n  CiCdListSkeleton,\n  CiCdManagePageUI,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  TagNameValidationError,\n} from '@syndesis/ui';\nimport { WithListViewToolbarHelpers, WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../../../i18n';\nimport { ApiError, PageTitle } from '../../../../shared';\nimport resolvers from '../../resolvers';\n\nfunction getFilteredAndSortedEnvironments(\n  environments: string[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = environments;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(name => name.toLowerCase().includes(valueToLower));\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.localeCompare(right);\n  });\n  return answer.map(name => ({\n    i18nUsesText: '',\n    name,\n  }));\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nfunction createConfirmRemoveString(name: string) {\n  return i18n.t('integrations:ConfirmRemoveTag', { tag: name });\n}\n\nexport interface IManageCiCdPageState {\n  nameValidationError: TagNameValidationError;\n}\n\nexport class ManageCiCdPage extends React.Component<{}, IManageCiCdPageState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      nameValidationError: TagNameValidationError.NoErrors,\n    };\n  }\n  public render() {\n    return (\n      <Translation ns={['integrations', 'shared']}>\n        {t => (\n          <WithEnvironments>\n            {({ data, hasData, error, read }) => (\n              <WithListViewToolbarHelpers\n                defaultFilterType={filterByName}\n                defaultSortType={sortByName}\n              >\n                {helpers => {\n                  const filteredAndSortedEnvironments = getFilteredAndSortedEnvironments(\n                    data,\n                    helpers.activeFilters,\n                    helpers.currentSortType,\n                    helpers.isSortAscending\n                  );\n                  const handleValidateItem = (name: string) => {\n                    if (!name || name === '') {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoName,\n                      });\n                    } else if (data.indexOf(name) !== -1) {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NameInUse,\n                      });\n                    } else {\n                      this.setState({\n                        nameValidationError: TagNameValidationError.NoErrors,\n                      });\n                    }\n                  };\n                  return (\n                    <WithEnvironmentHelpers>\n                      {({\n                        createEnvironment,\n                        deleteEnvironment,\n                        renameEnvironment,\n                      }) => (\n                        <>\n                          <PageTitle title={t('integrations:ManageCiCd')} />\n                          <Breadcrumb>\n                            <Link to={resolvers.list()}>\n                              {t('shared:Integrations')}\n                            </Link>\n                            <span>{t('integrations:ManageCiCd')}</span>\n                          </Breadcrumb>\n                          <CiCdManagePageUI\n                            onEditItem={(name: string, newName: string) =>\n                              renameEnvironment(name, newName).finally(read)\n                            }\n                            onAddItem={(name: string) =>\n                              createEnvironment(name).finally(read)\n                            }\n                            onRemoveItem={(name: string) =>\n                              deleteEnvironment(name).finally(read)\n                            }\n                            onValidateItem={handleValidateItem}\n                            filterTypes={filterTypes}\n                            sortTypes={sortTypes}\n                            {...helpers}\n                            resultsCount={filteredAndSortedEnvironments.length}\n                            i18nResultsCount={t('shared:resultsCount', {\n                              count: filteredAndSortedEnvironments.length,\n                            })}\n                            i18nAddNewButtonText={t('shared:AddNew')}\n                            i18nPageTitle={t('integrations:ManageCiCd')}\n                            i18nCancelButtonText={t('shared:Cancel')}\n                            i18nSaveButtonText={t('shared:Save')}\n                            i18nConfirmRemoveButtonText={t('shared:Yes')}\n                            i18nConfirmCancelButtonText={t('shared:No')}\n                            i18nRemoveConfirmationMessage={\n                              createConfirmRemoveString\n                            }\n                            i18nRemoveConfirmationTitle={t(\n                              'shared:ConfirmRemove'\n                            )}\n                            i18nRemoveConfirmationDetailMessage={t(\n                              'integrations:ConfirmRemoveTagDetail'\n                            )}\n                            i18nAddTagDialogTitle={t(\n                              'integrations:AddTagDialogTitle'\n                            )}\n                            i18nAddTagDialogDescription={t(\n                              'integrations:AddTagDialogDescription'\n                            )}\n                            i18nEditTagDialogTitle={t(\n                              'integrations:EditTagDialogTitle'\n                            )}\n                            i18nEditTagDialogDescription={t(\n                              'integrations:EditTagDialogDescription'\n                            )}\n                            i18nTagInputLabel={t('integrations:TagName')}\n                            i18nPageDescription={t(\n                              'integrations:ManageCiCdDescription'\n                            )}\n                            nameValidationError={this.state.nameValidationError}\n                            i18nNoNameError={t(\n                              'integrations:PleaseEnterATagName'\n                            )}\n                            i18nNameInUseError={t(\n                              'integrations:ThatTagNameIsInUse'\n                            )}\n                          >\n                            {({\n                              openAddDialog,\n                              openEditDialog,\n                              openRemoveDialog,\n                            }) => (\n                              <WithLoader\n                                error={error}\n                                loading={!hasData}\n                                loaderChildren={\n                                  <CiCdList children={<CiCdListSkeleton />} />\n                                }\n                                errorChildren={<ApiError />}\n                              >\n                                {() => (\n                                  <>\n                                    {filteredAndSortedEnvironments.length !==\n                                      0 && (\n                                      <CiCdList\n                                        children={filteredAndSortedEnvironments.map(\n                                          (listItem, index) => (\n                                            <CiCdListItem\n                                              key={index}\n                                              onEditClicked={openEditDialog}\n                                              onRemoveClicked={openRemoveDialog}\n                                              i18nEditButtonText={t(\n                                                'shared:Edit'\n                                              )}\n                                              i18nRemoveButtonText={t(\n                                                'shared:Remove'\n                                              )}\n                                              name={listItem.name}\n                                              i18nUsesText={\n                                                listItem.i18nUsesText\n                                              }\n                                            />\n                                          )\n                                        )}\n                                      />\n                                    )}\n                                    {filteredAndSortedEnvironments.length ===\n                                      0 && (\n                                      <CiCdListEmptyState\n                                        onAddNew={openAddDialog}\n                                        i18nTitle={t(\n                                          'integrations:NoEnvironmentsAvailable'\n                                        )}\n                                        i18nAddNewButtonText={t(\n                                          'shared:AddNew'\n                                        )}\n                                        i18nInfo={t(\n                                          'integrations:NoEnvironmentsAvailableInfo'\n                                        )}\n                                      />\n                                    )}\n                                  </>\n                                )}\n                              </WithLoader>\n                            )}\n                          </CiCdManagePageUI>\n                        </>\n                      )}\n                    </WithEnvironmentHelpers>\n                  );\n                }}\n              </WithListViewToolbarHelpers>\n            )}\n          </WithEnvironments>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { IntegrationCreatorApp } from './IntegrationCreatorApp';\nimport { IntegrationEditorApp } from './IntegrationEditorApp';\nimport {\n  ActivityPage,\n  DetailsPage,\n  ImportPage,\n  IntegrationsPage,\n  MetricsPage,\n  TestAtlasmapPage,\n} from './pages';\nimport { ManageCiCdPage } from './pages/cicd';\nimport routes from './routes';\n\n/**\n * Entry point for the integrations section.\n *\n * Since the section is logically split in sub-apps, each with their own routes,\n * we do the same thing here: instead of listing all the routes in a single place\n * we have components called \"Apps\" that will define their own route handlers.\n *\n * @todo the IntegrationCreatorApp and IntegrationEditorApp could benefit from\n * some refactoring aimed to DRY the business logic that's embedded in every\n * page of the same type (especially the configuration ones).\n * Actually the IntegrationEditorApp is the result of a copy-paste of this folder\n * `syndesis/src/modules/integrations/pages/create/configure/editStep`,\n * with updated titles and links between the steps.\n * This is an hint that at least those 2 \"areas\" could be DRYed up, but it could\n * be worth exploring options to take it up a notch and figure out a way to\n * simplify also the other pages.\n */\nexport class IntegrationsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Route\n          path={routes.manageCicd.root}\n          exact={true}\n          component={ManageCiCdPage}\n        />\n        <Route path={routes.import} exact={true} component={ImportPage} />\n        <Route path={routes.create.root} component={IntegrationCreatorApp} />\n        <Route\n          path={routes.integration.edit.root}\n          component={IntegrationEditorApp}\n        />\n        <Route path={routes.list} exact={true} component={IntegrationsPage} />\n        <Route\n          path={'/integrations/atlasmap'}\n          exact={true}\n          component={TestAtlasmapPage}\n        />\n        <Route\n          path={routes.integration.details}\n          exact={true}\n          component={DetailsPage}\n        />\n        <Route\n          path={routes.integration.activity}\n          exact={true}\n          component={ActivityPage}\n        />\n        <Route\n          path={routes.integration.metrics}\n          exact={true}\n          component={MetricsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","import { ApiContext, WithOAuthAppHelpers, WithOAuthApps } from '@syndesis/api';\nimport { AutoForm } from '@syndesis/auto-form';\nimport { OAuthApp } from '@syndesis/models';\nimport {\n  ConfirmationButtonStyle,\n  ConfirmationDialog,\n  ConfirmationIconType,\n  IActiveFilter,\n  IFilterType,\n  ISortType,\n  OAuthAppExpanderBody,\n  OAuthAppHeader,\n  OAuthAppList,\n  OAuthAppListItem,\n  OAuthAppListItemView,\n} from '@syndesis/ui';\nimport {\n  toFormDefinition,\n  WithListViewToolbarHelpers,\n  WithLoader,\n} from '@syndesis/utils';\nimport * as React from 'react';\nimport { Translation } from 'react-i18next';\nimport i18n from '../../../i18n';\nimport { ApiError, PageTitle } from '../../../shared';\n\nfunction getFilteredAndSortedOAuthApps(\n  oauthApps: OAuthApp[],\n  activeFilters: IActiveFilter[],\n  currentSortType: string,\n  isSortAscending: boolean\n) {\n  let answer = oauthApps;\n  activeFilters.forEach((filter: IActiveFilter) => {\n    const valueToLower = filter.value.toLowerCase();\n    answer = answer.filter(oauthApp =>\n      oauthApp.name.toLowerCase().includes(valueToLower)\n    );\n  });\n  answer = answer.sort((a, b) => {\n    const left = isSortAscending ? a : b;\n    const right = isSortAscending ? b : a;\n    return left.name.localeCompare(right.name);\n  });\n  return answer;\n}\n\nconst filterByName = {\n  filterType: 'text',\n  id: 'name',\n  placeholder: i18n.t('shared:filterByNamePlaceholder'),\n  title: i18n.t('shared:Name'),\n} as IFilterType;\n\nconst filterTypes = [filterByName];\n\nconst sortByName = {\n  id: 'name',\n  isNumeric: false,\n  title: i18n.t('shared:Name'),\n} as ISortType;\n\nconst sortTypes: ISortType[] = [sortByName];\n\nexport interface IOAuthAppsPageState {\n  showRemoveDialog: boolean;\n  currentItemName?: string;\n  currentItemId?: string;\n  saveSuccessId?: string;\n}\n\nexport class OAuthAppsPage extends React.Component<{}, IOAuthAppsPageState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      showRemoveDialog: false,\n    };\n    this.closeRemoveDialog = this.closeRemoveDialog.bind(this);\n    this.handleRemoveConfirm = this.handleRemoveConfirm.bind(this);\n  }\n  public closeRemoveDialog() {\n    this.setState({ showRemoveDialog: false });\n  }\n  public handleRemoveClicked(name: string, id: string) {\n    this.setState({\n      currentItemId: id,\n      currentItemName: name,\n      showRemoveDialog: true,\n    });\n  }\n  public handleRemoveConfirm(\n    deleteOAuthApp: (id: string) => Promise<void>,\n    read: () => Promise<void>\n  ) {\n    const id = this.state.currentItemId;\n    this.closeRemoveDialog();\n    deleteOAuthApp(id!).then(read);\n  }\n  public handleSave(id: string, submitForm: () => void) {\n    this.setState({ currentItemId: id });\n    submitForm();\n  }\n  public render() {\n    return (\n      <Translation ns={['settings', 'shared']}>\n        {t => (\n          <ApiContext.Consumer>\n            {({ apiUri }) => (\n              <WithOAuthAppHelpers>\n                {({ updateOAuthApp, deleteOAuthApp }) => (\n                  <WithOAuthApps disableUpdates={true}>\n                    {({ data, hasData, error, read }) => (\n                      <WithListViewToolbarHelpers\n                        defaultFilterType={filterByName}\n                        defaultSortType={sortByName}\n                      >\n                        {helpers => {\n                          const filteredAndSortedOAuthApps = getFilteredAndSortedOAuthApps(\n                            data.items!,\n                            helpers.activeFilters,\n                            helpers.currentSortType,\n                            helpers.isSortAscending\n                          );\n\n                          return (\n                            <>\n                              <PageTitle\n                                title={t('settings:OAuthApplicationManagement')}\n                              />\n                              <OAuthAppHeader\n                                i18nPageTitle={t(\n                                  'settings:OAuthApplicationManagement'\n                                )}\n                                i18nDescription={t(\n                                  'settings:OAuthApplicationManagementPageDescription',\n                                  {\n                                    docLink: i18n.t(\n                                      'shared:links.oauth-access'\n                                    ),\n                                  }\n                                )}\n                                i18nCallbackDescription={t(\n                                  'settings:OAuthCallbackDescription'\n                                )}\n                                callbackURI={`${apiUri}/credentials/callback`}\n                              />\n                              {this.state.showRemoveDialog && (\n                                <ConfirmationDialog\n                                  buttonStyle={ConfirmationButtonStyle.DANGER}\n                                  icon={ConfirmationIconType.DANGER}\n                                  i18nCancelButtonText={t('shared:Cancel')}\n                                  i18nConfirmButtonText={t('shared:Remove')}\n                                  i18nConfirmationMessage={t(\n                                    'settings:RemoveOAuthAppCredentials',\n                                    {\n                                      name: this.state.currentItemName!,\n                                    }\n                                  )}\n                                  i18nTitle={t('settings:RemoveOAuthAppTitle')}\n                                  showDialog={this.state.showRemoveDialog}\n                                  onCancel={this.closeRemoveDialog}\n                                  onConfirm={() =>\n                                    this.handleRemoveConfirm(\n                                      deleteOAuthApp,\n                                      read\n                                    )\n                                  }\n                                />\n                              )}\n                              <OAuthAppListItemView\n                                filterTypes={filterTypes}\n                                sortTypes={sortTypes}\n                                {...helpers}\n                                resultsCount={filteredAndSortedOAuthApps.length}\n                                i18nResultsCount={t('shared:resultsCount', {\n                                  count: filteredAndSortedOAuthApps.length,\n                                })}\n                              >\n                                <WithLoader\n                                  error={error}\n                                  loading={!hasData}\n                                  loaderChildren={<div>TODO</div>}\n                                  errorChildren={<ApiError />}\n                                >\n                                  {() => (\n                                    <OAuthAppList>\n                                      {filteredAndSortedOAuthApps.map(\n                                        (oauthApp, index) => {\n                                          const configured =\n                                            typeof oauthApp.configuredProperties !==\n                                            'undefined';\n                                          const configuration =\n                                            oauthApp.configuredProperties || {};\n                                          const key = JSON.stringify(\n                                            configuration\n                                          );\n                                          return (\n                                            <OAuthAppListItem\n                                              key={index}\n                                              configured={configured}\n                                              expanded={\n                                                this.state.currentItemId ===\n                                                oauthApp.id\n                                              }\n                                              icon={oauthApp.icon!}\n                                              i18nNotConfiguredText={t(\n                                                'settings:OAuthAppNotConfigured'\n                                              )}\n                                              id={oauthApp.id!}\n                                              name={oauthApp.name!}\n                                            >\n                                              <AutoForm\n                                                key={index + '-' + key}\n                                                definition={toFormDefinition(\n                                                  oauthApp.properties!\n                                                )}\n                                                i18nRequiredProperty={t(\n                                                  'shared:requiredFieldMessage'\n                                                )}\n                                                initialValue={configuration}\n                                                onSave={(\n                                                  configuredProperties,\n                                                  actions\n                                                ) => {\n                                                  updateOAuthApp({\n                                                    ...oauthApp,\n                                                    configuredProperties,\n                                                  })\n                                                    .then(() => {\n                                                      this.setState({\n                                                        saveSuccessId:\n                                                          oauthApp.id,\n                                                      });\n                                                    })\n                                                    .finally(() => {\n                                                      actions.setSubmitting(\n                                                        false\n                                                      );\n                                                      read();\n                                                    });\n                                                }}\n                                              >\n                                                {({\n                                                  dirty,\n                                                  fields,\n                                                  isValid,\n                                                  submitForm,\n                                                }) => (\n                                                  <OAuthAppExpanderBody\n                                                    disableSave={\n                                                      !dirty || !isValid\n                                                    }\n                                                    disableRemove={!configured}\n                                                    showSuccess={\n                                                      oauthApp.id ===\n                                                      this.state.saveSuccessId\n                                                    }\n                                                    onSave={() => {\n                                                      this.handleSave(\n                                                        oauthApp.id!,\n                                                        submitForm\n                                                      );\n                                                    }}\n                                                    onRemove={() => {\n                                                      this.handleRemoveClicked(\n                                                        oauthApp.name,\n                                                        oauthApp.id!\n                                                      );\n                                                    }}\n                                                    i18nAlertTitle={t(\n                                                      'settings:RegistrationSuccessful'\n                                                    )}\n                                                    i18nAlertDetail={t(\n                                                      'settings:RegistrationSuccessAlertDetail',\n                                                      {\n                                                        name: oauthApp.name,\n                                                      }\n                                                    )}\n                                                    i18nRemoveButtonText={t(\n                                                      'shared:Remove'\n                                                    )}\n                                                    i18nSaveButtonText={t(\n                                                      'shared:Save'\n                                                    )}\n                                                  >\n                                                    <form>{fields}</form>\n                                                  </OAuthAppExpanderBody>\n                                                )}\n                                              </AutoForm>\n                                            </OAuthAppListItem>\n                                          );\n                                        }\n                                      )}\n                                    </OAuthAppList>\n                                  )}\n                                </WithLoader>\n                              </OAuthAppListItemView>\n                            </>\n                          );\n                        }}\n                      </WithListViewToolbarHelpers>\n                    )}\n                  </WithOAuthApps>\n                )}\n              </WithOAuthAppHelpers>\n            )}\n          </ApiContext.Consumer>\n        )}\n      </Translation>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { OAuthAppsPage } from './pages/OAuthAppsPage';\nimport routes from './routes';\n\nexport class SettingsModule extends React.Component {\n  public render() {\n    return (\n      <Switch>\n        <Redirect path={routes.root} exact={true} to={routes.oauthApps.root} />\n        <Route\n          path={routes.oauthApps.root}\n          exact={true}\n          component={OAuthAppsPage}\n        />\n      </Switch>\n    );\n  }\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ApiContext,\n  ServerEventsContext,\n  WithServerEvents,\n} from '@syndesis/api';\nimport { Loader, UnrecoverableError } from '@syndesis/ui';\nimport { WithLoader } from '@syndesis/utils';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { I18nextProvider, Translation } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { App } from './app';\nimport { WithConfig } from './app/WithConfig';\nimport i18n from './i18n';\nimport './index.css';\nimport { ConnectionsModule } from './modules/connections';\nimport { CustomizationsModule } from './modules/customizations';\nimport { DashboardModule } from './modules/dashboard';\nimport { DataModule } from './modules/data';\nimport { IntegrationsModule } from './modules/integrations';\nimport { SettingsModule } from './modules/settings';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Router>\n    <I18nextProvider i18n={i18n}>\n      <WithConfig>\n        {({ config, loading, error }) => (\n          <WithLoader\n            loading={loading}\n            error={error}\n            loaderChildren={<Loader />}\n            errorChildren={\n              <Translation ns={['shared']}>\n                {t => (\n                  <UnrecoverableError\n                    i18nTitle={t('shared:error.title')}\n                    i18nInfo={t('shared:error.info')}\n                    i18nHelp={t('shared:error.help')}\n                    i18nRefreshLabel={t('shared:error.refreshButton')}\n                    i18nReportIssue={t('shared:error.reportIssueButton')}\n                    i18nShowErrorInfoLabel={t(\n                      'shared:error.showErrorInfoButton'\n                    )}\n                  />\n                )}\n              </Translation>\n            }\n            minWait={1000}\n          >\n            {() => (\n              <ApiContext.Provider\n                value={{\n                  apiUri: `${config!.apiBase}${config!.apiEndpoint}`,\n                  dvApiUri: `${config!.apiBase}${config!.datavirt.dvUrl}`,\n                  headers: { 'SYNDESIS-XSRF-TOKEN': 'awesome' },\n                }}\n              >\n                <ApiContext.Consumer>\n                  {({ apiUri, headers }) => (\n                    <WithServerEvents apiUri={apiUri} headers={headers}>\n                      {functions => (\n                        <ServerEventsContext.Provider value={functions}>\n                          <App\n                            config={config!}\n                            routes={[\n                              {\n                                component: DashboardModule,\n                                exact: true,\n                                icon: 'fa fa-tachometer-alt',\n                                label: 'Home',\n                                to: '/',\n                              },\n                              {\n                                component: IntegrationsModule,\n                                icon: 'pficon pficon-integration',\n                                label: 'Integrations',\n                                to: '/integrations',\n                              },\n                              {\n                                component: ConnectionsModule,\n                                icon: 'pficon pficon-plugged',\n                                label: 'Connections',\n                                to: '/connections',\n                              },\n                              {\n                                component: CustomizationsModule,\n                                icon: 'fa fa-cube',\n                                label: 'Customizations',\n                                to: '/customizations',\n                              },\n                              {\n                                component: DataModule,\n                                icon: 'fa fa-database',\n                                label: 'Data',\n                                to: '/data',\n                              },\n                              {\n                                component: SettingsModule,\n                                icon: 'pficon pficon-settings',\n                                label: 'Settings',\n                                to: '/settings',\n                              },\n                            ]}\n                          />\n                        </ServerEventsContext.Provider>\n                      )}\n                    </WithServerEvents>\n                  )}\n                </ApiContext.Consumer>\n              </ApiContext.Provider>\n            )}\n          </WithLoader>\n        )}\n      </WithConfig>\n    </I18nextProvider>\n  </Router>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","import * as React from 'react';\n\nexport interface IApiContext {\n  apiUri: string;\n  dvApiUri: string;\n  headers: { [name: string]: string };\n}\n\nexport const ApiContextDefaultValue = {\n  apiUri: 'http://example.com',\n  dvApiUri: 'http://example.com',\n  headers: {},\n} as IApiContext;\n\nexport const ApiContext = React.createContext<IApiContext>(\n  ApiContextDefaultValue\n);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export interface IFetchHeaders {\n  [s: string]: string;\n}\nexport interface IFetch {\n  url: string;\n  method: 'GET' | 'PUT' | 'POST' | 'DELETE';\n  headers?: IFetchHeaders;\n  body?: any;\n\n  /**\n   * Indicates if the content type should be included in the headers. Defaults to `true`. When using a\n   * content type of 'multipart/form-data' this should be set to `false` but you still need to set the\n   * content type.\n   */\n  includeContentType?: boolean;\n\n  /**\n   * Defaults to 'application/json; charset=utf-8' if not set.\n   */\n  contentType?: string;\n\n  /**\n   * Indicates if 'accept' should be included in the headers. Defaults to `true`.\n   */\n  includeAccept?: boolean;\n\n  /**\n   * Defaults to 'application/json,text/plain,*&#47*' if not set.\n   */\n  accept?: string;\n\n  /**\n   * Indicates if a 'Referer Policy' of 'no-referrer' should be included.\n   */\n  includeReferrerPolicy?: boolean;\n\n  /**\n   * Whether or not to stringify the data to JSON, overrides the content type\n   */\n  stringifyBody?: boolean;\n}\n\nexport function callFetch({\n  url,\n  method,\n  headers = {},\n  body,\n  includeContentType = true,\n  contentType = 'application/json; charset=utf-8',\n  includeAccept = true,\n  accept = 'application/json,text/plain,*/*',\n  includeReferrerPolicy = true,\n  stringifyBody = true,\n}: IFetch) {\n  if (includeAccept) {\n    const acceptId = 'Accept';\n    headers[acceptId] = accept;\n  }\n\n  if (includeContentType) {\n    const contentTypeId = 'Content-Type';\n    headers[contentTypeId] = contentType;\n  }\n\n  if (includeReferrerPolicy) {\n    const referrerPolicyId = 'referrerPolicy';\n    headers[referrerPolicyId] = 'no-referrer';\n  }\n\n  return fetch(url, {\n    body:\n      contentType.includes('application/json') && stringifyBody\n        ? JSON.stringify(body)\n        : body,\n    cache: 'no-cache',\n    credentials: 'include',\n    headers: {\n      ...headers,\n    },\n    method,\n    mode: 'cors',\n    redirect: 'follow',\n  });\n}\n","import deepmerge from 'deepmerge';\nimport * as React from 'react';\nimport equal from 'react-fast-compare';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IFetchState<T> {\n  data: T;\n  error: boolean;\n  errorMessage?: string;\n  hasData: boolean;\n  loading: boolean;\n}\n\nexport interface IFetchRenderProps<T> {\n  response: IFetchState<T>;\n  read(): Promise<void>;\n}\n\nexport interface IFetchProps<T> {\n  baseUrl: string;\n  url: string;\n  headers?: IFetchHeaders;\n  contentType?: string;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class Fetch<T> extends React.Component<IFetchProps<T>, IFetchState<T>> {\n  public constructor(props: IFetchProps<T>) {\n    super(props);\n    this.read = this.read.bind(this);\n    this.state = {\n      data: this.props.initialValue || this.props.defaultValue,\n      error: false,\n      hasData: !!this.props.initialValue,\n      loading: true,\n    };\n  }\n\n  public async componentDidMount() {\n    this.read();\n  }\n\n  public async componentDidUpdate(prevProps: IFetchProps<T>) {\n    if (prevProps.url !== this.props.url) {\n      this.read();\n    }\n  }\n\n  public shouldComponentUpdate(\n    nextProps: IFetchProps<T>,\n    nextState: IFetchState<T>\n  ): boolean {\n    return !equal(this.props, nextProps) || !equal(this.state, nextState);\n  }\n\n  public render() {\n    return this.props.children({\n      read: this.read,\n      response: this.state,\n    });\n  }\n\n  public async read() {\n    try {\n      this.setState({ loading: true });\n      const response = await callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      let data;\n      if (\n        !this.props.contentType ||\n        this.props.contentType.indexOf('application/json') === 0\n      ) {\n        data = await response.json();\n        if (this.props.defaultValue) {\n          data = deepmerge(this.props.defaultValue, data);\n        }\n      } else {\n        data = await response.text();\n      }\n      this.setState({ data, hasData: true, loading: false });\n    } catch (e) {\n      this.setState({\n        data: this.props.defaultValue,\n        error: true,\n        errorMessage: e.message,\n        hasData: false,\n        loading: false,\n      });\n    }\n  }\n}\n","import { callFetch } from './callFetch';\nimport { Fetch, IFetchProps } from './Fetch';\n\nexport class Stream extends Fetch<string[]> {\n  protected reader: ReadableStreamReader | undefined;\n\n  public async componentDidUpdate(prevProps: IFetchProps<string[]>) {\n    if (prevProps.url !== this.props.url) {\n      if (this.reader) {\n        this.reader.cancel();\n      }\n      this.read();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.reader) {\n      this.reader.cancel();\n    }\n  }\n\n  public read = async () => {\n    try {\n      this.setState({\n        loading: true,\n      });\n\n      callFetch({\n        contentType: this.props.contentType,\n        headers: this.props.headers,\n        method: 'GET',\n        url: `${this.props.baseUrl}${this.props.url}`,\n      })\n        .then(response => response.body)\n        .then(body => {\n          this.reader = body!.getReader();\n          const textDecoder = new TextDecoder('utf-8');\n          const pushData = ({\n            done,\n            value,\n          }: {\n            done: boolean;\n            value: Uint8Array;\n          }) => {\n            if (done) {\n              this.setState({\n                loading: false,\n              });\n            } else {\n              this.setState({\n                data: [...(this.state.data || []), textDecoder.decode(value)],\n              });\n\n              this.reader!.read().then(pushData);\n            }\n          };\n\n          this.reader.read().then(pushData);\n        });\n    } catch (e) {\n      this.setState({\n        error: true,\n        errorMessage: e.message,\n        loading: false,\n      });\n    }\n  };\n\n  public onSave = async () => {\n    throw new Error(`Can't save from a stream`);\n  };\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\nimport { Stream } from './Stream';\n\nexport interface ISyndesisFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class SyndesisFetch<T> extends React.Component<ISyndesisFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    const FetchOrStream = stream ? Stream : Fetch;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, headers }) => (\n          <FetchOrStream\n            baseUrl={apiUri}\n            url={url}\n            headers={headers}\n            {...props}\n          />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext } from './ApiContext';\nimport { Fetch, IFetchRenderProps } from './Fetch';\n\nexport interface IDVFetchProps<T> {\n  autoload?: boolean;\n  contentType?: string;\n  url: string;\n  stream?: boolean;\n  defaultValue: T;\n  initialValue?: T;\n  children(props: IFetchRenderProps<T>): any;\n}\n\nexport class DVFetch<T> extends React.Component<IDVFetchProps<T>> {\n  public render() {\n    const { url, stream, ...props } = this.props;\n\n    return (\n      <ApiContext.Consumer>\n        {({ apiUri, dvApiUri, headers }) => (\n          <Fetch baseUrl={dvApiUri} url={url} headers={{}} {...props} />\n        )}\n      </ApiContext.Consumer>\n    );\n  }\n}\n","// Enum for the LeveledMessage level field\nexport enum MessageLevel {\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n}\n\n// Data shape kind enum when working with the DataShape type\nexport enum DataShapeKinds {\n  ANY = 'any',\n  JAVA = 'java',\n  JSON_SCHEMA = 'json-schema',\n  JSON_INSTANCE = 'json-instance',\n  XML_SCHEMA = 'xml-schema',\n  XML_SCHEMA_INSPECTED = 'xml-schema-inspected',\n  XML_INSTANCE = 'xml-instance',\n  NONE = 'none',\n}\n\n// These are message codes that we know about\nexport enum MessageCode {\n  SYNDESIS000 = 'SYNDESIS000', // generic message\n  SYNDESIS001 = 'SYNDESIS001', // One or more properties have been updated\n  SYNDESIS002 = 'SYNDESIS002', // One or more properties have been added or removed\n  SYNDESIS003 = 'SYNDESIS003', // Connector has been deleted\n  SYNDESIS004 = 'SYNDESIS004', // Extension has been deleted\n  SYNDESIS005 = 'SYNDESIS005', // Action has been deleted\n  SYNDESIS006 = 'SYNDESIS006', // One or more required properties is not set\n  SYNDESIS007 = 'SYNDESIS007', // Secrets update needed\n  SYNDESIS008 = 'SYNDESIS008', // Validation Error\n}\n\n// Integration status types and consts\nexport const PENDING = 'Pending';\nexport const PUBLISHED = 'Published';\nexport const UNPUBLISHED = 'Unpublished';\nexport const ERROR = 'Error';\n\nexport type IntegrationStatus =\n  | 'Pending'\n  | 'Published'\n  | 'Unpublished'\n  | 'Error';\n\nexport enum IntegrationType {\n  SingleFlow = 'SingleFlow',\n  ApiProvider = 'ApiProvider',\n  MultiFlow = 'MultiFlow',\n}\n\n// These types are for the integration detailed state\n// TODO: this should come from the swagger but it's missing\nexport enum ConsoleLinkType {\n  Events = 'EVENTS',\n  Logs = 'LOGS',\n}\n\nexport enum DetailedStatus {\n  Assembling = 'ASSEMBLING',\n  Building = 'BUILDING',\n  Deploying = 'DEPLOYING',\n  Starting = 'STARTING',\n}\n\n// Special sekret connection metadata keys\nexport const HIDE_FROM_STEP_SELECT = 'hide-from-step-select';\nexport const HIDE_FROM_CONNECTION_PAGES = 'hide-from-connection-pages';\n\n// stuff used by the ui to compute the StepKinds\nexport const EXTENSION = 'extension';\nexport const ENDPOINT = 'endpoint';\nexport const CONNECTION = ENDPOINT;\nexport const DATA_MAPPER = 'mapper';\nexport const BASIC_FILTER = 'ruleFilter';\nexport const ADVANCED_FILTER = 'expressionFilter';\nexport const STORE_DATA = 'storeData';\nexport const SET_DATA = 'setData';\nexport const CALL_ROUTE = 'callRoute';\nexport const CONDITIONAL_PROCESSING = 'conditionalProcessing';\nexport const SPLIT = 'split';\nexport const AGGREGATE = 'aggregate';\nexport const LOG = 'log';\nexport const TEMPLATE = 'template';\n","import * as React from 'react';\nimport { IChangeEvent, IMessageEvent } from './WithServerEvents';\n\nexport interface IServerEventsContext {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nexport const ServerEventsContextDefaultValue = {} as IServerEventsContext;\n\nexport const ServerEventsContext = React.createContext<IServerEventsContext>(\n  ServerEventsContextDefaultValue\n);\n","import {\n  Action,\n  ActionDescriptor,\n  Connection,\n  Integration,\n  Step,\n} from '@syndesis/models';\nimport { saveAs } from 'file-saver';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\nimport { PUBLISHED, UNPUBLISHED } from './constants';\n\ntype UpdateOrAddConnection = (\n  integration: Integration,\n  connection: Connection,\n  action: Action,\n  flowId: string,\n  position: number,\n  configuredProperties: any\n) => Promise<Integration>;\n\nexport interface IWithIntegrationHelpersChildrenProps {\n  /**\n   * adds a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo should we check `flow` and `position` to see if they are valid?\n   * @todo perhaps rename it with a better name\n   */\n  addConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateConnection: UpdateOrAddConnection;\n  /**\n   * updates a step of type connection to the provided integration object if\n   * a step exists at the provided `flow` and `position` indexes; a new step is\n   * added otherwise.\n   *\n   * @param integration - the integration object to modify\n   * @param connection - the connection object that's been used to set up the\n   * step\n   * @param action - the action that's been used to set up the step\n   * @param flow - the zero-based index of the flow where to add the step\n   * @param position - the zero-based index of the steps where to add the step\n   * @param configuredProperties - the values configured by the user for the step\n   *\n   * @todo perhaps rename it with a better name\n   * @todo should we check `flow` and `position` to see if they are valid?\n   */\n  updateOrAddConnection: UpdateOrAddConnection;\n  /**\n   * Delete the integration with the specified ID, empty response is returned\n   * @param id\n   */\n  deleteIntegration(id: string): Promise<void>;\n  /**\n   * Deploy the integration with the specified ID and version.  Empty response is returned\n   *\n   * @param id\n   * @param version\n   * @param isIntegrationDeployment\n   */\n  deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment?: boolean\n  ): Promise<void>;\n  /**\n   * Uploads and imports the supplied file as a new integration\n   * @param file\n   */\n  importIntegration(file: File): Promise<void>;\n  /**\n   * Requests a .zip file of the integration, using the specified filename\n   * @param id\n   * @param fileName\n   */\n  exportIntegration(id: string, fileName: string): Promise<void>;\n  /**\n   * asynchronously saves the provided integration, returning the saved\n   * integration in case of success.\n   *\n   * @param integration\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveIntegration(integration: Integration): Promise<Integration>;\n  /**\n   * Tags the integration with the given CI/CD environments\n   * @param integrationId\n   * @param environments\n   */\n  tagIntegration(\n    integrationId: string,\n    environments: string[]\n  ): Promise<Response>;\n  /**\n   * Request that the given integration ID at the given version be deactivated, empty response is returned\n   * @param id\n   * @param version\n   */\n  undeployIntegration(id: string, version: string | number): Promise<void>;\n}\n\nexport interface IWithIntegrationHelpersProps {\n  children(props: IWithIntegrationHelpersChildrenProps): any;\n}\n\nexport class WithIntegrationHelpersWrapped extends React.Component<\n  IWithIntegrationHelpersProps & IApiContext\n> {\n  constructor(props: IWithIntegrationHelpersProps & IApiContext) {\n    super(props);\n    this.addConnection = this.addConnection.bind(this);\n    this.deleteIntegration = this.deleteIntegration.bind(this);\n    this.deployIntegration = this.deployIntegration.bind(this);\n    this.exportIntegration = this.exportIntegration.bind(this);\n    this.importIntegration = this.importIntegration.bind(this);\n    this.saveIntegration = this.saveIntegration.bind(this);\n    this.undeployIntegration = this.undeployIntegration.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.updateOrAddConnection = this.updateOrAddConnection.bind(this);\n    this.tagIntegration = this.tagIntegration.bind(this);\n  }\n\n  public async getActionDescriptor(\n    connectionId: string,\n    actionId: string,\n    configuredProperties: any\n  ): Promise<ActionDescriptor | null> {\n    if (configuredProperties) {\n      const response = await callFetch({\n        body: configuredProperties,\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${\n          this.props.apiUri\n        }/connections/${connectionId}/actions/${actionId}`,\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return (await response.json()) as ActionDescriptor;\n    } else {\n      return null;\n    }\n  }\n\n  public async addConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps!.splice(position, 0, step);\n        }\n        return f;\n      });\n      draft.tags = Array.from(new Set([...(draft.tags || []), connection.id!]));\n    });\n  }\n\n  public async deleteIntegration(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/integrations/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async importIntegration(file: File) {\n    const response = await callFetch({\n      body: file,\n      contentType: 'application/zip',\n      headers: this.props.headers,\n      includeContentType: false,\n      method: 'POST',\n      url: `${this.props.apiUri}/integration-support/import`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async exportIntegration(id: string, fileName: string) {\n    return callFetch({\n      headers: this.props.headers,\n      method: 'GET',\n      url: `${this.props.apiUri}/integration-support/export.zip?id=${id}`,\n    }).then(async body => saveAs(await body.blob(), fileName));\n  }\n\n  public async deployIntegration(\n    id: string,\n    version: string | number,\n    isIntegrationDeployment = false\n  ) {\n    const response = await callFetch({\n      body: isIntegrationDeployment ? { targetState: PUBLISHED } : {},\n      headers: this.props.headers,\n      method: isIntegrationDeployment ? 'POST' : 'PUT',\n      url: isIntegrationDeployment\n        ? `${\n            this.props.apiUri\n          }/integrations/${id}/deployments/${version}/targetState`\n        : `${this.props.apiUri}/integrations/${id}/deployments`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async undeployIntegration(id: string, version: string | number) {\n    const response = await callFetch({\n      body: { targetState: UNPUBLISHED },\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${\n        this.props.apiUri\n      }/integrations/${id}/deployments/${version}/targetState`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async updateConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          f.steps![position] = step;\n        }\n        return f;\n      });\n    });\n  }\n  public async updateOrAddConnection(\n    integration: Integration,\n    connection: Connection,\n    action: Action,\n    flowId: string,\n    position: number,\n    configuredProperties: any\n  ): Promise<Integration> {\n    const actionDescriptor = await this.getActionDescriptor(\n      connection.id!,\n      action.id!,\n      configuredProperties\n    );\n    return produce(integration, draft => {\n      const step: Step = {\n        action,\n        configuredProperties,\n        connection,\n        id: flowId,\n      };\n      if (actionDescriptor) {\n        step.action!.descriptor = actionDescriptor;\n      }\n      step.stepKind = 'endpoint';\n      draft.flows = draft.flows!.map(f => {\n        if (f.id === flowId) {\n          if (f.steps![position]) {\n            f.steps![position] = step;\n          } else {\n            f.steps!.splice(position, 0, step);\n            draft.tags = Array.from(\n              new Set([...(draft.tags || []), connection.id!])\n            );\n          }\n        }\n        return f;\n      });\n    });\n  }\n\n  public async saveIntegration(integration: Integration): Promise<Integration> {\n    const response = await callFetch({\n      body: integration,\n      headers: this.props.headers,\n      method: integration.id ? 'PUT' : 'POST',\n      url: integration.id\n        ? `${this.props.apiUri}/integrations/${integration.id}`\n        : `${this.props.apiUri}/integrations`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !integration.id\n      ? ((await response.json()) as Integration)\n      : Promise.resolve(integration);\n  }\n\n  public async tagIntegration(integrationId: string, environments: []) {\n    return callFetch({\n      body: environments,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/public/integrations/${integrationId}/tags`,\n    });\n  }\n\n  public render() {\n    return this.props.children({\n      addConnection: this.addConnection,\n      deleteIntegration: this.deleteIntegration,\n      deployIntegration: this.deployIntegration,\n      exportIntegration: this.exportIntegration,\n      importIntegration: this.importIntegration,\n      saveIntegration: this.saveIntegration,\n      tagIntegration: this.tagIntegration,\n      undeployIntegration: this.undeployIntegration,\n      updateConnection: this.updateConnection,\n      updateOrAddConnection: this.updateOrAddConnection,\n    });\n  }\n}\n\n/**\n * This component provides through a render prop a number of helper\n * functions useful when working with an integration.\n *\n * Some of these helpers are available also as stand-alone functions\n * (packages/api/src/integrationHelpers/index.ts), but this component provides\n * methods like `saveIntegration` that can talk with the backend without any\n * additional information provided.\n *\n * Methods that modify an integration return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [addConnection]{@link IWithIntegrationHelpersChildrenProps#addConnection}\n * @see [updateConnection]{@link IWithIntegrationHelpersChildrenProps#updateConnection}\n * @see [updateOrAddConnection]{@link IWithIntegrationHelpersChildrenProps#updateOrAddConnection}\n * @see [saveIntegration]{@link IWithIntegrationHelpersChildrenProps#saveIntegration}\n */\nexport const WithIntegrationHelpers: React.FunctionComponent<\n  IWithIntegrationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithIntegrationHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import * as React from 'react';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithChangeListenerProps {\n  filter: (change: IChangeEvent) => boolean;\n  read: () => void;\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  children(): any;\n}\n\nexport class WithChangeListener extends React.Component<\n  IWithChangeListenerProps\n> {\n  public constructor(props: IWithChangeListenerProps) {\n    super(props);\n    this.changeListener = this.changeListener.bind(this);\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public async componentDidMount() {\n    this.props.registerChangeListener(this.changeListener);\n  }\n\n  public async componentWillUnmount() {\n    this.props.unregisterChangeListener(this.changeListener);\n  }\n\n  public changeListener(event: IChangeEvent) {\n    if (this.props.filter(event)) {\n      this.props.read();\n    }\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IApiConnectorsResponse {\n  items: Connector[];\n  totalCount: number;\n}\n\nexport interface IWithApiConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IApiConnectorsResponse>): any;\n}\n\nexport class WithApiConnectors extends React.Component<\n  IWithApiConnectorsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IApiConnectorsResponse>\n        url={'/connectors?query=connectorGroupId%3Dswagger-connector-template'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport interface IWithPollingProps {\n  polling: number;\n  read: () => void;\n  children(): any;\n}\n\nexport class WithPolling extends React.Component<IWithPollingProps> {\n  public pollingTimer?: number;\n\n  public constructor(props: IWithPollingProps) {\n    super(props);\n    this.poller = this.poller.bind(this);\n  }\n\n  public async componentDidMount() {\n    this.startPolling();\n  }\n\n  public async componentWillUnmount() {\n    this.stopPolling();\n  }\n\n  public render() {\n    return this.props.children();\n  }\n\n  public poller() {\n    this.props.read();\n  }\n\n  public setPoller(func: () => void) {\n    this.poller = func;\n  }\n\n  private startPolling() {\n    this.stopPolling();\n    if (this.props.polling) {\n      this.pollingTimer = setInterval(this.poller, this.props.polling) as any;\n    }\n  }\n\n  private stopPolling() {\n    if (this.pollingTimer) {\n      clearInterval(this.pollingTimer);\n      this.pollingTimer = undefined;\n    }\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithEnvironmentsRenderProps extends IFetchState<string[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithEnvironmentsProps {\n  disableUpdates?: boolean;\n  children(props: IWithEnvironmentsRenderProps): any;\n}\n\nexport class WithEnvironments extends React.Component<IWithEnvironmentsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<string[]> url={'/public/environments'} defaultValue={[]}>\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\n/**\n *\n */\nexport interface IWithEnvironmentHelpersChildrenProps {\n  deleteEnvironment(name: string): Promise<any>;\n  createEnvironment(name: string): Promise<any>;\n  renameEnvironment(name: string, newName: string): Promise<any>;\n}\n\nexport interface IWithEnvironmentHelpersProps {\n  children(props: IWithEnvironmentHelpersChildrenProps): any;\n}\n\nexport class WithEnvironmentHelpersWrapped extends React.Component<\n  IWithEnvironmentHelpersProps & IApiContext\n> {\n  constructor(props: IWithEnvironmentHelpersProps & IApiContext) {\n    super(props);\n    this.createEnvironment = this.createEnvironment.bind(this);\n    this.deleteEnvironment = this.deleteEnvironment.bind(this);\n    this.renameEnvironment = this.renameEnvironment.bind(this);\n  }\n\n  public async createEnvironment(name: string) {\n    const response = await callFetch({\n      body: name,\n      headers: this.props.headers,\n      method: 'PUT' /* @todo this won't actually work */,\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async deleteEnvironment(name: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public async renameEnvironment(name: string, newName: string) {\n    const response = await callFetch({\n      body: newName,\n      headers: this.props.headers,\n      method: 'PUT',\n      stringifyBody: false,\n      url: `${this.props.apiUri}/public/environments/${name}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return await response.body;\n  }\n\n  public render() {\n    return this.props.children({\n      createEnvironment: this.createEnvironment,\n      deleteEnvironment: this.deleteEnvironment,\n      renameEnvironment: this.renameEnvironment,\n    });\n  }\n}\n\nexport const WithEnvironmentHelpers: React.FunctionComponent<\n  IWithEnvironmentHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithEnvironmentHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithExtensionProps {\n  extensionId: string;\n  initialValue?: Extension;\n  children(props: IFetchState<Extension>): any;\n}\n\n/**\n * A component that fetches the extension with the specified identifier.\n * @see [extensionId]{@link IWithExtensionProps#extensionId}\n */\nexport class WithExtension extends React.Component<IWithExtensionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Extension>\n        url={`/extensions/${this.props.extensionId}`}\n        defaultValue={{\n          actions: [],\n          extensionType: 'Steps',\n          name: '',\n          schemaVersion: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithExtensionHelpersChildrenProps {\n  deleteExtension(extensionId: string): Promise<void>;\n  importExtension(extensionId: string): Promise<void>;\n  uploadExtension(file: File, extensionId?: string): Promise<Extension>;\n}\n\nexport interface IWithExtensionHelpersProps {\n  children(props: IWithExtensionHelpersChildrenProps): any;\n}\n\nexport class WithExtensionHelpersWrapped extends React.Component<\n  IWithExtensionHelpersProps & IApiContext\n> {\n  constructor(props: IWithExtensionHelpersProps & IApiContext) {\n    super(props);\n    this.deleteExtension = this.deleteExtension.bind(this);\n    this.importExtension = this.importExtension.bind(this);\n    this.uploadExtension = this.uploadExtension.bind(this);\n  }\n\n  /**\n   * Deletes the extension with the specified identifier.\n   * @param extensionId the ID of the extension being deleted\n   */\n  public async deleteExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/extensions/${extensionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Imports the extension with the specified identifier.\n   * @param extensionId the ID of the extension being imported\n   */\n  public async importExtension(extensionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/extensions/${extensionId}/install`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Updates the extension with the specified identifier or creates a new extension if there is no identifier.\n   * @param extensionId the ID of the extension being uploaded\n   */\n  public async uploadExtension(\n    file: File,\n    extensionId?: string\n  ): Promise<Extension> {\n    const data = new FormData();\n    data.append('file', file, file.name);\n\n    const url = `${this.props.apiUri}/extensions`;\n\n    const response = await callFetch({\n      body: data,\n      contentType: 'multipart/form-data',\n      headers: this.props.headers,\n      includeAccept: false,\n      includeContentType: false,\n      includeReferrerPolicy: false,\n      method: 'POST',\n      url: extensionId ? `${url}?updatedId=${extensionId}` : url,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as Extension;\n  }\n\n  public render() {\n    return this.props.children({\n      deleteExtension: this.deleteExtension,\n      importExtension: this.importExtension,\n      uploadExtension: this.uploadExtension,\n    });\n  }\n}\n\nexport const WithExtensionHelpers: React.FunctionComponent<\n  IWithExtensionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithExtensionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IWithExtensionIntegrationsProps {\n  extensionId: string;\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationOverview[]>): any;\n}\n\n/**\n * A component that fetches the integrations that a specified extension is used by.\n * @see [extensionId]{@link IWithExtensionIntegrationsProps#extensionId}\n */\nexport class WithExtensionIntegrations extends React.Component<\n  IWithExtensionIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      // rerun fetch if there was a change in integrations\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationOverview[]>\n        url={`/extensions/${this.props.extensionId}/integrations`}\n        defaultValue={[]}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Extension } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IExtensionsResponse {\n  items: Extension[];\n  totalCount: number;\n}\n\nexport interface IWithExtensionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IExtensionsResponse>): any;\n}\n\n/**\n * A component that fetches all the extensions.\n */\nexport class WithExtensions extends React.Component<IWithExtensionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind === 'extension';\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IExtensionsResponse>\n        url={'/extensions'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IIntegrationOverviewWithDraft } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationProps {\n  integrationId: string;\n  initialValue?: IIntegrationOverviewWithDraft;\n  children(props: IFetchState<IIntegrationOverviewWithDraft>): any;\n}\n\n/**\n * A component that fetches the integration with the specified identifier.\n * @see [integrationId]{@link IWithIntegrationProps#integrationId}\n */\nexport class WithIntegration extends React.Component<IWithIntegrationProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationOverviewWithDraft>\n        url={`/integrations/${this.props.integrationId}`}\n        defaultValue={{\n          isDraft: true,\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { IntegrationOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IIntegrationsResponse {\n  items: IntegrationOverview[];\n  totalCount: number;\n}\n\nexport interface IWithIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IIntegrationsResponse>): any;\n}\n\nexport class WithIntegrations extends React.Component<IWithIntegrationsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration' || change.kind === 'integration-deployment'\n    );\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IIntegrationsResponse>\n        url={'/integrations'}\n        defaultValue={{ items: [], totalCount: 0 }}\n      >\n        {({ read, response }) =>\n          this.props.disableUpdates ? (\n            this.props.children(response)\n          ) : (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(response)}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          )\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithIntegrationTagsProps {\n  integrationId: string;\n  initialValue?: Map<string, any>;\n  children(props: IFetchState<Map<string, any>>): any;\n}\n\nexport class WithIntegrationTags extends React.Component<\n  IWithIntegrationTagsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<Map<string, any>>\n        url={`/public/integrations/${this.props.integrationId}/tags`}\n        defaultValue={{} as Map<string, any>}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Integration,\n  IntegrationMonitoring,\n  IntegrationWithMonitoring,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IIntegrationsResponse, WithIntegrations } from './WithIntegrations';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IMonitoredIntegrationsResponse {\n  items: IntegrationWithMonitoring[];\n  totalCount: number;\n}\n\nexport interface IWithMonitoredIntegrationsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IMonitoredIntegrationsResponse>): any;\n}\n\nexport class WithMonitoredIntegrations extends React.Component<\n  IWithMonitoredIntegrationsProps\n> {\n  public changeFilter(change: IChangeEvent) {\n    return (\n      change.kind === 'integration-deployment' ||\n      change.kind === 'integration-deployment-state-details'\n    );\n  }\n  public getMonitoredIntegrations(\n    integrations: IIntegrationsResponse,\n    response: IFetchState<IntegrationMonitoring[]>\n  ) {\n    return {\n      items: integrations.items.map(\n        (i: Integration): IntegrationWithMonitoring => ({\n          integration: i,\n          monitoring: response.data.find(\n            (o: IntegrationMonitoring) => o.integrationId === i.id\n          ),\n        })\n      ),\n      totalCount: integrations.totalCount,\n    } as IMonitoredIntegrationsResponse;\n  }\n  public render() {\n    return (\n      <WithIntegrations disableUpdates={this.props.disableUpdates}>\n        {({ data: integrations, ...props }) => (\n          <SyndesisFetch<IntegrationMonitoring[]>\n            url={'/monitoring/integrations'}\n            defaultValue={[]}\n          >\n            {({ read, response }) => {\n              if (this.props.disableUpdates) {\n                const data = this.getMonitoredIntegrations(\n                  integrations,\n                  response\n                );\n                return this.props.children({ ...props, data });\n              }\n              return (\n                <ServerEventsContext.Consumer>\n                  {({ registerChangeListener, unregisterChangeListener }) => (\n                    <WithChangeListener\n                      read={read}\n                      registerChangeListener={registerChangeListener}\n                      unregisterChangeListener={unregisterChangeListener}\n                      filter={this.changeFilter}\n                    >\n                      {() => {\n                        const data = this.getMonitoredIntegrations(\n                          integrations,\n                          response\n                        );\n                        return this.props.children({ ...props, data });\n                      }}\n                    </WithChangeListener>\n                  )}\n                </ServerEventsContext.Consumer>\n              );\n            }}\n          </SyndesisFetch>\n        )}\n      </WithIntegrations>\n    );\n  }\n}\n","import { IntegrationMetricsSummary } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithIntegrationsMetricsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IntegrationMetricsSummary>): any;\n}\n\nexport class WithIntegrationsMetrics extends React.Component<\n  IWithIntegrationsMetricsProps\n> {\n  public render() {\n    return (\n      <SyndesisFetch<IntegrationMetricsSummary>\n        url={'/metrics/integrations'}\n        defaultValue={{\n          errors: 0, // int64\n          id: '-1',\n          integrationDeploymentMetrics: [],\n          lastProcessed: `${Date.now()}`, // date-time\n          messages: 0, // int64\n          metricsProvider: 'null',\n          start: `${Date.now()}`, // date-time\n          topIntegrations: {},\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(response);\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children(response)}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport function getConnectionsForDisplay(connections: ConnectionOverview[]) {\n  return connections.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function getConnectionsWithFromAction(\n  connections: ConnectionOverview[]\n) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'From';\n    });\n  });\n}\n\nexport function getConnectionsWithToAction(connections: ConnectionOverview[]) {\n  return connections.filter(connection => {\n    if (!connection.connector) {\n      // safety net\n      return true;\n    }\n    if (connection.connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    return connection.connector.actions.some(action => {\n      return action.pattern === 'To';\n    });\n  });\n}\n\nexport interface IConnectionsFetchResponse {\n  readonly items: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectionsResponse {\n  readonly connectionsForDisplay: ConnectionOverview[];\n  readonly connectionsWithToAction: ConnectionOverview[];\n  readonly connectionsWithFromAction: ConnectionOverview[];\n  readonly dangerouslyUnfilteredConnections: ConnectionOverview[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectionsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectionsResponse>): any;\n}\n\nexport function transformResponse(\n  response: IFetchState<IConnectionsFetchResponse>\n): IFetchState<IConnectionsResponse> {\n  return {\n    ...response,\n    data: {\n      connectionsForDisplay: getConnectionsForDisplay(response.data.items),\n      connectionsWithFromAction: getConnectionsWithFromAction(\n        response.data.items\n      ),\n      connectionsWithToAction: getConnectionsWithToAction(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnections extends React.Component<IWithConnectionsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connection');\n  }\n\n  public render() {\n    return (\n      <SyndesisFetch<IConnectionsFetchResponse>\n        url={'/connections'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() => this.props.children(transformResponse(response))}\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import {\n  Action,\n  ActionDescriptor,\n  ActionDescriptorStep,\n  ConfigurationProperty,\n  ConnectionOverview,\n  Connector,\n  IConnectionWithIconFile,\n} from '@syndesis/models';\n\nexport function getActionsWithFrom(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'From');\n}\n\nexport function getActionsWithTo(actions: Action[] = []) {\n  return actions.filter(a => a.pattern === 'To');\n}\n\nexport function getConnectionConnector(\n  connection: ConnectionOverview\n): Connector {\n  if (!connection.connector) {\n    throw Error(`FATAL: Connection ${connection.id} doesn't have a connector`);\n  }\n  return connection.connector;\n}\n\nexport function getConnectorActions(connector: Connector): Action[] {\n  return connector.actions;\n}\n\nexport function getActionById(actions: Action[], actionId: string): Action {\n  const action = actions.find(a => a.id === actionId);\n  if (!action) {\n    throw Error(`FATAL: Action ${actionId} not found`);\n  }\n  return action;\n}\n\nexport function getActionDescriptor(action: Action): ActionDescriptor {\n  if (!action.descriptor) {\n    throw Error(`FATAL: Action ${action.id} doesn't have any descriptor`);\n  }\n  return action.descriptor;\n}\n\nexport function getActionSteps(\n  descriptor: ActionDescriptor\n): ActionDescriptorStep[] {\n  if (!descriptor.propertyDefinitionSteps) {\n    throw Error(`FATAL: Descriptor doesn't have any definition`);\n  }\n  return descriptor.propertyDefinitionSteps;\n}\n\nexport function getActionStep(\n  steps: ActionDescriptorStep[],\n  step: number\n): ActionDescriptorStep {\n  if (step > steps.length - 1) {\n    throw Error(`FATAL: Step ${step} does not exist in the descriptor steps`);\n  }\n  return steps[step];\n}\n\nexport function getActionStepDefinition(\n  step: ActionDescriptorStep\n): {\n  [name: string]: ConfigurationProperty;\n} {\n  if (!step.properties) {\n    throw Error(`FATAL: Step ${step} does not have valid properties`);\n  }\n  return step.properties;\n}\n\nexport function getConnectionIcon(\n  apiUri: string,\n  connection: IConnectionWithIconFile\n) {\n  if (\n    typeof connection.icon === 'undefined' &&\n    typeof connection.iconFile === 'undefined'\n  ) {\n    // The connection has no icon for whatever reason\n    // TODO: sensible default icon\n    return '';\n  }\n  // Connections created from the API client connector can have a custom icon file\n  if (connection.iconFile || connection.icon instanceof File) {\n    const file = connection.iconFile || connection.icon;\n    const tempIconBlobPath = URL.createObjectURL(file);\n    return tempIconBlobPath;\n  }\n  // The connection has an embedded icon\n  if (connection.icon.toLowerCase().startsWith('data:')) {\n    return connection.icon;\n  }\n  // The connection's icon is stored in the DB in some weird way\n  if (\n    connection.icon.toLowerCase().startsWith('db:') ||\n    connection.icon.toLowerCase().startsWith('extension:')\n  ) {\n    return `${apiUri}/connectors/${connection.id}/icon?${connection.icon}`;\n  }\n  // Legacy connections rely on the icon being in the UI's assets\n  return `./../../icons/${connection.icon}.connection.png`;\n}\n","import {\n  Extension,\n  IConnectionWithIconFile,\n  Integration,\n  IntegrationOverview,\n  Step,\n} from '@syndesis/models';\nimport { Connection, ConnectorAction, StepKind } from '@syndesis/models/src';\nimport { key } from '@syndesis/utils';\nimport produce from 'immer';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  ENDPOINT,\n  HIDE_FROM_STEP_SELECT,\n  SPLIT,\n  TEMPLATE,\n} from '../constants';\nimport { getConnectionIcon } from './connectionFunctions';\n\nexport const NEW_INTEGRATION = {\n  name: '',\n  tags: [],\n} as Integration;\n\n/**\n * returns an empty integration object.\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getEmptyIntegration(): Integration {\n  return produce(NEW_INTEGRATION, draft => {\n    draft.flows = [\n      {\n        id: key(),\n        name: '',\n        steps: [],\n      },\n    ];\n  });\n}\n\n/**\n * updates the name of an integration.\n *\n * @param integration\n * @param name\n */\n\nexport function setIntegrationName(\n  integration: Integration,\n  name: string\n): Integration {\n  return produce(integration, nextIntegration => {\n    nextIntegration.name = name;\n  });\n}\n\n/**\n * returns true if the provided integration can be published; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canPublish(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be activated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canActivate(integration: IntegrationOverview) {\n  return (\n    integration.currentState !== 'Pending' &&\n    integration.currentState !== 'Published'\n  );\n}\n\n/**\n * returns true if the provided integration can be edited; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canEdit(integration: IntegrationOverview) {\n  return integration.currentState !== 'Pending';\n}\n\n/**\n * returns true if the provided integration can be deactivated; returns false\n * otherwise.\n *\n * @param integration\n */\nexport function canDeactivate(integration: IntegrationOverview) {\n  return integration.currentState !== 'Unpublished';\n}\n\n/**\n * returns the list of steps of the provided integration.\n *\n * @param integration\n * @param flowId\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\nexport function getSteps(integration: Integration, flowId: string): Step[] {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps!;\n  } catch (e) {\n    return [];\n  }\n}\n\n/**\n * returns a specific step of the provided integration.\n *\n * @param integration\n * @param flowId\n * @param step\n *\n * @todo make the returned object immutable to avoid uncontrolled changes\n */\n\nexport function getStep(\n  integration: Integration,\n  flowId: string,\n  step: number\n): Step {\n  try {\n    const flow = getFlow(integration, flowId);\n    return flow!.steps![step];\n  } catch (e) {\n    throw new Error(\n      `Can't find a step ${step} for flow ${flowId} in integration ${\n        integration.id\n      }`\n    );\n  }\n}\n\n/**\n * Returns the start icon representing the provided integration\n * @param integration\n */\nexport function getStartIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(apiUri, integration, flow.id!, 0);\n}\n\n/**\n * Returns the ending icon representing the provided integration\n * @param integration\n */\nexport function getFinishIcon(apiUri: string, integration: Integration) {\n  const flow = integration.flows![0];\n  return getIntegrationStepIcon(\n    apiUri,\n    integration,\n    flow.id!,\n    flow.steps!.length - 1\n  );\n}\n\nexport function getExtensionIcon(extension: Extension) {\n  return extension.icon || ''; // TODO: a default icon?\n}\n\nexport function getStepKindIcon(stepKind: Step['stepKind']) {\n  return `/icons/steps/${stepKind}.svg`;\n}\n\n/**\n * Returns the icon for the supplied step index of the supplied flow index\n * @param apiUri\n * @param integration\n * @param flowId\n * @param stepIndex\n */\nexport function getIntegrationStepIcon(\n  apiUri: string,\n  integration: Integration,\n  flowId: string,\n  stepIndex: number\n): string {\n  const step = getStep(integration, flowId, stepIndex);\n  return getStepIcon(apiUri, step);\n}\n\n/**\n * Returns the icon for the supplied step\n * @param apiUri\n * @param step\n */\nexport function getStepIcon(apiUri: string, step: Step): string {\n  if (step.connection) {\n    const connection = step.connection as IConnectionWithIconFile;\n    return getConnectionIcon(apiUri, connection);\n  }\n  // The step is an extension\n  if (step.extension) {\n    return getExtensionIcon(step.extension);\n  }\n  // It's just a step\n  return getStepKindIcon(step.stepKind);\n}\n\n/**\n * Returns the flow object with the given ID\n * @param integration\n * @param flowId\n */\nexport function getFlow(integration: Integration, flowId: string) {\n  // TODO some code relies on these semantics\n  if (!integration || !integration.flows || !flowId) {\n    return undefined;\n  }\n  return integration.flows.find(flow => flow.id === flowId);\n}\n\n/**\n * Returns the last index of the step array of the given flow or undefined if it hasn't been created\n * @param integration\n * @param flowId\n */\nexport function getLastPosition(integration: Integration, flowId: string) {\n  if (!flowId) {\n    return undefined;\n  }\n  const flow = getFlow(integration, flowId);\n  if (!flow) {\n    return undefined;\n  }\n  // TODO preserve this block for now\n  if (!flow.steps) {\n    return undefined;\n  }\n  return getStepsLastPosition(flow.steps);\n}\nexport function getStepsLastPosition(steps: Step[]) {\n  if (steps.length <= 1) {\n    return 1;\n  }\n  return steps.length - 1;\n}\n\n/**\n * Filters connections based on the supplied position in the step array\n * @param steps\n * @param position\n */\nexport function filterStepsByPosition(steps: StepKind[], position: number) {\n  if (typeof position === 'undefined' || !steps) {\n    // safety net\n    return steps;\n  }\n  const atStart = position === 0;\n  const atEnd = getStepsLastPosition(steps) === position;\n  return steps.filter(step => {\n    // Hide steps that are marked as such, and specifically the log connection\n    if (\n      (typeof step.connection !== 'undefined' &&\n        typeof step.connection.metadata !== 'undefined' &&\n        step.connection.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (typeof step.metadata !== 'undefined' &&\n        step.metadata[HIDE_FROM_STEP_SELECT]) ||\n      (step as Connection).connectorId === 'log'\n    ) {\n      return false;\n    }\n    // Special handling for the beginning of a flow\n    if (atStart) {\n      // At the moment only endpoints can be at the start\n      if (step.stepKind) {\n        return false;\n      }\n      if ((step as Connection).connector) {\n        return (step as Connection).connector!.actions.some(\n          (action: ConnectorAction) => {\n            return action.pattern === 'From';\n          }\n        );\n      }\n      // it's not a connection\n      return true;\n    }\n    // Special handling for the end of a flow\n    if (atEnd) {\n      // Several step kinds aren't usable at the end of a flow\n      switch ((step as Step).stepKind) {\n        case DATA_MAPPER:\n        case BASIC_FILTER:\n        case ADVANCED_FILTER:\n        case SPLIT:\n        case AGGREGATE:\n        case TEMPLATE:\n          return false;\n        default:\n      }\n    }\n    if ((step as Connection).connectorId === 'api-provider') {\n      // api provider can be used only for From actions\n      return false;\n    }\n    // All non-connection steps can be shown, except the above\n    if (step.stepKind !== ENDPOINT) {\n      return true;\n    }\n    // Only show connections that have at least one action that accepts data\n    if ((step as Connection).connector) {\n      return (step as Connection).connector!.actions.some(\n        (action: ConnectorAction) => {\n          return action.pattern === 'To';\n        }\n      );\n    }\n    return true;\n  });\n}\n\n/**\n * Filters connections based on the supplied position in the step array and their\n * visibility status\n * @param steps\n * @param position\n */\nexport function visibleStepsByPosition(steps: StepKind[], position: number) {\n  const previousSteps = steps.slice(0, position);\n  const subsequentSteps = steps.slice(position + 1);\n  return filterStepsByPosition(steps, position).filter(s =>\n    s.visible\n      ? typeof s.visible === 'function'\n        ? s.visible(position, previousSteps, subsequentSteps)\n        : s.visible\n      : true\n  );\n}\n\n/**\n * Get an array of steps from the flow before the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getPreviousSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(0, position);\n}\n\n/**\n * Get an array of steps from the flow after the given position\n * @param integration\n * @param flowId\n * @param position\n */\nexport function getSubsequentSteps(\n  integration: Integration,\n  flowId: string,\n  position: number\n) {\n  const flow = getFlow(integration, flowId);\n  if (!flow || !flow.steps) {\n    // TODO following semantics for now, this should throw an error\n    return [];\n  }\n  return flow.steps.slice(position + 1);\n}\n","import { Action, ConnectionOverview } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { getActionsWithFrom, getActionsWithTo } from './helpers';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IConnectionOverviewExtended extends ConnectionOverview {\n  readonly actionsWithFrom: Action[];\n  readonly actionsWithTo: Action[];\n}\n\nexport interface IWithConnectionProps {\n  id: string;\n  initialValue?: ConnectionOverview;\n  children(props: IFetchState<IConnectionOverviewExtended>): any;\n}\n\nexport class WithConnection extends React.Component<IWithConnectionProps> {\n  public render() {\n    return (\n      <SyndesisFetch<ConnectionOverview>\n        url={`/connections/${this.props.id}`}\n        defaultValue={{\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) =>\n          this.props.children({\n            ...response,\n            data: {\n              ...response.data,\n              actionsWithFrom: getActionsWithFrom(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n              actionsWithTo: getActionsWithTo(\n                response.data.connector ? response.data.connector.actions : []\n              ),\n            },\n          })\n        }\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connection, Connector } from '@syndesis/models';\nimport produce from 'immer';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IConfigurationValidationViolation {\n  code: string;\n  description: string;\n  parameters: string[];\n  attributes: { [key: string]: string };\n}\n\nexport interface IConfigurationValidation {\n  status: 'OK' | 'ERROR';\n  scope: 'PARAMETERS' | 'CONNECTIVITY';\n  errors?: IConfigurationValidationViolation[];\n}\n\nexport interface IValidationResult {\n  isError: boolean;\n  error?: string;\n  message?: string;\n  property?: string;\n}\n\nexport interface IWithConnectionHelpersChildrenProps {\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  validateConfiguration(\n    connectionId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]>;\n  /**\n   * create a new Connection object starting from a Connector.\n   *\n   * @param connector\n   * @param name\n   * @param description\n   */\n  createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously saves the provided connection, returning the saved\n   * connection in case of success.\n   *\n   * @param connection\n   *\n   * @todo make the returned object immutable to avoid uncontrolled changes\n   */\n  saveConnection(connection: Connection): Promise<Connection>;\n  /**\n   * create a new Connection object starting from an existing Connection.\n   *\n   * @param connection\n   * @param name\n   * @param description\n   * @param configuredProperties\n   */\n  updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection;\n  /**\n   * asynchronously deletes the provided connection.\n   *\n   * @param connectionId the connection ID\n   */\n  deleteConnection(connectionId: string): Promise<void>;\n  /**\n   *  Asynchronously validates the proposed connection name.\n   *\n   * @param connection the connection whose name is being changed\n   * @param proposedName the name being validated\n   * @returns a validation result\n   */\n  validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult>;\n}\n\nexport interface IWithConnectionHelpersProps {\n  children(props: IWithConnectionHelpersChildrenProps): any;\n}\n\nexport class WithConnectionHelpersWrapped extends React.Component<\n  IWithConnectionHelpersProps & IApiContext\n> {\n  constructor(props: IWithConnectionHelpersProps & IApiContext) {\n    super(props);\n    this.createConnection = this.createConnection.bind(this);\n    this.deleteConnection = this.deleteConnection.bind(this);\n    this.updateConnection = this.updateConnection.bind(this);\n    this.validateConfiguration = this.validateConfiguration.bind(this);\n    this.saveConnection = this.saveConnection.bind(this);\n    this.validateName = this.validateName.bind(this);\n  }\n\n  public createConnection(\n    connector: Connector,\n    name: string,\n    description: string,\n    configuredProperties: { [key: string]: string }\n  ): Connection {\n    const connection = {} as Connection;\n    return produce(connection, draft => {\n      connection.name = name;\n      connection.description = description;\n      connection.configuredProperties = configuredProperties;\n      connection.connector = connector;\n      connection.connectorId = connector.id;\n      connection.icon = connector.icon;\n    });\n  }\n\n  public async deleteConnection(connectionId: string): Promise<void> {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/connections/${connectionId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public updateConnection(\n    connection: Connection,\n    name?: string,\n    description?: string,\n    configuredProperties?: { [key: string]: string }\n  ): Connection {\n    return produce(connection, draft => {\n      connection.name = name || connection.name;\n      // allow empty descriptions\n      connection.description =\n        description === undefined ? connection.description : description;\n      connection.configuredProperties =\n        configuredProperties || connection.configuredProperties;\n    });\n  }\n\n  public async validateConfiguration(\n    connectorId: string,\n    values: { [key: string]: string }\n  ): Promise<IConfigurationValidation[]> {\n    const response = await callFetch({\n      body: values,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connectors/${connectorId}/verifier`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return (await response.json()) as IConfigurationValidation[];\n  }\n\n  public async saveConnection(connection: Connection): Promise<Connection> {\n    const response = await callFetch({\n      body: connection,\n      headers: this.props.headers,\n      method: connection.id ? 'PUT' : 'POST',\n      url: connection.id\n        ? `${this.props.apiUri}/connections/${connection.id}`\n        : `${this.props.apiUri}/connections`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return !connection.id\n      ? ((await response.json()) as Connection)\n      : Promise.resolve(connection);\n  }\n\n  public async validateName(\n    connection: Connection,\n    proposedName: string\n  ): Promise<IValidationResult> {\n    // short circuit if name has not changed\n    if (connection.name === proposedName) {\n      return {\n        isError: false,\n      };\n    }\n\n    const testConn = { name: proposedName };\n    const response = await callFetch({\n      body: testConn,\n      headers: this.props.headers,\n      method: 'POST',\n      url: `${this.props.apiUri}/connections/validation`,\n    });\n\n    if (response.ok) {\n      return {\n        isError: false,\n      };\n    }\n\n    // return the first error\n    const result = await response.json();\n    return {\n      isError: true,\n      ...result[0],\n    };\n  }\n\n  public render() {\n    return this.props.children({\n      createConnection: this.createConnection,\n      deleteConnection: this.deleteConnection,\n      saveConnection: this.saveConnection,\n      updateConnection: this.updateConnection,\n      validateConfiguration: this.validateConfiguration,\n      validateName: this.validateName,\n    });\n  }\n}\n\n/**\n * This component provides provides through a render propr a number of helper\n * functions useful when working with a connection.\n *\n * Methods that modify a connection return a immutable copy of the original\n * object, to reduce the risk of bugs.\n *\n * @see [saveConnection]{@link IWithConnectionHelpersChildrenProps#saveConnection}\n */\nexport const WithConnectionHelpers: React.FunctionComponent<\n  IWithConnectionHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithConnectionHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\n\nexport interface IWithConnectorProps {\n  id: string;\n  initialValue?: Connector;\n  children(props: IFetchState<Connector>): any;\n}\n\nexport class WithConnector extends React.Component<IWithConnectorProps> {\n  public render() {\n    return (\n      <SyndesisFetch<Connector>\n        url={`/connectors/${this.props.id}`}\n        defaultValue={{\n          actions: [],\n          name: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </SyndesisFetch>\n    );\n  }\n}\n","import { Connector } from '@syndesis/models';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { ServerEventsContext } from './ServerEventsContext';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithChangeListener } from './WithChangeListener';\nimport { IChangeEvent } from './WithServerEvents';\n\nexport interface IConnectorsFetchResponse {\n  readonly items: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IConnectorsResponse {\n  readonly connectorsForDisplay: Connector[];\n  readonly dangerouslyUnfilteredConnections: Connector[];\n  readonly totalCount: number;\n}\n\nexport interface IWithConnectorsProps {\n  disableUpdates?: boolean;\n  children(props: IFetchState<IConnectorsResponse>): any;\n}\n\nexport function getConnectorsForDisplay(connectors: Connector[]) {\n  return connectors.filter(\n    c => !c.metadata || !c.metadata['hide-from-connection-pages']\n  );\n}\n\nexport function transformConnectorsResponse(\n  response: IFetchState<IConnectorsFetchResponse>\n): IFetchState<IConnectorsResponse> {\n  return {\n    ...response,\n    data: {\n      connectorsForDisplay: getConnectorsForDisplay(response.data.items),\n      dangerouslyUnfilteredConnections: response.data.items,\n      totalCount: response.data.totalCount,\n    },\n  };\n}\n\nexport class WithConnectors extends React.Component<IWithConnectorsProps> {\n  public changeFilter(change: IChangeEvent) {\n    return change.kind.startsWith('connector');\n  }\n  public render() {\n    return (\n      <SyndesisFetch<IConnectorsFetchResponse>\n        url={'/connectors'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children(transformConnectorsResponse(response));\n          }\n          return (\n            <ServerEventsContext.Consumer>\n              {({ registerChangeListener, unregisterChangeListener }) => (\n                <WithChangeListener\n                  read={read}\n                  registerChangeListener={registerChangeListener}\n                  unregisterChangeListener={unregisterChangeListener}\n                  filter={this.changeFilter}\n                >\n                  {() =>\n                    this.props.children(transformConnectorsResponse(response))\n                  }\n                </WithChangeListener>\n              )}\n            </ServerEventsContext.Consumer>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","/* tslint:disable:object-literal-sort-keys */\nimport { Step, StepKind } from '@syndesis/models';\nimport {\n  ADVANCED_FILTER,\n  AGGREGATE,\n  BASIC_FILTER,\n  DATA_MAPPER,\n  DataShapeKinds,\n  LOG,\n  SPLIT,\n  TEMPLATE,\n} from './constants';\n\nconst ALL_STEPS: StepKind[] = [\n  requiresInputOutputDataShapes(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Data Mapper',\n      description: 'Map fields from the input type to the output type.',\n      stepKind: DATA_MAPPER,\n      properties: {},\n      configuredProperties: undefined,\n    },\n    true,\n    false\n  ),\n  requiresOutputDataShape(\n    {\n      id: undefined,\n      connection: undefined,\n      action: undefined,\n      name: 'Basic Filter',\n      description:\n        'Continue the integration only if criteria you specify in simple input fields are met. Suitable for' +\n        ' most integrations.',\n      stepKind: BASIC_FILTER,\n      properties: undefined,\n      configuredProperties: undefined,\n    },\n    true\n  ),\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Template',\n    stepKind: TEMPLATE,\n    description:\n      'Upload or create a Freemarker, Mustache or Velocity template to define consistent output data.',\n    configuredProperties: undefined,\n    properties: undefined,\n  }),\n  noCollectionSupport({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Advanced Filter',\n    description:\n      'Continue the integration only if criteria you define in scripting language expressions are met.',\n    stepKind: ADVANCED_FILTER,\n    properties: {\n      filter: {\n        type: 'textarea',\n        displayName: 'Only continue if',\n        placeholder: `Examples of Simple Language filter expressions:\n$\\{in.header.type\\} == 'widget' // Evaluates true when type = widget\n$\\{in.body.title\\} // Evaluates true when body contains title.\n`,\n        required: true,\n        rows: 10,\n      },\n    },\n    configuredProperties: undefined,\n  }),\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Log',\n    stepKind: LOG,\n    description: \"Send a message to the integration's log.\",\n    configuredProperties: undefined,\n    properties: {\n      contextLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Context',\n        required: false,\n      },\n      bodyLoggingEnabled: {\n        type: 'boolean',\n        displayName: 'Message Body',\n        required: false,\n      },\n      customText: {\n        type: 'string',\n        displayName: 'Custom Text',\n        required: false,\n      },\n      /*\n      loggingLevel: {\n        type: 'select',\n        displayName: 'Level',\n        value: 'INFO',\n        required: true,\n        enum: [\n          { value: 'INFO', label: 'INFO' },\n          { value: 'WARN', label: 'WARN' },\n          { value: 'ERROR', label: 'ERROR'},\n          {value: 'DEBUG', label: 'DEBUG'},\n          {value: 'TRACE', label: 'TRACE'}],\n      },\n      */\n    },\n  },\n  requiresOutputDataShape({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Split',\n    description: 'Process each item in a set of data individually',\n    stepKind: SPLIT,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  requiresConsistentSplitAggregate({\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Aggregate',\n    description: 'End processing items in a foreach',\n    stepKind: AGGREGATE,\n    properties: {},\n    configuredProperties: undefined,\n  }),\n  /*\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Store Data',\n    stepKind: STORE_DATA,\n    description:\n      'Store data from an invocation to be used later in the integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Set Data',\n    stepKind: SET_DATA,\n    description: 'Enrich data used within an integration',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Call Route',\n    stepKind: CALL_ROUTE,\n    description:\n      'Call a child integration route from the main integration flow',\n    properties: {},\n    configuredProperties: undefined,\n  },\n  {\n    id: undefined,\n    connection: undefined,\n    action: undefined,\n    name: 'Conditional Processing',\n    stepKind: CONDITIONAL_PROCESSING,\n    description: 'Add conditions and multiple paths for processing data',\n    properties: {},\n    configuredProperties: undefined,\n  }\n  */\n];\n\nfunction stepsHaveOutputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.outputDataShape &&\n        s.action.descriptor.outputDataShape.kind &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.outputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction stepsHaveInputDataShape(steps: Step[]): boolean {\n  return (\n    steps.filter(\n      s =>\n        s &&\n        s.action &&\n        s.action.descriptor &&\n        s.action.descriptor.inputDataShape &&\n        s.action.descriptor.inputDataShape.kind &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.NONE &&\n        s.action.descriptor.inputDataShape.kind.toLowerCase() !==\n          DataShapeKinds.ANY\n    ).length > 0\n  );\n}\n\nfunction requiresInputOutputDataShapes(\n  obj: StepKind,\n  anyPrevious = true,\n  anySubsequent = true\n): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    if (!anyPrevious) {\n      // only test the first previous step that has some kind of data shape\n      const previousStep = previousSteps\n        .reverse()\n        .find(s => dataShapeExists(s));\n      previousSteps = previousStep ? [previousStep] : [];\n    }\n    if (!anySubsequent) {\n      // only test the next subsequent step that has a data shape\n      const subsequentStep = previousSteps.find(s => dataShapeExists(s, true));\n      subsequentSteps = subsequentStep ? [subsequentStep] : [];\n    }\n    return (\n      stepsHaveOutputDataShape(previousSteps) &&\n      stepsHaveInputDataShape(subsequentSteps)\n    );\n  };\n  return obj;\n}\n\nfunction dataShapeExists(step: Step, input = false): boolean {\n  if (input) {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.inputDataShape\n    );\n  } else {\n    return !!(\n      step &&\n      step.action &&\n      step.action.descriptor &&\n      step.action.descriptor.outputDataShape\n    );\n  }\n}\n\nfunction hasPrecedingCollection(previousSteps: Step[]) {\n  const previousDataShape = previousSteps\n    .reverse()\n    .find(s => dataShapeExists(s));\n  return (\n    previousDataShape &&\n    previousDataShape.action &&\n    previousDataShape.action.descriptor &&\n    previousDataShape.action.descriptor.outputDataShape &&\n    previousDataShape.action.descriptor.outputDataShape.metadata &&\n    previousDataShape.action.descriptor.outputDataShape.metadata.variant ===\n      'collection'\n  );\n}\n\nfunction noCollectionSupport(obj: StepKind) {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    return !hasPrecedingCollection(previousSteps);\n  };\n  return obj;\n}\n\nfunction requiresOutputDataShape(\n  obj: StepKind,\n  noCollectionSupportP = false\n): StepKind {\n  if (noCollectionSupportP) {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return (\n        stepsHaveOutputDataShape(previousSteps) &&\n        !hasPrecedingCollection(previousSteps)\n      );\n    };\n  } else {\n    obj.visible = (\n      position: number,\n      previousSteps: Step[],\n      subsequentSteps: Step[]\n    ) => {\n      return stepsHaveOutputDataShape(previousSteps);\n    };\n  }\n  return obj;\n}\n\nfunction requiresConsistentSplitAggregate(obj: StepKind): StepKind {\n  obj.visible = (\n    position: number,\n    previousSteps: Step[],\n    subsequentSteps: Step[]\n  ) => {\n    const countPreviousSplit = previousSteps.filter(s => s.stepKind === SPLIT)\n      .length;\n    const countPreviousAggregate = previousSteps.filter(\n      s => (s.stepKind || '').toLowerCase() === AGGREGATE\n    ).length;\n\n    if (countPreviousSplit <= countPreviousAggregate) {\n      return false;\n    }\n\n    const positionNextSplit = subsequentSteps.findIndex(\n      s => s.stepKind === SPLIT\n    );\n    const positionNextAggregate = subsequentSteps.findIndex(\n      s => s.stepKind === AGGREGATE\n    );\n\n    if (positionNextSplit === -1) {\n      return positionNextAggregate === -1;\n    }\n\n    return (\n      positionNextAggregate === -1 || positionNextSplit < positionNextAggregate\n    );\n  };\n  return obj;\n}\n\nexport interface IStepsResponse {\n  items: StepKind[];\n}\n\nexport interface IWithStepsProps {\n  disableUpdates?: boolean;\n  children(props: IStepsResponse): any;\n}\n\nexport const WithSteps: React.FunctionComponent<IWithStepsProps> = ({\n  children,\n}) => {\n  return children({\n    items: ALL_STEPS,\n  });\n};\n","import { OAuthApp } from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nexport interface IWithOAuthAppHelpersChildrenProps {\n  updateOAuthApp(app: OAuthApp): Promise<void>;\n  deleteOAuthApp(name: string): Promise<void>;\n}\n\nexport interface IWithOAuthAppHelpersProps {\n  children(props: IWithOAuthAppHelpersChildrenProps): any;\n}\n\nexport class WithOAuthAppHelpersWrapped extends React.Component<\n  IWithOAuthAppHelpersProps & IApiContext\n> {\n  constructor(props: IWithOAuthAppHelpersProps & IApiContext) {\n    super(props);\n    this.updateOAuthApp = this.updateOAuthApp.bind(this);\n    this.deleteOAuthApp = this.deleteOAuthApp.bind(this);\n  }\n\n  public async updateOAuthApp(app: OAuthApp) {\n    const response = await callFetch({\n      body: app,\n      headers: this.props.headers,\n      method: 'PUT',\n      url: `${this.props.apiUri}/setup/oauth-apps/${app.id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public async deleteOAuthApp(id: string) {\n    const response = await callFetch({\n      headers: this.props.headers,\n      method: 'DELETE',\n      url: `${this.props.apiUri}/setup/oauth-apps/${id}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  public render() {\n    return this.props.children({\n      deleteOAuthApp: this.deleteOAuthApp,\n      updateOAuthApp: this.updateOAuthApp,\n    });\n  }\n}\n\nexport const WithOAuthAppHelpers: React.FunctionComponent<\n  IWithOAuthAppHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => <WithOAuthAppHelpersWrapped {...props} {...apiContext} />}\n  </ApiContext.Consumer>\n);\n","import { OAuthApp } from '@syndesis/models';\nimport { IListResult } from '@syndesis/models/src';\nimport * as React from 'react';\nimport { IFetchState } from './Fetch';\nimport { SyndesisFetch } from './SyndesisFetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithOAuthAppsRenderProps\n  extends IFetchState<IListResult<OAuthApp>> {\n  read(): Promise<void>;\n}\n\nexport interface IWithOAuthAppsProps {\n  disableUpdates?: boolean;\n  children(props: IWithOAuthAppsRenderProps): any;\n}\n\nexport class WithOAuthApps extends React.Component<IWithOAuthAppsProps> {\n  public render() {\n    return (\n      <SyndesisFetch<IListResult<OAuthApp>>\n        url={'/setup/oauth-apps'}\n        defaultValue={{\n          items: [],\n          totalCount: 0,\n        }}\n      >\n        {({ read, response }) => {\n          if (this.props.disableUpdates) {\n            return this.props.children({ ...response, read });\n          }\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </SyndesisFetch>\n    );\n  }\n}\n","import * as React from 'react';\nimport { callFetch, IFetchHeaders } from './callFetch';\n\nexport interface IChangeEvent {\n  action: string;\n  kind: string;\n  id: string;\n}\n\nexport interface IMessageEvent {\n  id: string;\n  data: string;\n  event: string;\n}\n\nexport interface IWithEventsProps {\n  apiUri: string;\n  headers: IFetchHeaders;\n  children(props: IWithServerEventsChildrenProps): any;\n}\n\nexport interface IWithServerEventsChildrenProps {\n  registerChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  registerMessageListener: (listener: (event: IMessageEvent) => void) => void;\n  unregisterChangeListener: (listener: (event: IChangeEvent) => void) => void;\n  unregisterMessageListener: (listener: (event: IMessageEvent) => void) => void;\n}\n\nconst RECONNECT_TIME = 5000;\n\nexport class WithServerEvents extends React.Component<IWithEventsProps> {\n  private starting = false;\n  private started = false;\n  private unmounting = false;\n  private retries = 0;\n  private preferredProtocol: string = '';\n  private eventSource: EventSource | undefined;\n  private webSocket: WebSocket | undefined;\n  private changeListeners: Array<(event: IChangeEvent) => void>;\n  private messageListeners: Array<(event: IMessageEvent) => void>;\n\n  public constructor(props: IWithEventsProps) {\n    super(props);\n    this.changeListeners = [];\n    this.messageListeners = [];\n    this.registerChangeListener = this.registerChangeListener.bind(this);\n    this.registerMessageListener = this.registerMessageListener.bind(this);\n    this.unregisterChangeListener = this.unregisterChangeListener.bind(this);\n    this.unregisterMessageListener = this.unregisterMessageListener.bind(this);\n  }\n\n  public registerChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = [...this.changeListeners, listener];\n  }\n\n  public registerMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = [...this.messageListeners, listener];\n  }\n\n  public unregisterChangeListener(listener: (event: IChangeEvent) => void) {\n    this.changeListeners = this.changeListeners.filter(l => l !== listener);\n  }\n\n  public unregisterMessageListener(listener: (event: IMessageEvent) => void) {\n    this.messageListeners = this.messageListeners.filter(l => l !== listener);\n  }\n\n  public async componentDidMount() {\n    this.start();\n  }\n\n  public async componentWillUnmount() {\n    this.unmounting = true;\n    this.close();\n    this.changeListeners = [];\n    this.messageListeners = [];\n  }\n\n  public shouldComponentUpdate(\n    nextProps: Readonly<IWithEventsProps>,\n    nextState: Readonly<{}>,\n    nextContext: any\n  ): boolean {\n    return false;\n  }\n\n  public render() {\n    return this.props.children({\n      registerChangeListener: this.registerChangeListener,\n      registerMessageListener: this.registerMessageListener,\n      unregisterChangeListener: this.unregisterChangeListener,\n      unregisterMessageListener: this.unregisterMessageListener,\n    });\n  }\n\n  private close() {\n    this.started = false;\n    this.starting = false;\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = undefined;\n    }\n    if (this.eventSource) {\n      this.eventSource.close();\n      this.eventSource = undefined;\n    }\n  }\n\n  private start() {\n    this.startConnection(this.retries % 2 === 0);\n  }\n\n  private onFailure(error: any) {\n    this.close();\n    if (this.unmounting) {\n      return;\n    }\n    this.retries++;\n    // Initialy retry very quickly.\n    let reconnectIn = RECONNECT_TIME;\n    if (this.retries < 3) {\n      reconnectIn = 1;\n    }\n    setTimeout(() => {\n      // console.log('Reconnecting');\n      switch (this.preferredProtocol) {\n        // Once we find a protocol that works, keep using it.\n        case 'ws':\n          this.startConnection(true);\n          break;\n        case 'es':\n          this.startConnection(false);\n          break;\n        default:\n          // Keep flipping between WS and ES untill we find one that works.\n          this.startConnection(this.retries % 2 === 0);\n          break;\n      }\n    }, reconnectIn);\n  }\n\n  private async startConnection(connectUsingWebSockets: boolean) {\n    if (this.starting || this.started || this.unmounting) {\n      return;\n    }\n    this.starting = true;\n    try {\n      const response = await callFetch({\n        body: '',\n        headers: this.props.headers,\n        method: 'POST',\n        url: `${this.props.apiUri}/event/reservations`,\n      });\n      let reservation = await response.json();\n      reservation = reservation.data;\n      if (connectUsingWebSockets) {\n        let wsApiEndpoint = this.props.apiUri.replace(/^http/, 'ws');\n        wsApiEndpoint += '/event/streams.ws/' + reservation;\n        // console.log('Connecting using web socket');\n        this.starting = false;\n        this.started = true;\n        this.connectWebSocket(wsApiEndpoint);\n      } else {\n        this.starting = false;\n        this.started = true;\n        // console.log('Connecting using server side events');\n        this.connectEventSource(\n          this.props.apiUri + '/event/streams/' + reservation\n        );\n      }\n    } catch (error) {\n      this.onFailure(error);\n      throw error;\n    }\n  }\n\n  private postMessageEvent(messageEvent: IMessageEvent) {\n    this.messageListeners.forEach(listener => {\n      listener(messageEvent);\n    });\n  }\n\n  private postChangeEvent(changeEvent: IChangeEvent) {\n    this.changeListeners.forEach(listener => {\n      listener(changeEvent);\n    });\n  }\n\n  private connectEventSource(url: string) {\n    this.eventSource = new EventSource(url);\n    this.eventSource.addEventListener('message', (event: any) => {\n      this.started = true;\n      this.starting = false;\n      this.preferredProtocol = 'es';\n      // console.log('sse.message: ', event.data);\n      this.postMessageEvent(event);\n    });\n    this.eventSource.addEventListener('change-event', (event: any) => {\n      this.started = true;\n      const value = JSON.parse(event.data) as IChangeEvent;\n      // console.log('sse.change-event: ', value);\n      this.postChangeEvent(value);\n    });\n    const onError = (event: any) => {\n      // console.log('sse.close: ', event);\n      this.onFailure(event);\n    };\n    this.eventSource.addEventListener('close', onError);\n    this.eventSource.addEventListener('error', onError);\n    return this.eventSource;\n  }\n\n  private connectWebSocket(url: string) {\n    this.webSocket = new WebSocket(url);\n    this.webSocket.onmessage = event => {\n      this.started = true;\n      this.starting = false;\n      const messageEvent = JSON.parse(event.data) as IMessageEvent;\n      switch (messageEvent.event) {\n        case 'message':\n          this.preferredProtocol = 'ws';\n          // console.log('ws.message: ', messageEvent.data);\n          this.postMessageEvent(messageEvent);\n          break;\n        case 'change-event':\n          const value = JSON.parse(messageEvent.data) as IChangeEvent;\n          // console.log('ws.change-event: ', value);\n          this.postChangeEvent(value);\n          break;\n        default:\n        // I guess we don't care what happens here...\n        // console.log('ws.unknown-message: ', event);\n      }\n    };\n    this.webSocket.onclose = event => {\n      // console.log('ws.onclose: ', event);\n      this.onFailure(event);\n    };\n    return this.webSocket;\n  }\n}\n","import { RestViewDefinition } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewProps {\n  vdbId: string;\n  initialValue?: RestViewDefinition[];\n  children(props: IFetchState<RestViewDefinition[]>): any;\n}\n\n/**\n * A component that fetches the specified VDB views.\n * @see [vdbId]{@link IWithViewProps#vdbId}\n */\nexport class WithViews extends React.Component<IWithViewProps> {\n  public render() {\n    return (\n      <DVFetch<RestViewDefinition[]>\n        url={`workspace/vdbs/${this.props.vdbId}/Models/views/Views`}\n        defaultValue={[]}\n        initialValue={this.props.initialValue}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { ViewEditorState } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithViewEditorStatesRenderProps\n  extends IFetchState<ViewEditorState[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithViewEditorStatesProps {\n  idPattern?: string;\n  children(props: IWithViewEditorStatesRenderProps): any;\n}\n\nexport class WithViewEditorStates extends React.Component<\n  IWithViewEditorStatesProps\n> {\n  public render() {\n    return (\n      <DVFetch<ViewEditorState[]>\n        url={\n          'service/userProfile/viewEditorState' +\n          (this.props.idPattern ? '?pattern=' + this.props.idPattern : '')\n        }\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children({ ...response, read })}\n      </DVFetch>\n    );\n  }\n}\n","import {\n  QueryResults,\n  RestDataService,\n  ViewEditorState,\n} from '@syndesis/models';\nimport * as React from 'react';\nimport { ApiContext, IApiContext } from './ApiContext';\nimport { callFetch } from './callFetch';\n\nconst WORKSPACE_ROOT = '/tko:komodo/tko:workspace/';\n\nexport interface IWithVirtualizationHelpersChildrenProps {\n  createVirtualization(\n    virtualizationName: string,\n    virtualizationDescription?: string\n  ): Promise<RestDataService>;\n  deleteView(virtualization: RestDataService, viewName: string): Promise<void>;\n  deleteViewEditorState(viewEditorStateId: string): Promise<void>;\n  deleteVirtualization(virtualizationName: string): Promise<void>;\n  publishVirtualization(virtualizationName: string): Promise<void>;\n  queryVirtualization(\n    virtualizationName: string,\n    query: string,\n    limit: number,\n    offset: number\n  ): Promise<QueryResults>;\n  refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void>;\n  unpublishServiceVdb(vdbName: string): Promise<void>;\n  updateViewEditorStates(viewEditorStates: ViewEditorState[]): Promise<void>;\n}\n\nexport interface IWithVirtualizationHelpersProps {\n  username: string;\n  children(props: IWithVirtualizationHelpersChildrenProps): any;\n}\n\nexport class WithVirtualizationHelpersWrapped extends React.Component<\n  IWithVirtualizationHelpersProps & IApiContext\n> {\n  constructor(props: IWithVirtualizationHelpersProps & IApiContext) {\n    super(props);\n    this.createVirtualization = this.createVirtualization.bind(this);\n    this.updateViewEditorStates = this.updateViewEditorStates.bind(this);\n    this.deleteView = this.deleteView.bind(this);\n    this.deleteViewEditorState = this.deleteViewEditorState.bind(this);\n    this.deleteVirtualization = this.deleteVirtualization.bind(this);\n    this.publishVirtualization = this.publishVirtualization.bind(this);\n    this.queryVirtualization = this.queryVirtualization.bind(this);\n    this.refreshVirtualizationViews = this.refreshVirtualizationViews.bind(\n      this\n    );\n    this.unpublishServiceVdb = this.unpublishServiceVdb.bind(this);\n  }\n\n  /**\n   * Creates a virtualization with the specified name and description\n   * @param virtName the name of the virtualization to create\n   * @param virtDesc the description (optional) of the virtualization to create\n   */\n  public async createVirtualization(\n    virtName: string,\n    virtDesc?: string\n  ): Promise<RestDataService> {\n    const newVirtualization = {\n      keng__dataPath: `${WORKSPACE_ROOT}${this.props.username}/${virtName}`,\n      keng__id: `${virtName}`,\n      serviceVdbName: `${virtName}`.toLowerCase() + 'vdb',\n      tko__description: virtDesc ? `${virtDesc}` : '',\n    } as RestDataService;\n\n    const response = await callFetch({\n      body: newVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve(newVirtualization);\n  }\n\n  /**\n   * Deletes the specified virtualization view.\n   * @param virtualization the virtualization\n   * @param viewName the name of the view being deleted\n   */\n  public async deleteView(\n    virtualization: RestDataService,\n    viewName: string\n  ): Promise<void> {\n    const vdbName = virtualization.serviceVdbName;\n    const editorStateId = vdbName + '.' + viewName;\n    // Delete viewEditorState\n    await this.deleteViewEditorState(editorStateId);\n    // Delete virtualization view\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }workspace/vdbs/${vdbName}/Models/views/Views/${viewName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Deletes the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being deleted\n   */\n  public async deleteVirtualization(virtualizationName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}workspace/dataservices/${virtualizationName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Publish the virtualization with the specified name.\n   * @param virtualizationName the name of the virtualization being published\n   */\n  public async publishVirtualization(\n    virtualizationName: string\n  ): Promise<void> {\n    const pubVirtualization = {\n      name: `${virtualizationName}`,\n    };\n\n    const response = await callFetch({\n      body: pubVirtualization,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/publish`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Query the Service VDB with sql query and properties.\n   * @param virtualizationName the name of the virtualization associated with the service\n   * @param sqlQuery the sql query statement to execute against the virtualization\n   * @param rowlimit limit to number of rows to return\n   * @param rowOffset number of data rows to filter from the beginning of the result set\n   */\n  public async queryVirtualization(\n    virtualizationName: string,\n    sqlQuery: string,\n    rowlimit: number,\n    rowOffset: number\n  ): Promise<QueryResults> {\n    // The payload for the rest call\n    const queryBody = {\n      limit: rowlimit,\n      offset: rowOffset,\n      query: sqlQuery,\n      target: virtualizationName,\n    };\n\n    const response = await callFetch({\n      body: queryBody,\n      headers: {},\n      method: 'POST',\n      url: `${this.props.dvApiUri}metadata/query`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return (await response.json()) as QueryResults;\n  }\n\n  /**\n   * Unpublish the Service VDB with the specified name.\n   * @param vdbName the name of the vdb associated with the service\n   */\n  public async unpublishServiceVdb(vdbName: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${this.props.dvApiUri}metadata/publish/${vdbName}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Delete the specified ViewEditorState in the komodo user profile\n   * @param viewEditorState the view editor state\n   */\n  public async deleteViewEditorState(viewEditorStateId: string): Promise<void> {\n    const response = await callFetch({\n      headers: {},\n      method: 'DELETE',\n      url: `${\n        this.props.dvApiUri\n      }service/userProfile/viewEditorState/${viewEditorStateId}`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile\n   * @param viewEditorStates the array of view editor states\n   */\n  public async updateViewEditorStates(\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    const response = await callFetch({\n      body: viewEditorStates,\n      headers: {},\n      method: 'PUT',\n      url: `${this.props.dvApiUri}service/userProfile/viewEditorStates`,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves ViewEditorStates in the komodo user profile, then updates the virtualizations\n   * @param viewEditorStates the array of view editor states\n   */\n  public async refreshVirtualizationViews(\n    virtualizationName: string,\n    viewEditorStates: ViewEditorState[]\n  ): Promise<void> {\n    // Updates the view editor states\n    await this.updateViewEditorStates(viewEditorStates);\n    const response = await callFetch({\n      headers: {},\n      method: 'POST',\n      url: `${\n        this.props.dvApiUri\n      }workspace/dataservices/refreshViews/${virtualizationName}`,\n    });\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    return Promise.resolve();\n  }\n\n  public render() {\n    return this.props.children({\n      createVirtualization: this.createVirtualization,\n      deleteView: this.deleteView,\n      deleteViewEditorState: this.deleteViewEditorState,\n      deleteVirtualization: this.deleteVirtualization,\n      publishVirtualization: this.publishVirtualization,\n      queryVirtualization: this.queryVirtualization,\n      refreshVirtualizationViews: this.refreshVirtualizationViews,\n      unpublishServiceVdb: this.unpublishServiceVdb,\n      updateViewEditorStates: this.updateViewEditorStates,\n    });\n  }\n}\n\nexport const WithVirtualizationHelpers: React.FunctionComponent<\n  IWithVirtualizationHelpersProps\n> = props => (\n  <ApiContext.Consumer>\n    {apiContext => (\n      <WithVirtualizationHelpersWrapped {...props} {...apiContext} />\n    )}\n  </ApiContext.Consumer>\n);\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationProps {\n  virtualizationId: string;\n  initialValue?: RestDataService;\n  children(props: IFetchState<RestDataService>): any;\n}\n\n/**\n * A component that fetches the virtualization with the specified identifier.\n * @see [virtualizationId]{@link IWithVirtualizationProps#virtualizationId}\n */\nexport class WithVirtualization extends React.Component<\n  IWithVirtualizationProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService>\n        url={`workspace/dataservices/${this.props.virtualizationId}`}\n        defaultValue={{\n          connections: 0,\n          drivers: 0,\n          keng___links: [],\n          keng__baseUri: '',\n          keng__dataPath: '',\n          keng__hasChildren: false,\n          keng__id: '',\n          keng__kType: '',\n          publishedState: 'NOTFOUND',\n          serviceVdbName: '',\n          serviceVdbVersion: '',\n          serviceViewDefinitions: [],\n          serviceViewModel: '',\n          tko__description: '',\n        }}\n        initialValue={this.props.initialValue}\n      >\n        {({ response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { RestDataService } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\nimport { WithPolling } from './WithPolling';\n\nexport interface IWithVirtualizationsRenderProps\n  extends IFetchState<RestDataService[]> {\n  read(): Promise<void>;\n}\n\nexport interface IWithVirtualizationsProps {\n  children(props: IWithVirtualizationsRenderProps): any;\n}\n\nexport class WithVirtualizations extends React.Component<\n  IWithVirtualizationsProps\n> {\n  public render() {\n    return (\n      <DVFetch<RestDataService[]>\n        url={'workspace/dataservices'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => {\n          return (\n            <WithPolling read={read} polling={5000}>\n              {() => this.props.children({ ...response, read })}\n            </WithPolling>\n          );\n        }}\n      </DVFetch>\n    );\n  }\n}\n","import { VirtualizationSourceStatus } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionStatusesProps {\n  children(props: IFetchState<VirtualizationSourceStatus[]>): any;\n}\n\nexport class WithVirtualizationConnectionStatuses extends React.Component<\n  IWithVirtualizationConnectionStatusesProps\n> {\n  public render() {\n    return (\n      <DVFetch<VirtualizationSourceStatus[]>\n        url={'metadata/syndesisSourceStatuses'}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { SchemaNode } from '@syndesis/models';\nimport * as React from 'react';\nimport { DVFetch } from './DVFetch';\nimport { IFetchState } from './Fetch';\n\nexport interface IWithVirtualizationConnectionSchemaProps {\n  connectionId: string;\n  children(props: IFetchState<SchemaNode[]>): any;\n}\n\nexport class WithVirtualizationConnectionSchema extends React.Component<\n  IWithVirtualizationConnectionSchemaProps\n> {\n  public render() {\n    return (\n      <DVFetch<SchemaNode[]>\n        url={`metadata/${this.props.connectionId}/schema`}\n        defaultValue={[]}\n      >\n        {({ read, response }) => this.props.children(response)}\n      </DVFetch>\n    );\n  }\n}\n","import { Integration } from '@syndesis/models';\n\nexport const serializeIntegration = (i: Integration) =>\n  btoa(encodeURIComponent(JSON.stringify(i)));\n","import { Integration } from '@syndesis/models';\n\nexport const deserializeIntegration = (i: string) =>\n  JSON.parse(decodeURIComponent(atob(i))) as Integration;\n","/* tslint:disable:object-literal-sort-keys no-empty-interface */\nimport { RestDataService } from '@syndesis/models';\nimport { makeResolver, makeResolverNoParams } from '@syndesis/utils';\nimport routes from './routes';\n\n// TODO: unit test every single one of these resolvers 😫\nexport default {\n  virtualizations: {\n    views: {\n      root: makeResolver<{ virtualization: RestDataService }>(\n        routes.virtualizations.virtualization.views.root,\n        ({ virtualization }) => ({\n          params: {\n            virtualizationId: virtualization.keng__id,\n          },\n          state: {\n            virtualization,\n          },\n        })\n      ),\n      importSource: {\n        root: makeResolverNoParams(\n          routes.virtualizations.virtualization.views.importSource.root\n        ),\n        selectConnection: makeResolver<{ virtualization: RestDataService }>(\n          routes.virtualizations.virtualization.views.importSource\n            .selectConnection,\n          ({ virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              virtualization,\n            },\n          })\n        ),\n        selectViews: makeResolver<{\n          connectionId: string;\n          virtualization: RestDataService;\n        }>(\n          routes.virtualizations.virtualization.views.importSource.selectViews,\n          ({ connectionId, virtualization }) => ({\n            params: {\n              virtualizationId: virtualization.keng__id,\n            },\n            state: {\n              connectionId,\n              virtualization,\n            },\n          })\n        ),\n      },\n    },\n    relationship: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.relationship,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    sqlClient: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.sqlClient,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    metrics: makeResolver<{ virtualization: RestDataService }>(\n      routes.virtualizations.virtualization.metrics,\n      ({ virtualization }) => ({\n        params: {\n          virtualizationId: virtualization.keng__id,\n        },\n        state: {\n          virtualization,\n        },\n      })\n    ),\n    create: makeResolverNoParams(routes.virtualizations.create),\n    import: makeResolverNoParams(routes.virtualizations.import),\n    list: makeResolverNoParams(routes.virtualizations.list),\n  },\n  root: makeResolverNoParams(routes.virtualizations.list),\n};\n"],"sourceRoot":""}